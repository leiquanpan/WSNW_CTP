<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="20:DemoAppC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x769897c8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x75ca51c8"/></to>
    </wire>
    <wire loc="72:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x75ca51c8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x75c92bc8"/></to>
    </wire>
    <wire loc="21:DemoAppC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x769414d0"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x75ca2108"/></to>
    </wire>
    <wire loc="79:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x75ca2108"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x75c85578"/></to>
    </wire>
    <wire loc="22:DemoAppC.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x7693a178"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x75ca1678"/></to>
    </wire>
    <wire loc="82:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x75ca1678"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x75c84d80"/></to>
    </wire>
    <wire loc="23:DemoAppC.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x76939a48"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x75c9f398"/></to>
    </wire>
    <wire loc="83:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x75c9f398"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x75c82638"/></to>
    </wire>
    <wire loc="24:DemoAppC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7694be50"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x759f2258"/></to>
    </wire>
    <wire loc="51:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x759f2258"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x75003388"/></to>
    </wire>
    <wire loc="25:DemoAppC.nc">
      <from><interface-ref name="DisseminationControl" scoped="" ref="0x76989298"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x76804b08"/></to>
    </wire>
    <wire loc="51:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x76804b08"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x768036d8"/></to>
    </wire>
    <wire loc="26:DemoAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7698fd68"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x76911010"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x76911010"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x76907f20"/></to>
    </wire>
    <wire loc="27:DemoAppC.nc">
      <from><interface-ref name="IntTemp" scoped="" ref="0x76984710"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x759e4ca8"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x759e4ca8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x74ffebe0"/></to>
    </wire>
    <wire loc="28:DemoAppC.nc">
      <from><interface-ref name="Temp" scoped="" ref="0x76986470"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x756c6078"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x756c6078"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x74f7a5c0"/></to>
    </wire>
    <wire loc="29:DemoAppC.nc">
      <from><interface-ref name="DisseminationPeriod" scoped="" ref="0x76987438"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x75d01010"/></to>
    </wire>
    <wire loc="59:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationValue" scoped="" ref="0x75d01010"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x75192a80"/></to>
    </wire>
    <wire loc="30:DemoAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7697f1f8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x767672e0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x767672e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7674c310"/></to>
    </wire>
    <wire loc="31:DemoAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x76944158"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x76764040"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x76764040"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7674ac78"/></to>
    </wire>
    <wire loc="33:DemoAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x76982010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x76264e28"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x76264e28"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7625e528"/></to>
    </wire>
    <wire loc="34:DemoAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7692a8e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x756c3d80"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x756c3d80"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x75f06618"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:DemoP.nc">
      <from><interface-ref name="sendPacket" scoped="" ref="0x76927800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:DemoP.nc">
      <from><interface-ref name="readSensors" scoped="" ref="0x76927010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76911c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x74f2c878"/></to>
    </wire>
    <wire loc="37:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76911c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x75804010"/></to>
    </wire>
    <wire loc="96:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76911c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x74fe17a0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76911c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x75979c88"/></to>
    </wire>
    <wire loc="46:/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76911c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x750b0618"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76911c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x750c0350"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76911c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x750cbaf0"/></to>
    </wire>
    <wire loc="153:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76911c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x75a21e80"/></to>
    </wire>
    <wire loc="178:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76911c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x75bb6030"/></to>
    </wire>
    <wire loc="229:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76911c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x75b3f090"/></to>
    </wire>
    <wire loc="71:/home/pi/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76911c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7517f6a8"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76911c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x75e57d20"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76911c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x75e925c8"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76911c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x75eb1280"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76911c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x75ec3570"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76911c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x75ed58b0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76911c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x75f7d1f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76911c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x76016c98"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76911c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7609d290"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76911c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7666b4b0"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76911c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x752f1120"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76911c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x76372e48"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76911c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x766d8d70"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x768f92d0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x76c37a58"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x76c37a58"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x769bdda0"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x768f9898"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x76910580"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x76910580"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7690b010"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x768f9ca0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x76911c28"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7690b420"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7690c580"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7690c580"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7690cdd0"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7690b800"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7690d5d8"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7690bbe0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7624bf28"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7690cdd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x768e8480"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x768f25a0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x768e8850"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x769a68a8"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x768e72f8"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x768c98c8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x76853588"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x768b7628"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7684f470"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x768bb6d8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x76856868"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x768acb18"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x76841350"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x768bf7d0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x76856190"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x768af010"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x76842b98"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x768aa5f8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x76835e88"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x768b3548"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7683d050"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x768c0130"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x76883850"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x768ad960"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x76849510"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x768b0010"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7684ae00"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x768b61c8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7684a3a8"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x768ba010"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x768526e8"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x768ab438"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7683c198"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x768b6db8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x76846220"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x768be010"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x76852010"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x768c54c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x768a7528"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x768af7d0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7683daa8"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x768c0ca0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x76857718"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x768b20e0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7683ae78"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x768b8e10"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x76882a28"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x768ac278"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x76845430"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x768bf010"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x76882350"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x768b07d0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x76846c78"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x768abcd8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x76838010"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x768b59a8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x76842140"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x768ba878"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x76887010"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x768ae010"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x768398f0"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x768ad0c0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7684d5c0"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x768ae7d0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x768357b0"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x768b17b8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7684fec8"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x768b2c50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x76836cb8"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7688a590"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7688a228"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7688a8e8"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x768317d0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7688ac40"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x76831c58"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x76859270"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x768a7528"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x76859e88"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7688a228"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x76855050"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x768a7528"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x76855c68"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7688a228"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x76852ea0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x768a7528"/></to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x76851b00"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7688a228"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x76886050"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x76887cc0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x768863a8"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7682e108"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x76886700"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7682e590"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7684dd78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x76887010"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7684ca50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x76887cc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x76849cc8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x76887010"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x76848970"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x76887cc0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x76845be8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x76887010"/></to>
    </wire>
    <wire loc="144:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x76844890"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x76887cc0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x76841b08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x76887010"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7683f7b0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x76887cc0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7683c950"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x76887010"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7683b5f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x76887cc0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x768387c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x76887010"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x76837430"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x76887cc0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x76834650"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x76887010"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x76833278"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x76887cc0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x769bc670"/></to>
    </wire>
    <wire loc="55:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x769b9b08"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x76c38928"/></to>
    </wire>
    <wire loc="58:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x768036d8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x767f6010"/></to>
    </wire>
    <wire loc="59:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x767f67e8"/></from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x767fb480"/></to>
    </wire>
    <wire loc="60:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x767f52f0"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x767f98d8"/></to>
    </wire>
    <wire loc="61:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x767f5dc0"/></from>
      <to><interface-ref name="DisseminatorControl" scoped="" ref="0x767ff3e0"/></to>
    </wire>
    <wire loc="64:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x767ec3a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x767c0bb8"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x767c0bb8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x755e2080"/></to>
    </wire>
    <wire loc="67:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x767e96c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x75d3c5c0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x75d3c5c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x76766638"/>
      <arguments>
        <value cst="I:96">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeAMSend" scoped="" ref="0x767e9aa8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x75d36070"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x75d36070"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x751be750"/></to>
    </wire>
    <wire loc="74:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeReceive" scoped="" ref="0x767f3240"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x75d335c0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x75d335c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x76766638"/>
      <arguments>
        <value cst="I:97">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x767f3588"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x75d31ef0"/></to>
    </wire>
    <wire loc="20:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x755e2080"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x755d8710"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x767bf310"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x755e2718"/></to>
    </wire>
    <wire loc="21:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x755e2718"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x755da230"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x767bf9a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x755e2db0"/></to>
    </wire>
    <wire loc="22:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x755e2db0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x755da8c8"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x75d3f5d0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x755e1a30"/></to>
    </wire>
    <wire loc="23:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x755e1a30"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x755d94f0"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x755da230"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x76764040"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x755da8c8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x76764730"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x755d94f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x767633f8"/></to>
    </wire>
    <wire loc="25:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="SubAMSend" scoped="" ref="0x755d8df8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x755deb68"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x755deb68"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x755cf5b8"/></to>
    </wire>
    <wire loc="26:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Lpl" scoped="" ref="0x755d74f0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x76755570"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x76755570"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x76747660"/></to>
    </wire>
    <wire loc="27:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x755d7aa8"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x75dcd920"/></to>
    </wire>
    <wire loc="9:../../../tos/system/SystemLowPowerListeningC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x75dcd920"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x75dca570"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x76764730"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7674a060"/></to>
    </wire>
    <wire loc="85:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x767633f8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x76743dc8"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x755cfc80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x76799678"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x755ce3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x76764730"/></to>
    </wire>
    <wire loc="53:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x76799678"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x76794908"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7676c0a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x76767bb8"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x76767bb8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7674cbe8"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7676c750"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x76764730"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7676b3f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x76764040"/></to>
    </wire>
    <wire loc="169:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7676bac8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7676bf00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7674c310"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7673bcd0"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7674cbe8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x75dac100"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x76766cd0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7674bcd0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7674bcd0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x75daa178"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7674ac78"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x75da9190"/></to>
    </wire>
    <wire loc="89:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7675dd40"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x75fc6860"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x75fc6860"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x75fbd260"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x76747660"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7672de28"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x76766638"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7674b638"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7674b638"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x75dacac0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x76743dc8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7672d4d0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7674a060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x75daa4e8"/></to>
    </wire>
    <wire loc="90:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x76761750"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x75fc4288"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x75fc4288"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x75fbcc50"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7673bcd0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x75e5acd8"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7673dda8"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x75da8238"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x76735ab8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x75da9b88"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x76743570"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x76731c08"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x76731c08"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x75fcbdc8"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7672de28"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x75e5bba8"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7672d4d0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x75fc76e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7673c010"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7672c498"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7672c498"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x75dbed10"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x76740230"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7672da60"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7672da60"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x75fc6208"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x75da44f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7672e6c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x75da8a88"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x767310e8"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x767310e8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x75e98b40"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x75da7220"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x76731870"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x76731870"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x75e97320"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x75da5460"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x76107720"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x75da75b8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x75fcbdc8"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x75fcbdc8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x75fc17e0"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x75da7dd8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x75fc7c60"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x75fc7c60"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x75fbe630"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x75da6390"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x766dadf8"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x766dadf8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x766d5900"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x75da5ba0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x767282d0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x767282d0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x76724010"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x75da4bb8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x76264e28"/></to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x75e5acd8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x75e0f1d0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x75fc6208"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x75fbebc0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x75dbed10"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x75db8180"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x75e98b40"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x75e90118"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x75e5bba8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x75e54110"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x767325a8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x75e98770"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x75e98770"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x75e91d28"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x75fc76e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x75fbe0b0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7672e6c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x75e999a0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x75e999a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x75e94e50"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7672ee08"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x75e98090"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x75e98090"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x75e915b8"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x76732988"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x75e97700"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x75e97700"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x75e90c80"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x75e97320"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x75e908a0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x75e58800"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x76729200"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x76729200"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x76725250"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x75e96298"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x75ec97f0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x75ec97f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x75ec6e90"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x75ec6010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x75dbe610"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x75dbe610"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x75dbb4c8"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x75dbb4c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x75e5a260"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x75e5a260"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x75e546f8"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x75e59c18"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x76729808"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x76729808"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x76725858"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x75e97ea8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x75e5a940"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x75e5a940"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x75e54dd8"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x75e583e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x75ec7628"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x75ec7628"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x75eb4af8"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x75ec7e78"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x76729f08"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x76729f08"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x76017b60"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x76017b60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x76013a40"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x76724800"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x766e5ba8"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x766e5ba8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x766d51c8"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7671e9c0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x766e1ea0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x766e1ea0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x766d4a40"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x76722420"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x760a8c00"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x76722420"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x76017180"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x76017180"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x76013060"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x760a8c00"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7609d630"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x767199f0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x760a50f0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x760a50f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7609db28"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x76721278"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x760a5808"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x760a5808"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7609c2d0"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7671d810"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x75fcbdc8"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x76716010"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x75fc7c60"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x767176e0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x75ed3c40"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x75ed3c40"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x75ed16e0"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x76710838"/></from>
      <to><interface-ref name="State" scoped="" ref="0x75ed9970"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x75ed9970"/></from>
      <to><interface-ref name="State" scoped="" ref="0x76375d98"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x76717b28"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x76264e28"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7670ea00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7670e1f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x76712998"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x766e09d0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x766d35a0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x766d11c8"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7666ba78"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7666ba78"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x76666c80"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x766c6d80"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x765d8a08"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x765d8a08"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x764a7a58"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x766ca840"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x765d68f0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x765d68f0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7649f2a0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x766c8300"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x765d5d00"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x765d5d00"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x764992a0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x766c13e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7648aef0"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7648aef0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x763e3ad0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x766b8a98"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x76153e28"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x76153e28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x763c5890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x766b98b8"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x761514e8"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x761514e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x766b9cd0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x76151ef0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x76151ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x766b8678"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x76152da0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x76152da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x766b8158"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x76150260"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x76150260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x766ba660"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7614b190"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7614b190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x766bab68"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x761492b0"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x761492b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x766c40a0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x761496e8"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x761496e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x766c45c0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7614d270"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7614d270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x766c4ae0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7614d6a8"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7614d6a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x766bdee8"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x761428c0"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x761428c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x766bd998"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x76142488"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x76142488"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x766bb010"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7614cbd8"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7614cbd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x766bb508"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7614dae0"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7614dae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x766bba10"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7614c368"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7614c368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x766b7a18"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x76139e88"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x76139e88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x763c5890"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x766b7268"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x76120980"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x76120980"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x763c5890"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x766bf350"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x76107720"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x766d29a8"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x76106ae0"/></to>
    </wire>
    <wire loc="23:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x76106ae0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x760f61d8"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x766b0328"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x766b1b20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7666b4b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x76666808"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x76666808"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x75598ef0"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x76666c80"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x75597360"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x75598ef0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x75593010"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x75597360"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x75591e88"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x75593010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7557e8c8"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x75586b90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x75593468"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x75593468"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7557ed40"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x75587950"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7661f260"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7661f260"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7661e908"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7557b6b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x75581d50"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x75581d50"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x766538e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7557a330"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x75580958"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x75580958"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x76650890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7557ad68"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7557f410"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7557f410"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7664e698"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x766538e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x768ba878"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x76650890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x768b7628"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7664e698"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x768b17b8"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x766538e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x768ba878"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x76650890"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x768b6db8"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7664e698"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x768b07d0"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x766538e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x768ba878"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x76650890"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x768b59a8"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7664e698"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x768af010"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x766538e8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x768ba878"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x76650890"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x768b3548"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7664e698"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x768af7d0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x766538e8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x768ba878"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x76650890"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x768b20e0"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7664e698"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x768ae010"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x766538e8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x768ba878"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x76650890"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x768b2c50"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7664e698"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x768ae7d0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x76600b40"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x76623d30"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x76623d30"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7661bae8"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7661aca0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x768ba878"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x765d74c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x764a42a0"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x765d7ed0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x764a2a68"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x765d8010"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x764b72d0"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x765d52f8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7649ca58"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x764b7c48"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x765c8bc8"/></to>
    </wire>
    <wire loc="442:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x765c8bc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76556148"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x764a6430"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x765ae3e8"/></to>
    </wire>
    <wire loc="473:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x765ae3e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7651ed68"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x764a4c18"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x765c9a08"/></to>
    </wire>
    <wire loc="441:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x765c9a08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76559948"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x764a1430"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x765ca558"/></to>
    </wire>
    <wire loc="438:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x765ca558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x765763a8"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7649fc18"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x765aaae8"/></to>
    </wire>
    <wire loc="477:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x765aaae8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76513d68"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7649b430"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x765af288"/></to>
    </wire>
    <wire loc="472:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x765af288"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x765205f8"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x76499c18"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x765ab928"/></to>
    </wire>
    <wire loc="476:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x765ab928"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x765165f8"/></to>
    </wire>
    <wire loc="455:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x765bcd88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7653dd68"/></to>
    </wire>
    <wire loc="531:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x76593f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x765355f8"/></to>
    </wire>
    <wire loc="551:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7657fc98"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764ead68"/></to>
    </wire>
    <wire loc="532:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x76591068"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76532d68"/></to>
    </wire>
    <wire loc="460:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x765b9178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76538d68"/></to>
    </wire>
    <wire loc="486:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x765a34c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76504d68"/></to>
    </wire>
    <wire loc="497:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7659a368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764efd68"/></to>
    </wire>
    <wire loc="535:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7658e4c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7652dd68"/></to>
    </wire>
    <wire loc="545:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x76585280"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764fad68"/></to>
    </wire>
    <wire loc="557:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7657a288"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764e75f8"/></to>
    </wire>
    <wire loc="445:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x765c4178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7654e730"/></to>
    </wire>
    <wire loc="536:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7658d680"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7652a5f8"/></to>
    </wire>
    <wire loc="450:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x765c24c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x765495f8"/></to>
    </wire>
    <wire loc="463:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x765b6688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7652f5f8"/></to>
    </wire>
    <wire loc="489:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x765a0a08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764fc5f8"/></to>
    </wire>
    <wire loc="500:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x76597848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764e75f8"/></to>
    </wire>
    <wire loc="440:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x765d0848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7655b220"/></to>
    </wire>
    <wire loc="453:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x765bfa08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76542de8"/></to>
    </wire>
    <wire loc="466:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x765b3bc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76528d68"/></to>
    </wire>
    <wire loc="530:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x76595d80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x765355f8"/></to>
    </wire>
    <wire loc="548:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x76582758"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764f15f8"/></to>
    </wire>
    <wire loc="555:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7657b168"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764e75f8"/></to>
    </wire>
    <wire loc="541:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x76589d80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x765065f8"/></to>
    </wire>
    <wire loc="471:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x765b0010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76523e68"/></to>
    </wire>
    <wire loc="484:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x765a5178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76509d68"/></to>
    </wire>
    <wire loc="495:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7659c010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764f4d68"/></to>
    </wire>
    <wire loc="549:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x76581918"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764efd68"/></to>
    </wire>
    <wire loc="538:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7658c838"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7650ed68"/></to>
    </wire>
    <wire loc="443:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x765c7d88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x765548a0"/></to>
    </wire>
    <wire loc="456:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x765ba010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7653a5f8"/></to>
    </wire>
    <wire loc="493:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7659fbc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764fad68"/></to>
    </wire>
    <wire loc="461:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x765b8368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x765355f8"/></to>
    </wire>
    <wire loc="474:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x765ad5a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7651b5f8"/></to>
    </wire>
    <wire loc="487:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x765a2688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x765015f8"/></to>
    </wire>
    <wire loc="498:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x765994c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764ec5f8"/></to>
    </wire>
    <wire loc="540:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7658abc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76509d68"/></to>
    </wire>
    <wire loc="451:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x765c1688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76547d68"/></to>
    </wire>
    <wire loc="464:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x765b5848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7652dd68"/></to>
    </wire>
    <wire loc="542:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x76587010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76528d68"/></to>
    </wire>
    <wire loc="546:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x765843d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764f75f8"/></to>
    </wire>
    <wire loc="552:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7657ee58"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764e75f8"/></to>
    </wire>
    <wire loc="482:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x765a8e68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7650ed68"/></to>
    </wire>
    <wire loc="543:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x76586170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x765255f8"/></to>
    </wire>
    <wire loc="454:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x765bebc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7653f5f8"/></to>
    </wire>
    <wire loc="467:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x765b2d88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x765255f8"/></to>
    </wire>
    <wire loc="539:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7658ba00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7650b5f8"/></to>
    </wire>
    <wire loc="550:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x76580ad8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764ec5f8"/></to>
    </wire>
    <wire loc="485:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x765a4368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x765065f8"/></to>
    </wire>
    <wire loc="496:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7659b178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764f15f8"/></to>
    </wire>
    <wire loc="444:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x765c5010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76550030"/></to>
    </wire>
    <wire loc="494:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7659ed88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764f75f8"/></to>
    </wire>
    <wire loc="449:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x765c3368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7654ce50"/></to>
    </wire>
    <wire loc="462:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x765b74c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76532d68"/></to>
    </wire>
    <wire loc="475:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x765ac768"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76519d68"/></to>
    </wire>
    <wire loc="488:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x765a1848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764ffd68"/></to>
    </wire>
    <wire loc="499:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x76598688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764ead68"/></to>
    </wire>
    <wire loc="439:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x765d1688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7655eaa0"/></to>
    </wire>
    <wire loc="452:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x765c0848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x765445f8"/></to>
    </wire>
    <wire loc="465:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x765b4a08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7652a5f8"/></to>
    </wire>
    <wire loc="478:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x765a9ca8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x765105f8"/></to>
    </wire>
    <wire loc="534:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7658f348"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7652f5f8"/></to>
    </wire>
    <wire loc="547:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x76583598"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764f4d68"/></to>
    </wire>
    <wire loc="533:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x765901a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7652f5f8"/></to>
    </wire>
    <wire loc="483:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x765a6010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7650b5f8"/></to>
    </wire>
    <wire loc="554:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7657c010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764ead68"/></to>
    </wire>
    <wire loc="558:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x765793e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764fc5f8"/></to>
    </wire>
    <wire loc="529:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x76596a28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76538d68"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7648a7f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x764899f0"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7648c618"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x763ea540"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x76488010"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x768b61c8"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x76488a48"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x768ad960"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7647d270"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x765af288"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x763eb190"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x76472010"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x76472010"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x76467608"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x763eab38"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x76474c58"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x76474c58"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x76469288"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7646d8e0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x76461010"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x76471a38"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x76465070"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x76470c18"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x76464288"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x76477dd8"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x76468448"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7646e6e8"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x76463cf8"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x764728c0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x76467eb8"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7646c1a8"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x764618c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7646f528"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x76464b38"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x764766e8"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x76468cf8"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7646d030"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x764626e8"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x76471188"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x76466798"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x76470368"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x76465920"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x76477528"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x76469b38"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7646fdd8"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x76463448"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x76151190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7614ba00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x761462b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7614be38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x76140b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x76141a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x76151b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x76143190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x76141190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x761475c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x76148880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x76152530"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x763bc010"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x763bc010"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x763bae38"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x76150910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x76150c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x76143c00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7614e080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x761415c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x76145cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7614df18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x76145448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x761466e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x76145880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x761406e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x76141e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x76148cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x76146b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x76142cf8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x76149b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7613f010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x763bc8a0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x76152a48"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7614ede0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7614c7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x76147a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x76147e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7614b5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7614e3d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7614ea88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x761505b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x76142050"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x761402b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x76147190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x76145010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x76151840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x76148010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7614e730"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x76148448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x761435c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7613f6e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x763bc8a0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x763bc8a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x763b6100"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x763bb300"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763b6b28"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x763bbac8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763b42f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x763c5890"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x763b7688"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763b4aa8"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x763ab848"/></from>
      <to><interface-ref name="State" scoped="" ref="0x76377d08"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x76377d08"/></from>
      <to><interface-ref name="State" scoped="" ref="0x76375d98"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x763b4ee8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x76167db0"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x76167db0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x753493b8"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x763b3ec8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x763734f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x763734f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x75349e88"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x763ab378"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x76373828"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x76373828"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x753487a8"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x763b1010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x76264e28"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x763acdd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x76375d98"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7636f4a8"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x753487a8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x76325820"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x75349e88"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x76323b40"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x753493b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7632cd48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x75349a70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x75343898"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x75343898"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7622b320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x76323b40"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x762dd7f0"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x753481d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x76323ee8"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x76323ee8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x762ddb28"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x76324a78"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x75348bc0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7533cb50"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x763236e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x76324028"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x753431e0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x753431e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7622c8a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x76321d50"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x75340870"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x75340870"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7622f9a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x763236e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x762dd3c8"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x76325820"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x762dc208"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7632cd48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x762debc8"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x762dce48"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x76324a78"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x762dc6e8"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x76324028"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x762d9970"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x76321d50"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x762db1d0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x762d5ee8"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x762d5ee8"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x762cc1a0"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x762d9d88"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x76264e28"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x762d8a50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x762cd3d0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x762c90b8"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x762d07a8"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x762caad0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x762afef8"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x76595d80"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x762ad030"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x76591068"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x762ac168"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x765901a0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x762ab280"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7658d680"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x762aa3d8"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7658e4c0"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x762b0380"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x761cb030"/></to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7624bf28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7625e1e0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7625d240"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7624c110"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7624c110"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7624ac58"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7625dc28"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7624cb18"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7624cb18"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x76246440"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7625c660"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7624b5a0"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7624b5a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x76244cd8"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x762495f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x765a34c8"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x76246db8"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x765a2688"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x762436d0"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x765a1848"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x75340c88"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7622c238"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7533f010"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x761d4ba8"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x761d4ba8"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x761cb030"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x75342170"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x762d5ee8"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x75343cb0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7622b7a8"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7622b7a8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x761d8ab0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7622a010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7533cb50"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7622b320"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x761d8010"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x761d8010"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x752f0cf8"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7622f9a0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x762299b0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7622c8a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7621b8a0"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7621b8a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x752f05b8"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7622c238"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x76229e90"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x761d8ab0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x752ef7e8"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x761d7010"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7622a010"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7621e9b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x761d8ab0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7621e240"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x762d07a8"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7621e678"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x762cd3d0"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x761d8418"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x752ef150"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x752efca8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x761d7010"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x752ee170"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x752f1458"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x752ed358"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x761c8c58"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x762cc1a0"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x761c5518"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x76595d80"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x761c4678"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x765901a0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x76131bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x76136190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x76133270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x76130a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7612b2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x76130e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x76125b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x76127a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x76136b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x76129190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x76127190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x76133ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x76131368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7612d5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7612e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7612f2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x76137550"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x763bc010"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x76135910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x76135c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x76129c00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x76134080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x761275c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x76135260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7612acb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x76133f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x761336a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x76137dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7612a448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7612b6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7612a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x761256e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x76127e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7612ecb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7612bb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x76128cf8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7612fb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x76124010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x763bc8a0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x76137a68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x76134de0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x761317a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7612da00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7612f6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7612de38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x76130190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x761364e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x761305c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x761343d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x76134a88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x761288c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x76128488"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x761355b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x76128050"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x761252b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7612d190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7612a010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x76136840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x76136ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7612e010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x76134730"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7612e448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x761295c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x761246e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x763bc8a0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x76119880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7611fc28"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7611be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x761186a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x76114e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x76118ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7610d6e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7610e5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7611e6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x76112cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7610fcf8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7611a6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x76119010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x76114190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x76115468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x76118f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7611f060"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x763bc010"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7611c4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7611c840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x761107c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7611cc18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7610e190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7611ed70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x76112880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7611ab20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7611a2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7611f8d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x76112010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x761132b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x76112448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7610d2b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7610ea00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x761158a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x761136e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7610f8c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x761167a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7610db20"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x763bc8a0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7611f578"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7611ba18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x76119448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x761145c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x76116368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x76114a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x76119db8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7611e010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x76118270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7611b010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7611b6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7610f488"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7610f050"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7611c190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x76110c00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7610ee38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x76115cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x76113b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7611e368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7611ea18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x76116bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7611b368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x76115030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x76110190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7610c270"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x763bc8a0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x760f6db8"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x760eeb08"/></to>
    </wire>
    <wire loc="20:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x760eeb08"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x760ea888"/></to>
    </wire>
    <wire loc="16:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x760e60e0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x760dd010"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x760dd010"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x760dc4e8"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x760e65e0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x760debc8"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x760dd4e8"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x760ebbe8"/></to>
    </wire>
    <wire loc="11:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x760ebbe8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x760af010"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x760d5588"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x760c43e8"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x760c43e8"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x760b9d60"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x760dc9c0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x760dd4e8"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x760c2860"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x760b5610"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x760b5610"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x760b3388"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x760b14b8"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x768c54c0"/></to>
    </wire>
    <wire loc="9:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x760af988"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x765bfa08"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x760a48d8"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7609cbc8"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x760a4d40"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7609b0b8"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7609b680"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7666ba78"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x76095d88"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x765d8010"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x76094830"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x765d8a08"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x760902f0"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x765d52f8"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x76095710"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7648a7f0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x76090d30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x76034d88"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x76034d88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x763c5890"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7608f4a8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x760334f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x760334f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x763bc010"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7608dc48"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x76033a08"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x76033a08"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7608c098"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x76032840"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x76032840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7608c4c8"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x76032b98"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x76032b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7608c8f8"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x76031910"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x76031910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7608d760"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7602d368"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7602d368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7608fa68"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x760206e8"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x760206e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x763bc8a0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7608d258"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x76022190"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x76022190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7608cd38"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7602e6a8"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7602e6a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7608b7b0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7602c5c8"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7602c5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7608bcd0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7602ca00"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7602ca00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7608b370"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x76030730"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x76030730"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7608abc8"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x760216e8"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x760216e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7608a220"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x76022a00"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x76022a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7608a6e8"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x76022e38"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x76022e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x76086978"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x76017620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x76017620"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x76013500"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x760980e0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x75fcbdc8"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x76098920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x75fc7c60"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x76097088"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x75fc6860"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x76095040"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x75fc2a00"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x75fc2a00"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x75fb9400"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x76086ea0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x76264e28"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7602dbd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x76032190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7602e270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x760272b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7602ce38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x76021b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x76025190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7602eae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x760285c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7602a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7602b2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x76031c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x76025c00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x76030080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x760225c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x76031260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x76026cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7602ef18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x76033d60"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x76026448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x760276e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x76026880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7602acb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x76027b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x76024cf8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7602bb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x76020010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x763bc8a0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x76030de0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7602d7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x76028a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7602b6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x76028e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7602c190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x760324e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x760303d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x76030a88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x760248c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x76024488"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x760315b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x76024050"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x760212b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x76028190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x76026010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x76032ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7602a010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7602a448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x760255c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x76016010"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x76013ed8"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x760061a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x76264e28"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x760122c0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x765d8a08"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x76012cc8"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x765d74c0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x76011768"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x765d7ed0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x760102a8"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7648c618"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x76010968"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x75f00138"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x75f00138"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x763c5890"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7600e128"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x75eed2b0"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x75eed2b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x763bc8a0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7600ece0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x75efe840"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x75efe840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7600e8b0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x75efeef0"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x75efeef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7600d1f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x75fcbdc8"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7600da30"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x75fc7c60"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7600b2b0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x75fc6860"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7600c010"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x766dadf8"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7600ae98"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x75ef98a0"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x75ef98a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x76009408"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x75ef9cd8"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x75ef9cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7600aa58"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x75efd660"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x75efd660"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x76008318"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x75eeee38"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x75eeee38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x760098d0"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x75eefcb8"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x75eefcb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x76009d98"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x75eee190"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x75eee190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x76008818"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x75eef880"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x75eef880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x76008d00"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x75f00d08"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x75f00d08"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x75fff378"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x75f860a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7661f260"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x75fb7010"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x75f876b8"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x75fb7a68"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x75f7acd8"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x75f7acd8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x75f12730"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x75f7d9a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x75f3fbd0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x75f7d1f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x75f78758"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x75f78758"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x752527d8"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x75f16010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x75f5b758"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x75f44a48"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x75f78bb0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x75f78bb0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7524e6b8"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x75f110e8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x75f70cc8"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x75f70cc8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x75f6a5c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x752527d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x75242060"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7524b3b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x75252c30"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x75252c30"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x752424d8"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7524c180"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x75f70cc8"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x75241e48"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x75246480"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x75246480"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x766538e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x75240a70"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x75245090"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x75245090"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x76650890"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7523f4f0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x75245ac8"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x75245ac8"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7664e698"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x75f68870"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x76623d30"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x75f414d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x75f13260"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x75f0d4c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x75f06618"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x75f06618"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x75f7d9a0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x75efae38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x75eff3d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x75efb4b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x75ef45c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x75ef8190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x75effde0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x75ef2448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x75eef448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x75efbd28"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x75efa5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x75ef5880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x75ef7b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x75ef85c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x75f007f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x763bc010"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x75efeb98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x75ef2eb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x75efd308"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x75efe4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x75ef2010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x75efa190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x75efb8f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x75eff080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x75ef36e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x75ef4a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x75ef3b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x75eeea00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x75ef5010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x75ef4e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x75eef010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x75ef8e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x75efb080"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x75efaa00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x75ef5cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x75ef8a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x75ef4190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x75ef9468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x75eff730"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x75efdd10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x75ef1b90"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x75ef1758"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x75ef1320"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x75eee5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x763bb300"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x75ef5448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x75ef32b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x75effa88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x75efe190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x75ef72b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x75efd9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x75ef76e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x75ef2880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763bbac8"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x75eed988"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x763bc8a0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x75ed3380"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x75ed5dd0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x75ed7060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x75ed58b0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x75ec3960"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x75ec6010"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x75ec2060"/></from>
      <to><interface-ref name="State" scoped="" ref="0x75ec5f10"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x75ec5f10"/></from>
      <to><interface-ref name="State" scoped="" ref="0x76375d98"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x75ec2818"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x75ed3c40"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x75ec2cb8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x75fc7c60"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x75ec7a50"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x75eb4f20"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x75eb16a8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x75ec7e78"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x75eb1a68"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x75fc7c60"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x75e8f4c8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x75e96298"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x75e8fc30"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x75e97ea8"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x75e8e010"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x75fcbdc8"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x75e8e830"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x75fc7c60"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x75e8ede8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x75e92900"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x75e74cc8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x75e0f1d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x75e0b390"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x75e593c8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x75dd6b30"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x75dd6b30"/></from>
      <to><interface-ref name="State" scoped="" ref="0x76375d98"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x75e52d48"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x75e58800"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x75e52928"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x75e583e0"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x75e53228"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x75e59c18"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x75e4d948"/></from>
      <to><interface-ref name="SplitControlState" scoped="" ref="0x75e0f890"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x75e0f890"/></from>
      <to><interface-ref name="State" scoped="" ref="0x75de3ad0"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="RadioPowerState" scoped="" ref="0x75e4d0c8"/></from>
      <to><interface-ref name="RadioPowerState" scoped="" ref="0x75e0e118"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="RadioPowerState" scoped="" ref="0x75e0e118"/></from>
      <to><interface-ref name="State" scoped="" ref="0x75de48e8"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x75e507c0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x75dd6b30"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="OffTimer" scoped="" ref="0x75e4c2d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x75dd5dc0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x75dd5dc0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x75f06618"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SendDoneTimer" scoped="" ref="0x75e4a660"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x75dd1c20"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x75dd1c20"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x75f06618"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="PowerCycle" scoped="" ref="0x75e4e628"/></from>
      <to><interface-ref name="PowerCycle" scoped="" ref="0x75e12b98"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="PowerCycle" scoped="" ref="0x75e12b98"/></from>
      <to><interface-ref name="PowerCycle" scoped="" ref="0x75e0edf8"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="Resend" scoped="" ref="0x75e539b0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x760a50f0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x75e50230"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7672d4d0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x75e4eba8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x75fc7c60"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x75e520e0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x767282d0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x75e47870"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x75ed3c40"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x75e47c98"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x76264e28"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x75e42310"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x75dcd920"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <from><interface-ref name="send" scoped="" ref="0x75e415a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <from><interface-ref name="startRadio" scoped="" ref="0x75e406a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="110:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <from><interface-ref name="resend" scoped="" ref="0x75e41d98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <from><interface-ref name="stopRadio" scoped="" ref="0x75e40e90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x75de48e8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x76375d98"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x75de3ad0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x76375d98"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x75e05b70"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x760a48d8"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x75e04010"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x760a4d40"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x75e04488"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x76016010"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x75e08e70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x76729200"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x75e06668"/></from>
      <to><interface-ref name="SendState" scoped="" ref="0x75e593c8"/></to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="RadioPowerState" scoped="" ref="0x75e07540"/></from>
      <to><interface-ref name="State" scoped="" ref="0x75de48e8"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x75e07dc0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x75de3ad0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="OnTimer" scoped="" ref="0x75e0baf8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x75de2db8"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x75de2db8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x75f06618"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x75e06e10"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x76264e28"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <from><interface-ref name="startRadio" scoped="" ref="0x75e01308"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <from><interface-ref name="getCca" scoped="" ref="0x75e01b48"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <from><interface-ref name="stopRadio" scoped="" ref="0x75e03ad8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x75ddec00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x75f06618"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x75db8938"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7672d4d0"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x75d3c8d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x76764040"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x75d3b010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x76764730"/></to>
    </wire>
    <wire loc="20:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x751be750"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x751afe88"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x75d36708"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x751bede8"/></to>
    </wire>
    <wire loc="21:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x751bede8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x751b1960"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x75d36da0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x751bd4d0"/></to>
    </wire>
    <wire loc="22:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x751bd4d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x751b0010"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x75d35a30"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x751b7170"/></to>
    </wire>
    <wire loc="23:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x751b7170"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x751b0c08"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x751b1960"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x76764040"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x751b0010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x76764730"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x751b0c08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x767633f8"/></to>
    </wire>
    <wire loc="25:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="SubAMSend" scoped="" ref="0x751ae580"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x751b12c8"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x751b12c8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x751a6420"/></to>
    </wire>
    <wire loc="26:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Lpl" scoped="" ref="0x751aec38"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x76755570"/></to>
    </wire>
    <wire loc="27:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x751ad230"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x75dcd920"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x751a6ae8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x76799678"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x751a5230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x76764730"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x75d338d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x76764040"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x75d32010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x76764730"/></to>
    </wire>
    <wire loc="60:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x75d01e30"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x751918d0"/></to>
    </wire>
    <wire loc="63:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x767fb480"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x75190280"/></to>
    </wire>
    <wire loc="64:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x767ff3e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="StdControl" scoped="" ref="0x751925d8"/></to>
    </wire>
    <wire loc="67:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x767f98d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x75d03910"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x75190a18"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x76264e28"/></to>
    </wire>
    <wire loc="62:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <from><interface-ref name="changedTask" scoped="" ref="0x7518e6d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationTimerP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x75d03910"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x75cfee28"/></to>
    </wire>
    <wire loc="63:/home/pi/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x75cfee28"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x7517fa58"/></to>
    </wire>
    <wire loc="65:/home/pi/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7517e210"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x751771c8"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x751771c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x75f06618"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/pi/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7517b770"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x75ed3c40"/></to>
    </wire>
    <wire loc="67:/home/pi/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Changed" scoped="" ref="0x7517cdf0"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x75173ae0"/></to>
    </wire>
    <wire loc="68:/home/pi/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Pending" scoped="" ref="0x7517c498"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x75174348"/></to>
    </wire>
    <wire loc="70:/home/pi/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7517bb68"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x76264e28"/></to>
    </wire>
    <wire loc="154:/home/pi/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <from><interface-ref name="timerTask" scoped="" ref="0x751797b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x75c91700"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x75c82aa0"/></to>
    </wire>
    <wire loc="150:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x75c82aa0"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x75a22070"/></to>
    </wire>
    <wire loc="122:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x75c85578"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x75bb4150"/></to>
    </wire>
    <wire loc="76:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x75c9e5d8"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x75c86aa0"/></to>
    </wire>
    <wire loc="119:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x75c86aa0"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x75bb56d0"/></to>
    </wire>
    <wire loc="78:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x75c9e930"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x75c86df8"/></to>
    </wire>
    <wire loc="120:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x75c86df8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x75bb59f8"/></to>
    </wire>
    <wire loc="75:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x75ca39c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x75c863f8"/></to>
    </wire>
    <wire loc="118:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x75c863f8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x75bb5310"/></to>
    </wire>
    <wire loc="73:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x75ca58f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x75c87318"/></to>
    </wire>
    <wire loc="115:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x75c87318"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x75bb67d8"/></to>
    </wire>
    <wire loc="168:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x75c84d80"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x75a22548"/></to>
    </wire>
    <wire loc="74:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x75ca3318"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x75c87d28"/></to>
    </wire>
    <wire loc="117:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x75c87d28"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x75bb6f18"/></to>
    </wire>
    <wire loc="124:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x75c82638"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x75bb38d0"/></to>
    </wire>
    <wire loc="85:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x75c8e178"/></from>
      <to><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x75c81140"/></to>
    </wire>
    <wire loc="151:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x75c81140"/></from>
      <to><interface-ref name="Routing" scoped="" ref="0x75a23a88"/></to>
    </wire>
    <wire loc="80:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x75c94618"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x75c85d50"/></to>
    </wire>
    <wire loc="123:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x75c85d50"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x75bb48c8"/></to>
    </wire>
    <wire loc="116:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x75c92bc8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x75bb6348"/></to>
    </wire>
    <wire loc="148:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x75c92bc8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x75a21150"/></to>
    </wire>
    <wire loc="149:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x75c92bc8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x75b41578"/></to>
    </wire>
    <wire loc="87:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x75c81b40"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x75c93310"/></to>
    </wire>
    <wire loc="88:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x75c81ef0"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x75c8aef0"/></to>
    </wire>
    <wire loc="193:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x75c7c9e8"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x75b40538"/></to>
    </wire>
    <wire loc="121:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x75ba33a8"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x75c81b40"/></to>
    </wire>
    <wire loc="128:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="QEntryPool" scoped="" ref="0x75baa328"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x75b83e40"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x75b83e40"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x750c06f8"/></to>
    </wire>
    <wire loc="129:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="MessagePool" scoped="" ref="0x75ba9840"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x75b9b950"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x75b9b950"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x750cbe98"/></to>
    </wire>
    <wire loc="132:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x75bad4c8"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x75b7f158"/></to>
    </wire>
    <wire loc="135:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SentCache" scoped="" ref="0x75ba7d98"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x75b6b0c0"/></to>
    </wire>
    <wire loc="44:/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="Cache" scoped="" ref="0x75b6b0c0"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x750b09e0"/></to>
    </wire>
    <wire loc="140:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x75bafbc8"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x75b40538"/></to>
    </wire>
    <wire loc="154:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconSend" scoped="" ref="0x75a20200"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x75b41a00"/></to>
    </wire>
    <wire loc="155:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconReceive" scoped="" ref="0x75a208b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x75b40198"/></to>
    </wire>
    <wire loc="156:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x75a20bd0"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x75b40538"/></to>
    </wire>
    <wire loc="158:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CompareBit" scoped="" ref="0x75a17e98"/></from>
      <to><interface-ref name="CompareBit" scoped="" ref="0x75b3ce68"/></to>
    </wire>
    <wire loc="160:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x75a1e770"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x76764730"/></to>
    </wire>
    <wire loc="161:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x75a1d410"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x767672e0"/></to>
    </wire>
    <wire loc="162:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconTimer" scoped="" ref="0x75a1da78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x75b4fb98"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x75b4fb98"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x75f06618"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RouteTimer" scoped="" ref="0x75a1bce0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x75b4c9a0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x75b4c9a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x75f06618"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x75a17408"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x75c81ef0"/></to>
    </wire>
    <wire loc="165:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x75ba1408"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x75c81ef0"/></to>
    </wire>
    <wire loc="166:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x75ba4190"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x75a22548"/></to>
    </wire>
    <wire loc="167:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x75a17aa0"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x75bb38d0"/></to>
    </wire>
    <wire loc="172:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RetxmitTimer" scoped="" ref="0x75bb2978"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x75a11a70"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x75a11a70"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x75f06618"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x75a17010"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x75ed3c40"/></to>
    </wire>
    <wire loc="176:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x75ba1010"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x75ed3c40"/></to>
    </wire>
    <wire loc="179:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x75bb3d18"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x75b46e18"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x75b46e18"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x750999e0"/></to>
    </wire>
    <wire loc="180:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x75ba6b10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x75ac0ce8"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x75ac0ce8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x76766638"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="181:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x75ba6e48"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x75abc758"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMSnooperC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x75abc758"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x76766cd0"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="182:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x75baed48"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x75ac24d0"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x75ac24d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x75096150"/></to>
    </wire>
    <wire loc="183:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x75ba4d68"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x75a22070"/></to>
    </wire>
    <wire loc="184:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x75bae770"/></from>
      <to><interface-ref name="Routing" scoped="" ref="0x75a23a88"/></to>
    </wire>
    <wire loc="185:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x75ba1ac0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x767672e0"/></to>
    </wire>
    <wire loc="186:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x75bb23f0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x75ac1790"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x75ac1790"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x75094410"/></to>
    </wire>
    <wire loc="187:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x75ba37d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x75ac2b68"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x75ac2b68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x750967e8"/></to>
    </wire>
    <wire loc="188:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x75ba23f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x76264e28"/></to>
    </wire>
    <wire loc="195:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x75b3a560"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x75ed3c40"/></to>
    </wire>
    <wire loc="197:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x75b3e210"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x75a0bd70"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x75a0bd70"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7502dce8"/></to>
    </wire>
    <wire loc="198:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x75b3bdd8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x75a08dc8"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x75a08dc8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x76766638"/>
      <arguments>
        <value cst="I:112">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="199:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x75b3b670"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x75a0a4d0"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x75a0a4d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x750293f0"/></to>
    </wire>
    <wire loc="200:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x75b3e990"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x75a0ab68"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x75a0ab68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x75029a88"/></to>
    </wire>
    <wire loc="224:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x75b3a208"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x76740230"/></to>
    </wire>
    <wire loc="234:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x75ba0190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x750ae788"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x75c85d50"/></to>
    </wire>
    <wire loc="20:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x750999e0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7508dc58"/></to>
    </wire>
    <wire loc="21:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x75096150"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7508f708"/></to>
    </wire>
    <wire loc="22:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x750967e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7508fda0"/></to>
    </wire>
    <wire loc="23:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x75094410"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7508ea30"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7508f708"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x76764040"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7508fda0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x76764730"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7508ea30"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x767633f8"/></to>
    </wire>
    <wire loc="25:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="SubAMSend" scoped="" ref="0x7508c360"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7508f070"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7508f070"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x750840c8"/></to>
    </wire>
    <wire loc="26:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Lpl" scoped="" ref="0x7508ca18"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x76755570"/></to>
    </wire>
    <wire loc="27:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7508a010"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x75dcd920"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x75084790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x76799678"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x75084e28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x76764730"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x75abe030"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x76764040"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x75abe6c8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x76764730"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMSnooperC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x75abca70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x76764040"/></to>
    </wire>
    <wire loc="57:../../../tos/system/AMSnooperC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x75abb150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x76764730"/></to>
    </wire>
    <wire loc="269:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <from><interface-ref name="updateRouteTask" scoped="" ref="0x75a16678"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="388:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <from><interface-ref name="sendBeaconTask" scoped="" ref="0x75a16240"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="20:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7502dce8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7501f010"/></to>
    </wire>
    <wire loc="21:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x750293f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x75022a78"/></to>
    </wire>
    <wire loc="22:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x75029a88"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x75021150"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x75a09790"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x750286b0"/></to>
    </wire>
    <wire loc="23:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x750286b0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x75021d48"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x75022a78"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x76764040"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x75021150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x76764730"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x75021d48"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x767633f8"/></to>
    </wire>
    <wire loc="25:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="SubAMSend" scoped="" ref="0x7501f6f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x750223e0"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x750223e0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x750174a8"/></to>
    </wire>
    <wire loc="26:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Lpl" scoped="" ref="0x7501fdb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x76755570"/></to>
    </wire>
    <wire loc="27:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7501e3f0"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x75dcd920"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x75017b70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x76799678"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x75016230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x76764730"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x75a07150"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x76764040"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x75a077e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x76764730"/></to>
    </wire>
    <wire loc="52:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x759f28f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x75003a20"/></to>
    </wire>
    <wire loc="47:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x75003a20"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x75c9e930"/></to>
    </wire>
    <wire loc="46:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x75003388"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x75ca58f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x75c93310"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x75001b48"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x74ffebe0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x759c7e90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x759e38c8"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x74ffba50"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x74ffba50"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7580e970"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x74ffc878"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7579a888"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x74ff8160"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7579a888"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x759bc660"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x74ffc878"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x759ba010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x74ff6820"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x74ff6820"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7597c2a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="ResourceRead" scoped="" ref="0x759beeb8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x74ff6188"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x74ff6188"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x75890ea0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x74ff5b10"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x74ffc878"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/adc12/AdcP.nc">
      <from><interface-ref name="readDone" scoped="" ref="0x759a0a68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x74ff5150"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7597b010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x74ff5628"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7597b900"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7588d9a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x75980740"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x74fec978"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x74ff5b10"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7588c638"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x74fec010"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="MultiChannel" scoped="" ref="0x7597b010"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x759741f8"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="DMAExtension" scoped="" ref="0x75979120"/></from>
      <to><interface-ref name="DMAExtension" scoped="" ref="0x75973310"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7597b900"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x75974ae8"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7597c2a8"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x759754e0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x75980740"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x758ef9f8"/></to>
    </wire>
    <wire loc="98:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x758ef9f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x74fe0b78"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ADCArbiterInfo" scoped="" ref="0x75973868"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x758cf5f0"/></to>
    </wire>
    <wire loc="100:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x758cf5f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x74fdf6d8"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x75969538"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x758f19f0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x75967a08"/></from>
      <to><interface-ref name="Port60" scoped="" ref="0x7659fbc8"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x75966ba8"/></from>
      <to><interface-ref name="Port61" scoped="" ref="0x7659ed88"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x75965d68"/></from>
      <to><interface-ref name="Port62" scoped="" ref="0x7659c010"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x75964f28"/></from>
      <to><interface-ref name="Port63" scoped="" ref="0x7659b178"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x75962070"/></from>
      <to><interface-ref name="Port64" scoped="" ref="0x7659a368"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x75961178"/></from>
      <to><interface-ref name="Port65" scoped="" ref="0x765994c8"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x75960348"/></from>
      <to><interface-ref name="Port66" scoped="" ref="0x76598688"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7595f4a8"/></from>
      <to><interface-ref name="Port67" scoped="" ref="0x76597848"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x75972620"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x768c54c0"/></to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x75971368"/></from>
      <to><interface-ref name="ControlA0" scoped="" ref="0x768c0130"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x75971eb8"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x768c0ca0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x75968a08"/></from>
      <to><interface-ref name="CompareA0" scoped="" ref="0x768bf010"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x75967258"/></from>
      <to><interface-ref name="CompareA1" scoped="" ref="0x768bf7d0"/></to>
    </wire>
    <wire loc="99:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x758cf1e8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x74fdf2d0"/></to>
    </wire>
    <wire loc="101:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x74fdfb98"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x758cfaa0"/></to>
    </wire>
    <wire loc="103:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x74fde010"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x74fe1ad8"/></to>
    </wire>
    <wire loc="68:../../../tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x74fde608"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="ClientResource" scoped="" ref="0x75890ea0"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x75889df8"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7584e8f0"/></from>
      <to><interface-ref name="AdcResource" scoped="" ref="0x7588d9a0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7584c378"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7588c638"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7584d0e0"/></from>
      <to><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7588a598"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7584d7b8"/></from>
      <to><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7588ac70"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOnTimer" scoped="" ref="0x75885468"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7584f1c8"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7584f1c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x75f06618"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffTimer" scoped="" ref="0x75883888"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7582c0c0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7582c0c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x75f06618"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x75880c40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x75829eb0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x75829eb0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x75f06618"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x758862d0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x758f19f0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <from><interface-ref name="switchOff" scoped="" ref="0x7584b940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x74fbe8d8"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x74ff8160"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x758095d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x74ff8160"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x75808e18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x74fbf010"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x74fbf010"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x75890ea0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x75808260"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x74fbf6a8"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x74fbf6a8"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7597c2a8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7580e970"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x757c0010"/></to>
    </wire>
    <wire loc="32:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x75800100"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x758095d8"/></to>
    </wire>
    <wire loc="33:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x757a5ec0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x75808e18"/></to>
    </wire>
    <wire loc="35:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x757a77d8"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x75804780"/></to>
    </wire>
    <wire loc="38:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x75801280"/></from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x75808260"/></to>
    </wire>
    <wire loc="39:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x75800b48"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x757c4690"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x757c4690"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x74fb3010"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="bufferDone" scoped="" ref="0x757e74d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamDone" scoped="" ref="0x757ef448"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamFail" scoped="" ref="0x757ecc88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x757c4238"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x74fb70d8"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x74fb70d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x74fa99a8"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x74fb1d00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x74fb7530"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x74fb7530"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x74fa9e20"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x74fb2aa8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x75f70cc8"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x74fa67f8"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x74face48"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x74face48"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x766538e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x74fa5410"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x74faba70"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x74faba70"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x76650890"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x74fa5e48"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x74faa4f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x74faa4f0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7664e698"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x74fbff00"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7597b010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x74fbe3f0"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7597b900"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7588d9a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x75980740"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x74f7f160"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x74fbe8d8"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7588c638"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x74f817d8"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumidityMetadata" scoped="" ref="0x756c4ba8"/></from>
      <to><interface-ref name="HumidityMetadata" scoped="" ref="0x74f79168"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0x756c4010"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x74f79550"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TemperatureMetadata" scoped="" ref="0x756c6c10"/></from>
      <to><interface-ref name="TemperatureMetadata" scoped="" ref="0x74f7a1d8"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x74f78108"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x75765bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Temp" scoped="" ref="0x74f78eb8"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x757626c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumResource" scoped="" ref="0x74f787e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x75765bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Hum" scoped="" ref="0x74f77a20"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x757626c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="SensirionSht11" scoped="" ref="0x757626c8"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7571b4d8"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x75765bf0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x75710010"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x75710010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x756f22e8"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7571a050"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0x75710778"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x75710778"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7570ec50"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0x7571a9c8"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0x7570f210"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7570f210"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7570b438"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x75719358"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0x7570fc98"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7570fc98"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x756f5f28"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x757199c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x756cedc0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x756cedc0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x75f06618"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x75717ba8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x76264e28"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="readSensor" scoped="" ref="0x75715cc8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="signalStatusDone" scoped="" ref="0x75715890"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x756f22e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x74f29dc8"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7570d5f0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x765c7d88"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7570bdb0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x765c5010"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x757086d0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x765c4178"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="PWR" scoped="" ref="0x757009c8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x75709cc0"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x756ff3e8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7570ec50"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x756ffde0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7570b438"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x757036f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x75704c70"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x75704c70"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x75f06618"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x756f4530"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x764728c0"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x756eeca0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x75703010"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x756edcc0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x756f0510"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x756f0510"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x74f27030"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x756ed628"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x756f2e30"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x756f2e30"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x74f28970"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x756fec50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x756f2a28"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x74f28568"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x74f274f0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x756f09c0"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x74f27918"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x74f2cbb0"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x74f26b00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x74f0b900"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x756eeca0"/></to>
    </wire>
    <wire loc="81:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x74f0beb8"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x756ed310"/></to>
    </wire>
    <wire loc="83:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x74f0a200"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x756ed628"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x74f0a898"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x756edcc0"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x74f0acd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x74f09190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="DemoP" loc="4:DemoP.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="DisseminationC" loc="46:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationC.nc">
      <documentation loc="35:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationC.nc">
        <short>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol.</short>
        <long>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol. StdControl controls all of the trickle&#10; timers used for all of the keys. &#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP" loc="47:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <documentation loc="35:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
        <short>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.</short>
        <long>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.&#10;&#10; TODO: Hook DisseminationProbe up to the serial instead of the radio.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineImplP" loc="45:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <documentation loc="33:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
        <short>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.</short>
        <long>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC" loc="47(DisseminationEngineP.DisseminationSendC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC" loc="3(DisseminationEngineP.DisseminationSendC.SenderC):../../../tos/system/LplAMSenderC.nc">
      <instance number="0">
        <component-ref qname="LplAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC" loc="47(DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
        <long>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930d18"/>
            <typename><typedef-ref name="TMicro" ref="0x76930ef8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930d18"/>
            <typename><typedef-ref name="TMicro" ref="0x76930ef8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
          <value cst="I:15">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DefaultLplC" loc="41:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <documentation loc="86:../../../tos/chips/cc2420/lpl/DefaultLpl.h">
        <short>&#10; The minimum number of samples that must be taken in CC2420DutyCycleP&#10; that show the channel is not clear before a detection event is issued&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="DefaultLplP" loc="47:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DefaultLpl.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Tony O'Donovan&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PowerCycleC" loc="39:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
        <short>&#10; Use this component to duty cycle the radio.</short>
        <long>&#10; Use this component to duty cycle the radio. When a message is heard, &#10; disable DutyCycling.&#10;&#10; @author David Moss dmm@rincon.com&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PowerCycleP" loc="56:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DefaultLpl.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Tony O'Donovan&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PowerCycleC.RadioPowerStateC" loc="65(PowerCycleC.RadioPowerStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PowerCycleC.SplitControlStateC" loc="65(PowerCycleC.SplitControlStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PowerCycleC.OnTimerC" loc="44(PowerCycleC.OnTimerC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PowerCycleC.CheckTimerC" loc="44(PowerCycleC.CheckTimerC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DefaultLplC.SendStateC" loc="65(DefaultLplC.SendStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DefaultLplC.OffTimerC" loc="44(DefaultLplC.OffTimerC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DefaultLplC.SendDoneTimerC" loc="44(DefaultLplC.SendDoneTimerC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SystemLowPowerListeningC" loc="1:../../../tos/system/SystemLowPowerListeningC.nc">
      <configuration/>
    </component>
    <component qname="SystemLowPowerListeningP" loc="3:../../../tos/system/SystemLowPowerListeningP.nc">
      <module/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP" loc="1(DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP):../../../tos/system/LplAMSenderP.nc">
      <instance number="0">
        <component-ref qname="LplAMSenderP"/>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationReceiveC" loc="43(DisseminationEngineP.DisseminationReceiveC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC" loc="47(DisseminationEngineP.DisseminationProbeSendC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC" loc="3(DisseminationEngineP.DisseminationProbeSendC.SenderC):../../../tos/system/LplAMSenderC.nc">
      <instance number="1">
        <component-ref qname="LplAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC" loc="47(DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP" loc="1(DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP):../../../tos/system/LplAMSenderP.nc">
      <instance number="1">
        <component-ref qname="LplAMSenderP"/>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeReceiveC" loc="43(DisseminationEngineP.DisseminationProbeReceiveC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:../../../tos/system/NoLedsC.nc">
      <documentation loc="35:../../../tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DemoAppC.Object32C" loc="49(DemoAppC.Object32C):/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <documentation loc="35:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorC"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.Object32C.DisseminatorP" loc="45(DemoAppC.Object32C.DisseminatorP):/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <documentation loc="33:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008-02-16 01:31:50 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x76912828"/></type-var>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP" loc="44:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationTimerP.nc">
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC" loc="51(DisseminationTimerP.TrickleTimerMilliC):/home/pi/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerMilliC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP" loc="51(DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP):/home/pi/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerImplP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC" loc="44(DisseminationTimerP.TrickleTimerMilliC.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.PendingVector):../../../tos/system/BitVectorC.nc">
      <documentation loc="34:../../../tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.ChangeVector):../../../tos/system/BitVectorC.nc">
      <documentation loc="34:../../../tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CollectionC" loc="45:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <documentation loc="34:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP" loc="77:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <documentation loc="66:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP.Forwarder" loc="107(CtpP.Forwarder):/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <instance number="0">
        <component-ref qname="CtpForwardingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.MessagePoolP" loc="41(CtpP.MessagePoolP):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
            <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.MessagePoolP.PoolP" loc="53(CtpP.MessagePoolP.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x75b99198"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.QEntryPoolP" loc="41(CtpP.QEntryPoolP):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x75c6d0f8"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x75c6d3a8"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.QEntryPoolP.PoolP" loc="53(CtpP.QEntryPoolP.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x75b99198"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SendQueueP" loc="42(CtpP.SendQueueP):../../../tos/system/QueueC.nc">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x75c6d0f8"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x75c6d3a8"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:13">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SentCacheP" loc="38(CtpP.SentCacheP):/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <documentation loc="32:/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SentCacheP.CacheP" loc="43(CtpP.SentCacheP.CacheP):/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <documentation loc="32:/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RoutingBeaconTimer" loc="44(CtpP.RoutingBeaconTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.RouteUpdateTimer" loc="44(CtpP.RouteUpdateTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkEstimatorP" loc="42:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <module/>
    </component>
    <component qname="CtpP.AMSenderC" loc="47(CtpP.AMSenderC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC" loc="3(CtpP.AMSenderC.SenderC):../../../tos/system/LplAMSenderC.nc">
      <instance number="2">
        <component-ref qname="LplAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC.DirectAMSenderC" loc="47(CtpP.AMSenderC.SenderC.DirectAMSenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC.DirectAMSenderC.AMQueueEntryP" loc="43(CtpP.AMSenderC.SenderC.DirectAMSenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC.LplAMSenderP" loc="1(CtpP.AMSenderC.SenderC.LplAMSenderP):../../../tos/system/LplAMSenderP.nc">
      <instance number="2">
        <component-ref qname="LplAMSenderP"/>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.AMReceiverC" loc="43(CtpP.AMReceiverC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSnooperC" loc="44(CtpP.AMSnooperC):../../../tos/system/AMSnooperC.nc">
      <documentation loc="33:../../../tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSnooperC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.Router" loc="107(CtpP.Router):/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <documentation loc="38:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CtpRoutingEngineP"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:128">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512000">
            <type-int cname="long" size="I:4" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RetxmitTimer" loc="44(CtpP.RetxmitTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl" loc="47(CtpP.SendControl):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC" loc="3(CtpP.SendControl.SenderC):../../../tos/system/LplAMSenderC.nc">
      <instance number="3">
        <component-ref qname="LplAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC.DirectAMSenderC" loc="47(CtpP.SendControl.SenderC.DirectAMSenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC.DirectAMSenderC.AMQueueEntryP" loc="43(CtpP.SendControl.SenderC.DirectAMSenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SendControl.SenderC.LplAMSenderP" loc="1(CtpP.SendControl.SenderC.LplAMSenderP):../../../tos/system/LplAMSenderP.nc">
      <instance number="3">
        <component-ref qname="LplAMSenderP"/>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.ReceiveControl" loc="43(CtpP.ReceiveControl):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.CollectionSenderC" loc="43(DemoAppC.CollectionSenderC):/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
      <documentation loc="32:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionSenderC"/>
        <arguments>
          <value cst="I:238">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.CollectionSenderC.CollectionSenderP" loc="34(DemoAppC.CollectionSenderC.CollectionSenderP):/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <instance number="0">
        <component-ref qname="CollectionSenderP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x76994500"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.CollectionSenderC.CollectionSenderP.CollectionIdP" loc="45(DemoAppC.CollectionSenderC.CollectionSenderP.CollectionIdP):/home/pi/tinyos-main/tos/lib/net/CollectionIdP.nc">
      <documentation loc="35:/home/pi/tinyos-main/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionIdP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x76994500"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DemoAppC.InternalTempC" loc="44(DemoAppC.InternalTempC):../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
      <documentation loc="32:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
        <short>&#10; Msp430InternalTemperatureC is the temperature sensor available on&#10; the msp430-based platforms.</short>
        <long>&#10; Msp430InternalTemperatureC is the temperature sensor available on&#10; the msp430-based platforms.&#10;&#10; To convert from ADC counts to temperature, convert to voltage by&#10; dividing by 4096 and multiplying by Vref (1.5V). Then subtract&#10; 0.986 from voltage and divide by 0.00355 to get degrees C.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:10 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InternalTemperatureC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.InternalTempC.AdcReadClientC" loc="47(DemoAppC.InternalTempC.AdcReadClientC):../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AdcP" loc="36:../../../tos/chips/msp430/adc12/AdcP.nc" safe="">
      <module/>
    </component>
    <component qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient" loc="43(DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P" loc="37:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <configuration/>
    </component>
    <component qname="Msp430Adc12ImplP" loc="37:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc" safe="">
      <module/>
    </component>
    <component qname="HplAdc12P" loc="45:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter" loc="83(Msp430Adc12P.Arbiter):../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <documentation loc="62:../../../tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleRoundRobinArbiterC"/>
        <arguments>
          <value cst="S:Msp430Adc12C.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Queue" loc="42(Msp430Adc12P.Arbiter.Queue):../../../tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:../../../tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Arbiter" loc="49(Msp430Adc12P.Arbiter.Arbiter):../../../tos/system/SimpleArbiterP.nc">
      <documentation loc="30:../../../tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP" loc="50:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
        <short> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter.</short>
        <long> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter. It checks whether the client's&#10; adc configuration requires the internal reference voltage generator of the&#10; MSP430 to be enabled during the conversion by inspecting the client's&#10; configuration data (using the &#60;code>AdcConfigure&#60;/code> interface). If so it&#10; makes sure that Resource.granted() is held back until the reference voltage&#10; is stable. Clients SHOULD NOT wire to &#60;code>Msp430RefVoltArbiterP&#60;/code> but&#10; to the Resource interface provided by&#10; &#60;code>Msp430Adc12ClientAutoRVGC&#60;/code>.&#10; &#10; @author Jan Hauer&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltGeneratorP" loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterImplP" loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOnDelayTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffDelayTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffSettleTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="DemoAppC.InternalTempC.AdcReadStreamClientC" loc="47(DemoAppC.InternalTempC.AdcReadStreamClientC):../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadStreamClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP" loc="19:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <documentation loc="10:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
        <short>&#10; Support component for AdcReadStreamClientC.</short>
        <long>&#10; Support component for AdcReadStreamClientC.&#10;&#10; @author David Gay&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AdcStreamP" loc="46:../../../tos/chips/msp430/adc12/AdcStreamP.nc" safe="">
      <documentation loc="39:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
        <short>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).</short>
        <long>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm" loc="41(WireAdcStreamP.Alarm):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom" loc="41(WireAdcStreamP.Alarm.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer" loc="37(WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm" loc="43(WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm.Transform" loc="51(WireAdcStreamP.Alarm.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.ArbitrateReadStream" loc="23(WireAdcStreamP.ArbitrateReadStream):../../../tos/system/ArbitratedReadStreamC.nc">
      <documentation loc="10:../../../tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadStreamC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient" loc="43(DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430InternalTemperatureP" loc="34:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureP.nc">
      <module/>
    </component>
    <component qname="DemoAppC.TempC" loc="45(DemoAppC.TempC):../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.TempC.SensirionSht11ReaderP" loc="45(DemoAppC.TempC.SensirionSht11ReaderP):../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <instance number="0">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C" loc="43:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
        <short>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform.</short>
        <long>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform. This component provides the SensirionSht11&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht11C.SensirionSht11LogicP" loc="53(HalSensirionSht11C.SensirionSht11LogicP):../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <documentation loc="35:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C" loc="43:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
        <short>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them.</short>
        <long>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them. You&#10; really shouldn't be wiring to this, unless you're writing a new&#10; Sensirion SHT11 driver.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.6 $ $Date: 2007-02-04 19:56:29 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.DATAM" loc="42(HplSensirionSht11C.DATAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SCKM" loc="42(HplSensirionSht11C.SCKM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.PWRM" loc="42(HplSensirionSht11C.PWRM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11P" loc="42:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <documentation loc="34:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
        <short>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.</short>
        <long>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.TimerMilliC" loc="44(HplSensirionSht11C.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.InterruptDATAC" loc="43(HplSensirionSht11C.InterruptDATAC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter" loc="89(HplSensirionSht11C.Arbiter):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht11.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Queue" loc="42(HplSensirionSht11C.Arbiter.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Arbiter" loc="52(HplSensirionSht11C.Arbiter.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC" loc="67(HplSensirionSht11C.SplitControlPowerManagerC):../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager" loc="58(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):../../../tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C.TimerMilliC" loc="44(HalSensirionSht11C.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.TimerMilliC" loc="44(DemoAppC.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x768a6010" loc="40:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x768a6248" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x768a6490" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x768a66a8" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x768a68c0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x768a6ad0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x768a6cf8" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x768a6f20" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x768a51a8" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x76884800" loc="40:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x76884a60" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x767c1548" loc="47:../../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LplAMSenderC" loc="3:../../../tos/system/LplAMSenderC.nc" abstract="">
      <parameters>
        <constant name="AMId" ref="0x767bcb38" loc="3:../../../tos/system/LplAMSenderC.nc">
          <component-ref qname="LplAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x767ab6f0" loc="47:../../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x767a4220" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x76796ba0" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x76640d40" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x76640d40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7661cc60" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7661cc60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x76622ec0" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x76622ec0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7660f368" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7660f368"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7660f5d0" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7660f5d0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7660fa48" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7660fa48"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7660fcb0" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7660d150" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7660d150"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x76626a48" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x76626a48"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x76626eb0" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x76626eb0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x765fb168" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x765fb168"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x765fb5e0" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x765fb5e0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x765fb848" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x765757b8" loc="40:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x765759e8" loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x76575c18" loc="42:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x76575e48" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x76574068" loc="44:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7621a4e8" loc="89:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x76217948" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x76202640" loc="52:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x760c37d0" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x760c37d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x760c3c08" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x760c3c08"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x75fbf580" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x75fbf580"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x75f5a058" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x75f5a058"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x75f40b18" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x75f40b18"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x75f40cf8" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LplAMSenderP" loc="1:../../../tos/system/LplAMSenderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x75d3edd8" loc="43:../../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorC" loc="49:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorC.nc" abstract="">
      <documentation loc="35:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x76912828" loc="49:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x76912828"/></type-var>
        </typedef>
        <constant name="key" ref="0x76912a18" loc="49:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorP" loc="45:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorP.nc" abstract="">
      <documentation loc="33:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008-02-16 01:31:50 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x75d204f8" loc="45:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
          <component-ref qname="DisseminatorP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75d204f8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TrickleTimerMilliC" loc="51:/home/pi/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x75d00b10" loc="51:/home/pi/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x75d00d20" loc="52:/home/pi/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x75d00f00" loc="53:/home/pi/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x75cfd128" loc="54:/home/pi/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TrickleTimerImplP" loc="51:/home/pi/tinyos-main/tos/lib/net/TrickleTimerImplP.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x75cfc660" loc="51:/home/pi/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x75cfc870" loc="52:/home/pi/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x75cfca50" loc="53:/home/pi/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x75cfcc58" loc="54:/home/pi/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
        </constant>
        <constant name="scale" ref="0x75cfce60" loc="55:/home/pi/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BitVectorC" loc="44:../../../tos/system/BitVectorC.nc" abstract="">
      <documentation loc="34:../../../tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="max_bits" ref="0x75cc07d8" loc="44:../../../tos/system/BitVectorC.nc">
          <component-ref qname="BitVectorC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CtpForwardingEngineP" loc="107:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:../../../tos/system/PoolC.nc" abstract="">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x75b99198" loc="41:../../../tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x75b99198"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x75b993b8" loc="41:../../../tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:../../../tos/system/PoolP.nc" abstract="">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x75b96700" loc="53:../../../tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x75b96700"/></type-var>
        </typedef>
        <constant name="size" ref="0x75b968f0" loc="53:../../../tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:../../../tos/system/QueueC.nc" abstract="">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x75b80378" loc="42:../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x75b80378"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x75b805a0" loc="42:../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="LruCtpMsgCacheC" loc="38:/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc" abstract="">
      <documentation loc="32:/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="CACHE_SIZE" ref="0x75b6dc10" loc="38:/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
          <component-ref qname="LruCtpMsgCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LruCtpMsgCacheP" loc="43:/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc" abstract="">
      <documentation loc="32:/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x75b68710" loc="43:/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
          <component-ref qname="LruCtpMsgCacheP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSnooperC" loc="44:../../../tos/system/AMSnooperC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x75aba010" loc="44:../../../tos/system/AMSnooperC.nc">
          <component-ref qname="AMSnooperC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CtpRoutingEngineP" loc="107:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc" abstract="">
      <documentation loc="38:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="routingTableSize" ref="0x75aaf130" loc="107:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
        </constant>
        <constant name="minInterval" ref="0x75aaf370" loc="107:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </constant>
        <constant name="maxInterval" ref="0x75aaf5b0" loc="107:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CollectionSenderC" loc="43:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc" abstract="">
      <documentation loc="32:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x759f3700" loc="43:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
          <component-ref qname="CollectionSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x76994500"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionSenderP" loc="34:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc" abstract="">
      <parameters>
        <constant name="collectid" ref="0x759ea270" loc="35:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x76994500"/></typename>
          </type-int>
        </constant>
        <constant name="clientid" ref="0x759ea488" loc="35:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionIdP" loc="45:/home/pi/tinyos-main/tos/lib/net/CollectionIdP.nc" abstract="">
      <documentation loc="35:/home/pi/tinyos-main/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x759e9f18" loc="45:/home/pi/tinyos-main/tos/lib/net/CollectionIdP.nc">
          <component-ref qname="CollectionIdP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x76994500"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InternalTemperatureC" loc="44:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
        <short>&#10; Msp430InternalTemperatureC is the temperature sensor available on&#10; the msp430-based platforms.</short>
        <long>&#10; Msp430InternalTemperatureC is the temperature sensor available on&#10; the msp430-based platforms.&#10;&#10; To convert from ADC counts to temperature, convert to voltage by&#10; dividing by 4096 and multiplying by Vref (1.5V). Then subtract&#10; 0.986 from voltage and divide by 0.00355 to get degrees C.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:10 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="47:../../../tos/chips/msp430/adc12/AdcReadClientC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Adc12ClientAutoRVGC" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleRoundRobinArbiterC" loc="83:../../../tos/system/SimpleRoundRobinArbiterC.nc" abstract="">
      <documentation loc="62:../../../tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x758ce4c0" loc="83:../../../tos/system/SimpleRoundRobinArbiterC.nc">
          <component-ref qname="SimpleRoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:../../../tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x758c8010" loc="42:../../../tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:../../../tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Adc12ConfAlertC" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadStreamClientC" loc="47:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc" abstract="">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadStreamC" loc="23:../../../tos/system/ArbitratedReadStreamC.nc" abstract="">
      <documentation loc="10:../../../tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="nClients" ref="0x757bf2f0" loc="23:../../../tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
        </constant>
        <typedef name="val_t" ref="0x757bf4c8" loc="23:../../../tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x757bf4c8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11C" loc="45:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11ReaderP" loc="45:../../../tos/chips/sht11/SensirionSht11ReaderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11LogicP" loc="53:../../../tos/chips/sht11/SensirionSht11LogicP.nc" abstract="">
      <documentation loc="35:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:../../../tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:../../../tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="CollectionPacket" ref="0x769414d0" loc="20:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionPacket" scoped="" ref="0x769414d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x769416a8"/>
        <function-ref name="setOrigin" scoped="" ref="0x76941788"/>
        <function-ref name="setType" scoped="" ref="0x76941868"/>
        <function-ref name="getOrigin" scoped="" ref="0x76941948"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x76941a28"/>
        <function-ref name="getType" scoped="" ref="0x76941b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7698fd68" loc="6:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7698fd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7698c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x76944158" loc="18:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x76944158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76944330"/>
        <function-ref name="payloadLength" scoped="" ref="0x76944410"/>
        <function-ref name="getPayload" scoped="" ref="0x769444f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x769445d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x769446b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationControl" ref="0x76989298" loc="8:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisseminationControl" scoped="" ref="0x76989298"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x76989470"/>
        <function-ref name="stop" scoped="" ref="0x76989550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7697f1f8" loc="15:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x7697f1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7697f3d0"/>
        <function-ref name="stopDone" scoped="" ref="0x7697f4b0"/>
        <function-ref name="start" scoped="" ref="0x7697f590"/>
        <function-ref name="stop" scoped="" ref="0x7697f670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7694be50" loc="17:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7694be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x76983050"/>
        <function-ref name="getPayload" scoped="" ref="0x76983130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x76983210"/>
        <function-ref name="cancel" scoped="" ref="0x769832f0"/>
        <function-ref name="sendDone" scoped="" ref="0x769833d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpInfo" ref="0x7693a178" loc="21:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpInfo" scoped="" ref="0x7693a178"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x7693a350"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7693a430"/>
        <function-ref name="numNeighbors" scoped="" ref="0x7693a510"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x7693a5f0"/>
        <function-ref name="getEtx" scoped="" ref="0x7693a6d0"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x7693a7b0"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x7693a890"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x7693a970"/>
        <function-ref name="getParent" scoped="" ref="0x7693aa50"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x7693ab30"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x7693ac10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationPeriod" ref="0x76987438" loc="10:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisseminationPeriod" scoped="" ref="0x76987438"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x7698a010"/>
        <function-ref name="get" scoped="" ref="0x76987a80"/>
        <function-ref name="set" scoped="" ref="0x76987cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendPacket" ref="0x76927800" loc="40:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendPacket" scoped="" ref="0x76927800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x769279d8"/>
        <function-ref name="runTask" scoped="" ref="0x76927ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x769897c8" loc="9:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoutingControl" scoped="" ref="0x769897c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x769899a0"/>
        <function-ref name="stop" scoped="" ref="0x76989a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpCongestion" ref="0x76939a48" loc="22:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpCongestion" scoped="" ref="0x76939a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x76939c20"/>
        <function-ref name="setClientCongested" scoped="" ref="0x76939d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IntTemp" ref="0x76984710" loc="12:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IntTemp" scoped="" ref="0x76984710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76984d38"/>
        <function-ref name="readDone" scoped="" ref="0x76986010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x76982010" loc="24:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x76982010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x76982268"/>
        <function-ref name="led0Toggle" scoped="" ref="0x76982348"/>
        <function-ref name="led1On" scoped="" ref="0x76982428"/>
        <function-ref name="led1Toggle" scoped="" ref="0x76982508"/>
        <function-ref name="led2Toggle" scoped="" ref="0x769825e8"/>
        <function-ref name="get" scoped="" ref="0x769826c8"/>
        <function-ref name="led1Off" scoped="" ref="0x769827a8"/>
        <function-ref name="led2Off" scoped="" ref="0x76982b28"/>
        <function-ref name="set" scoped="" ref="0x76982888"/>
        <function-ref name="led0On" scoped="" ref="0x76982968"/>
        <function-ref name="led2On" scoped="" ref="0x76982a48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Temp" ref="0x76986470" loc="13:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temp" scoped="" ref="0x76986470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76986a98"/>
        <function-ref name="readDone" scoped="" ref="0x76986cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensors" ref="0x76927010" loc="39:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readSensors" scoped="" ref="0x76927010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x769271e8"/>
        <function-ref name="runTask" scoped="" ref="0x769272c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7692a8e0" loc="25:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7692a8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x769313d8"/>
        <function-ref name="fired" scoped="" ref="0x7694a678"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7694ad80"/>
        <function-ref name="isOneShot" scoped="" ref="0x7694ab28"/>
        <function-ref name="getdt" scoped="" ref="0x76931888"/>
        <function-ref name="gett0" scoped="" ref="0x76931630"/>
        <function-ref name="isRunning" scoped="" ref="0x7694a8d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7692af08"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x769310b8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7694a1a0"/>
        <function-ref name="stop" scoped="" ref="0x7694a420"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x76911c28" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x76911c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x76911e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x76911010" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x76911010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x769111e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x76910580" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x76910580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x76910758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7690b800" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7690b800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7690b9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7690b010" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7690b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7690b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7690b420" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7690b420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7690b5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7690bbe0" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7690bbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7690bdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7690d5d8" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7690d5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7690d7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7690c580" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7690c580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7690c758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x768f25a0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x768f25a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x768f2d98"/>
        <function-ref name="initTimerB" scoped="" ref="0x768f2858"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x768f2938"/>
        <function-ref name="initTimerA" scoped="" ref="0x768f2a18"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x768f2778"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x768f2af8"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x768f2bd8"/>
        <function-ref name="initClocks" scoped="" ref="0x768f2cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7690cdd0" loc="39:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7690cdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x768f6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x768e8850" loc="46:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x768e8850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x768e70f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x768e8b08"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x768e8be8"/>
        <function-ref name="initTimerA" scoped="" ref="0x768e8cc8"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x768e8a28"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x768e8da8"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x768e8e88"/>
        <function-ref name="initClocks" scoped="" ref="0x768e7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x768e72f8" loc="47:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x768e72f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x768e74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x768e8480" loc="45:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x768e8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x768e8658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x768c98c8" loc="42:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x768c98c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x768c9aa0"/>
        <function-ref name="getControl" scoped="" ref="0x768c9b80"/>
        <function-ref name="enableEvents" scoped="" ref="0x768c9c60"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x768c9d40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x768c9e20"/>
        <function-ref name="disableEvents" scoped="" ref="0x768c9f00"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x768c4010"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x768c40f0"/>
        <function-ref name="setControl" scoped="" ref="0x768c41d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x768b7628" loc="51:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x768b7628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x768b7800"/>
        <function-ref name="getControl" scoped="" ref="0x768b78e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x768b79c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x768b7aa0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x768b7b80"/>
        <function-ref name="disableEvents" scoped="" ref="0x768b7c60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x768b7d40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x768b7e20"/>
        <function-ref name="setControl" scoped="" ref="0x768b7f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x768bb6d8" loc="47:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x768bb6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768bb8b0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x768bb990"/>
        <function-ref name="captured" scoped="" ref="0x768bba70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x768bbb50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x768bbc30"/>
        <function-ref name="setEdge" scoped="" ref="0x768bbd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x768acb18" loc="68:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x768acb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768accf0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x768acdd0"/>
        <function-ref name="captured" scoped="" ref="0x768aceb0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x768ab010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x768ab0f0"/>
        <function-ref name="setEdge" scoped="" ref="0x768ab1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x768bf7d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x768bf7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768bf9a8"/>
        <function-ref name="setEvent" scoped="" ref="0x768bfa88"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x768bfb68"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x768bfc48"/>
        <function-ref name="fired" scoped="" ref="0x768bfd28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x768af010" loc="61:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x768af010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768af1e8"/>
        <function-ref name="setEvent" scoped="" ref="0x768af2c8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x768af3a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x768af488"/>
        <function-ref name="fired" scoped="" ref="0x768af568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x768aa5f8" loc="71:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x768aa5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768aa7d0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x768aa8b0"/>
        <function-ref name="captured" scoped="" ref="0x768aa990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x768aaa70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x768aab50"/>
        <function-ref name="setEdge" scoped="" ref="0x768aac30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x768b3548" loc="55:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x768b3548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x768b3720"/>
        <function-ref name="getControl" scoped="" ref="0x768b3800"/>
        <function-ref name="enableEvents" scoped="" ref="0x768b38e0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x768b39c0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x768b3aa0"/>
        <function-ref name="disableEvents" scoped="" ref="0x768b3b80"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x768b3c60"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x768b3d40"/>
        <function-ref name="setControl" scoped="" ref="0x768b3e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x768c0130" loc="40:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x768c0130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x768c0308"/>
        <function-ref name="getControl" scoped="" ref="0x768c03e8"/>
        <function-ref name="enableEvents" scoped="" ref="0x768c04c8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x768c05a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x768c0688"/>
        <function-ref name="disableEvents" scoped="" ref="0x768c0768"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x768c0848"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x768c0928"/>
        <function-ref name="setControl" scoped="" ref="0x768c0a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x768ad960" loc="66:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x768ad960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768adb38"/>
        <function-ref name="setSynchronous" scoped="" ref="0x768adc18"/>
        <function-ref name="captured" scoped="" ref="0x768adcf8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x768addd8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x768adeb8"/>
        <function-ref name="setEdge" scoped="" ref="0x768ac010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x768b0010" loc="59:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x768b0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768b01e8"/>
        <function-ref name="setEvent" scoped="" ref="0x768b02c8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x768b03a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x768b0488"/>
        <function-ref name="fired" scoped="" ref="0x768b0568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x768b61c8" loc="52:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x768b61c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x768b6420"/>
        <function-ref name="getControl" scoped="" ref="0x768b6500"/>
        <function-ref name="enableEvents" scoped="" ref="0x768b65e0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x768b66c0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x768b67a0"/>
        <function-ref name="disableEvents" scoped="" ref="0x768b6880"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x768b6960"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x768b6a40"/>
        <function-ref name="setControl" scoped="" ref="0x768b6b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x768ba010" loc="48:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x768ba010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768ba1e8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x768ba2c8"/>
        <function-ref name="captured" scoped="" ref="0x768ba3a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x768ba488"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x768ba568"/>
        <function-ref name="setEdge" scoped="" ref="0x768ba648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x768ab438" loc="69:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x768ab438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768ab610"/>
        <function-ref name="setSynchronous" scoped="" ref="0x768ab6f0"/>
        <function-ref name="captured" scoped="" ref="0x768ab7d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x768ab8b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x768ab990"/>
        <function-ref name="setEdge" scoped="" ref="0x768aba70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x768b6db8" loc="53:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x768b6db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x768b5010"/>
        <function-ref name="getControl" scoped="" ref="0x768b50f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x768b51d0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x768b52b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x768b5390"/>
        <function-ref name="disableEvents" scoped="" ref="0x768b5470"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x768b5550"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x768b5630"/>
        <function-ref name="setControl" scoped="" ref="0x768b5710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x768be010" loc="45:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x768be010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768be1e8"/>
        <function-ref name="setEvent" scoped="" ref="0x768be2c8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x768be3a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x768be488"/>
        <function-ref name="fired" scoped="" ref="0x768be568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x768c54c0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x768c54c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x768c5698"/>
        <function-ref name="setClockSource" scoped="" ref="0x768c5778"/>
        <function-ref name="enableEvents" scoped="" ref="0x768c5858"/>
        <function-ref name="get" scoped="" ref="0x768c5938"/>
        <function-ref name="disableEvents" scoped="" ref="0x768c5a18"/>
        <function-ref name="clearOverflow" scoped="" ref="0x768c5af8"/>
        <function-ref name="getMode" scoped="" ref="0x768c5bd8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x768c5cb8"/>
        <function-ref name="overflow" scoped="" ref="0x768c5d98"/>
        <function-ref name="setMode" scoped="" ref="0x768c5e78"/>
        <function-ref name="setInputDivider" scoped="" ref="0x768ca010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x768af7d0" loc="62:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x768af7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768af9a8"/>
        <function-ref name="setEvent" scoped="" ref="0x768afa88"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x768afb68"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x768afc48"/>
        <function-ref name="fired" scoped="" ref="0x768afd28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x768c0ca0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x768c0ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x768c0e78"/>
        <function-ref name="getControl" scoped="" ref="0x768c9010"/>
        <function-ref name="enableEvents" scoped="" ref="0x768c90f0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x768c91d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x768c92b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x768c9390"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x768c9470"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x768c9550"/>
        <function-ref name="setControl" scoped="" ref="0x768c9630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x768b20e0" loc="56:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x768b20e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x768b22b8"/>
        <function-ref name="getControl" scoped="" ref="0x768b2398"/>
        <function-ref name="enableEvents" scoped="" ref="0x768b2478"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x768b2558"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x768b2638"/>
        <function-ref name="disableEvents" scoped="" ref="0x768b2718"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x768b27f8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x768b28d8"/>
        <function-ref name="setControl" scoped="" ref="0x768b29b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x768b8e10" loc="46:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x768b8e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768bb010"/>
        <function-ref name="setSynchronous" scoped="" ref="0x768bb0f0"/>
        <function-ref name="captured" scoped="" ref="0x768bb1d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x768bb2b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x768bb390"/>
        <function-ref name="setEdge" scoped="" ref="0x768bb470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x768ac278" loc="67:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x768ac278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768ac450"/>
        <function-ref name="setSynchronous" scoped="" ref="0x768ac530"/>
        <function-ref name="captured" scoped="" ref="0x768ac610"/>
        <function-ref name="clearOverflow" scoped="" ref="0x768ac6f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x768ac7d0"/>
        <function-ref name="setEdge" scoped="" ref="0x768ac8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x768bf010" loc="43:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x768bf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768bf1e8"/>
        <function-ref name="setEvent" scoped="" ref="0x768bf2c8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x768bf3a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x768bf488"/>
        <function-ref name="fired" scoped="" ref="0x768bf568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x768b07d0" loc="60:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x768b07d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768b09a8"/>
        <function-ref name="setEvent" scoped="" ref="0x768b0a88"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x768b0b68"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x768b0c48"/>
        <function-ref name="fired" scoped="" ref="0x768b0d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x768abcd8" loc="70:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x768abcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768abeb0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x768aa010"/>
        <function-ref name="captured" scoped="" ref="0x768aa0f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x768aa1d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x768aa2b0"/>
        <function-ref name="setEdge" scoped="" ref="0x768aa390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x768b59a8" loc="54:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x768b59a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x768b5b80"/>
        <function-ref name="getControl" scoped="" ref="0x768b5c60"/>
        <function-ref name="enableEvents" scoped="" ref="0x768b5d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x768b5e20"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x768b5f00"/>
        <function-ref name="disableEvents" scoped="" ref="0x768b3010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x768b30f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x768b31d0"/>
        <function-ref name="setControl" scoped="" ref="0x768b32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x768ba878" loc="50:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x768ba878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x768baa50"/>
        <function-ref name="setClockSource" scoped="" ref="0x768bab30"/>
        <function-ref name="enableEvents" scoped="" ref="0x768bac10"/>
        <function-ref name="get" scoped="" ref="0x768bacf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x768badd0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x768baeb0"/>
        <function-ref name="getMode" scoped="" ref="0x768b7010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x768b70f0"/>
        <function-ref name="overflow" scoped="" ref="0x768b71d0"/>
        <function-ref name="setMode" scoped="" ref="0x768b72b0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x768b7390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x768ae010" loc="63:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x768ae010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768ae1e8"/>
        <function-ref name="setEvent" scoped="" ref="0x768ae2c8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x768ae3a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x768ae488"/>
        <function-ref name="fired" scoped="" ref="0x768ae568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x768ad0c0" loc="65:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x768ad0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768ad298"/>
        <function-ref name="setSynchronous" scoped="" ref="0x768ad378"/>
        <function-ref name="captured" scoped="" ref="0x768ad458"/>
        <function-ref name="clearOverflow" scoped="" ref="0x768ad538"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x768ad618"/>
        <function-ref name="setEdge" scoped="" ref="0x768ad6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x768ae7d0" loc="64:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x768ae7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768aeaa8"/>
        <function-ref name="setEvent" scoped="" ref="0x768aeb88"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x768aec68"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x768aed48"/>
        <function-ref name="fired" scoped="" ref="0x768aee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x768b17b8" loc="58:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x768b17b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768b1990"/>
        <function-ref name="setEvent" scoped="" ref="0x768b1a70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x768b1b50"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x768b1c30"/>
        <function-ref name="fired" scoped="" ref="0x768b1d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x768b2c50" loc="57:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x768b2c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x768b2e28"/>
        <function-ref name="getControl" scoped="" ref="0x768b2f08"/>
        <function-ref name="enableEvents" scoped="" ref="0x768b1010"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x768b10f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x768b11d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x768b12b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x768b1390"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x768b1470"/>
        <function-ref name="setControl" scoped="" ref="0x768b1550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7688a8e8" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7688a8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7688aac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7688a590" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7688a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7688a768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7688ac40" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7688ac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7688ae18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7688a228" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7688a228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7688a410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x768a7528" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x768a7528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x768a7700"/>
        <function-ref name="setClockSource" scoped="" ref="0x768a77e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x768a78c0"/>
        <function-ref name="get" scoped="" ref="0x768a79a0"/>
        <function-ref name="disableEvents" scoped="" ref="0x768a7a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x768a7b60"/>
        <function-ref name="getMode" scoped="" ref="0x768a7c40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x768a7d20"/>
        <function-ref name="overflow" scoped="" ref="0x768a7e00"/>
        <function-ref name="setMode" scoped="" ref="0x768a7ee0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7688a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x768863a8" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x768863a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x76886580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x76886050" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x76886050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x76886228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x76886700" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x76886700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x768868d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x76887cc0" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x76887cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x76887ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x76887010" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x76887010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x768871e8"/>
        <function-ref name="setClockSource" scoped="" ref="0x768872c8"/>
        <function-ref name="enableEvents" scoped="" ref="0x768873a8"/>
        <function-ref name="get" scoped="" ref="0x76887488"/>
        <function-ref name="disableEvents" scoped="" ref="0x76887568"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76887648"/>
        <function-ref name="getMode" scoped="" ref="0x76887728"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76887808"/>
        <function-ref name="overflow" scoped="" ref="0x768878e8"/>
        <function-ref name="setMode" scoped="" ref="0x768879c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x76887aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x76882a28" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x76882a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76882c00"/>
        <function-ref name="setSynchronous" scoped="" ref="0x76882ce0"/>
        <function-ref name="captured" scoped="" ref="0x76882dc0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76882ea0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76859010"/>
        <function-ref name="setEdge" scoped="" ref="0x768590f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x76883850" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x76883850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x76883a28"/>
        <function-ref name="getControl" scoped="" ref="0x76883b08"/>
        <function-ref name="enableEvents" scoped="" ref="0x76883be8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x76883cc8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x76883da8"/>
        <function-ref name="disableEvents" scoped="" ref="0x76883e88"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x76882010"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x768820f0"/>
        <function-ref name="setControl" scoped="" ref="0x768821d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x76859e88" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x76859e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x76858070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x76882350" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x76882350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76882528"/>
        <function-ref name="setEvent" scoped="" ref="0x76882608"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x768826e8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x768827c8"/>
        <function-ref name="fired" scoped="" ref="0x768828a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x76859270" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x76859270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76859448"/>
        <function-ref name="setClockSource" scoped="" ref="0x76859528"/>
        <function-ref name="enableEvents" scoped="" ref="0x76859608"/>
        <function-ref name="get" scoped="" ref="0x768596e8"/>
        <function-ref name="disableEvents" scoped="" ref="0x768597c8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x768598a8"/>
        <function-ref name="getMode" scoped="" ref="0x76859988"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76859a68"/>
        <function-ref name="overflow" scoped="" ref="0x76859b48"/>
        <function-ref name="setMode" scoped="" ref="0x76859c28"/>
        <function-ref name="setInputDivider" scoped="" ref="0x76859d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x76856868" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x76856868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76856a40"/>
        <function-ref name="setSynchronous" scoped="" ref="0x76856b20"/>
        <function-ref name="captured" scoped="" ref="0x76856c00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76856ce0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76856dc0"/>
        <function-ref name="setEdge" scoped="" ref="0x76856ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x76857718" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x76857718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x768578f0"/>
        <function-ref name="getControl" scoped="" ref="0x768579d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x76857ab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x76857b90"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x76857c70"/>
        <function-ref name="disableEvents" scoped="" ref="0x76857d50"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x76857e30"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x76857f10"/>
        <function-ref name="setControl" scoped="" ref="0x76856010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x76855c68" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x76855c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x76855e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x76856190" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x76856190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76856368"/>
        <function-ref name="setEvent" scoped="" ref="0x76856448"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x76856528"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x76856608"/>
        <function-ref name="fired" scoped="" ref="0x768566e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x76855050" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x76855050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76855228"/>
        <function-ref name="setClockSource" scoped="" ref="0x76855308"/>
        <function-ref name="enableEvents" scoped="" ref="0x768553e8"/>
        <function-ref name="get" scoped="" ref="0x768554c8"/>
        <function-ref name="disableEvents" scoped="" ref="0x768555a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76855688"/>
        <function-ref name="getMode" scoped="" ref="0x76855768"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76855848"/>
        <function-ref name="overflow" scoped="" ref="0x76855928"/>
        <function-ref name="setMode" scoped="" ref="0x76855a08"/>
        <function-ref name="setInputDivider" scoped="" ref="0x76855ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x768526e8" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x768526e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768528c0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x768529a0"/>
        <function-ref name="captured" scoped="" ref="0x76852a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76852b60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76852c40"/>
        <function-ref name="setEdge" scoped="" ref="0x76852d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x76853588" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x76853588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x76853760"/>
        <function-ref name="getControl" scoped="" ref="0x76853840"/>
        <function-ref name="enableEvents" scoped="" ref="0x76853920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x76853a00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x76853ae0"/>
        <function-ref name="disableEvents" scoped="" ref="0x76853bc0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x76853ca0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x76853d80"/>
        <function-ref name="setControl" scoped="" ref="0x76853e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x76851b00" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x76851b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x76851cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x76852010" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x76852010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768521e8"/>
        <function-ref name="setEvent" scoped="" ref="0x768522c8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x768523a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x76852488"/>
        <function-ref name="fired" scoped="" ref="0x76852568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x76852ea0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x76852ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x768510c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x768511a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x76851280"/>
        <function-ref name="get" scoped="" ref="0x76851360"/>
        <function-ref name="disableEvents" scoped="" ref="0x76851440"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76851520"/>
        <function-ref name="getMode" scoped="" ref="0x76851600"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x768516e0"/>
        <function-ref name="overflow" scoped="" ref="0x768517c0"/>
        <function-ref name="setMode" scoped="" ref="0x768518a0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x76851980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7684d5c0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7684d5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7684d798"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7684d878"/>
        <function-ref name="captured" scoped="" ref="0x7684d958"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7684da38"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7684db18"/>
        <function-ref name="setEdge" scoped="" ref="0x7684dbf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7684f470" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7684f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7684f648"/>
        <function-ref name="getControl" scoped="" ref="0x7684f728"/>
        <function-ref name="enableEvents" scoped="" ref="0x7684f808"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7684f8e8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7684f9c8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7684faa8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7684fb88"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7684fc68"/>
        <function-ref name="setControl" scoped="" ref="0x7684fd48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7684ca50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7684ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7684cc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7684fec8" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7684fec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7684d0c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7684d1a0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7684d280"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7684d360"/>
        <function-ref name="fired" scoped="" ref="0x7684d440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7684dd78" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7684dd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7684c010"/>
        <function-ref name="setClockSource" scoped="" ref="0x7684c0f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7684c1d0"/>
        <function-ref name="get" scoped="" ref="0x7684c2b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7684c390"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7684c470"/>
        <function-ref name="getMode" scoped="" ref="0x7684c550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7684c630"/>
        <function-ref name="overflow" scoped="" ref="0x7684c710"/>
        <function-ref name="setMode" scoped="" ref="0x7684c7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7684c8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x76849510" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x76849510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768496e8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x768497c8"/>
        <function-ref name="captured" scoped="" ref="0x768498a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76849988"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76849a68"/>
        <function-ref name="setEdge" scoped="" ref="0x76849b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7684a3a8" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7684a3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7684a580"/>
        <function-ref name="getControl" scoped="" ref="0x7684a660"/>
        <function-ref name="enableEvents" scoped="" ref="0x7684a740"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7684a820"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7684a900"/>
        <function-ref name="disableEvents" scoped="" ref="0x7684a9e0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7684aac0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7684aba0"/>
        <function-ref name="setControl" scoped="" ref="0x7684ac80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x76848970" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x76848970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x76848b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7684ae00" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7684ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76849010"/>
        <function-ref name="setEvent" scoped="" ref="0x768490f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x768491d0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x768492b0"/>
        <function-ref name="fired" scoped="" ref="0x76849390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x76849cc8" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x76849cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76849ea0"/>
        <function-ref name="setClockSource" scoped="" ref="0x76848010"/>
        <function-ref name="enableEvents" scoped="" ref="0x768480f0"/>
        <function-ref name="get" scoped="" ref="0x768481d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x768482b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76848390"/>
        <function-ref name="getMode" scoped="" ref="0x76848470"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76848550"/>
        <function-ref name="overflow" scoped="" ref="0x76848630"/>
        <function-ref name="setMode" scoped="" ref="0x76848710"/>
        <function-ref name="setInputDivider" scoped="" ref="0x768487f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x76845430" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x76845430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76845608"/>
        <function-ref name="setSynchronous" scoped="" ref="0x768456e8"/>
        <function-ref name="captured" scoped="" ref="0x768457c8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x768458a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76845988"/>
        <function-ref name="setEdge" scoped="" ref="0x76845a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x76846220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x76846220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x768463f8"/>
        <function-ref name="getControl" scoped="" ref="0x768464d8"/>
        <function-ref name="enableEvents" scoped="" ref="0x768465b8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x76846698"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x76846778"/>
        <function-ref name="disableEvents" scoped="" ref="0x76846858"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x76846938"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x76846a18"/>
        <function-ref name="setControl" scoped="" ref="0x76846af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x76844890" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x76844890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x76844a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x76846c78" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x76846c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76846e50"/>
        <function-ref name="setEvent" scoped="" ref="0x76845010"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x768450f0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x768451d0"/>
        <function-ref name="fired" scoped="" ref="0x768452b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x76845be8" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x76845be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76845dc0"/>
        <function-ref name="setClockSource" scoped="" ref="0x76845ea0"/>
        <function-ref name="enableEvents" scoped="" ref="0x76844010"/>
        <function-ref name="get" scoped="" ref="0x768440f0"/>
        <function-ref name="disableEvents" scoped="" ref="0x768441d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x768442b0"/>
        <function-ref name="getMode" scoped="" ref="0x76844390"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76844470"/>
        <function-ref name="overflow" scoped="" ref="0x76844550"/>
        <function-ref name="setMode" scoped="" ref="0x76844630"/>
        <function-ref name="setInputDivider" scoped="" ref="0x76844710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x76841350" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x76841350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76841528"/>
        <function-ref name="setSynchronous" scoped="" ref="0x76841608"/>
        <function-ref name="captured" scoped="" ref="0x768416e8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x768417c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x768418a8"/>
        <function-ref name="setEdge" scoped="" ref="0x76841988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x76842140" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x76842140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x76842318"/>
        <function-ref name="getControl" scoped="" ref="0x768423f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x768424d8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x768425b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x76842698"/>
        <function-ref name="disableEvents" scoped="" ref="0x76842778"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x76842858"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x76842938"/>
        <function-ref name="setControl" scoped="" ref="0x76842a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7683f7b0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7683f7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7683f988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x76842b98" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x76842b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76842d70"/>
        <function-ref name="setEvent" scoped="" ref="0x76842e50"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x76841010"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x768410f0"/>
        <function-ref name="fired" scoped="" ref="0x768411d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x76841b08" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x76841b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76841ce0"/>
        <function-ref name="setClockSource" scoped="" ref="0x76841dc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x76841ea0"/>
        <function-ref name="get" scoped="" ref="0x7683f010"/>
        <function-ref name="disableEvents" scoped="" ref="0x7683f0f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7683f1d0"/>
        <function-ref name="getMode" scoped="" ref="0x7683f2b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7683f390"/>
        <function-ref name="overflow" scoped="" ref="0x7683f470"/>
        <function-ref name="setMode" scoped="" ref="0x7683f550"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7683f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7683c198" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7683c198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7683c370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7683c450"/>
        <function-ref name="captured" scoped="" ref="0x7683c530"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7683c610"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7683c6f0"/>
        <function-ref name="setEdge" scoped="" ref="0x7683c7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7683d050" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7683d050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7683d228"/>
        <function-ref name="getControl" scoped="" ref="0x7683d308"/>
        <function-ref name="enableEvents" scoped="" ref="0x7683d3e8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7683d4c8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7683d5a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7683d688"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7683d768"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7683d848"/>
        <function-ref name="setControl" scoped="" ref="0x7683d928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7683b5f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7683b5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7683b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7683daa8" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7683daa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7683dc80"/>
        <function-ref name="setEvent" scoped="" ref="0x7683dd60"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7683de40"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7683df20"/>
        <function-ref name="fired" scoped="" ref="0x7683c018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7683c950" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7683c950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7683cb28"/>
        <function-ref name="setClockSource" scoped="" ref="0x7683cc08"/>
        <function-ref name="enableEvents" scoped="" ref="0x7683cce8"/>
        <function-ref name="get" scoped="" ref="0x7683cdc8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7683cea8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7683b010"/>
        <function-ref name="getMode" scoped="" ref="0x7683b0f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7683b1d0"/>
        <function-ref name="overflow" scoped="" ref="0x7683b2b0"/>
        <function-ref name="setMode" scoped="" ref="0x7683b390"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7683b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x76838010" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x76838010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768381e8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x768382c8"/>
        <function-ref name="captured" scoped="" ref="0x768383a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76838488"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76838568"/>
        <function-ref name="setEdge" scoped="" ref="0x76838648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7683ae78" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7683ae78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x76839070"/>
        <function-ref name="getControl" scoped="" ref="0x76839150"/>
        <function-ref name="enableEvents" scoped="" ref="0x76839230"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x76839310"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x768393f0"/>
        <function-ref name="disableEvents" scoped="" ref="0x768394d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x768395b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x76839690"/>
        <function-ref name="setControl" scoped="" ref="0x76839770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x76837430" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x76837430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x76837608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x768398f0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x768398f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76839ac8"/>
        <function-ref name="setEvent" scoped="" ref="0x76839ba8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x76839c88"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x76839d68"/>
        <function-ref name="fired" scoped="" ref="0x76839e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x768387c8" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x768387c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x768389a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x76838a80"/>
        <function-ref name="enableEvents" scoped="" ref="0x76838b60"/>
        <function-ref name="get" scoped="" ref="0x76838c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x76838d20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76838e00"/>
        <function-ref name="getMode" scoped="" ref="0x76838ee0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76837010"/>
        <function-ref name="overflow" scoped="" ref="0x768370f0"/>
        <function-ref name="setMode" scoped="" ref="0x768371d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x768372b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x76835e88" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x76835e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76834070"/>
        <function-ref name="setSynchronous" scoped="" ref="0x76834150"/>
        <function-ref name="captured" scoped="" ref="0x76834230"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76834310"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x768343f0"/>
        <function-ref name="setEdge" scoped="" ref="0x768344d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x76836cb8" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x76836cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x76836e90"/>
        <function-ref name="getControl" scoped="" ref="0x76835010"/>
        <function-ref name="enableEvents" scoped="" ref="0x768350f0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x768351d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x768352b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x76835390"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x76835470"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x76835550"/>
        <function-ref name="setControl" scoped="" ref="0x76835630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x76833278" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x76833278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x76833450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x768357b0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x768357b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76835988"/>
        <function-ref name="setEvent" scoped="" ref="0x76835a68"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x76835b48"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x76835c28"/>
        <function-ref name="fired" scoped="" ref="0x76835d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x76834650" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x76834650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76834828"/>
        <function-ref name="setClockSource" scoped="" ref="0x76834908"/>
        <function-ref name="enableEvents" scoped="" ref="0x768349e8"/>
        <function-ref name="get" scoped="" ref="0x76834ac8"/>
        <function-ref name="disableEvents" scoped="" ref="0x76834ba8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76834c88"/>
        <function-ref name="getMode" scoped="" ref="0x76834d68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76834e48"/>
        <function-ref name="overflow" scoped="" ref="0x76834f28"/>
        <function-ref name="setMode" scoped="" ref="0x76833018"/>
        <function-ref name="setInputDivider" scoped="" ref="0x768330f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7682e590" loc="7:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7682e590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7682e768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x768317d0" loc="4:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x768317d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x768319a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x76831c58" loc="5:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x76831c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x76831e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7682e108" loc="6:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7682e108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7682e2e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x769a68a8" loc="55:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x769a68a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x769a6a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x76c38928" loc="51:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x76c38928"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x76c38b00"/>
        <function-ref name="irq_postamble" scoped="" ref="0x76c38be0"/>
        <function-ref name="sleep" scoped="" ref="0x76c38cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x769a77b0" loc="52:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x769a77b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x769a7988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x76814010" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x76814010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x76814808"/>
        <function-ref name="initTimerB" scoped="" ref="0x768142c8"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x768143a8"/>
        <function-ref name="initTimerA" scoped="" ref="0x76814488"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x768141e8"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x76814568"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x76814648"/>
        <function-ref name="initClocks" scoped="" ref="0x76814728"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x768f9ca0" loc="60:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x768f9ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x768f9e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x76907f20" loc="57:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x76907f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x768f9110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x768f9898" loc="59:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x768f9898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x768f9a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x768f92d0" loc="58:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x768f92d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x768f94a8"/>
        <function-ref name="taskLoop" scoped="" ref="0x768f9588"/>
        <function-ref name="runNextTask" scoped="" ref="0x768f9668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x76c2f470" loc="48:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x76c2f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x76c2f648"/>
        <function-ref name="runTask" scoped="" ref="0x76c2f728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x76c37a58" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x76c37a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x76c37c30"/>
        <function-ref name="taskLoop" scoped="" ref="0x76c37d10"/>
        <function-ref name="runNextTask" scoped="" ref="0x76c37df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x769bc670" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x769bc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x769bc848"/>
        <function-ref name="runTask" scoped="" ref="0x769bc928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x769b9b08" loc="57:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x769b9b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x769b9ce0"/>
        <function-ref name="irq_postamble" scoped="" ref="0x769b9dc0"/>
        <function-ref name="sleep" scoped="" ref="0x769b9ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x769bdda0" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x769bdda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x769bc010"/>
        <function-ref name="taskLoop" scoped="" ref="0x769bc0f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x769bc1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x76804b08" loc="47:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationC.nc">
      <component-ref qname="DisseminationC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x76804b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x76804ce0"/>
        <function-ref name="stop" scoped="" ref="0x76804dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x767f98d8" loc="52:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TrickleTimer" scoped="" ref="0x767f98d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x767f9ab0"/>
        <function-ref name="incrementCounter" scoped="" ref="0x767f9b90"/>
        <function-ref name="reset" scoped="" ref="0x767f9c70"/>
        <function-ref name="start" scoped="" ref="0x767f9d50"/>
        <function-ref name="stop" scoped="" ref="0x767f9e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x767fb480" loc="51:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisseminationCache" scoped="" ref="0x767fb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x767fb738"/>
        <function-ref name="stop" scoped="" ref="0x767fbab8"/>
        <function-ref name="newData" scoped="" ref="0x767fb818"/>
        <function-ref name="start" scoped="" ref="0x767fb8f8"/>
        <function-ref name="requestSeqno" scoped="" ref="0x767fb9d8"/>
        <function-ref name="requestData" scoped="" ref="0x767fb658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x768036d8" loc="48:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x768036d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x768038b0"/>
        <function-ref name="stop" scoped="" ref="0x76803990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x767ff3e0" loc="53:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisseminatorControl" scoped="" ref="0x767ff3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x767ff5b8"/>
        <function-ref name="stop" scoped="" ref="0x767ff698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeReceive" ref="0x767f3240" loc="57:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ProbeReceive" scoped="" ref="0x767f3240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x767f3418"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeAMSend" ref="0x767e9aa8" loc="56:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ProbeAMSend" scoped="" ref="0x767e9aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x767e9c80"/>
        <function-ref name="getPayload" scoped="" ref="0x767e9d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x767e9e40"/>
        <function-ref name="cancel" scoped="" ref="0x767e9f20"/>
        <function-ref name="sendDone" scoped="" ref="0x767f3018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x767ec3a0" loc="53:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x767ec3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x767ec578"/>
        <function-ref name="getPayload" scoped="" ref="0x767ec658"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x767ec738"/>
        <function-ref name="cancel" scoped="" ref="0x767ec818"/>
        <function-ref name="sendDone" scoped="" ref="0x767ec8f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x767f52f0" loc="50:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TrickleTimer" scoped="" ref="0x767f52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x767f54c8"/>
        <function-ref name="incrementCounter" scoped="" ref="0x767f55a8"/>
        <function-ref name="reset" scoped="" ref="0x767f5688"/>
        <function-ref name="start" scoped="" ref="0x767f5768"/>
        <function-ref name="stop" scoped="" ref="0x767f5848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x767f67e8" loc="49:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisseminationCache" scoped="" ref="0x767f67e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x767f6aa0"/>
        <function-ref name="stop" scoped="" ref="0x767f6e20"/>
        <function-ref name="newData" scoped="" ref="0x767f6b80"/>
        <function-ref name="start" scoped="" ref="0x767f6c60"/>
        <function-ref name="requestSeqno" scoped="" ref="0x767f6d40"/>
        <function-ref name="requestData" scoped="" ref="0x767f69c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x767e96c0" loc="54:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x767e96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x767e9898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x767f3588" loc="59:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x767f3588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x767f3760"/>
        <function-ref name="led0Toggle" scoped="" ref="0x767f3840"/>
        <function-ref name="led1On" scoped="" ref="0x767f3920"/>
        <function-ref name="led1Toggle" scoped="" ref="0x767f3a00"/>
        <function-ref name="led2Toggle" scoped="" ref="0x767f3ae0"/>
        <function-ref name="get" scoped="" ref="0x767f3bc0"/>
        <function-ref name="led1Off" scoped="" ref="0x767f3ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x767f20f0"/>
        <function-ref name="set" scoped="" ref="0x767f3d80"/>
        <function-ref name="led0On" scoped="" ref="0x767f3e60"/>
        <function-ref name="led2On" scoped="" ref="0x767f2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x767f6010" loc="46:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x767f6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x767f61e8"/>
        <function-ref name="stop" scoped="" ref="0x767f62c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x767f5dc0" loc="51:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisseminatorControl" scoped="" ref="0x767f5dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x767f4010"/>
        <function-ref name="stop" scoped="" ref="0x767f40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x767c0bb8" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x767c0bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x767c0d90"/>
        <function-ref name="getPayload" scoped="" ref="0x767c0e70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x767bf010"/>
        <function-ref name="cancel" scoped="" ref="0x767bf0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x767bf1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x767bf310" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x767bf310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x767bf4e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x767bf5c8"/>
        <function-ref name="getPayload" scoped="" ref="0x767bf6a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x767bf788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x767bf868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x767bf9a8" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x767bf9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x767bfb80"/>
        <function-ref name="source" scoped="" ref="0x767bfc60"/>
        <function-ref name="address" scoped="" ref="0x767bfd40"/>
        <function-ref name="destination" scoped="" ref="0x767bfe20"/>
        <function-ref name="setSource" scoped="" ref="0x767bff00"/>
        <function-ref name="setDestination" scoped="" ref="0x75d3f010"/>
        <function-ref name="type" scoped="" ref="0x75d3f0f0"/>
        <function-ref name="setType" scoped="" ref="0x75d3f1d0"/>
        <function-ref name="isForMe" scoped="" ref="0x75d3f2b0"/>
        <function-ref name="setGroup" scoped="" ref="0x75d3f390"/>
        <function-ref name="localGroup" scoped="" ref="0x75d3f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x75d3f5d0" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x75d3f5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x75d3f7a8"/>
        <function-ref name="noAck" scoped="" ref="0x75d3f888"/>
        <function-ref name="wasAcked" scoped="" ref="0x75d3f968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x755e2080" loc="6:../../../tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x755e2080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x755e2258"/>
        <function-ref name="getPayload" scoped="" ref="0x755e2338"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x755e2418"/>
        <function-ref name="cancel" scoped="" ref="0x755e24f8"/>
        <function-ref name="sendDone" scoped="" ref="0x755e25d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x755e2718" loc="7:../../../tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x755e2718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x755e28f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x755e29d0"/>
        <function-ref name="getPayload" scoped="" ref="0x755e2ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x755e2b90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x755e2c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x755e2db0" loc="8:../../../tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x755e2db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x755e1010"/>
        <function-ref name="source" scoped="" ref="0x755e10f0"/>
        <function-ref name="address" scoped="" ref="0x755e11d0"/>
        <function-ref name="destination" scoped="" ref="0x755e12b0"/>
        <function-ref name="setSource" scoped="" ref="0x755e1390"/>
        <function-ref name="setDestination" scoped="" ref="0x755e1470"/>
        <function-ref name="type" scoped="" ref="0x755e1550"/>
        <function-ref name="setType" scoped="" ref="0x755e1630"/>
        <function-ref name="isForMe" scoped="" ref="0x755e1710"/>
        <function-ref name="setGroup" scoped="" ref="0x755e17f0"/>
        <function-ref name="localGroup" scoped="" ref="0x755e18d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x755e1a30" loc="9:../../../tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x755e1a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x755e1c08"/>
        <function-ref name="noAck" scoped="" ref="0x755e1ce8"/>
        <function-ref name="wasAcked" scoped="" ref="0x755e1dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x755deb68" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x755deb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x755ded40"/>
        <function-ref name="getPayload" scoped="" ref="0x755dee20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x755def00"/>
        <function-ref name="cancel" scoped="" ref="0x755da010"/>
        <function-ref name="sendDone" scoped="" ref="0x755da0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x755da230" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x755da230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x755da408"/>
        <function-ref name="payloadLength" scoped="" ref="0x755da4e8"/>
        <function-ref name="getPayload" scoped="" ref="0x755da5c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x755da6a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x755da788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x755da8c8" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x755da8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x755daaa0"/>
        <function-ref name="source" scoped="" ref="0x755dab80"/>
        <function-ref name="address" scoped="" ref="0x755dac60"/>
        <function-ref name="destination" scoped="" ref="0x755dad40"/>
        <function-ref name="setSource" scoped="" ref="0x755dae20"/>
        <function-ref name="setDestination" scoped="" ref="0x755daf00"/>
        <function-ref name="type" scoped="" ref="0x755d9010"/>
        <function-ref name="setType" scoped="" ref="0x755d90f0"/>
        <function-ref name="isForMe" scoped="" ref="0x755d91d0"/>
        <function-ref name="setGroup" scoped="" ref="0x755d92b0"/>
        <function-ref name="localGroup" scoped="" ref="0x755d9390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x755d94f0" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x755d94f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x755d96c8"/>
        <function-ref name="noAck" scoped="" ref="0x755d97a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x755d9888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x755cf5b8" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x755cf5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x755cf790"/>
        <function-ref name="getPayload" scoped="" ref="0x755cf870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x755cf950"/>
        <function-ref name="cancel" scoped="" ref="0x755cfa30"/>
        <function-ref name="sendDone" scoped="" ref="0x755cfb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x755cfc80" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x755cfc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x755cfe58"/>
        <function-ref name="getPayload" scoped="" ref="0x755ce010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x755ce0f0"/>
        <function-ref name="cancel" scoped="" ref="0x755ce1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x755ce2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x755ce3f0" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x755ce3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x755ce5c8"/>
        <function-ref name="source" scoped="" ref="0x755ce6a8"/>
        <function-ref name="address" scoped="" ref="0x755ce788"/>
        <function-ref name="destination" scoped="" ref="0x755ce868"/>
        <function-ref name="setSource" scoped="" ref="0x755ce948"/>
        <function-ref name="setDestination" scoped="" ref="0x755cea28"/>
        <function-ref name="type" scoped="" ref="0x755ceb08"/>
        <function-ref name="setType" scoped="" ref="0x755cebe8"/>
        <function-ref name="isForMe" scoped="" ref="0x755cecc8"/>
        <function-ref name="setGroup" scoped="" ref="0x755ceda8"/>
        <function-ref name="localGroup" scoped="" ref="0x755cee88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x76799678" loc="43:../../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x76799678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x76799850"/>
        <function-ref name="getPayload" scoped="" ref="0x76799930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x76799a10"/>
        <function-ref name="cancel" scoped="" ref="0x76799af0"/>
        <function-ref name="sendDone" scoped="" ref="0x76799bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7676c0a8" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7676c0a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7676c290"/>
        <function-ref name="getPayload" scoped="" ref="0x7676c370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7676c450"/>
        <function-ref name="cancel" scoped="" ref="0x7676c530"/>
        <function-ref name="sendDone" scoped="" ref="0x7676c610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x76794908" loc="46:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x76794908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x76794af0"/>
        <function-ref name="getPayload" scoped="" ref="0x76794bd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x76794cb0"/>
        <function-ref name="cancel" scoped="" ref="0x76794d90"/>
        <function-ref name="sendDone" scoped="" ref="0x76794e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7676b3f0" loc="50:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7676b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7676b5c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7676b6a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7676b788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7676b868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7676b948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7676bac8" loc="169:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7676bac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7676bca0"/>
        <function-ref name="runTask" scoped="" ref="0x7676bd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7676bf00" loc="126:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7676bf00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7676a0f0"/>
        <function-ref name="runTask" scoped="" ref="0x7676a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7676c750" loc="49:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7676c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7676c928"/>
        <function-ref name="source" scoped="" ref="0x7676ca08"/>
        <function-ref name="address" scoped="" ref="0x7676cae8"/>
        <function-ref name="destination" scoped="" ref="0x7676cbc8"/>
        <function-ref name="setSource" scoped="" ref="0x7676cca8"/>
        <function-ref name="setDestination" scoped="" ref="0x7676cd88"/>
        <function-ref name="type" scoped="" ref="0x7676ce68"/>
        <function-ref name="setType" scoped="" ref="0x7676b010"/>
        <function-ref name="isForMe" scoped="" ref="0x7676b0f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7676b1d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7676b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x767672e0" loc="61:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x767672e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x767674b8"/>
        <function-ref name="stopDone" scoped="" ref="0x76767598"/>
        <function-ref name="start" scoped="" ref="0x76767678"/>
        <function-ref name="stop" scoped="" ref="0x76767758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x76767bb8" loc="63:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x76767bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x76767d90"/>
        <function-ref name="getPayload" scoped="" ref="0x76767e70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x76766010"/>
        <function-ref name="cancel" scoped="" ref="0x767660f0"/>
        <function-ref name="sendDone" scoped="" ref="0x767661d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x76766cd0" loc="65:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x76766cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x76766ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x76764040" loc="67:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x76764040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76764218"/>
        <function-ref name="payloadLength" scoped="" ref="0x767642f8"/>
        <function-ref name="getPayload" scoped="" ref="0x767643d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x767644b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x76764598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7675dd40" loc="70:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7675dd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x76762860"/>
        <function-ref name="clear" scoped="" ref="0x76762c18"/>
        <function-ref name="isValid" scoped="" ref="0x767624a8"/>
        <function-ref name="set" scoped="" ref="0x76761010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x76755570" loc="72:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x76755570"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x76755748"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x76755828"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x76755908"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x767559e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x76766638" loc="64:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x76766638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x76766810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x767633f8" loc="69:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x767633f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x767635d0"/>
        <function-ref name="noAck" scoped="" ref="0x767636b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x76763790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x76764730" loc="68:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x76764730"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x76764908"/>
        <function-ref name="source" scoped="" ref="0x767649e8"/>
        <function-ref name="address" scoped="" ref="0x76764ac8"/>
        <function-ref name="destination" scoped="" ref="0x76764ba8"/>
        <function-ref name="setSource" scoped="" ref="0x76764c88"/>
        <function-ref name="setDestination" scoped="" ref="0x76764d68"/>
        <function-ref name="type" scoped="" ref="0x76764e48"/>
        <function-ref name="setType" scoped="" ref="0x76764f28"/>
        <function-ref name="isForMe" scoped="" ref="0x76763018"/>
        <function-ref name="setGroup" scoped="" ref="0x767630f8"/>
        <function-ref name="localGroup" scoped="" ref="0x767631d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x76761750" loc="71:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x76761750"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7675b288"/>
        <function-ref name="clear" scoped="" ref="0x7675b640"/>
        <function-ref name="isValid" scoped="" ref="0x76761ea0"/>
        <function-ref name="set" scoped="" ref="0x7675b9f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7674c310" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7674c310"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7674c4e8"/>
        <function-ref name="stopDone" scoped="" ref="0x7674c5c8"/>
        <function-ref name="start" scoped="" ref="0x7674c6a8"/>
        <function-ref name="stop" scoped="" ref="0x7674c788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7673dda8" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7673dda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x76747010"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x767470f0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x767471d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x767472b0"/>
        <function-ref name="setCca" scoped="" ref="0x76747390"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x76747470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x76735ab8" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x76735ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x76735d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7674ac78" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7674ac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7674ae50"/>
        <function-ref name="payloadLength" scoped="" ref="0x76749010"/>
        <function-ref name="getPayload" scoped="" ref="0x767490f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x767491d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x767492b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7674cbe8" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7674cbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7674cdc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7674cea0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7674b010"/>
        <function-ref name="cancel" scoped="" ref="0x7674b0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7674b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7674bcd0" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7674bcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7674bea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x76743570" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x76743570"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x76743748"/>
        <function-ref name="setNetwork" scoped="" ref="0x76743828"/>
        <function-ref name="getRssi" scoped="" ref="0x76743908"/>
        <function-ref name="getNetwork" scoped="" ref="0x767439e8"/>
        <function-ref name="getPower" scoped="" ref="0x76743ac8"/>
        <function-ref name="getLqi" scoped="" ref="0x76743ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x76747660" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x76747660"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x76747838"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x76747918"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x767479f8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x76747ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7674b638" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7674b638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7674b810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x76743dc8" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x76743dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x76748010"/>
        <function-ref name="noAck" scoped="" ref="0x767480f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x767481d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7673c010" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7673c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7673c1e8"/>
        <function-ref name="setRetries" scoped="" ref="0x7673c2c8"/>
        <function-ref name="getRetries" scoped="" ref="0x7673c3a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7673c488"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7673c568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7674a060" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7674a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7674a238"/>
        <function-ref name="source" scoped="" ref="0x7674a318"/>
        <function-ref name="address" scoped="" ref="0x7674a3f8"/>
        <function-ref name="destination" scoped="" ref="0x7674a4d8"/>
        <function-ref name="setSource" scoped="" ref="0x7674a5b8"/>
        <function-ref name="setDestination" scoped="" ref="0x7674a698"/>
        <function-ref name="type" scoped="" ref="0x7674a778"/>
        <function-ref name="setType" scoped="" ref="0x7674a858"/>
        <function-ref name="isForMe" scoped="" ref="0x7674a938"/>
        <function-ref name="setGroup" scoped="" ref="0x7674aa18"/>
        <function-ref name="localGroup" scoped="" ref="0x7674aaf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x76740230" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x76740230"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x76740408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7673bcd0" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7673bcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7673bea8"/>
        <function-ref name="stopDone" scoped="" ref="0x76733010"/>
        <function-ref name="start" scoped="" ref="0x767330f0"/>
        <function-ref name="stop" scoped="" ref="0x767331d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7672da60" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7672da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7672dc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7672c498" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7672c498"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7672c670"/>
        <function-ref name="setRetries" scoped="" ref="0x7672c750"/>
        <function-ref name="getRetries" scoped="" ref="0x7672c830"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7672c910"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7672c9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x76731c08" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x76731c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x76731de0"/>
        <function-ref name="setNetwork" scoped="" ref="0x76731ec0"/>
        <function-ref name="getRssi" scoped="" ref="0x7672d010"/>
        <function-ref name="getNetwork" scoped="" ref="0x7672d0f0"/>
        <function-ref name="getPower" scoped="" ref="0x7672d1d0"/>
        <function-ref name="getLqi" scoped="" ref="0x7672d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x767310e8" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x767310e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x767312c0"/>
        <function-ref name="getPayload" scoped="" ref="0x767313a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x76731480"/>
        <function-ref name="cancel" scoped="" ref="0x76731560"/>
        <function-ref name="sendDone" scoped="" ref="0x76731640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7672de28" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7672de28"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7672c050"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7672c130"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7672c210"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7672c2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x767325a8" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x767325a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x76732780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7672d4d0" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7672d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7672d6a8"/>
        <function-ref name="noAck" scoped="" ref="0x7672d788"/>
        <function-ref name="wasAcked" scoped="" ref="0x7672d868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7672e6c8" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7672e6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7672e8a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7672e980"/>
        <function-ref name="request" scoped="" ref="0x7672ea60"/>
        <function-ref name="granted" scoped="" ref="0x7672eb40"/>
        <function-ref name="isOwner" scoped="" ref="0x7672ec20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7672ee08" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7672ee08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x76732010"/>
        <function-ref name="getPayload" scoped="" ref="0x767320f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x767321d0"/>
        <function-ref name="cancel" scoped="" ref="0x767322b0"/>
        <function-ref name="sendDone" scoped="" ref="0x76732390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x76732988" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x76732988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76732b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x76732c40"/>
        <function-ref name="getPayload" scoped="" ref="0x76732d20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x76732e00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x76732ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x76731870" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x76731870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x76731a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x76729200" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x76729200"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x767293d8"/>
        <function-ref name="stopDone" scoped="" ref="0x767294b8"/>
        <function-ref name="start" scoped="" ref="0x76729598"/>
        <function-ref name="stop" scoped="" ref="0x76729678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x767282d0" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x767282d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x767284a8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x76728588"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x76728668"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x76728748"/>
        <function-ref name="setCca" scoped="" ref="0x76728828"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x76728908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x76729808" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x76729808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x767299e0"/>
        <function-ref name="getPayload" scoped="" ref="0x76729ac0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x76729ba0"/>
        <function-ref name="cancel" scoped="" ref="0x76729c80"/>
        <function-ref name="sendDone" scoped="" ref="0x76729d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x76729f08" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x76729f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x767280f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x76725250" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x76725250"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x76725428"/>
        <function-ref name="stopDone" scoped="" ref="0x76725508"/>
        <function-ref name="start" scoped="" ref="0x767255e8"/>
        <function-ref name="stop" scoped="" ref="0x767256c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x76724010" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x76724010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x767241e8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x767242c8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x767243a8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x76724488"/>
        <function-ref name="setCca" scoped="" ref="0x76724568"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x76724648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x76721278" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x76721278"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x76721450"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x76721530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x76721610"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x767216f0"/>
        <function-ref name="setCca" scoped="" ref="0x767217d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x767218b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7671d810" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7671d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7671d9e8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7671dac8"/>
        <function-ref name="getRssi" scoped="" ref="0x7671dba8"/>
        <function-ref name="getNetwork" scoped="" ref="0x7671dc88"/>
        <function-ref name="getPower" scoped="" ref="0x7671dd68"/>
        <function-ref name="getLqi" scoped="" ref="0x7671de48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x767199f0" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x767199f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x76719bc8"/>
        <function-ref name="cancel" scoped="" ref="0x76719ca8"/>
        <function-ref name="modify" scoped="" ref="0x76719d88"/>
        <function-ref name="sendDone" scoped="" ref="0x76719e68"/>
        <function-ref name="resend" scoped="" ref="0x76721010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x76725858" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x76725858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x76725a30"/>
        <function-ref name="getPayload" scoped="" ref="0x76725b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x76725bf0"/>
        <function-ref name="cancel" scoped="" ref="0x76725cd0"/>
        <function-ref name="sendDone" scoped="" ref="0x76725db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x767176e0" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x767176e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x767178b8"/>
        <function-ref name="rand32" scoped="" ref="0x76717998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x76722420" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x76722420"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x767225f8"/>
        <function-ref name="stop" scoped="" ref="0x767226d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x76716010" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x76716010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x767161e8"/>
        <function-ref name="getHeader" scoped="" ref="0x767162c8"/>
        <function-ref name="getMetadata" scoped="" ref="0x767163a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7671e9c0" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7671e9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7671eb98"/>
        <function-ref name="rfOff" scoped="" ref="0x7671ec78"/>
        <function-ref name="rxOn" scoped="" ref="0x7671ed58"/>
        <function-ref name="startVReg" scoped="" ref="0x7671ee38"/>
        <function-ref name="stopVReg" scoped="" ref="0x7671ef18"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x76722010"/>
        <function-ref name="stopOscillator" scoped="" ref="0x767220f0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x767221d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x76717b28" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x76717b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x76717d00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x76717de0"/>
        <function-ref name="led1On" scoped="" ref="0x76717ec0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7671d010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7671d0f0"/>
        <function-ref name="get" scoped="" ref="0x7671d1d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7671d2b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7671d630"/>
        <function-ref name="set" scoped="" ref="0x7671d390"/>
        <function-ref name="led0On" scoped="" ref="0x7671d470"/>
        <function-ref name="led2On" scoped="" ref="0x7671d550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x76724800" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x76724800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x767249d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x76724ab8"/>
        <function-ref name="request" scoped="" ref="0x76724b98"/>
        <function-ref name="granted" scoped="" ref="0x76724c78"/>
        <function-ref name="isOwner" scoped="" ref="0x76724d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x76710838" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x76710838"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x76710a90"/>
        <function-ref name="toIdle" scoped="" ref="0x76710b70"/>
        <function-ref name="isState" scoped="" ref="0x76710c50"/>
        <function-ref name="isIdle" scoped="" ref="0x76710d30"/>
        <function-ref name="requestState" scoped="" ref="0x76710e10"/>
        <function-ref name="forceState" scoped="" ref="0x76710ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7670ea00" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7670ea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7670ebd8"/>
        <function-ref name="runTask" scoped="" ref="0x7670ecb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7670e1f0" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7670e1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7670e3c8"/>
        <function-ref name="runTask" scoped="" ref="0x7670e4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x76712998" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x76712998"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x76712b70"/>
        <function-ref name="runTask" scoped="" ref="0x76712c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x766dadf8" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x766dadf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x766e1010"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x766e10f0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x766e11d0"/>
        <function-ref name="syncDone" scoped="" ref="0x766e12b0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x766e1390"/>
        <function-ref name="setShortAddr" scoped="" ref="0x766e1470"/>
        <function-ref name="setChannel" scoped="" ref="0x766e1550"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x766e1630"/>
        <function-ref name="setPanAddr" scoped="" ref="0x766e1710"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x766e17f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x766e18d0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x766e19b0"/>
        <function-ref name="sync" scoped="" ref="0x766e1a90"/>
        <function-ref name="getChannel" scoped="" ref="0x766e1bf0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x766e1cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x766e09d0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x766e09d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x766d8010"/>
        <function-ref name="readDone" scoped="" ref="0x766d8268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x766e1ea0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x766e1ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x766e00c0"/>
        <function-ref name="rfOff" scoped="" ref="0x766e01a0"/>
        <function-ref name="rxOn" scoped="" ref="0x766e0280"/>
        <function-ref name="startVReg" scoped="" ref="0x766e0360"/>
        <function-ref name="stopVReg" scoped="" ref="0x766e0440"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x766e0520"/>
        <function-ref name="stopOscillator" scoped="" ref="0x766e0600"/>
        <function-ref name="startVRegDone" scoped="" ref="0x766e06e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x766e5ba8" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x766e5ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x766e5d80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x766e5e60"/>
        <function-ref name="request" scoped="" ref="0x766e2010"/>
        <function-ref name="granted" scoped="" ref="0x766e20f0"/>
        <function-ref name="isOwner" scoped="" ref="0x766e21d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x766d5900" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x766d5900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x766d5ad8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x766d5bb8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x766d5c98"/>
        <function-ref name="syncDone" scoped="" ref="0x766d5d78"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x766d5e58"/>
        <function-ref name="setShortAddr" scoped="" ref="0x766d4010"/>
        <function-ref name="setChannel" scoped="" ref="0x766d40f0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x766d41d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x766d42b0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x766d4390"/>
        <function-ref name="getExtAddr" scoped="" ref="0x766d4470"/>
        <function-ref name="getShortAddr" scoped="" ref="0x766d4550"/>
        <function-ref name="sync" scoped="" ref="0x766d4630"/>
        <function-ref name="getChannel" scoped="" ref="0x766d4790"/>
        <function-ref name="getPanAddr" scoped="" ref="0x766d4870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x766bb010" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x766bb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x766bb1e8"/>
        <function-ref name="write" scoped="" ref="0x766bb2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x766d29a8" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x766d29a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x766d2b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x766d11c8" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x766d11c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x766d0690"/>
        <function-ref name="fired" scoped="" ref="0x766d1e30"/>
        <function-ref name="startAt" scoped="" ref="0x766d0350"/>
        <function-ref name="isRunning" scoped="" ref="0x766d00d8"/>
        <function-ref name="getAlarm" scoped="" ref="0x766d0908"/>
        <function-ref name="start" scoped="" ref="0x766d1918"/>
        <function-ref name="stop" scoped="" ref="0x766d1bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x766c45c0" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x766c45c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x766c4798"/>
        <function-ref name="write" scoped="" ref="0x766c4878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x766ca840" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x766ca840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766caa18"/>
        <function-ref name="isInput" scoped="" ref="0x766caaf8"/>
        <function-ref name="toggle" scoped="" ref="0x766cabd8"/>
        <function-ref name="isOutput" scoped="" ref="0x766cacb8"/>
        <function-ref name="get" scoped="" ref="0x766cad98"/>
        <function-ref name="makeOutput" scoped="" ref="0x766cae78"/>
        <function-ref name="set" scoped="" ref="0x766c8010"/>
        <function-ref name="clr" scoped="" ref="0x766c80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x766d35a0" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x766d35a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x766d3bc8"/>
        <function-ref name="readDone" scoped="" ref="0x766d3e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x766b0328" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x766b0328"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x766b0500"/>
        <function-ref name="runTask" scoped="" ref="0x766b05e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x766bb508" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x766bb508"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x766bb6e0"/>
        <function-ref name="write" scoped="" ref="0x766bb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x766bba10" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x766bba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x766bbbe8"/>
        <function-ref name="write" scoped="" ref="0x766bbcc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x766bab68" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x766bab68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x766bad40"/>
        <function-ref name="write" scoped="" ref="0x766bae20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x766bf350" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x766bf350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x766bf528"/>
        <function-ref name="changed" scoped="" ref="0x766bf608"/>
        <function-ref name="amGroup" scoped="" ref="0x766bf6e8"/>
        <function-ref name="setAddress" scoped="" ref="0x766bf7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x766c6d80" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x766c6d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766ca010"/>
        <function-ref name="isInput" scoped="" ref="0x766ca0f0"/>
        <function-ref name="toggle" scoped="" ref="0x766ca1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x766ca2b0"/>
        <function-ref name="get" scoped="" ref="0x766ca390"/>
        <function-ref name="makeOutput" scoped="" ref="0x766ca470"/>
        <function-ref name="set" scoped="" ref="0x766ca550"/>
        <function-ref name="clr" scoped="" ref="0x766ca630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x766b8158" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x766b8158"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x766b8430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x766c8300" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x766c8300"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766c84d8"/>
        <function-ref name="isInput" scoped="" ref="0x766c85b8"/>
        <function-ref name="toggle" scoped="" ref="0x766c8698"/>
        <function-ref name="isOutput" scoped="" ref="0x766c8778"/>
        <function-ref name="get" scoped="" ref="0x766c8858"/>
        <function-ref name="makeOutput" scoped="" ref="0x766c8938"/>
        <function-ref name="set" scoped="" ref="0x766c8a18"/>
        <function-ref name="clr" scoped="" ref="0x766c8af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x766d8d70" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x766d8d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x766d5010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x766c4ae0" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x766c4ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x766c4cb8"/>
        <function-ref name="write" scoped="" ref="0x766c4d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x766b8678" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x766b8678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x766b8850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x766b8a98" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x766b8a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x766b8c70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x766b8d50"/>
        <function-ref name="request" scoped="" ref="0x766b8e30"/>
        <function-ref name="granted" scoped="" ref="0x766b8f10"/>
        <function-ref name="isOwner" scoped="" ref="0x766b7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x766b7a18" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x766b7a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x766b7bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x766b7cd0"/>
        <function-ref name="request" scoped="" ref="0x766b7db0"/>
        <function-ref name="granted" scoped="" ref="0x766b7e90"/>
        <function-ref name="isOwner" scoped="" ref="0x766b6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x766d4a40" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x766d4a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x766d4c18"/>
        <function-ref name="rfOff" scoped="" ref="0x766d4cf8"/>
        <function-ref name="rxOn" scoped="" ref="0x766d4dd8"/>
        <function-ref name="startVReg" scoped="" ref="0x766d4eb8"/>
        <function-ref name="stopVReg" scoped="" ref="0x766d3010"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x766d30f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x766d31d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x766d32b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x766c40a0" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x766c40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x766c4278"/>
        <function-ref name="write" scoped="" ref="0x766c4358"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x766ba660" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x766ba660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x766ba838"/>
        <function-ref name="write" scoped="" ref="0x766ba918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x766b98b8" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x766b98b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x766b9a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x766b61a0" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x766b61a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x766b6378"/>
        <function-ref name="led0Toggle" scoped="" ref="0x766b6458"/>
        <function-ref name="led1On" scoped="" ref="0x766b6538"/>
        <function-ref name="led1Toggle" scoped="" ref="0x766b6618"/>
        <function-ref name="led2Toggle" scoped="" ref="0x766b66f8"/>
        <function-ref name="get" scoped="" ref="0x766b67d8"/>
        <function-ref name="led1Off" scoped="" ref="0x766b68b8"/>
        <function-ref name="led2Off" scoped="" ref="0x766b6c38"/>
        <function-ref name="set" scoped="" ref="0x766b6998"/>
        <function-ref name="led0On" scoped="" ref="0x766b6a78"/>
        <function-ref name="led2On" scoped="" ref="0x766b6b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x766b1b20" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x766b1b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x766b1cf8"/>
        <function-ref name="runTask" scoped="" ref="0x766b1dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x766d51c8" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x766d51c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x766d53a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x766d5480"/>
        <function-ref name="request" scoped="" ref="0x766d5560"/>
        <function-ref name="granted" scoped="" ref="0x766d5640"/>
        <function-ref name="isOwner" scoped="" ref="0x766d5720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x766bdee8" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x766bdee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x766c50e0"/>
        <function-ref name="write" scoped="" ref="0x766c51c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x766bd998" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x766bd998"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x766bdbf0"/>
        <function-ref name="write" scoped="" ref="0x766bdcd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x766c13e0" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x766c13e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x766c15b8"/>
        <function-ref name="disable" scoped="" ref="0x766c1698"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x766c1778"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x766c1858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x766b7268" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x766b7268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x766b7440"/>
        <function-ref name="immediateRequest" scoped="" ref="0x766b7520"/>
        <function-ref name="request" scoped="" ref="0x766b7600"/>
        <function-ref name="granted" scoped="" ref="0x766b76e0"/>
        <function-ref name="isOwner" scoped="" ref="0x766b77c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x766b9cd0" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x766b9cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x766b9ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7666b4b0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7666b4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7666b688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7666ba78" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7666ba78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x76667010"/>
        <function-ref name="fired" scoped="" ref="0x76668718"/>
        <function-ref name="startAt" scoped="" ref="0x76668c08"/>
        <function-ref name="isRunning" scoped="" ref="0x76668990"/>
        <function-ref name="getAlarm" scoped="" ref="0x76667288"/>
        <function-ref name="start" scoped="" ref="0x76668200"/>
        <function-ref name="stop" scoped="" ref="0x766684a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x76666808" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x76666808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x766669e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x76666c80" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x76666c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x765da150"/>
        <function-ref name="fired" scoped="" ref="0x76665908"/>
        <function-ref name="startAt" scoped="" ref="0x76665df8"/>
        <function-ref name="isRunning" scoped="" ref="0x76665b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x765da3c8"/>
        <function-ref name="start" scoped="" ref="0x766653f0"/>
        <function-ref name="stop" scoped="" ref="0x76665690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x75597360" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x75597360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75596840"/>
        <function-ref name="fired" scoped="" ref="0x75596010"/>
        <function-ref name="startAt" scoped="" ref="0x75596500"/>
        <function-ref name="isRunning" scoped="" ref="0x75596288"/>
        <function-ref name="getAlarm" scoped="" ref="0x75596ab8"/>
        <function-ref name="start" scoped="" ref="0x75597ab0"/>
        <function-ref name="stop" scoped="" ref="0x75597d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75598ef0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75598ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x755970e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x75593468" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x75593468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75592940"/>
        <function-ref name="fired" scoped="" ref="0x75592110"/>
        <function-ref name="startAt" scoped="" ref="0x75592600"/>
        <function-ref name="isRunning" scoped="" ref="0x75592388"/>
        <function-ref name="getAlarm" scoped="" ref="0x75592bb8"/>
        <function-ref name="start" scoped="" ref="0x75593bb8"/>
        <function-ref name="stop" scoped="" ref="0x75593e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75593010" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75593010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x755931e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7557f410" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7557f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7557f5e8"/>
        <function-ref name="setEvent" scoped="" ref="0x7557f6c8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7557f7a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7557f888"/>
        <function-ref name="fired" scoped="" ref="0x7557f968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x75581d50" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x75581d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75581f28"/>
        <function-ref name="setClockSource" scoped="" ref="0x75580018"/>
        <function-ref name="enableEvents" scoped="" ref="0x755800f8"/>
        <function-ref name="get" scoped="" ref="0x755801d8"/>
        <function-ref name="disableEvents" scoped="" ref="0x755802b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x75580398"/>
        <function-ref name="getMode" scoped="" ref="0x75580478"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x75580558"/>
        <function-ref name="overflow" scoped="" ref="0x75580638"/>
        <function-ref name="setMode" scoped="" ref="0x75580718"/>
        <function-ref name="setInputDivider" scoped="" ref="0x755807f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x75580958" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x75580958"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x75580b30"/>
        <function-ref name="getControl" scoped="" ref="0x75580c10"/>
        <function-ref name="enableEvents" scoped="" ref="0x75580cf0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x75580dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x75580eb0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7557f010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7557f0f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7557f1d0"/>
        <function-ref name="setControl" scoped="" ref="0x7557f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7664e698" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7664e698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7664e870"/>
        <function-ref name="setEvent" scoped="" ref="0x7664e950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7664ea30"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7664eb10"/>
        <function-ref name="fired" scoped="" ref="0x7664ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x766538e8" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x766538e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76653ac0"/>
        <function-ref name="setClockSource" scoped="" ref="0x76653ba0"/>
        <function-ref name="enableEvents" scoped="" ref="0x76653c80"/>
        <function-ref name="get" scoped="" ref="0x76653d60"/>
        <function-ref name="disableEvents" scoped="" ref="0x76653e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76653f20"/>
        <function-ref name="getMode" scoped="" ref="0x76650018"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x766500f8"/>
        <function-ref name="overflow" scoped="" ref="0x766501d8"/>
        <function-ref name="setMode" scoped="" ref="0x766502b8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x76650398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x76650890" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x76650890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x76650a68"/>
        <function-ref name="getControl" scoped="" ref="0x76650b48"/>
        <function-ref name="enableEvents" scoped="" ref="0x76650c28"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x76650d08"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x76650de8"/>
        <function-ref name="disableEvents" scoped="" ref="0x76650ec8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7664e010"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7664e0f0"/>
        <function-ref name="setControl" scoped="" ref="0x7664e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7557ad68" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7557ad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x75579010"/>
        <function-ref name="setEvent" scoped="" ref="0x755790f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x755791d0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x755792b0"/>
        <function-ref name="fired" scoped="" ref="0x75579390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7557b6b0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7557b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7557b888"/>
        <function-ref name="setClockSource" scoped="" ref="0x7557b968"/>
        <function-ref name="enableEvents" scoped="" ref="0x7557ba48"/>
        <function-ref name="get" scoped="" ref="0x7557bb28"/>
        <function-ref name="disableEvents" scoped="" ref="0x7557bc08"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7557bce8"/>
        <function-ref name="getMode" scoped="" ref="0x7557bdc8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7557bea8"/>
        <function-ref name="overflow" scoped="" ref="0x7557a010"/>
        <function-ref name="setMode" scoped="" ref="0x7557a0f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7557a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7557ed40" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7557ed40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7557b208"/>
        <function-ref name="fired" scoped="" ref="0x7557d9c0"/>
        <function-ref name="startAt" scoped="" ref="0x7557deb0"/>
        <function-ref name="isRunning" scoped="" ref="0x7557dc38"/>
        <function-ref name="getAlarm" scoped="" ref="0x7557b480"/>
        <function-ref name="start" scoped="" ref="0x7557d4a8"/>
        <function-ref name="stop" scoped="" ref="0x7557d748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7557e8c8" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7557e8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7557eaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7557a330" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7557a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7557a508"/>
        <function-ref name="getControl" scoped="" ref="0x7557a5e8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7557a6c8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7557a7a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7557a888"/>
        <function-ref name="disableEvents" scoped="" ref="0x7557a968"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7557aa48"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7557ab28"/>
        <function-ref name="setControl" scoped="" ref="0x7557ac08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7661f260" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7661f260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7661f9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7661fea0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7661fc28"/>
        <function-ref name="overflow" scoped="" ref="0x76623130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x76623d30" loc="43:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x76623d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7661d498"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7661d988"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7661d710"/>
        <function-ref name="overflow" scoped="" ref="0x7661dc00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7661aca0" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7661aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7661ae78"/>
        <function-ref name="setClockSource" scoped="" ref="0x76612010"/>
        <function-ref name="enableEvents" scoped="" ref="0x766120f0"/>
        <function-ref name="get" scoped="" ref="0x766121d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x766122b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76612390"/>
        <function-ref name="getMode" scoped="" ref="0x76612470"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76612550"/>
        <function-ref name="overflow" scoped="" ref="0x76612630"/>
        <function-ref name="setMode" scoped="" ref="0x76612710"/>
        <function-ref name="setInputDivider" scoped="" ref="0x766127f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7661bae8" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7661bae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7661a308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7661a7f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7661a580"/>
        <function-ref name="overflow" scoped="" ref="0x7661aa70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x76600b40" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x76600b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x765ff308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x765ff7f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x765ff580"/>
        <function-ref name="overflow" scoped="" ref="0x765ffa70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7661e908" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7661e908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x76600068"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76600558"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x766002e0"/>
        <function-ref name="overflow" scoped="" ref="0x766007d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x75591e88" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x75591e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75587388"/>
        <function-ref name="fired" scoped="" ref="0x75589b18"/>
        <function-ref name="startAt" scoped="" ref="0x75587048"/>
        <function-ref name="isRunning" scoped="" ref="0x75589d90"/>
        <function-ref name="getAlarm" scoped="" ref="0x75587600"/>
        <function-ref name="start" scoped="" ref="0x75589600"/>
        <function-ref name="stop" scoped="" ref="0x755898a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x75586b90" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x75586b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75584068"/>
        <function-ref name="fired" scoped="" ref="0x75585820"/>
        <function-ref name="startAt" scoped="" ref="0x75585d10"/>
        <function-ref name="isRunning" scoped="" ref="0x75585a98"/>
        <function-ref name="getAlarm" scoped="" ref="0x755842e0"/>
        <function-ref name="start" scoped="" ref="0x75585308"/>
        <function-ref name="stop" scoped="" ref="0x755855a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x75587950" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x75587950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x755860b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x755865a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x75586330"/>
        <function-ref name="overflow" scoped="" ref="0x75586820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x765d74c0" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x765d74c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765d7698"/>
        <function-ref name="isInput" scoped="" ref="0x765d7778"/>
        <function-ref name="toggle" scoped="" ref="0x765d7858"/>
        <function-ref name="isOutput" scoped="" ref="0x765d7938"/>
        <function-ref name="get" scoped="" ref="0x765d7a18"/>
        <function-ref name="makeOutput" scoped="" ref="0x765d7af8"/>
        <function-ref name="set" scoped="" ref="0x765d7bd8"/>
        <function-ref name="clr" scoped="" ref="0x765d7cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x765d7ed0" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x765d7ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765d60c0"/>
        <function-ref name="isInput" scoped="" ref="0x765d61a0"/>
        <function-ref name="toggle" scoped="" ref="0x765d6280"/>
        <function-ref name="isOutput" scoped="" ref="0x765d6360"/>
        <function-ref name="get" scoped="" ref="0x765d6440"/>
        <function-ref name="makeOutput" scoped="" ref="0x765d6520"/>
        <function-ref name="set" scoped="" ref="0x765d6600"/>
        <function-ref name="clr" scoped="" ref="0x765d66e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x765d68f0" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x765d68f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765d6ac8"/>
        <function-ref name="isInput" scoped="" ref="0x765d6ba8"/>
        <function-ref name="toggle" scoped="" ref="0x765d6c88"/>
        <function-ref name="isOutput" scoped="" ref="0x765d6d68"/>
        <function-ref name="get" scoped="" ref="0x765d6e48"/>
        <function-ref name="makeOutput" scoped="" ref="0x765d6f28"/>
        <function-ref name="set" scoped="" ref="0x765d5018"/>
        <function-ref name="clr" scoped="" ref="0x765d50f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x765d8a08" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x765d8a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765d8be0"/>
        <function-ref name="isInput" scoped="" ref="0x765d8cc0"/>
        <function-ref name="toggle" scoped="" ref="0x765d8da0"/>
        <function-ref name="isOutput" scoped="" ref="0x765d8e80"/>
        <function-ref name="get" scoped="" ref="0x765d7010"/>
        <function-ref name="makeOutput" scoped="" ref="0x765d70f0"/>
        <function-ref name="set" scoped="" ref="0x765d71d0"/>
        <function-ref name="clr" scoped="" ref="0x765d72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x765d5d00" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x765d5d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765d5ed8"/>
        <function-ref name="isInput" scoped="" ref="0x765d4010"/>
        <function-ref name="toggle" scoped="" ref="0x765d40f0"/>
        <function-ref name="isOutput" scoped="" ref="0x765d41d0"/>
        <function-ref name="get" scoped="" ref="0x765d42b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x765d4390"/>
        <function-ref name="set" scoped="" ref="0x765d4470"/>
        <function-ref name="clr" scoped="" ref="0x765d4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x765d8010" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x765d8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765d81e8"/>
        <function-ref name="isInput" scoped="" ref="0x765d82c8"/>
        <function-ref name="toggle" scoped="" ref="0x765d83a8"/>
        <function-ref name="isOutput" scoped="" ref="0x765d8488"/>
        <function-ref name="get" scoped="" ref="0x765d8568"/>
        <function-ref name="makeOutput" scoped="" ref="0x765d8648"/>
        <function-ref name="set" scoped="" ref="0x765d8728"/>
        <function-ref name="clr" scoped="" ref="0x765d8808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x765d52f8" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x765d52f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765d54d0"/>
        <function-ref name="isInput" scoped="" ref="0x765d55b0"/>
        <function-ref name="toggle" scoped="" ref="0x765d5690"/>
        <function-ref name="isOutput" scoped="" ref="0x765d5770"/>
        <function-ref name="get" scoped="" ref="0x765d5850"/>
        <function-ref name="makeOutput" scoped="" ref="0x765d5930"/>
        <function-ref name="set" scoped="" ref="0x765d5a10"/>
        <function-ref name="clr" scoped="" ref="0x765d5af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x765c8bc8" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x765c8bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765c8da0"/>
        <function-ref name="isInput" scoped="" ref="0x765c8e80"/>
        <function-ref name="setResistor" scoped="" ref="0x765c7010"/>
        <function-ref name="toggle" scoped="" ref="0x765c70f0"/>
        <function-ref name="isOutput" scoped="" ref="0x765c71d0"/>
        <function-ref name="getResistor" scoped="" ref="0x765c72b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x765c7390"/>
        <function-ref name="get" scoped="" ref="0x765c7470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765c7550"/>
        <function-ref name="getRaw" scoped="" ref="0x765c7630"/>
        <function-ref name="set" scoped="" ref="0x765c7710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765c77f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765c78d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765c7a30"/>
        <function-ref name="clr" scoped="" ref="0x765c7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x765bcd88" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x765bcd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765bb010"/>
        <function-ref name="isInput" scoped="" ref="0x765bb0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x765bb1d0"/>
        <function-ref name="toggle" scoped="" ref="0x765bb2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x765bb390"/>
        <function-ref name="getResistor" scoped="" ref="0x765bb470"/>
        <function-ref name="makeOutput" scoped="" ref="0x765bb550"/>
        <function-ref name="get" scoped="" ref="0x765bb630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765bb710"/>
        <function-ref name="getRaw" scoped="" ref="0x765bb7f0"/>
        <function-ref name="set" scoped="" ref="0x765bb8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765bb9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765bba90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765bbbf0"/>
        <function-ref name="clr" scoped="" ref="0x765bbcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x76593f28" loc="145:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x76593f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76592110"/>
        <function-ref name="isInput" scoped="" ref="0x765921f0"/>
        <function-ref name="setResistor" scoped="" ref="0x765922d0"/>
        <function-ref name="toggle" scoped="" ref="0x765923b0"/>
        <function-ref name="isOutput" scoped="" ref="0x76592490"/>
        <function-ref name="getResistor" scoped="" ref="0x76592570"/>
        <function-ref name="makeOutput" scoped="" ref="0x76592650"/>
        <function-ref name="get" scoped="" ref="0x76592730"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76592810"/>
        <function-ref name="getRaw" scoped="" ref="0x765928f0"/>
        <function-ref name="set" scoped="" ref="0x765929d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76592ab0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76592b90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76592cf0"/>
        <function-ref name="clr" scoped="" ref="0x76592dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7657fc98" loc="165:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7657fc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7657fe70"/>
        <function-ref name="isInput" scoped="" ref="0x7657e010"/>
        <function-ref name="setResistor" scoped="" ref="0x7657e0f0"/>
        <function-ref name="toggle" scoped="" ref="0x7657e1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7657e2b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7657e390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7657e470"/>
        <function-ref name="get" scoped="" ref="0x7657e550"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7657e630"/>
        <function-ref name="getRaw" scoped="" ref="0x7657e710"/>
        <function-ref name="set" scoped="" ref="0x7657e7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7657e8d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7657e9b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7657eb10"/>
        <function-ref name="clr" scoped="" ref="0x7657ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x76591068" loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x76591068"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76591240"/>
        <function-ref name="isInput" scoped="" ref="0x76591320"/>
        <function-ref name="setResistor" scoped="" ref="0x76591400"/>
        <function-ref name="toggle" scoped="" ref="0x765914e0"/>
        <function-ref name="isOutput" scoped="" ref="0x765915c0"/>
        <function-ref name="getResistor" scoped="" ref="0x765916a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76591780"/>
        <function-ref name="get" scoped="" ref="0x76591860"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76591940"/>
        <function-ref name="getRaw" scoped="" ref="0x76591a20"/>
        <function-ref name="set" scoped="" ref="0x76591b00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76591be0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76591cc0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76591e20"/>
        <function-ref name="clr" scoped="" ref="0x76591f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x765b9178" loc="71:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x765b9178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765b9350"/>
        <function-ref name="isInput" scoped="" ref="0x765b9430"/>
        <function-ref name="setResistor" scoped="" ref="0x765b9510"/>
        <function-ref name="toggle" scoped="" ref="0x765b95f0"/>
        <function-ref name="isOutput" scoped="" ref="0x765b96d0"/>
        <function-ref name="getResistor" scoped="" ref="0x765b97b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x765b9890"/>
        <function-ref name="get" scoped="" ref="0x765b9970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765b9a50"/>
        <function-ref name="getRaw" scoped="" ref="0x765b9b30"/>
        <function-ref name="set" scoped="" ref="0x765b9c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765b9cf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765b9dd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765b8010"/>
        <function-ref name="clr" scoped="" ref="0x765b80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x765ae3e8" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x765ae3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765ae5c0"/>
        <function-ref name="isInput" scoped="" ref="0x765ae6a0"/>
        <function-ref name="setResistor" scoped="" ref="0x765ae780"/>
        <function-ref name="toggle" scoped="" ref="0x765ae860"/>
        <function-ref name="isOutput" scoped="" ref="0x765ae940"/>
        <function-ref name="getResistor" scoped="" ref="0x765aea20"/>
        <function-ref name="makeOutput" scoped="" ref="0x765aeb00"/>
        <function-ref name="get" scoped="" ref="0x765aebe0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765aecc0"/>
        <function-ref name="getRaw" scoped="" ref="0x765aeda0"/>
        <function-ref name="set" scoped="" ref="0x765aee80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765ad010"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765ad0f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765ad250"/>
        <function-ref name="clr" scoped="" ref="0x765ad330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x765a34c8" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x765a34c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765a36a0"/>
        <function-ref name="isInput" scoped="" ref="0x765a3780"/>
        <function-ref name="setResistor" scoped="" ref="0x765a3860"/>
        <function-ref name="toggle" scoped="" ref="0x765a3940"/>
        <function-ref name="isOutput" scoped="" ref="0x765a3a20"/>
        <function-ref name="getResistor" scoped="" ref="0x765a3b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x765a3be0"/>
        <function-ref name="get" scoped="" ref="0x765a3cc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765a3da0"/>
        <function-ref name="getRaw" scoped="" ref="0x765a3e80"/>
        <function-ref name="set" scoped="" ref="0x765a2010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765a20f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765a21d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765a2330"/>
        <function-ref name="clr" scoped="" ref="0x765a2410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7659a368" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7659a368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7659a540"/>
        <function-ref name="isInput" scoped="" ref="0x7659a620"/>
        <function-ref name="setResistor" scoped="" ref="0x7659a700"/>
        <function-ref name="toggle" scoped="" ref="0x7659a7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7659a8c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7659a9a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7659aa80"/>
        <function-ref name="get" scoped="" ref="0x7659ab60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7659ac40"/>
        <function-ref name="getRaw" scoped="" ref="0x7659ad20"/>
        <function-ref name="set" scoped="" ref="0x7659ae00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7659aee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76599010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76599170"/>
        <function-ref name="clr" scoped="" ref="0x76599250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7658e4c0" loc="149:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7658e4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7658e698"/>
        <function-ref name="isInput" scoped="" ref="0x7658e778"/>
        <function-ref name="setResistor" scoped="" ref="0x7658e858"/>
        <function-ref name="toggle" scoped="" ref="0x7658e938"/>
        <function-ref name="isOutput" scoped="" ref="0x7658ea18"/>
        <function-ref name="getResistor" scoped="" ref="0x7658eaf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7658ebd8"/>
        <function-ref name="get" scoped="" ref="0x7658ecb8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7658ed98"/>
        <function-ref name="getRaw" scoped="" ref="0x7658ee78"/>
        <function-ref name="set" scoped="" ref="0x7658d010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7658d0f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7658d1d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7658d330"/>
        <function-ref name="clr" scoped="" ref="0x7658d410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x76585280" loc="159:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x76585280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76585458"/>
        <function-ref name="isInput" scoped="" ref="0x76585538"/>
        <function-ref name="setResistor" scoped="" ref="0x76585618"/>
        <function-ref name="toggle" scoped="" ref="0x765856f8"/>
        <function-ref name="isOutput" scoped="" ref="0x765857d8"/>
        <function-ref name="getResistor" scoped="" ref="0x765858b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x76585998"/>
        <function-ref name="get" scoped="" ref="0x76585a78"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76585b58"/>
        <function-ref name="getRaw" scoped="" ref="0x76585c38"/>
        <function-ref name="set" scoped="" ref="0x76585d18"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76585df8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76585ed8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76584090"/>
        <function-ref name="clr" scoped="" ref="0x76584170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7657a288" loc="171:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7657a288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7657a460"/>
        <function-ref name="isInput" scoped="" ref="0x7657a540"/>
        <function-ref name="setResistor" scoped="" ref="0x7657a620"/>
        <function-ref name="toggle" scoped="" ref="0x7657a700"/>
        <function-ref name="isOutput" scoped="" ref="0x7657a7e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7657a8c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7657a9a0"/>
        <function-ref name="get" scoped="" ref="0x7657aa80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7657ab60"/>
        <function-ref name="getRaw" scoped="" ref="0x7657ac40"/>
        <function-ref name="set" scoped="" ref="0x7657ad20"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7657ae00"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7657aee0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76579090"/>
        <function-ref name="clr" scoped="" ref="0x76579170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x765c4178" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x765c4178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765c4350"/>
        <function-ref name="isInput" scoped="" ref="0x765c4430"/>
        <function-ref name="setResistor" scoped="" ref="0x765c4510"/>
        <function-ref name="toggle" scoped="" ref="0x765c45f0"/>
        <function-ref name="isOutput" scoped="" ref="0x765c46d0"/>
        <function-ref name="getResistor" scoped="" ref="0x765c47b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x765c4890"/>
        <function-ref name="get" scoped="" ref="0x765c4970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765c4a50"/>
        <function-ref name="getRaw" scoped="" ref="0x765c4b30"/>
        <function-ref name="set" scoped="" ref="0x765c4c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765c4cf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765c4dd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765c3010"/>
        <function-ref name="clr" scoped="" ref="0x765c30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7658d680" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7658d680"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7658d858"/>
        <function-ref name="isInput" scoped="" ref="0x7658d938"/>
        <function-ref name="setResistor" scoped="" ref="0x7658da18"/>
        <function-ref name="toggle" scoped="" ref="0x7658daf8"/>
        <function-ref name="isOutput" scoped="" ref="0x7658dbd8"/>
        <function-ref name="getResistor" scoped="" ref="0x7658dcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7658dd98"/>
        <function-ref name="get" scoped="" ref="0x7658de78"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7658c010"/>
        <function-ref name="getRaw" scoped="" ref="0x7658c0f0"/>
        <function-ref name="set" scoped="" ref="0x7658c1d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7658c2b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7658c390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7658c4f0"/>
        <function-ref name="clr" scoped="" ref="0x7658c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x765c24c8" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x765c24c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765c26a0"/>
        <function-ref name="isInput" scoped="" ref="0x765c2780"/>
        <function-ref name="setResistor" scoped="" ref="0x765c2860"/>
        <function-ref name="toggle" scoped="" ref="0x765c2940"/>
        <function-ref name="isOutput" scoped="" ref="0x765c2a20"/>
        <function-ref name="getResistor" scoped="" ref="0x765c2b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x765c2be0"/>
        <function-ref name="get" scoped="" ref="0x765c2cc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765c2da0"/>
        <function-ref name="getRaw" scoped="" ref="0x765c2e80"/>
        <function-ref name="set" scoped="" ref="0x765c1010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765c10f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765c11d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765c1330"/>
        <function-ref name="clr" scoped="" ref="0x765c1410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x765b6688" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x765b6688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765b6860"/>
        <function-ref name="isInput" scoped="" ref="0x765b6940"/>
        <function-ref name="setResistor" scoped="" ref="0x765b6a20"/>
        <function-ref name="toggle" scoped="" ref="0x765b6b00"/>
        <function-ref name="isOutput" scoped="" ref="0x765b6be0"/>
        <function-ref name="getResistor" scoped="" ref="0x765b6cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x765b6da0"/>
        <function-ref name="get" scoped="" ref="0x765b6e80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765b5010"/>
        <function-ref name="getRaw" scoped="" ref="0x765b50f0"/>
        <function-ref name="set" scoped="" ref="0x765b51d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765b52b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765b5390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765b54f0"/>
        <function-ref name="clr" scoped="" ref="0x765b55d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x765ab928" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x765ab928"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765abb00"/>
        <function-ref name="isInput" scoped="" ref="0x765abbe0"/>
        <function-ref name="setResistor" scoped="" ref="0x765abcc0"/>
        <function-ref name="toggle" scoped="" ref="0x765abda0"/>
        <function-ref name="isOutput" scoped="" ref="0x765abe80"/>
        <function-ref name="getResistor" scoped="" ref="0x765aa010"/>
        <function-ref name="makeOutput" scoped="" ref="0x765aa0f0"/>
        <function-ref name="get" scoped="" ref="0x765aa1d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765aa2b0"/>
        <function-ref name="getRaw" scoped="" ref="0x765aa390"/>
        <function-ref name="set" scoped="" ref="0x765aa470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765aa550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765aa630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765aa790"/>
        <function-ref name="clr" scoped="" ref="0x765aa870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x765a0a08" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x765a0a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765a0be0"/>
        <function-ref name="isInput" scoped="" ref="0x765a0cc0"/>
        <function-ref name="setResistor" scoped="" ref="0x765a0da0"/>
        <function-ref name="toggle" scoped="" ref="0x765a0e80"/>
        <function-ref name="isOutput" scoped="" ref="0x7659f010"/>
        <function-ref name="getResistor" scoped="" ref="0x7659f0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7659f1d0"/>
        <function-ref name="get" scoped="" ref="0x7659f2b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7659f390"/>
        <function-ref name="getRaw" scoped="" ref="0x7659f470"/>
        <function-ref name="set" scoped="" ref="0x7659f550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7659f630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7659f710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7659f870"/>
        <function-ref name="clr" scoped="" ref="0x7659f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x76597848" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x76597848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76597a20"/>
        <function-ref name="isInput" scoped="" ref="0x76597b00"/>
        <function-ref name="setResistor" scoped="" ref="0x76597be0"/>
        <function-ref name="toggle" scoped="" ref="0x76597cc0"/>
        <function-ref name="isOutput" scoped="" ref="0x76597da0"/>
        <function-ref name="getResistor" scoped="" ref="0x76597e80"/>
        <function-ref name="makeOutput" scoped="" ref="0x76596010"/>
        <function-ref name="get" scoped="" ref="0x765960f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765961d0"/>
        <function-ref name="getRaw" scoped="" ref="0x765962b0"/>
        <function-ref name="set" scoped="" ref="0x76596390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76596470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76596550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765966b0"/>
        <function-ref name="clr" scoped="" ref="0x76596790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x765d0848" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x765d0848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765d0a20"/>
        <function-ref name="isInput" scoped="" ref="0x765d0b00"/>
        <function-ref name="setResistor" scoped="" ref="0x765d0be0"/>
        <function-ref name="toggle" scoped="" ref="0x765d0cc0"/>
        <function-ref name="isOutput" scoped="" ref="0x765d0da0"/>
        <function-ref name="getResistor" scoped="" ref="0x765d0e80"/>
        <function-ref name="makeOutput" scoped="" ref="0x765c9010"/>
        <function-ref name="get" scoped="" ref="0x765c90f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765c91d0"/>
        <function-ref name="getRaw" scoped="" ref="0x765c92b0"/>
        <function-ref name="set" scoped="" ref="0x765c9390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765c9470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765c9550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765c96b0"/>
        <function-ref name="clr" scoped="" ref="0x765c9790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x765bfa08" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x765bfa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765bfc60"/>
        <function-ref name="isInput" scoped="" ref="0x765bfd40"/>
        <function-ref name="setResistor" scoped="" ref="0x765bfe20"/>
        <function-ref name="toggle" scoped="" ref="0x765bff00"/>
        <function-ref name="isOutput" scoped="" ref="0x765be010"/>
        <function-ref name="getResistor" scoped="" ref="0x765be0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x765be1d0"/>
        <function-ref name="get" scoped="" ref="0x765be2b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765be390"/>
        <function-ref name="getRaw" scoped="" ref="0x765be470"/>
        <function-ref name="set" scoped="" ref="0x765be550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765be630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765be710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765be870"/>
        <function-ref name="clr" scoped="" ref="0x765be950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x765b3bc8" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x765b3bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765b3da0"/>
        <function-ref name="isInput" scoped="" ref="0x765b3e80"/>
        <function-ref name="setResistor" scoped="" ref="0x765b2010"/>
        <function-ref name="toggle" scoped="" ref="0x765b20f0"/>
        <function-ref name="isOutput" scoped="" ref="0x765b21d0"/>
        <function-ref name="getResistor" scoped="" ref="0x765b22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x765b2390"/>
        <function-ref name="get" scoped="" ref="0x765b2470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765b2550"/>
        <function-ref name="getRaw" scoped="" ref="0x765b2630"/>
        <function-ref name="set" scoped="" ref="0x765b2710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765b27f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765b28d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765b2a30"/>
        <function-ref name="clr" scoped="" ref="0x765b2b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x76595d80" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x76595d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76593010"/>
        <function-ref name="isInput" scoped="" ref="0x765930f0"/>
        <function-ref name="setResistor" scoped="" ref="0x765931d0"/>
        <function-ref name="toggle" scoped="" ref="0x765932b0"/>
        <function-ref name="isOutput" scoped="" ref="0x76593390"/>
        <function-ref name="getResistor" scoped="" ref="0x76593470"/>
        <function-ref name="makeOutput" scoped="" ref="0x76593550"/>
        <function-ref name="get" scoped="" ref="0x76593630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76593710"/>
        <function-ref name="getRaw" scoped="" ref="0x765937f0"/>
        <function-ref name="set" scoped="" ref="0x765938d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765939b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76593a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76593bf0"/>
        <function-ref name="clr" scoped="" ref="0x76593cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x76582758" loc="162:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x76582758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76582930"/>
        <function-ref name="isInput" scoped="" ref="0x76582a10"/>
        <function-ref name="setResistor" scoped="" ref="0x76582af0"/>
        <function-ref name="toggle" scoped="" ref="0x76582bd0"/>
        <function-ref name="isOutput" scoped="" ref="0x76582cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x76582d90"/>
        <function-ref name="makeOutput" scoped="" ref="0x76582e70"/>
        <function-ref name="get" scoped="" ref="0x76581010"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765810f0"/>
        <function-ref name="getRaw" scoped="" ref="0x765811d0"/>
        <function-ref name="set" scoped="" ref="0x765812b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76581390"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76581470"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765815d0"/>
        <function-ref name="clr" scoped="" ref="0x765816b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7657b168" loc="169:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7657b168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7657b340"/>
        <function-ref name="isInput" scoped="" ref="0x7657b420"/>
        <function-ref name="setResistor" scoped="" ref="0x7657b500"/>
        <function-ref name="toggle" scoped="" ref="0x7657b5e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7657b6c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7657b7a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7657b880"/>
        <function-ref name="get" scoped="" ref="0x7657b960"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7657ba40"/>
        <function-ref name="getRaw" scoped="" ref="0x7657bb20"/>
        <function-ref name="set" scoped="" ref="0x7657bc00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7657bce0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7657bdc0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7657bf20"/>
        <function-ref name="clr" scoped="" ref="0x7657a018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x76589d80" loc="155:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x76589d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76588010"/>
        <function-ref name="isInput" scoped="" ref="0x765880f0"/>
        <function-ref name="setResistor" scoped="" ref="0x765881d0"/>
        <function-ref name="toggle" scoped="" ref="0x765882b0"/>
        <function-ref name="isOutput" scoped="" ref="0x76588390"/>
        <function-ref name="getResistor" scoped="" ref="0x76588470"/>
        <function-ref name="makeOutput" scoped="" ref="0x76588550"/>
        <function-ref name="get" scoped="" ref="0x76588630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76588710"/>
        <function-ref name="getRaw" scoped="" ref="0x765887f0"/>
        <function-ref name="set" scoped="" ref="0x765888d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765889b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76588a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76588bf0"/>
        <function-ref name="clr" scoped="" ref="0x76588cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x765b0010" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x765b0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765b02e8"/>
        <function-ref name="isInput" scoped="" ref="0x765b03c8"/>
        <function-ref name="setResistor" scoped="" ref="0x765b04a8"/>
        <function-ref name="toggle" scoped="" ref="0x765b0588"/>
        <function-ref name="isOutput" scoped="" ref="0x765b0668"/>
        <function-ref name="getResistor" scoped="" ref="0x765b0748"/>
        <function-ref name="makeOutput" scoped="" ref="0x765b0828"/>
        <function-ref name="get" scoped="" ref="0x765b0908"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765b09e8"/>
        <function-ref name="getRaw" scoped="" ref="0x765b0ac8"/>
        <function-ref name="set" scoped="" ref="0x765b0ba8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765b0c88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765b0d68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765b0ec8"/>
        <function-ref name="clr" scoped="" ref="0x765af010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x765a5178" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x765a5178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765a5350"/>
        <function-ref name="isInput" scoped="" ref="0x765a5430"/>
        <function-ref name="setResistor" scoped="" ref="0x765a5510"/>
        <function-ref name="toggle" scoped="" ref="0x765a55f0"/>
        <function-ref name="isOutput" scoped="" ref="0x765a56d0"/>
        <function-ref name="getResistor" scoped="" ref="0x765a57b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x765a5890"/>
        <function-ref name="get" scoped="" ref="0x765a5970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765a5a50"/>
        <function-ref name="getRaw" scoped="" ref="0x765a5b30"/>
        <function-ref name="set" scoped="" ref="0x765a5c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765a5cf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765a5dd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765a4010"/>
        <function-ref name="clr" scoped="" ref="0x765a40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7659c010" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7659c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7659c1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7659c2c8"/>
        <function-ref name="setResistor" scoped="" ref="0x7659c3a8"/>
        <function-ref name="toggle" scoped="" ref="0x7659c488"/>
        <function-ref name="isOutput" scoped="" ref="0x7659c568"/>
        <function-ref name="getResistor" scoped="" ref="0x7659c648"/>
        <function-ref name="makeOutput" scoped="" ref="0x7659c728"/>
        <function-ref name="get" scoped="" ref="0x7659c808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7659c8e8"/>
        <function-ref name="getRaw" scoped="" ref="0x7659c9c8"/>
        <function-ref name="set" scoped="" ref="0x7659caa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7659cb88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7659cc68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7659cdc8"/>
        <function-ref name="clr" scoped="" ref="0x7659cea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x76581918" loc="163:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x76581918"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76581af0"/>
        <function-ref name="isInput" scoped="" ref="0x76581bd0"/>
        <function-ref name="setResistor" scoped="" ref="0x76581cb0"/>
        <function-ref name="toggle" scoped="" ref="0x76581d90"/>
        <function-ref name="isOutput" scoped="" ref="0x76581e70"/>
        <function-ref name="getResistor" scoped="" ref="0x76580010"/>
        <function-ref name="makeOutput" scoped="" ref="0x765800f0"/>
        <function-ref name="get" scoped="" ref="0x765801d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765802b0"/>
        <function-ref name="getRaw" scoped="" ref="0x76580390"/>
        <function-ref name="set" scoped="" ref="0x76580470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76580550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76580630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76580790"/>
        <function-ref name="clr" scoped="" ref="0x76580870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7658c838" loc="152:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7658c838"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7658ca10"/>
        <function-ref name="isInput" scoped="" ref="0x7658caf0"/>
        <function-ref name="setResistor" scoped="" ref="0x7658cbd0"/>
        <function-ref name="toggle" scoped="" ref="0x7658ccb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7658cd90"/>
        <function-ref name="getResistor" scoped="" ref="0x7658ce70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7658b010"/>
        <function-ref name="get" scoped="" ref="0x7658b0f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7658b1d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7658b2b0"/>
        <function-ref name="set" scoped="" ref="0x7658b390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7658b470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7658b550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7658b6b0"/>
        <function-ref name="clr" scoped="" ref="0x7658b790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x765c7d88" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x765c7d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765c6010"/>
        <function-ref name="isInput" scoped="" ref="0x765c60f0"/>
        <function-ref name="setResistor" scoped="" ref="0x765c61d0"/>
        <function-ref name="toggle" scoped="" ref="0x765c62b0"/>
        <function-ref name="isOutput" scoped="" ref="0x765c6390"/>
        <function-ref name="getResistor" scoped="" ref="0x765c6470"/>
        <function-ref name="makeOutput" scoped="" ref="0x765c6550"/>
        <function-ref name="get" scoped="" ref="0x765c6630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765c6710"/>
        <function-ref name="getRaw" scoped="" ref="0x765c67f0"/>
        <function-ref name="set" scoped="" ref="0x765c68d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765c69b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765c6a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765c6bf0"/>
        <function-ref name="clr" scoped="" ref="0x765c6cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x765ba010" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x765ba010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765ba1e8"/>
        <function-ref name="isInput" scoped="" ref="0x765ba2c8"/>
        <function-ref name="setResistor" scoped="" ref="0x765ba3a8"/>
        <function-ref name="toggle" scoped="" ref="0x765ba488"/>
        <function-ref name="isOutput" scoped="" ref="0x765ba568"/>
        <function-ref name="getResistor" scoped="" ref="0x765ba648"/>
        <function-ref name="makeOutput" scoped="" ref="0x765ba728"/>
        <function-ref name="get" scoped="" ref="0x765ba808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765ba8e8"/>
        <function-ref name="getRaw" scoped="" ref="0x765ba9c8"/>
        <function-ref name="set" scoped="" ref="0x765baaa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765bab88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765bac68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765badc8"/>
        <function-ref name="clr" scoped="" ref="0x765baea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7659fbc8" loc="104:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7659fbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7659fda0"/>
        <function-ref name="isInput" scoped="" ref="0x7659fe80"/>
        <function-ref name="setResistor" scoped="" ref="0x7659e010"/>
        <function-ref name="toggle" scoped="" ref="0x7659e0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7659e1d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7659e2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7659e390"/>
        <function-ref name="get" scoped="" ref="0x7659e470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7659e550"/>
        <function-ref name="getRaw" scoped="" ref="0x7659e630"/>
        <function-ref name="set" scoped="" ref="0x7659e710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7659e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7659e8d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7659ea30"/>
        <function-ref name="clr" scoped="" ref="0x7659eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x765b8368" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x765b8368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765b8540"/>
        <function-ref name="isInput" scoped="" ref="0x765b8620"/>
        <function-ref name="setResistor" scoped="" ref="0x765b8700"/>
        <function-ref name="toggle" scoped="" ref="0x765b87e0"/>
        <function-ref name="isOutput" scoped="" ref="0x765b88c0"/>
        <function-ref name="getResistor" scoped="" ref="0x765b89a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x765b8a80"/>
        <function-ref name="get" scoped="" ref="0x765b8b60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765b8c40"/>
        <function-ref name="getRaw" scoped="" ref="0x765b8d20"/>
        <function-ref name="set" scoped="" ref="0x765b8e00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765b8ee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765b7010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765b7170"/>
        <function-ref name="clr" scoped="" ref="0x765b7250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x765ad5a8" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x765ad5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765ad780"/>
        <function-ref name="isInput" scoped="" ref="0x765ad860"/>
        <function-ref name="setResistor" scoped="" ref="0x765ad940"/>
        <function-ref name="toggle" scoped="" ref="0x765ada20"/>
        <function-ref name="isOutput" scoped="" ref="0x765adb00"/>
        <function-ref name="getResistor" scoped="" ref="0x765adbe0"/>
        <function-ref name="makeOutput" scoped="" ref="0x765adcc0"/>
        <function-ref name="get" scoped="" ref="0x765adda0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765ade80"/>
        <function-ref name="getRaw" scoped="" ref="0x765ac010"/>
        <function-ref name="set" scoped="" ref="0x765ac0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765ac1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765ac2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765ac410"/>
        <function-ref name="clr" scoped="" ref="0x765ac4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x765a2688" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x765a2688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765a2860"/>
        <function-ref name="isInput" scoped="" ref="0x765a2940"/>
        <function-ref name="setResistor" scoped="" ref="0x765a2a20"/>
        <function-ref name="toggle" scoped="" ref="0x765a2b00"/>
        <function-ref name="isOutput" scoped="" ref="0x765a2be0"/>
        <function-ref name="getResistor" scoped="" ref="0x765a2cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x765a2da0"/>
        <function-ref name="get" scoped="" ref="0x765a2e80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765a1010"/>
        <function-ref name="getRaw" scoped="" ref="0x765a10f0"/>
        <function-ref name="set" scoped="" ref="0x765a11d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765a12b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765a1390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765a14f0"/>
        <function-ref name="clr" scoped="" ref="0x765a15d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x765994c8" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x765994c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765996a0"/>
        <function-ref name="isInput" scoped="" ref="0x76599780"/>
        <function-ref name="setResistor" scoped="" ref="0x76599860"/>
        <function-ref name="toggle" scoped="" ref="0x76599940"/>
        <function-ref name="isOutput" scoped="" ref="0x76599a20"/>
        <function-ref name="getResistor" scoped="" ref="0x76599b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x76599be0"/>
        <function-ref name="get" scoped="" ref="0x76599cc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76599da0"/>
        <function-ref name="getRaw" scoped="" ref="0x76599e80"/>
        <function-ref name="set" scoped="" ref="0x76598010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765980f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765981d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76598330"/>
        <function-ref name="clr" scoped="" ref="0x76598410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7658abc0" loc="154:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7658abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7658ad98"/>
        <function-ref name="isInput" scoped="" ref="0x7658ae78"/>
        <function-ref name="setResistor" scoped="" ref="0x76589010"/>
        <function-ref name="toggle" scoped="" ref="0x765890f0"/>
        <function-ref name="isOutput" scoped="" ref="0x765891d0"/>
        <function-ref name="getResistor" scoped="" ref="0x765892b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76589390"/>
        <function-ref name="get" scoped="" ref="0x76589470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76589550"/>
        <function-ref name="getRaw" scoped="" ref="0x76589630"/>
        <function-ref name="set" scoped="" ref="0x76589710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765897f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765898d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76589a30"/>
        <function-ref name="clr" scoped="" ref="0x76589b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x765ca558" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x765ca558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765ca730"/>
        <function-ref name="isInput" scoped="" ref="0x765ca810"/>
        <function-ref name="setResistor" scoped="" ref="0x765ca8f0"/>
        <function-ref name="toggle" scoped="" ref="0x765ca9d0"/>
        <function-ref name="isOutput" scoped="" ref="0x765caab0"/>
        <function-ref name="getResistor" scoped="" ref="0x765cab90"/>
        <function-ref name="makeOutput" scoped="" ref="0x765cac70"/>
        <function-ref name="get" scoped="" ref="0x765cad50"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765cae30"/>
        <function-ref name="getRaw" scoped="" ref="0x765caf10"/>
        <function-ref name="set" scoped="" ref="0x765d1010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765d10f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765d11d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765d1330"/>
        <function-ref name="clr" scoped="" ref="0x765d1410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x765c1688" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x765c1688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765c1860"/>
        <function-ref name="isInput" scoped="" ref="0x765c1940"/>
        <function-ref name="setResistor" scoped="" ref="0x765c1a20"/>
        <function-ref name="toggle" scoped="" ref="0x765c1b00"/>
        <function-ref name="isOutput" scoped="" ref="0x765c1be0"/>
        <function-ref name="getResistor" scoped="" ref="0x765c1cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x765c1da0"/>
        <function-ref name="get" scoped="" ref="0x765c1e80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765c0010"/>
        <function-ref name="getRaw" scoped="" ref="0x765c00f0"/>
        <function-ref name="set" scoped="" ref="0x765c01d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765c02b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765c0390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765c04f0"/>
        <function-ref name="clr" scoped="" ref="0x765c05d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x765b5848" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x765b5848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765b5a20"/>
        <function-ref name="isInput" scoped="" ref="0x765b5b00"/>
        <function-ref name="setResistor" scoped="" ref="0x765b5be0"/>
        <function-ref name="toggle" scoped="" ref="0x765b5cc0"/>
        <function-ref name="isOutput" scoped="" ref="0x765b5da0"/>
        <function-ref name="getResistor" scoped="" ref="0x765b5e80"/>
        <function-ref name="makeOutput" scoped="" ref="0x765b4010"/>
        <function-ref name="get" scoped="" ref="0x765b40f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765b41d0"/>
        <function-ref name="getRaw" scoped="" ref="0x765b42b0"/>
        <function-ref name="set" scoped="" ref="0x765b4390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765b4470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765b4550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765b46b0"/>
        <function-ref name="clr" scoped="" ref="0x765b4790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x765aaae8" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x765aaae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765aacc0"/>
        <function-ref name="isInput" scoped="" ref="0x765aada0"/>
        <function-ref name="setResistor" scoped="" ref="0x765aae80"/>
        <function-ref name="toggle" scoped="" ref="0x765a9010"/>
        <function-ref name="isOutput" scoped="" ref="0x765a90f0"/>
        <function-ref name="getResistor" scoped="" ref="0x765a91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x765a92b0"/>
        <function-ref name="get" scoped="" ref="0x765a9390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765a9470"/>
        <function-ref name="getRaw" scoped="" ref="0x765a9550"/>
        <function-ref name="set" scoped="" ref="0x765a9630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765a9710"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765a97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765a9950"/>
        <function-ref name="clr" scoped="" ref="0x765a9a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x76587010" loc="156:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x76587010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765871e8"/>
        <function-ref name="isInput" scoped="" ref="0x765872c8"/>
        <function-ref name="setResistor" scoped="" ref="0x765873a8"/>
        <function-ref name="toggle" scoped="" ref="0x76587488"/>
        <function-ref name="isOutput" scoped="" ref="0x76587568"/>
        <function-ref name="getResistor" scoped="" ref="0x76587648"/>
        <function-ref name="makeOutput" scoped="" ref="0x76587728"/>
        <function-ref name="get" scoped="" ref="0x76587808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765878e8"/>
        <function-ref name="getRaw" scoped="" ref="0x765879c8"/>
        <function-ref name="set" scoped="" ref="0x76587aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76587b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76587c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76587dc8"/>
        <function-ref name="clr" scoped="" ref="0x76587ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x765843d8" loc="160:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x765843d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765845b0"/>
        <function-ref name="isInput" scoped="" ref="0x76584690"/>
        <function-ref name="setResistor" scoped="" ref="0x76584770"/>
        <function-ref name="toggle" scoped="" ref="0x76584850"/>
        <function-ref name="isOutput" scoped="" ref="0x76584930"/>
        <function-ref name="getResistor" scoped="" ref="0x76584a10"/>
        <function-ref name="makeOutput" scoped="" ref="0x76584af0"/>
        <function-ref name="get" scoped="" ref="0x76584bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76584cb0"/>
        <function-ref name="getRaw" scoped="" ref="0x76584d90"/>
        <function-ref name="set" scoped="" ref="0x76584e70"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76583010"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765830f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76583250"/>
        <function-ref name="clr" scoped="" ref="0x76583330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7657ee58" loc="166:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7657ee58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7657d050"/>
        <function-ref name="isInput" scoped="" ref="0x7657d130"/>
        <function-ref name="setResistor" scoped="" ref="0x7657d210"/>
        <function-ref name="toggle" scoped="" ref="0x7657d2f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7657d3d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7657d4b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7657d590"/>
        <function-ref name="get" scoped="" ref="0x7657d670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7657d750"/>
        <function-ref name="getRaw" scoped="" ref="0x7657d830"/>
        <function-ref name="set" scoped="" ref="0x7657d910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7657d9f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7657dad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7657dc30"/>
        <function-ref name="clr" scoped="" ref="0x7657dd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x765a8e68" loc="93:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x765a8e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765a7050"/>
        <function-ref name="isInput" scoped="" ref="0x765a7130"/>
        <function-ref name="setResistor" scoped="" ref="0x765a7210"/>
        <function-ref name="toggle" scoped="" ref="0x765a72f0"/>
        <function-ref name="isOutput" scoped="" ref="0x765a73d0"/>
        <function-ref name="getResistor" scoped="" ref="0x765a74b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x765a7590"/>
        <function-ref name="get" scoped="" ref="0x765a7670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765a7750"/>
        <function-ref name="getRaw" scoped="" ref="0x765a7830"/>
        <function-ref name="set" scoped="" ref="0x765a7910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765a79f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765a7ad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765a7c30"/>
        <function-ref name="clr" scoped="" ref="0x765a7d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x76586170" loc="157:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x76586170"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76586348"/>
        <function-ref name="isInput" scoped="" ref="0x76586428"/>
        <function-ref name="setResistor" scoped="" ref="0x76586508"/>
        <function-ref name="toggle" scoped="" ref="0x765865e8"/>
        <function-ref name="isOutput" scoped="" ref="0x765866c8"/>
        <function-ref name="getResistor" scoped="" ref="0x765867a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x76586888"/>
        <function-ref name="get" scoped="" ref="0x76586968"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76586a48"/>
        <function-ref name="getRaw" scoped="" ref="0x76586b28"/>
        <function-ref name="set" scoped="" ref="0x76586c08"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76586ce8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76586dc8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76586f28"/>
        <function-ref name="clr" scoped="" ref="0x76585018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x765c9a08" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x765c9a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765c9be0"/>
        <function-ref name="isInput" scoped="" ref="0x765c9cc0"/>
        <function-ref name="setResistor" scoped="" ref="0x765c9da0"/>
        <function-ref name="toggle" scoped="" ref="0x765c9e80"/>
        <function-ref name="isOutput" scoped="" ref="0x765c8010"/>
        <function-ref name="getResistor" scoped="" ref="0x765c80f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x765c81d0"/>
        <function-ref name="get" scoped="" ref="0x765c82b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765c8390"/>
        <function-ref name="getRaw" scoped="" ref="0x765c8470"/>
        <function-ref name="set" scoped="" ref="0x765c8550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765c8630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765c8710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765c8870"/>
        <function-ref name="clr" scoped="" ref="0x765c8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x765bebc8" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x765bebc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765beda0"/>
        <function-ref name="isInput" scoped="" ref="0x765bee80"/>
        <function-ref name="setResistor" scoped="" ref="0x765bc010"/>
        <function-ref name="toggle" scoped="" ref="0x765bc0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x765bc1d0"/>
        <function-ref name="getResistor" scoped="" ref="0x765bc2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x765bc390"/>
        <function-ref name="get" scoped="" ref="0x765bc470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765bc550"/>
        <function-ref name="getRaw" scoped="" ref="0x765bc630"/>
        <function-ref name="set" scoped="" ref="0x765bc710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765bc7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765bc8d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765bca30"/>
        <function-ref name="clr" scoped="" ref="0x765bcb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x765b2d88" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x765b2d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765b1010"/>
        <function-ref name="isInput" scoped="" ref="0x765b10f0"/>
        <function-ref name="setResistor" scoped="" ref="0x765b11d0"/>
        <function-ref name="toggle" scoped="" ref="0x765b12b0"/>
        <function-ref name="isOutput" scoped="" ref="0x765b1390"/>
        <function-ref name="getResistor" scoped="" ref="0x765b1470"/>
        <function-ref name="makeOutput" scoped="" ref="0x765b1550"/>
        <function-ref name="get" scoped="" ref="0x765b1630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765b1710"/>
        <function-ref name="getRaw" scoped="" ref="0x765b17f0"/>
        <function-ref name="set" scoped="" ref="0x765b18d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765b19b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765b1a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765b1bf0"/>
        <function-ref name="clr" scoped="" ref="0x765b1cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7658ba00" loc="153:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7658ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7658bbd8"/>
        <function-ref name="isInput" scoped="" ref="0x7658bcb8"/>
        <function-ref name="setResistor" scoped="" ref="0x7658bd98"/>
        <function-ref name="toggle" scoped="" ref="0x7658be78"/>
        <function-ref name="isOutput" scoped="" ref="0x7658a010"/>
        <function-ref name="getResistor" scoped="" ref="0x7658a0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7658a1d0"/>
        <function-ref name="get" scoped="" ref="0x7658a2b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7658a390"/>
        <function-ref name="getRaw" scoped="" ref="0x7658a470"/>
        <function-ref name="set" scoped="" ref="0x7658a550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7658a630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7658a710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7658a870"/>
        <function-ref name="clr" scoped="" ref="0x7658a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x76580ad8" loc="164:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x76580ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76580cb0"/>
        <function-ref name="isInput" scoped="" ref="0x76580d90"/>
        <function-ref name="setResistor" scoped="" ref="0x76580e70"/>
        <function-ref name="toggle" scoped="" ref="0x7657f010"/>
        <function-ref name="isOutput" scoped="" ref="0x7657f0f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7657f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7657f2b0"/>
        <function-ref name="get" scoped="" ref="0x7657f390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7657f470"/>
        <function-ref name="getRaw" scoped="" ref="0x7657f550"/>
        <function-ref name="set" scoped="" ref="0x7657f630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7657f710"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7657f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7657f950"/>
        <function-ref name="clr" scoped="" ref="0x7657fa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x765af288" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x765af288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765af460"/>
        <function-ref name="isInput" scoped="" ref="0x765af540"/>
        <function-ref name="setResistor" scoped="" ref="0x765af620"/>
        <function-ref name="toggle" scoped="" ref="0x765af700"/>
        <function-ref name="isOutput" scoped="" ref="0x765af7e0"/>
        <function-ref name="getResistor" scoped="" ref="0x765af8c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x765af9a0"/>
        <function-ref name="get" scoped="" ref="0x765afa80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765afb60"/>
        <function-ref name="getRaw" scoped="" ref="0x765afc40"/>
        <function-ref name="set" scoped="" ref="0x765afd20"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765afe00"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765afee0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765ae090"/>
        <function-ref name="clr" scoped="" ref="0x765ae170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x765a4368" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x765a4368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765a4540"/>
        <function-ref name="isInput" scoped="" ref="0x765a4620"/>
        <function-ref name="setResistor" scoped="" ref="0x765a4700"/>
        <function-ref name="toggle" scoped="" ref="0x765a47e0"/>
        <function-ref name="isOutput" scoped="" ref="0x765a48c0"/>
        <function-ref name="getResistor" scoped="" ref="0x765a49a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x765a4a80"/>
        <function-ref name="get" scoped="" ref="0x765a4b60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765a4c40"/>
        <function-ref name="getRaw" scoped="" ref="0x765a4d20"/>
        <function-ref name="set" scoped="" ref="0x765a4e00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765a4ee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765a3010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765a3170"/>
        <function-ref name="clr" scoped="" ref="0x765a3250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7659b178" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7659b178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7659b350"/>
        <function-ref name="isInput" scoped="" ref="0x7659b430"/>
        <function-ref name="setResistor" scoped="" ref="0x7659b510"/>
        <function-ref name="toggle" scoped="" ref="0x7659b5f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7659b6d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7659b7b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7659b890"/>
        <function-ref name="get" scoped="" ref="0x7659b970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7659ba50"/>
        <function-ref name="getRaw" scoped="" ref="0x7659bb30"/>
        <function-ref name="set" scoped="" ref="0x7659bc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7659bcf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7659bdd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7659a010"/>
        <function-ref name="clr" scoped="" ref="0x7659a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x765c5010" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x765c5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765c51e8"/>
        <function-ref name="isInput" scoped="" ref="0x765c52c8"/>
        <function-ref name="setResistor" scoped="" ref="0x765c53a8"/>
        <function-ref name="toggle" scoped="" ref="0x765c5488"/>
        <function-ref name="isOutput" scoped="" ref="0x765c5568"/>
        <function-ref name="getResistor" scoped="" ref="0x765c5648"/>
        <function-ref name="makeOutput" scoped="" ref="0x765c5728"/>
        <function-ref name="get" scoped="" ref="0x765c5808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765c58e8"/>
        <function-ref name="getRaw" scoped="" ref="0x765c59c8"/>
        <function-ref name="set" scoped="" ref="0x765c5aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765c5b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765c5c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765c5dc8"/>
        <function-ref name="clr" scoped="" ref="0x765c5ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7659ed88" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7659ed88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7659d010"/>
        <function-ref name="isInput" scoped="" ref="0x7659d0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7659d1d0"/>
        <function-ref name="toggle" scoped="" ref="0x7659d2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7659d390"/>
        <function-ref name="getResistor" scoped="" ref="0x7659d470"/>
        <function-ref name="makeOutput" scoped="" ref="0x7659d550"/>
        <function-ref name="get" scoped="" ref="0x7659d630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7659d710"/>
        <function-ref name="getRaw" scoped="" ref="0x7659d7f0"/>
        <function-ref name="set" scoped="" ref="0x7659d8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7659d9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7659da90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7659dbf0"/>
        <function-ref name="clr" scoped="" ref="0x7659dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x765c3368" loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x765c3368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765c3540"/>
        <function-ref name="isInput" scoped="" ref="0x765c3620"/>
        <function-ref name="setResistor" scoped="" ref="0x765c3700"/>
        <function-ref name="toggle" scoped="" ref="0x765c37e0"/>
        <function-ref name="isOutput" scoped="" ref="0x765c38c0"/>
        <function-ref name="getResistor" scoped="" ref="0x765c39a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x765c3a80"/>
        <function-ref name="get" scoped="" ref="0x765c3b60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765c3c40"/>
        <function-ref name="getRaw" scoped="" ref="0x765c3d20"/>
        <function-ref name="set" scoped="" ref="0x765c3e00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765c3ee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765c2010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765c2170"/>
        <function-ref name="clr" scoped="" ref="0x765c2250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x765b74c8" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x765b74c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765b76a0"/>
        <function-ref name="isInput" scoped="" ref="0x765b7780"/>
        <function-ref name="setResistor" scoped="" ref="0x765b7860"/>
        <function-ref name="toggle" scoped="" ref="0x765b7940"/>
        <function-ref name="isOutput" scoped="" ref="0x765b7a20"/>
        <function-ref name="getResistor" scoped="" ref="0x765b7b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x765b7be0"/>
        <function-ref name="get" scoped="" ref="0x765b7cc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765b7da0"/>
        <function-ref name="getRaw" scoped="" ref="0x765b7e80"/>
        <function-ref name="set" scoped="" ref="0x765b6010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765b60f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765b61d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765b6330"/>
        <function-ref name="clr" scoped="" ref="0x765b6410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x765ac768" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x765ac768"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765ac940"/>
        <function-ref name="isInput" scoped="" ref="0x765aca20"/>
        <function-ref name="setResistor" scoped="" ref="0x765acb00"/>
        <function-ref name="toggle" scoped="" ref="0x765acbe0"/>
        <function-ref name="isOutput" scoped="" ref="0x765accc0"/>
        <function-ref name="getResistor" scoped="" ref="0x765acda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x765ace80"/>
        <function-ref name="get" scoped="" ref="0x765ab010"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765ab0f0"/>
        <function-ref name="getRaw" scoped="" ref="0x765ab1d0"/>
        <function-ref name="set" scoped="" ref="0x765ab2b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765ab390"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765ab470"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765ab5d0"/>
        <function-ref name="clr" scoped="" ref="0x765ab6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x765a1848" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x765a1848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765a1a20"/>
        <function-ref name="isInput" scoped="" ref="0x765a1b00"/>
        <function-ref name="setResistor" scoped="" ref="0x765a1be0"/>
        <function-ref name="toggle" scoped="" ref="0x765a1cc0"/>
        <function-ref name="isOutput" scoped="" ref="0x765a1da0"/>
        <function-ref name="getResistor" scoped="" ref="0x765a1e80"/>
        <function-ref name="makeOutput" scoped="" ref="0x765a0010"/>
        <function-ref name="get" scoped="" ref="0x765a00f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765a01d0"/>
        <function-ref name="getRaw" scoped="" ref="0x765a02b0"/>
        <function-ref name="set" scoped="" ref="0x765a0390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765a0470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765a0550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765a06b0"/>
        <function-ref name="clr" scoped="" ref="0x765a0790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x76598688" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x76598688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76598860"/>
        <function-ref name="isInput" scoped="" ref="0x76598940"/>
        <function-ref name="setResistor" scoped="" ref="0x76598a20"/>
        <function-ref name="toggle" scoped="" ref="0x76598b00"/>
        <function-ref name="isOutput" scoped="" ref="0x76598be0"/>
        <function-ref name="getResistor" scoped="" ref="0x76598cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76598da0"/>
        <function-ref name="get" scoped="" ref="0x76598e80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76597010"/>
        <function-ref name="getRaw" scoped="" ref="0x765970f0"/>
        <function-ref name="set" scoped="" ref="0x765971d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765972b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76597390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765974f0"/>
        <function-ref name="clr" scoped="" ref="0x765975d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x765d1688" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x765d1688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765d1860"/>
        <function-ref name="isInput" scoped="" ref="0x765d1940"/>
        <function-ref name="setResistor" scoped="" ref="0x765d1a20"/>
        <function-ref name="toggle" scoped="" ref="0x765d1b00"/>
        <function-ref name="isOutput" scoped="" ref="0x765d1be0"/>
        <function-ref name="getResistor" scoped="" ref="0x765d1cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x765d1da0"/>
        <function-ref name="get" scoped="" ref="0x765d1e80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765d0010"/>
        <function-ref name="getRaw" scoped="" ref="0x765d00f0"/>
        <function-ref name="set" scoped="" ref="0x765d01d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765d02b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765d0390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765d04f0"/>
        <function-ref name="clr" scoped="" ref="0x765d05d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x765c0848" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x765c0848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765c0a20"/>
        <function-ref name="isInput" scoped="" ref="0x765c0b00"/>
        <function-ref name="setResistor" scoped="" ref="0x765c0be0"/>
        <function-ref name="toggle" scoped="" ref="0x765c0cc0"/>
        <function-ref name="isOutput" scoped="" ref="0x765c0da0"/>
        <function-ref name="getResistor" scoped="" ref="0x765c0e80"/>
        <function-ref name="makeOutput" scoped="" ref="0x765bf010"/>
        <function-ref name="get" scoped="" ref="0x765bf0f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765bf1d0"/>
        <function-ref name="getRaw" scoped="" ref="0x765bf2b0"/>
        <function-ref name="set" scoped="" ref="0x765bf390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765bf470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765bf550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765bf6b0"/>
        <function-ref name="clr" scoped="" ref="0x765bf790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x765b4a08" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x765b4a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765b4be0"/>
        <function-ref name="isInput" scoped="" ref="0x765b4cc0"/>
        <function-ref name="setResistor" scoped="" ref="0x765b4da0"/>
        <function-ref name="toggle" scoped="" ref="0x765b4e80"/>
        <function-ref name="isOutput" scoped="" ref="0x765b3010"/>
        <function-ref name="getResistor" scoped="" ref="0x765b30f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x765b31d0"/>
        <function-ref name="get" scoped="" ref="0x765b32b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765b3390"/>
        <function-ref name="getRaw" scoped="" ref="0x765b3470"/>
        <function-ref name="set" scoped="" ref="0x765b3550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765b3630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765b3710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765b3870"/>
        <function-ref name="clr" scoped="" ref="0x765b3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x765a9ca8" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x765a9ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765a9e80"/>
        <function-ref name="isInput" scoped="" ref="0x765a8010"/>
        <function-ref name="setResistor" scoped="" ref="0x765a80f0"/>
        <function-ref name="toggle" scoped="" ref="0x765a81d0"/>
        <function-ref name="isOutput" scoped="" ref="0x765a82b0"/>
        <function-ref name="getResistor" scoped="" ref="0x765a8390"/>
        <function-ref name="makeOutput" scoped="" ref="0x765a8470"/>
        <function-ref name="get" scoped="" ref="0x765a8550"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765a8630"/>
        <function-ref name="getRaw" scoped="" ref="0x765a8710"/>
        <function-ref name="set" scoped="" ref="0x765a87f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765a88d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765a89b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765a8b10"/>
        <function-ref name="clr" scoped="" ref="0x765a8bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7658f348" loc="148:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7658f348"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7658f520"/>
        <function-ref name="isInput" scoped="" ref="0x7658f600"/>
        <function-ref name="setResistor" scoped="" ref="0x7658f6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7658f7c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7658f8a0"/>
        <function-ref name="getResistor" scoped="" ref="0x7658f980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7658fa60"/>
        <function-ref name="get" scoped="" ref="0x7658fb40"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7658fc20"/>
        <function-ref name="getRaw" scoped="" ref="0x7658fd00"/>
        <function-ref name="set" scoped="" ref="0x7658fde0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7658fec0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7658e010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7658e170"/>
        <function-ref name="clr" scoped="" ref="0x7658e250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x76583598" loc="161:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x76583598"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76583770"/>
        <function-ref name="isInput" scoped="" ref="0x76583850"/>
        <function-ref name="setResistor" scoped="" ref="0x76583930"/>
        <function-ref name="toggle" scoped="" ref="0x76583a10"/>
        <function-ref name="isOutput" scoped="" ref="0x76583af0"/>
        <function-ref name="getResistor" scoped="" ref="0x76583bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76583cb0"/>
        <function-ref name="get" scoped="" ref="0x76583d90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76583e70"/>
        <function-ref name="getRaw" scoped="" ref="0x76582010"/>
        <function-ref name="set" scoped="" ref="0x765820f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765821d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765822b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76582410"/>
        <function-ref name="clr" scoped="" ref="0x765824f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x765901a0" loc="147:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x765901a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76590378"/>
        <function-ref name="isInput" scoped="" ref="0x76590458"/>
        <function-ref name="setResistor" scoped="" ref="0x76590538"/>
        <function-ref name="toggle" scoped="" ref="0x76590618"/>
        <function-ref name="isOutput" scoped="" ref="0x765906f8"/>
        <function-ref name="getResistor" scoped="" ref="0x765907d8"/>
        <function-ref name="makeOutput" scoped="" ref="0x765908b8"/>
        <function-ref name="get" scoped="" ref="0x76590998"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76590a78"/>
        <function-ref name="getRaw" scoped="" ref="0x76590b58"/>
        <function-ref name="set" scoped="" ref="0x76590c38"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76590d18"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76590df8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7658f010"/>
        <function-ref name="clr" scoped="" ref="0x7658f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x765a6010" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x765a6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765a61e8"/>
        <function-ref name="isInput" scoped="" ref="0x765a62c8"/>
        <function-ref name="setResistor" scoped="" ref="0x765a63a8"/>
        <function-ref name="toggle" scoped="" ref="0x765a6488"/>
        <function-ref name="isOutput" scoped="" ref="0x765a6568"/>
        <function-ref name="getResistor" scoped="" ref="0x765a6648"/>
        <function-ref name="makeOutput" scoped="" ref="0x765a6728"/>
        <function-ref name="get" scoped="" ref="0x765a6808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765a68e8"/>
        <function-ref name="getRaw" scoped="" ref="0x765a69c8"/>
        <function-ref name="set" scoped="" ref="0x765a6aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765a6b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765a6c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765a6dc8"/>
        <function-ref name="clr" scoped="" ref="0x765a6ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7657c010" loc="168:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7657c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7657c1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7657c2c8"/>
        <function-ref name="setResistor" scoped="" ref="0x7657c3a8"/>
        <function-ref name="toggle" scoped="" ref="0x7657c488"/>
        <function-ref name="isOutput" scoped="" ref="0x7657c568"/>
        <function-ref name="getResistor" scoped="" ref="0x7657c648"/>
        <function-ref name="makeOutput" scoped="" ref="0x7657c728"/>
        <function-ref name="get" scoped="" ref="0x7657c808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7657c8e8"/>
        <function-ref name="getRaw" scoped="" ref="0x7657c9c8"/>
        <function-ref name="set" scoped="" ref="0x7657caa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7657cb88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7657cc68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7657cdc8"/>
        <function-ref name="clr" scoped="" ref="0x7657cea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x765793e8" loc="172:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x765793e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765795c0"/>
        <function-ref name="isInput" scoped="" ref="0x765796a0"/>
        <function-ref name="setResistor" scoped="" ref="0x76579780"/>
        <function-ref name="toggle" scoped="" ref="0x76579860"/>
        <function-ref name="isOutput" scoped="" ref="0x76579940"/>
        <function-ref name="getResistor" scoped="" ref="0x76579a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x76579b00"/>
        <function-ref name="get" scoped="" ref="0x76579be0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76579cc0"/>
        <function-ref name="getRaw" scoped="" ref="0x76579da0"/>
        <function-ref name="set" scoped="" ref="0x76579e80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76578010"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765780f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76578250"/>
        <function-ref name="clr" scoped="" ref="0x76578330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x76596a28" loc="143:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x76596a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76596e00"/>
        <function-ref name="isInput" scoped="" ref="0x76596ee0"/>
        <function-ref name="setResistor" scoped="" ref="0x76595010"/>
        <function-ref name="toggle" scoped="" ref="0x765950f0"/>
        <function-ref name="isOutput" scoped="" ref="0x765951d0"/>
        <function-ref name="getResistor" scoped="" ref="0x765952b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76595390"/>
        <function-ref name="get" scoped="" ref="0x76595470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76595550"/>
        <function-ref name="getRaw" scoped="" ref="0x76595630"/>
        <function-ref name="set" scoped="" ref="0x76595710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765957f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765958d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76595a30"/>
        <function-ref name="clr" scoped="" ref="0x76595b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x765763a8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x765763a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76576580"/>
        <function-ref name="isInput" scoped="" ref="0x76576660"/>
        <function-ref name="setResistor" scoped="" ref="0x76576740"/>
        <function-ref name="toggle" scoped="" ref="0x76576820"/>
        <function-ref name="isOutput" scoped="" ref="0x76576900"/>
        <function-ref name="getResistor" scoped="" ref="0x765769e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76576ac0"/>
        <function-ref name="get" scoped="" ref="0x76576ba0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76576c80"/>
        <function-ref name="getRaw" scoped="" ref="0x76576d60"/>
        <function-ref name="set" scoped="" ref="0x76576e40"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76576f20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7655f018"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7655f178"/>
        <function-ref name="clr" scoped="" ref="0x7655f258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7655eaa0" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7655eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7655ec78"/>
        <function-ref name="isInput" scoped="" ref="0x7655ed58"/>
        <function-ref name="setResistor" scoped="" ref="0x7655ee38"/>
        <function-ref name="toggle" scoped="" ref="0x7655ef18"/>
        <function-ref name="isOutput" scoped="" ref="0x7655d010"/>
        <function-ref name="getResistor" scoped="" ref="0x7655d0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7655d1d0"/>
        <function-ref name="get" scoped="" ref="0x7655d2b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7655d390"/>
        <function-ref name="getRaw" scoped="" ref="0x7655d470"/>
        <function-ref name="set" scoped="" ref="0x7655d550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7655d630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7655d710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7655d870"/>
        <function-ref name="clr" scoped="" ref="0x7655d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7655b220" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7655b220"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7655b3f8"/>
        <function-ref name="isInput" scoped="" ref="0x7655b4d8"/>
        <function-ref name="setResistor" scoped="" ref="0x7655b5b8"/>
        <function-ref name="toggle" scoped="" ref="0x7655b698"/>
        <function-ref name="isOutput" scoped="" ref="0x7655b778"/>
        <function-ref name="getResistor" scoped="" ref="0x7655b858"/>
        <function-ref name="makeOutput" scoped="" ref="0x7655b938"/>
        <function-ref name="get" scoped="" ref="0x7655ba18"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7655baf8"/>
        <function-ref name="getRaw" scoped="" ref="0x7655bbd8"/>
        <function-ref name="set" scoped="" ref="0x7655bcb8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7655bd98"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7655be78"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7655a010"/>
        <function-ref name="clr" scoped="" ref="0x7655a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x76559948" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x76559948"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76559b20"/>
        <function-ref name="isInput" scoped="" ref="0x76559c00"/>
        <function-ref name="setResistor" scoped="" ref="0x76559ce0"/>
        <function-ref name="toggle" scoped="" ref="0x76559dc0"/>
        <function-ref name="isOutput" scoped="" ref="0x76559ea0"/>
        <function-ref name="getResistor" scoped="" ref="0x76558010"/>
        <function-ref name="makeOutput" scoped="" ref="0x765580f0"/>
        <function-ref name="get" scoped="" ref="0x765581d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765582b0"/>
        <function-ref name="getRaw" scoped="" ref="0x76558390"/>
        <function-ref name="set" scoped="" ref="0x76558470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76558550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76558630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76558790"/>
        <function-ref name="clr" scoped="" ref="0x76558870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x76556148" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x76556148"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76556320"/>
        <function-ref name="isInput" scoped="" ref="0x76556400"/>
        <function-ref name="setResistor" scoped="" ref="0x765564e0"/>
        <function-ref name="toggle" scoped="" ref="0x765565c0"/>
        <function-ref name="isOutput" scoped="" ref="0x765566a0"/>
        <function-ref name="getResistor" scoped="" ref="0x76556780"/>
        <function-ref name="makeOutput" scoped="" ref="0x76556860"/>
        <function-ref name="get" scoped="" ref="0x76556940"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76556a20"/>
        <function-ref name="getRaw" scoped="" ref="0x76556b00"/>
        <function-ref name="set" scoped="" ref="0x76556be0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76556cc0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76556da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76556f00"/>
        <function-ref name="clr" scoped="" ref="0x76555010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x765548a0" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x765548a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76554a78"/>
        <function-ref name="isInput" scoped="" ref="0x76554b58"/>
        <function-ref name="setResistor" scoped="" ref="0x76554c38"/>
        <function-ref name="toggle" scoped="" ref="0x76554d18"/>
        <function-ref name="isOutput" scoped="" ref="0x76554df8"/>
        <function-ref name="getResistor" scoped="" ref="0x76554ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x76553010"/>
        <function-ref name="get" scoped="" ref="0x765530f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765531d0"/>
        <function-ref name="getRaw" scoped="" ref="0x765532b0"/>
        <function-ref name="set" scoped="" ref="0x76553390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76553470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76553550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765536b0"/>
        <function-ref name="clr" scoped="" ref="0x76553790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x76550030" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x76550030"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76550208"/>
        <function-ref name="isInput" scoped="" ref="0x765502e8"/>
        <function-ref name="setResistor" scoped="" ref="0x765503c8"/>
        <function-ref name="toggle" scoped="" ref="0x765504a8"/>
        <function-ref name="isOutput" scoped="" ref="0x76550588"/>
        <function-ref name="getResistor" scoped="" ref="0x76550668"/>
        <function-ref name="makeOutput" scoped="" ref="0x76550748"/>
        <function-ref name="get" scoped="" ref="0x76550828"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76550908"/>
        <function-ref name="getRaw" scoped="" ref="0x765509e8"/>
        <function-ref name="set" scoped="" ref="0x76550ac8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76550ba8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76550c88"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76550de8"/>
        <function-ref name="clr" scoped="" ref="0x76550ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7654e730" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7654e730"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7654e908"/>
        <function-ref name="isInput" scoped="" ref="0x7654e9e8"/>
        <function-ref name="setResistor" scoped="" ref="0x7654eac8"/>
        <function-ref name="toggle" scoped="" ref="0x7654eba8"/>
        <function-ref name="isOutput" scoped="" ref="0x7654ec88"/>
        <function-ref name="getResistor" scoped="" ref="0x7654ed68"/>
        <function-ref name="makeOutput" scoped="" ref="0x7654ee48"/>
        <function-ref name="get" scoped="" ref="0x7654ef28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7654d018"/>
        <function-ref name="getRaw" scoped="" ref="0x7654d0f8"/>
        <function-ref name="set" scoped="" ref="0x7654d1d8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7654d2b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7654d398"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7654d4f8"/>
        <function-ref name="clr" scoped="" ref="0x7654d5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7654ce50" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7654ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7654b050"/>
        <function-ref name="isInput" scoped="" ref="0x7654b130"/>
        <function-ref name="setResistor" scoped="" ref="0x7654b210"/>
        <function-ref name="toggle" scoped="" ref="0x7654b2f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7654b3d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7654b4b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7654b590"/>
        <function-ref name="get" scoped="" ref="0x7654b670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7654b750"/>
        <function-ref name="getRaw" scoped="" ref="0x7654b830"/>
        <function-ref name="set" scoped="" ref="0x7654b910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7654b9f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7654bad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7654bc30"/>
        <function-ref name="clr" scoped="" ref="0x7654bd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x765495f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x765495f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765497d0"/>
        <function-ref name="isInput" scoped="" ref="0x765498b0"/>
        <function-ref name="setResistor" scoped="" ref="0x76549990"/>
        <function-ref name="toggle" scoped="" ref="0x76549a70"/>
        <function-ref name="isOutput" scoped="" ref="0x76549b50"/>
        <function-ref name="getResistor" scoped="" ref="0x76549c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x76549d10"/>
        <function-ref name="get" scoped="" ref="0x76549df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76549ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x76548010"/>
        <function-ref name="set" scoped="" ref="0x765480f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765481d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765482b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76548410"/>
        <function-ref name="clr" scoped="" ref="0x765484f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x76547d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x76547d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76546010"/>
        <function-ref name="isInput" scoped="" ref="0x765460f0"/>
        <function-ref name="setResistor" scoped="" ref="0x765461d0"/>
        <function-ref name="toggle" scoped="" ref="0x765462b0"/>
        <function-ref name="isOutput" scoped="" ref="0x76546390"/>
        <function-ref name="getResistor" scoped="" ref="0x76546470"/>
        <function-ref name="makeOutput" scoped="" ref="0x76546550"/>
        <function-ref name="get" scoped="" ref="0x76546630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76546710"/>
        <function-ref name="getRaw" scoped="" ref="0x765467f0"/>
        <function-ref name="set" scoped="" ref="0x765468d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765469b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76546a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76546bf0"/>
        <function-ref name="clr" scoped="" ref="0x76546cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x765445f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x765445f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765447d0"/>
        <function-ref name="isInput" scoped="" ref="0x765448b0"/>
        <function-ref name="setResistor" scoped="" ref="0x76544990"/>
        <function-ref name="toggle" scoped="" ref="0x76544a70"/>
        <function-ref name="isOutput" scoped="" ref="0x76544b50"/>
        <function-ref name="getResistor" scoped="" ref="0x76544c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x76544d10"/>
        <function-ref name="get" scoped="" ref="0x76544df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76544ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x76543010"/>
        <function-ref name="set" scoped="" ref="0x765430f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765431d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765432b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76543410"/>
        <function-ref name="clr" scoped="" ref="0x765434f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x76542de8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x76542de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76541010"/>
        <function-ref name="isInput" scoped="" ref="0x765410f0"/>
        <function-ref name="setResistor" scoped="" ref="0x765411d0"/>
        <function-ref name="toggle" scoped="" ref="0x765412b0"/>
        <function-ref name="isOutput" scoped="" ref="0x76541390"/>
        <function-ref name="getResistor" scoped="" ref="0x76541470"/>
        <function-ref name="makeOutput" scoped="" ref="0x76541550"/>
        <function-ref name="get" scoped="" ref="0x76541630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76541710"/>
        <function-ref name="getRaw" scoped="" ref="0x765417f0"/>
        <function-ref name="set" scoped="" ref="0x765418d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765419b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76541a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76541bf0"/>
        <function-ref name="clr" scoped="" ref="0x76541cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7653f5f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7653f5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7653f7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7653f8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7653f990"/>
        <function-ref name="toggle" scoped="" ref="0x7653fa70"/>
        <function-ref name="isOutput" scoped="" ref="0x7653fb50"/>
        <function-ref name="getResistor" scoped="" ref="0x7653fc30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7653fd10"/>
        <function-ref name="get" scoped="" ref="0x7653fdf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7653fed0"/>
        <function-ref name="getRaw" scoped="" ref="0x7653e010"/>
        <function-ref name="set" scoped="" ref="0x7653e0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7653e1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7653e2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7653e410"/>
        <function-ref name="clr" scoped="" ref="0x7653e4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7653dd68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7653dd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7653c010"/>
        <function-ref name="isInput" scoped="" ref="0x7653c0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7653c1d0"/>
        <function-ref name="toggle" scoped="" ref="0x7653c2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7653c390"/>
        <function-ref name="getResistor" scoped="" ref="0x7653c470"/>
        <function-ref name="makeOutput" scoped="" ref="0x7653c550"/>
        <function-ref name="get" scoped="" ref="0x7653c630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7653c710"/>
        <function-ref name="getRaw" scoped="" ref="0x7653c7f0"/>
        <function-ref name="set" scoped="" ref="0x7653c8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7653c9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7653ca90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7653cbf0"/>
        <function-ref name="clr" scoped="" ref="0x7653ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7653a5f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7653a5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7653a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7653a8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7653a990"/>
        <function-ref name="toggle" scoped="" ref="0x7653aa70"/>
        <function-ref name="isOutput" scoped="" ref="0x7653ab50"/>
        <function-ref name="getResistor" scoped="" ref="0x7653ac30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7653ad10"/>
        <function-ref name="get" scoped="" ref="0x7653adf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7653aed0"/>
        <function-ref name="getRaw" scoped="" ref="0x76539010"/>
        <function-ref name="set" scoped="" ref="0x765390f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765391d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765392b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76539410"/>
        <function-ref name="clr" scoped="" ref="0x765394f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x76538d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x76538d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76537010"/>
        <function-ref name="isInput" scoped="" ref="0x765370f0"/>
        <function-ref name="setResistor" scoped="" ref="0x765371d0"/>
        <function-ref name="toggle" scoped="" ref="0x765372b0"/>
        <function-ref name="isOutput" scoped="" ref="0x76537390"/>
        <function-ref name="getResistor" scoped="" ref="0x76537470"/>
        <function-ref name="makeOutput" scoped="" ref="0x76537550"/>
        <function-ref name="get" scoped="" ref="0x76537630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76537710"/>
        <function-ref name="getRaw" scoped="" ref="0x765377f0"/>
        <function-ref name="set" scoped="" ref="0x765378d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765379b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76537a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76537bf0"/>
        <function-ref name="clr" scoped="" ref="0x76537cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x765355f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x765355f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765357d0"/>
        <function-ref name="isInput" scoped="" ref="0x765358b0"/>
        <function-ref name="setResistor" scoped="" ref="0x76535990"/>
        <function-ref name="toggle" scoped="" ref="0x76535a70"/>
        <function-ref name="isOutput" scoped="" ref="0x76535b50"/>
        <function-ref name="getResistor" scoped="" ref="0x76535c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x76535d10"/>
        <function-ref name="get" scoped="" ref="0x76535df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76535ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x76534010"/>
        <function-ref name="set" scoped="" ref="0x765340f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765341d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765342b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76534410"/>
        <function-ref name="clr" scoped="" ref="0x765344f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x76532d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x76532d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76531010"/>
        <function-ref name="isInput" scoped="" ref="0x765310f0"/>
        <function-ref name="setResistor" scoped="" ref="0x765311d0"/>
        <function-ref name="toggle" scoped="" ref="0x765312b0"/>
        <function-ref name="isOutput" scoped="" ref="0x76531390"/>
        <function-ref name="getResistor" scoped="" ref="0x76531470"/>
        <function-ref name="makeOutput" scoped="" ref="0x76531550"/>
        <function-ref name="get" scoped="" ref="0x76531630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76531710"/>
        <function-ref name="getRaw" scoped="" ref="0x765317f0"/>
        <function-ref name="set" scoped="" ref="0x765318d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765319b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76531a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76531bf0"/>
        <function-ref name="clr" scoped="" ref="0x76531cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7652f5f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7652f5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7652f7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7652f8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7652f990"/>
        <function-ref name="toggle" scoped="" ref="0x7652fa70"/>
        <function-ref name="isOutput" scoped="" ref="0x7652fb50"/>
        <function-ref name="getResistor" scoped="" ref="0x7652fc30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7652fd10"/>
        <function-ref name="get" scoped="" ref="0x7652fdf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7652fed0"/>
        <function-ref name="getRaw" scoped="" ref="0x7652e010"/>
        <function-ref name="set" scoped="" ref="0x7652e0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7652e1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7652e2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7652e410"/>
        <function-ref name="clr" scoped="" ref="0x7652e4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7652dd68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7652dd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7652c010"/>
        <function-ref name="isInput" scoped="" ref="0x7652c0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7652c1d0"/>
        <function-ref name="toggle" scoped="" ref="0x7652c2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7652c390"/>
        <function-ref name="getResistor" scoped="" ref="0x7652c470"/>
        <function-ref name="makeOutput" scoped="" ref="0x7652c550"/>
        <function-ref name="get" scoped="" ref="0x7652c630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7652c710"/>
        <function-ref name="getRaw" scoped="" ref="0x7652c7f0"/>
        <function-ref name="set" scoped="" ref="0x7652c8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7652c9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7652ca90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7652cbf0"/>
        <function-ref name="clr" scoped="" ref="0x7652ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7652a5f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7652a5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7652a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7652a8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7652a990"/>
        <function-ref name="toggle" scoped="" ref="0x7652aa70"/>
        <function-ref name="isOutput" scoped="" ref="0x7652ab50"/>
        <function-ref name="getResistor" scoped="" ref="0x7652ac30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7652ad10"/>
        <function-ref name="get" scoped="" ref="0x7652adf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7652aed0"/>
        <function-ref name="getRaw" scoped="" ref="0x76529010"/>
        <function-ref name="set" scoped="" ref="0x765290f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765291d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765292b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76529410"/>
        <function-ref name="clr" scoped="" ref="0x765294f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x76528d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x76528d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76527010"/>
        <function-ref name="isInput" scoped="" ref="0x765270f0"/>
        <function-ref name="setResistor" scoped="" ref="0x765271d0"/>
        <function-ref name="toggle" scoped="" ref="0x765272b0"/>
        <function-ref name="isOutput" scoped="" ref="0x76527390"/>
        <function-ref name="getResistor" scoped="" ref="0x76527470"/>
        <function-ref name="makeOutput" scoped="" ref="0x76527550"/>
        <function-ref name="get" scoped="" ref="0x76527630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76527710"/>
        <function-ref name="getRaw" scoped="" ref="0x765277f0"/>
        <function-ref name="set" scoped="" ref="0x765278d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765279b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76527a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76527bf0"/>
        <function-ref name="clr" scoped="" ref="0x76527cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x765255f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x765255f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765257d0"/>
        <function-ref name="isInput" scoped="" ref="0x765258b0"/>
        <function-ref name="setResistor" scoped="" ref="0x76525990"/>
        <function-ref name="toggle" scoped="" ref="0x76525a70"/>
        <function-ref name="isOutput" scoped="" ref="0x76525b50"/>
        <function-ref name="getResistor" scoped="" ref="0x76525c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x76525d10"/>
        <function-ref name="get" scoped="" ref="0x76525df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76525ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x76524010"/>
        <function-ref name="set" scoped="" ref="0x765240f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765241d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765242b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76524410"/>
        <function-ref name="clr" scoped="" ref="0x765244f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x76523e68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x76523e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76522050"/>
        <function-ref name="isInput" scoped="" ref="0x76522130"/>
        <function-ref name="setResistor" scoped="" ref="0x76522210"/>
        <function-ref name="toggle" scoped="" ref="0x765222f0"/>
        <function-ref name="isOutput" scoped="" ref="0x765223d0"/>
        <function-ref name="getResistor" scoped="" ref="0x765224b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76522590"/>
        <function-ref name="get" scoped="" ref="0x76522670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76522750"/>
        <function-ref name="getRaw" scoped="" ref="0x76522830"/>
        <function-ref name="set" scoped="" ref="0x76522910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765229f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76522ad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76522c30"/>
        <function-ref name="clr" scoped="" ref="0x76522d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x765205f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x765205f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765207d0"/>
        <function-ref name="isInput" scoped="" ref="0x765208b0"/>
        <function-ref name="setResistor" scoped="" ref="0x76520990"/>
        <function-ref name="toggle" scoped="" ref="0x76520a70"/>
        <function-ref name="isOutput" scoped="" ref="0x76520b50"/>
        <function-ref name="getResistor" scoped="" ref="0x76520c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x76520d10"/>
        <function-ref name="get" scoped="" ref="0x76520df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76520ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x7651f010"/>
        <function-ref name="set" scoped="" ref="0x7651f0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7651f1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7651f2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7651f410"/>
        <function-ref name="clr" scoped="" ref="0x7651f4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7651ed68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7651ed68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7651d010"/>
        <function-ref name="isInput" scoped="" ref="0x7651d0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7651d1d0"/>
        <function-ref name="toggle" scoped="" ref="0x7651d2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7651d390"/>
        <function-ref name="getResistor" scoped="" ref="0x7651d470"/>
        <function-ref name="makeOutput" scoped="" ref="0x7651d550"/>
        <function-ref name="get" scoped="" ref="0x7651d630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7651d710"/>
        <function-ref name="getRaw" scoped="" ref="0x7651d7f0"/>
        <function-ref name="set" scoped="" ref="0x7651d8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7651d9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7651da90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7651dbf0"/>
        <function-ref name="clr" scoped="" ref="0x7651dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7651b5f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7651b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7651b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7651b8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7651b990"/>
        <function-ref name="toggle" scoped="" ref="0x7651ba70"/>
        <function-ref name="isOutput" scoped="" ref="0x7651bb50"/>
        <function-ref name="getResistor" scoped="" ref="0x7651bc30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7651bd10"/>
        <function-ref name="get" scoped="" ref="0x7651bdf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7651bed0"/>
        <function-ref name="getRaw" scoped="" ref="0x7651a010"/>
        <function-ref name="set" scoped="" ref="0x7651a0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7651a1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7651a2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7651a410"/>
        <function-ref name="clr" scoped="" ref="0x7651a4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x76519d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x76519d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76518010"/>
        <function-ref name="isInput" scoped="" ref="0x765180f0"/>
        <function-ref name="setResistor" scoped="" ref="0x765181d0"/>
        <function-ref name="toggle" scoped="" ref="0x765182b0"/>
        <function-ref name="isOutput" scoped="" ref="0x76518390"/>
        <function-ref name="getResistor" scoped="" ref="0x76518470"/>
        <function-ref name="makeOutput" scoped="" ref="0x76518550"/>
        <function-ref name="get" scoped="" ref="0x76518630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76518710"/>
        <function-ref name="getRaw" scoped="" ref="0x765187f0"/>
        <function-ref name="set" scoped="" ref="0x765188d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765189b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76518a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76518bf0"/>
        <function-ref name="clr" scoped="" ref="0x76518cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x765165f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x765165f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765167d0"/>
        <function-ref name="isInput" scoped="" ref="0x765168b0"/>
        <function-ref name="setResistor" scoped="" ref="0x76516990"/>
        <function-ref name="toggle" scoped="" ref="0x76516a70"/>
        <function-ref name="isOutput" scoped="" ref="0x76516b50"/>
        <function-ref name="getResistor" scoped="" ref="0x76516c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x76516d10"/>
        <function-ref name="get" scoped="" ref="0x76516df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76516ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x76515010"/>
        <function-ref name="set" scoped="" ref="0x765150f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765151d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765152b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76515410"/>
        <function-ref name="clr" scoped="" ref="0x765154f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x76513d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x76513d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76512010"/>
        <function-ref name="isInput" scoped="" ref="0x765120f0"/>
        <function-ref name="setResistor" scoped="" ref="0x765121d0"/>
        <function-ref name="toggle" scoped="" ref="0x765122b0"/>
        <function-ref name="isOutput" scoped="" ref="0x76512390"/>
        <function-ref name="getResistor" scoped="" ref="0x76512470"/>
        <function-ref name="makeOutput" scoped="" ref="0x76512550"/>
        <function-ref name="get" scoped="" ref="0x76512630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76512710"/>
        <function-ref name="getRaw" scoped="" ref="0x765127f0"/>
        <function-ref name="set" scoped="" ref="0x765128d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765129b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76512a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76512bf0"/>
        <function-ref name="clr" scoped="" ref="0x76512cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x765105f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x765105f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765107d0"/>
        <function-ref name="isInput" scoped="" ref="0x765108b0"/>
        <function-ref name="setResistor" scoped="" ref="0x76510990"/>
        <function-ref name="toggle" scoped="" ref="0x76510a70"/>
        <function-ref name="isOutput" scoped="" ref="0x76510b50"/>
        <function-ref name="getResistor" scoped="" ref="0x76510c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x76510d10"/>
        <function-ref name="get" scoped="" ref="0x76510df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76510ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x7650f010"/>
        <function-ref name="set" scoped="" ref="0x7650f0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7650f1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7650f2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7650f410"/>
        <function-ref name="clr" scoped="" ref="0x7650f4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7650ed68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7650ed68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7650d010"/>
        <function-ref name="isInput" scoped="" ref="0x7650d0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7650d1d0"/>
        <function-ref name="toggle" scoped="" ref="0x7650d2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7650d390"/>
        <function-ref name="getResistor" scoped="" ref="0x7650d470"/>
        <function-ref name="makeOutput" scoped="" ref="0x7650d550"/>
        <function-ref name="get" scoped="" ref="0x7650d630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7650d710"/>
        <function-ref name="getRaw" scoped="" ref="0x7650d7f0"/>
        <function-ref name="set" scoped="" ref="0x7650d8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7650d9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7650da90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7650dbf0"/>
        <function-ref name="clr" scoped="" ref="0x7650dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7650b5f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7650b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7650b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7650b8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7650b990"/>
        <function-ref name="toggle" scoped="" ref="0x7650ba70"/>
        <function-ref name="isOutput" scoped="" ref="0x7650bb50"/>
        <function-ref name="getResistor" scoped="" ref="0x7650bc30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7650bd10"/>
        <function-ref name="get" scoped="" ref="0x7650bdf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7650bed0"/>
        <function-ref name="getRaw" scoped="" ref="0x7650a010"/>
        <function-ref name="set" scoped="" ref="0x7650a0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7650a1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7650a2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7650a410"/>
        <function-ref name="clr" scoped="" ref="0x7650a4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x76509d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x76509d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76508010"/>
        <function-ref name="isInput" scoped="" ref="0x765080f0"/>
        <function-ref name="setResistor" scoped="" ref="0x765081d0"/>
        <function-ref name="toggle" scoped="" ref="0x765082b0"/>
        <function-ref name="isOutput" scoped="" ref="0x76508390"/>
        <function-ref name="getResistor" scoped="" ref="0x76508470"/>
        <function-ref name="makeOutput" scoped="" ref="0x76508550"/>
        <function-ref name="get" scoped="" ref="0x76508630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76508710"/>
        <function-ref name="getRaw" scoped="" ref="0x765087f0"/>
        <function-ref name="set" scoped="" ref="0x765088d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765089b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76508a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76508bf0"/>
        <function-ref name="clr" scoped="" ref="0x76508cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x765065f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x765065f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765067d0"/>
        <function-ref name="isInput" scoped="" ref="0x765068b0"/>
        <function-ref name="setResistor" scoped="" ref="0x76506990"/>
        <function-ref name="toggle" scoped="" ref="0x76506a70"/>
        <function-ref name="isOutput" scoped="" ref="0x76506b50"/>
        <function-ref name="getResistor" scoped="" ref="0x76506c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x76506d10"/>
        <function-ref name="get" scoped="" ref="0x76506df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76506ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x76505010"/>
        <function-ref name="set" scoped="" ref="0x765050f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765051d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765052b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76505410"/>
        <function-ref name="clr" scoped="" ref="0x765054f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x76504d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x76504d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76503010"/>
        <function-ref name="isInput" scoped="" ref="0x765030f0"/>
        <function-ref name="setResistor" scoped="" ref="0x765031d0"/>
        <function-ref name="toggle" scoped="" ref="0x765032b0"/>
        <function-ref name="isOutput" scoped="" ref="0x76503390"/>
        <function-ref name="getResistor" scoped="" ref="0x76503470"/>
        <function-ref name="makeOutput" scoped="" ref="0x76503550"/>
        <function-ref name="get" scoped="" ref="0x76503630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76503710"/>
        <function-ref name="getRaw" scoped="" ref="0x765037f0"/>
        <function-ref name="set" scoped="" ref="0x765038d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765039b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76503a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76503bf0"/>
        <function-ref name="clr" scoped="" ref="0x76503cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x765015f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x765015f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765017d0"/>
        <function-ref name="isInput" scoped="" ref="0x765018b0"/>
        <function-ref name="setResistor" scoped="" ref="0x76501990"/>
        <function-ref name="toggle" scoped="" ref="0x76501a70"/>
        <function-ref name="isOutput" scoped="" ref="0x76501b50"/>
        <function-ref name="getResistor" scoped="" ref="0x76501c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x76501d10"/>
        <function-ref name="get" scoped="" ref="0x76501df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76501ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x76500010"/>
        <function-ref name="set" scoped="" ref="0x765000f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765001d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765002b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76500410"/>
        <function-ref name="clr" scoped="" ref="0x765004f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764ffd68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764ffd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764fe010"/>
        <function-ref name="isInput" scoped="" ref="0x764fe0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x764fe1d0"/>
        <function-ref name="toggle" scoped="" ref="0x764fe2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x764fe390"/>
        <function-ref name="getResistor" scoped="" ref="0x764fe470"/>
        <function-ref name="makeOutput" scoped="" ref="0x764fe550"/>
        <function-ref name="get" scoped="" ref="0x764fe630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764fe710"/>
        <function-ref name="getRaw" scoped="" ref="0x764fe7f0"/>
        <function-ref name="set" scoped="" ref="0x764fe8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764fe9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764fea90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764febf0"/>
        <function-ref name="clr" scoped="" ref="0x764fecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764fc5f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764fc5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764fc7d0"/>
        <function-ref name="isInput" scoped="" ref="0x764fc8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x764fc990"/>
        <function-ref name="toggle" scoped="" ref="0x764fca70"/>
        <function-ref name="isOutput" scoped="" ref="0x764fcb50"/>
        <function-ref name="getResistor" scoped="" ref="0x764fcc30"/>
        <function-ref name="makeOutput" scoped="" ref="0x764fcd10"/>
        <function-ref name="get" scoped="" ref="0x764fcdf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764fced0"/>
        <function-ref name="getRaw" scoped="" ref="0x764fb010"/>
        <function-ref name="set" scoped="" ref="0x764fb0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764fb1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764fb2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764fb410"/>
        <function-ref name="clr" scoped="" ref="0x764fb4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764fad68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764fad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764f9010"/>
        <function-ref name="isInput" scoped="" ref="0x764f90f0"/>
        <function-ref name="setResistor" scoped="" ref="0x764f91d0"/>
        <function-ref name="toggle" scoped="" ref="0x764f92b0"/>
        <function-ref name="isOutput" scoped="" ref="0x764f9390"/>
        <function-ref name="getResistor" scoped="" ref="0x764f9470"/>
        <function-ref name="makeOutput" scoped="" ref="0x764f9550"/>
        <function-ref name="get" scoped="" ref="0x764f9630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764f9710"/>
        <function-ref name="getRaw" scoped="" ref="0x764f97f0"/>
        <function-ref name="set" scoped="" ref="0x764f98d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764f99b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764f9a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764f9bf0"/>
        <function-ref name="clr" scoped="" ref="0x764f9cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764f75f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764f75f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764f77d0"/>
        <function-ref name="isInput" scoped="" ref="0x764f78b0"/>
        <function-ref name="setResistor" scoped="" ref="0x764f7990"/>
        <function-ref name="toggle" scoped="" ref="0x764f7a70"/>
        <function-ref name="isOutput" scoped="" ref="0x764f7b50"/>
        <function-ref name="getResistor" scoped="" ref="0x764f7c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x764f7d10"/>
        <function-ref name="get" scoped="" ref="0x764f7df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764f7ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x764f6010"/>
        <function-ref name="set" scoped="" ref="0x764f60f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764f61d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764f62b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764f6410"/>
        <function-ref name="clr" scoped="" ref="0x764f64f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764f4d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764f4d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764f3010"/>
        <function-ref name="isInput" scoped="" ref="0x764f30f0"/>
        <function-ref name="setResistor" scoped="" ref="0x764f31d0"/>
        <function-ref name="toggle" scoped="" ref="0x764f32b0"/>
        <function-ref name="isOutput" scoped="" ref="0x764f3390"/>
        <function-ref name="getResistor" scoped="" ref="0x764f3470"/>
        <function-ref name="makeOutput" scoped="" ref="0x764f3550"/>
        <function-ref name="get" scoped="" ref="0x764f3630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764f3710"/>
        <function-ref name="getRaw" scoped="" ref="0x764f37f0"/>
        <function-ref name="set" scoped="" ref="0x764f38d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764f39b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764f3a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764f3bf0"/>
        <function-ref name="clr" scoped="" ref="0x764f3cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764f15f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764f15f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764f17d0"/>
        <function-ref name="isInput" scoped="" ref="0x764f18b0"/>
        <function-ref name="setResistor" scoped="" ref="0x764f1990"/>
        <function-ref name="toggle" scoped="" ref="0x764f1a70"/>
        <function-ref name="isOutput" scoped="" ref="0x764f1b50"/>
        <function-ref name="getResistor" scoped="" ref="0x764f1c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x764f1d10"/>
        <function-ref name="get" scoped="" ref="0x764f1df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764f1ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x764f0010"/>
        <function-ref name="set" scoped="" ref="0x764f00f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764f01d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764f02b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764f0410"/>
        <function-ref name="clr" scoped="" ref="0x764f04f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764efd68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764efd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764ee010"/>
        <function-ref name="isInput" scoped="" ref="0x764ee0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x764ee1d0"/>
        <function-ref name="toggle" scoped="" ref="0x764ee2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x764ee390"/>
        <function-ref name="getResistor" scoped="" ref="0x764ee470"/>
        <function-ref name="makeOutput" scoped="" ref="0x764ee550"/>
        <function-ref name="get" scoped="" ref="0x764ee630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764ee710"/>
        <function-ref name="getRaw" scoped="" ref="0x764ee7f0"/>
        <function-ref name="set" scoped="" ref="0x764ee8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764ee9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764eea90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764eebf0"/>
        <function-ref name="clr" scoped="" ref="0x764eecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764ec5f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764ec5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764ec7d0"/>
        <function-ref name="isInput" scoped="" ref="0x764ec8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x764ec990"/>
        <function-ref name="toggle" scoped="" ref="0x764eca70"/>
        <function-ref name="isOutput" scoped="" ref="0x764ecb50"/>
        <function-ref name="getResistor" scoped="" ref="0x764ecc30"/>
        <function-ref name="makeOutput" scoped="" ref="0x764ecd10"/>
        <function-ref name="get" scoped="" ref="0x764ecdf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764eced0"/>
        <function-ref name="getRaw" scoped="" ref="0x764eb010"/>
        <function-ref name="set" scoped="" ref="0x764eb0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764eb1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764eb2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764eb410"/>
        <function-ref name="clr" scoped="" ref="0x764eb4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764ead68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764ead68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764e9010"/>
        <function-ref name="isInput" scoped="" ref="0x764e90f0"/>
        <function-ref name="setResistor" scoped="" ref="0x764e91d0"/>
        <function-ref name="toggle" scoped="" ref="0x764e92b0"/>
        <function-ref name="isOutput" scoped="" ref="0x764e9390"/>
        <function-ref name="getResistor" scoped="" ref="0x764e9470"/>
        <function-ref name="makeOutput" scoped="" ref="0x764e9550"/>
        <function-ref name="get" scoped="" ref="0x764e9630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764e9710"/>
        <function-ref name="getRaw" scoped="" ref="0x764e97f0"/>
        <function-ref name="set" scoped="" ref="0x764e98d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764e99b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764e9a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764e9bf0"/>
        <function-ref name="clr" scoped="" ref="0x764e9cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764e75f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764e75f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764e77d0"/>
        <function-ref name="isInput" scoped="" ref="0x764e78b0"/>
        <function-ref name="setResistor" scoped="" ref="0x764e7990"/>
        <function-ref name="toggle" scoped="" ref="0x764e7a70"/>
        <function-ref name="isOutput" scoped="" ref="0x764e7b50"/>
        <function-ref name="getResistor" scoped="" ref="0x764e7c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x764e7d10"/>
        <function-ref name="get" scoped="" ref="0x764e7df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764e7ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x764e6010"/>
        <function-ref name="set" scoped="" ref="0x764e60f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764e61d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764e62b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764e6410"/>
        <function-ref name="clr" scoped="" ref="0x764e64f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x764b7c48" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x764b7c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764b7e20"/>
        <function-ref name="isInput" scoped="" ref="0x764b7f00"/>
        <function-ref name="setResistor" scoped="" ref="0x764b6010"/>
        <function-ref name="toggle" scoped="" ref="0x764b60f0"/>
        <function-ref name="isOutput" scoped="" ref="0x764b61d0"/>
        <function-ref name="getResistor" scoped="" ref="0x764b62b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x764b6390"/>
        <function-ref name="get" scoped="" ref="0x764b6470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764b6550"/>
        <function-ref name="getRaw" scoped="" ref="0x764b6630"/>
        <function-ref name="set" scoped="" ref="0x764b6710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764b67f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764b68d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764b6a30"/>
        <function-ref name="clr" scoped="" ref="0x764b6b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x764b72d0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x764b72d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764b74a8"/>
        <function-ref name="isInput" scoped="" ref="0x764b7588"/>
        <function-ref name="toggle" scoped="" ref="0x764b7668"/>
        <function-ref name="isOutput" scoped="" ref="0x764b7748"/>
        <function-ref name="get" scoped="" ref="0x764b7828"/>
        <function-ref name="makeOutput" scoped="" ref="0x764b7908"/>
        <function-ref name="set" scoped="" ref="0x764b79e8"/>
        <function-ref name="clr" scoped="" ref="0x764b7ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x764a6430" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x764a6430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764a6608"/>
        <function-ref name="isInput" scoped="" ref="0x764a66e8"/>
        <function-ref name="setResistor" scoped="" ref="0x764a67c8"/>
        <function-ref name="toggle" scoped="" ref="0x764a68a8"/>
        <function-ref name="isOutput" scoped="" ref="0x764a6988"/>
        <function-ref name="getResistor" scoped="" ref="0x764a6a68"/>
        <function-ref name="makeOutput" scoped="" ref="0x764a6b48"/>
        <function-ref name="get" scoped="" ref="0x764a6c28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764a6d08"/>
        <function-ref name="getRaw" scoped="" ref="0x764a6de8"/>
        <function-ref name="set" scoped="" ref="0x764a6ec8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764a5010"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764a50f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764a5250"/>
        <function-ref name="clr" scoped="" ref="0x764a5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x764a7a58" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x764a7a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764a7c30"/>
        <function-ref name="isInput" scoped="" ref="0x764a7d10"/>
        <function-ref name="toggle" scoped="" ref="0x764a7df0"/>
        <function-ref name="isOutput" scoped="" ref="0x764a7ed0"/>
        <function-ref name="get" scoped="" ref="0x764a6010"/>
        <function-ref name="makeOutput" scoped="" ref="0x764a60f0"/>
        <function-ref name="set" scoped="" ref="0x764a61d0"/>
        <function-ref name="clr" scoped="" ref="0x764a62b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x764a4c18" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x764a4c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764a4df0"/>
        <function-ref name="isInput" scoped="" ref="0x764a4ed0"/>
        <function-ref name="setResistor" scoped="" ref="0x764a3010"/>
        <function-ref name="toggle" scoped="" ref="0x764a30f0"/>
        <function-ref name="isOutput" scoped="" ref="0x764a31d0"/>
        <function-ref name="getResistor" scoped="" ref="0x764a32b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x764a3390"/>
        <function-ref name="get" scoped="" ref="0x764a3470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764a3550"/>
        <function-ref name="getRaw" scoped="" ref="0x764a3630"/>
        <function-ref name="set" scoped="" ref="0x764a3710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764a37f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764a38d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764a3a30"/>
        <function-ref name="clr" scoped="" ref="0x764a3b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x764a42a0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x764a42a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764a4478"/>
        <function-ref name="isInput" scoped="" ref="0x764a4558"/>
        <function-ref name="toggle" scoped="" ref="0x764a4638"/>
        <function-ref name="isOutput" scoped="" ref="0x764a4718"/>
        <function-ref name="get" scoped="" ref="0x764a47f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x764a48d8"/>
        <function-ref name="set" scoped="" ref="0x764a49b8"/>
        <function-ref name="clr" scoped="" ref="0x764a4a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x764a1430" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x764a1430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764a1608"/>
        <function-ref name="isInput" scoped="" ref="0x764a16e8"/>
        <function-ref name="setResistor" scoped="" ref="0x764a17c8"/>
        <function-ref name="toggle" scoped="" ref="0x764a18a8"/>
        <function-ref name="isOutput" scoped="" ref="0x764a1988"/>
        <function-ref name="getResistor" scoped="" ref="0x764a1a68"/>
        <function-ref name="makeOutput" scoped="" ref="0x764a1b48"/>
        <function-ref name="get" scoped="" ref="0x764a1c28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764a1d08"/>
        <function-ref name="getRaw" scoped="" ref="0x764a1de8"/>
        <function-ref name="set" scoped="" ref="0x764a1ec8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764a0010"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764a00f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764a0250"/>
        <function-ref name="clr" scoped="" ref="0x764a0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x764a2a68" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x764a2a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764a2c40"/>
        <function-ref name="isInput" scoped="" ref="0x764a2d20"/>
        <function-ref name="toggle" scoped="" ref="0x764a2e00"/>
        <function-ref name="isOutput" scoped="" ref="0x764a2ee0"/>
        <function-ref name="get" scoped="" ref="0x764a1010"/>
        <function-ref name="makeOutput" scoped="" ref="0x764a10f0"/>
        <function-ref name="set" scoped="" ref="0x764a11d0"/>
        <function-ref name="clr" scoped="" ref="0x764a12b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7649fc18" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7649fc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7649fdf0"/>
        <function-ref name="isInput" scoped="" ref="0x7649fed0"/>
        <function-ref name="setResistor" scoped="" ref="0x7649d010"/>
        <function-ref name="toggle" scoped="" ref="0x7649d0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7649d1d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7649d2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7649d390"/>
        <function-ref name="get" scoped="" ref="0x7649d470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7649d550"/>
        <function-ref name="getRaw" scoped="" ref="0x7649d630"/>
        <function-ref name="set" scoped="" ref="0x7649d710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7649d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7649d8d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7649da30"/>
        <function-ref name="clr" scoped="" ref="0x7649db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7649f2a0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7649f2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7649f478"/>
        <function-ref name="isInput" scoped="" ref="0x7649f558"/>
        <function-ref name="toggle" scoped="" ref="0x7649f638"/>
        <function-ref name="isOutput" scoped="" ref="0x7649f718"/>
        <function-ref name="get" scoped="" ref="0x7649f7f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7649f8d8"/>
        <function-ref name="set" scoped="" ref="0x7649f9b8"/>
        <function-ref name="clr" scoped="" ref="0x7649fa98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7649b430" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7649b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7649b608"/>
        <function-ref name="isInput" scoped="" ref="0x7649b6e8"/>
        <function-ref name="setResistor" scoped="" ref="0x7649b7c8"/>
        <function-ref name="toggle" scoped="" ref="0x7649b8a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7649b988"/>
        <function-ref name="getResistor" scoped="" ref="0x7649ba68"/>
        <function-ref name="makeOutput" scoped="" ref="0x7649bb48"/>
        <function-ref name="get" scoped="" ref="0x7649bc28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7649bd08"/>
        <function-ref name="getRaw" scoped="" ref="0x7649bde8"/>
        <function-ref name="set" scoped="" ref="0x7649bec8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7649a010"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7649a0f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7649a250"/>
        <function-ref name="clr" scoped="" ref="0x7649a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7649ca58" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7649ca58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7649cc30"/>
        <function-ref name="isInput" scoped="" ref="0x7649cd10"/>
        <function-ref name="toggle" scoped="" ref="0x7649cdf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7649ced0"/>
        <function-ref name="get" scoped="" ref="0x7649b010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7649b0f0"/>
        <function-ref name="set" scoped="" ref="0x7649b1d0"/>
        <function-ref name="clr" scoped="" ref="0x7649b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x76499c18" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x76499c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76499df0"/>
        <function-ref name="isInput" scoped="" ref="0x76499ed0"/>
        <function-ref name="setResistor" scoped="" ref="0x76498010"/>
        <function-ref name="toggle" scoped="" ref="0x764980f0"/>
        <function-ref name="isOutput" scoped="" ref="0x764981d0"/>
        <function-ref name="getResistor" scoped="" ref="0x764982b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76498390"/>
        <function-ref name="get" scoped="" ref="0x76498470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76498550"/>
        <function-ref name="getRaw" scoped="" ref="0x76498630"/>
        <function-ref name="set" scoped="" ref="0x76498710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764987f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764988d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76498a30"/>
        <function-ref name="clr" scoped="" ref="0x76498b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x764992a0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x764992a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76499478"/>
        <function-ref name="isInput" scoped="" ref="0x76499558"/>
        <function-ref name="toggle" scoped="" ref="0x76499638"/>
        <function-ref name="isOutput" scoped="" ref="0x76499718"/>
        <function-ref name="get" scoped="" ref="0x764997f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x764998d8"/>
        <function-ref name="set" scoped="" ref="0x764999b8"/>
        <function-ref name="clr" scoped="" ref="0x76499a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7648a7f0" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7648a7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7648a9c8"/>
        <function-ref name="disable" scoped="" ref="0x7648aaa8"/>
        <function-ref name="captured" scoped="" ref="0x7648ab88"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7648ac68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7648aef0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7648aef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7648c0e0"/>
        <function-ref name="disable" scoped="" ref="0x7648c1c0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7648c2a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7648c380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7648c618" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7648c618"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7648c7f0"/>
        <function-ref name="disable" scoped="" ref="0x7648c8d0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7648c9b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7648ca90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x76488a48" loc="42:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x76488a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76488c20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x76488d00"/>
        <function-ref name="captured" scoped="" ref="0x76488de0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76488ec0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7647d010"/>
        <function-ref name="setEdge" scoped="" ref="0x7647d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x764899f0" loc="40:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x764899f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x76489bc8"/>
        <function-ref name="disable" scoped="" ref="0x76489ca8"/>
        <function-ref name="captured" scoped="" ref="0x76489d88"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x76489e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x76488010" loc="41:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x76488010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x764881e8"/>
        <function-ref name="getControl" scoped="" ref="0x764882c8"/>
        <function-ref name="enableEvents" scoped="" ref="0x764883a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x76488488"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x76488568"/>
        <function-ref name="disableEvents" scoped="" ref="0x76488648"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x76488728"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x76488808"/>
        <function-ref name="setControl" scoped="" ref="0x764888e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7647d270" loc="43:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7647d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7647d448"/>
        <function-ref name="isInput" scoped="" ref="0x7647d528"/>
        <function-ref name="setResistor" scoped="" ref="0x7647d608"/>
        <function-ref name="toggle" scoped="" ref="0x7647d6e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7647d7c8"/>
        <function-ref name="getResistor" scoped="" ref="0x7647d8a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7647d988"/>
        <function-ref name="get" scoped="" ref="0x7647da68"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7647db48"/>
        <function-ref name="getRaw" scoped="" ref="0x7647dc28"/>
        <function-ref name="set" scoped="" ref="0x7647dd08"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7647dde8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7647dec8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7647c090"/>
        <function-ref name="clr" scoped="" ref="0x7647c170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x76472010" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x76472010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x764721e8"/>
        <function-ref name="fired" scoped="" ref="0x764722c8"/>
        <function-ref name="disable" scoped="" ref="0x764723a8"/>
        <function-ref name="edge" scoped="" ref="0x76472488"/>
        <function-ref name="enable" scoped="" ref="0x76472568"/>
        <function-ref name="getValue" scoped="" ref="0x76472648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7646d8e0" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7646d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7646dab8"/>
        <function-ref name="fired" scoped="" ref="0x7646db98"/>
        <function-ref name="disable" scoped="" ref="0x7646dc78"/>
        <function-ref name="edge" scoped="" ref="0x7646dd58"/>
        <function-ref name="enable" scoped="" ref="0x7646de38"/>
        <function-ref name="getValue" scoped="" ref="0x7646df18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x76471a38" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x76471a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76471c10"/>
        <function-ref name="fired" scoped="" ref="0x76471cf0"/>
        <function-ref name="disable" scoped="" ref="0x76471dd0"/>
        <function-ref name="edge" scoped="" ref="0x76471eb0"/>
        <function-ref name="enable" scoped="" ref="0x76470010"/>
        <function-ref name="getValue" scoped="" ref="0x764700f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x76470c18" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x76470c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76470df0"/>
        <function-ref name="fired" scoped="" ref="0x76470ed0"/>
        <function-ref name="disable" scoped="" ref="0x7646f010"/>
        <function-ref name="edge" scoped="" ref="0x7646f0f0"/>
        <function-ref name="enable" scoped="" ref="0x7646f1d0"/>
        <function-ref name="getValue" scoped="" ref="0x7646f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x76477dd8" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x76477dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76476010"/>
        <function-ref name="fired" scoped="" ref="0x764760f0"/>
        <function-ref name="disable" scoped="" ref="0x764761d0"/>
        <function-ref name="edge" scoped="" ref="0x764762b0"/>
        <function-ref name="enable" scoped="" ref="0x76476390"/>
        <function-ref name="getValue" scoped="" ref="0x76476470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7646e6e8" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7646e6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7646e940"/>
        <function-ref name="fired" scoped="" ref="0x7646ea20"/>
        <function-ref name="disable" scoped="" ref="0x7646eb00"/>
        <function-ref name="edge" scoped="" ref="0x7646ebe0"/>
        <function-ref name="enable" scoped="" ref="0x7646ecc0"/>
        <function-ref name="getValue" scoped="" ref="0x7646eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x764728c0" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x764728c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76472a98"/>
        <function-ref name="fired" scoped="" ref="0x76472b78"/>
        <function-ref name="disable" scoped="" ref="0x76472c58"/>
        <function-ref name="edge" scoped="" ref="0x76472d38"/>
        <function-ref name="enable" scoped="" ref="0x76472e18"/>
        <function-ref name="getValue" scoped="" ref="0x76472ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7646c1a8" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7646c1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7646c380"/>
        <function-ref name="fired" scoped="" ref="0x7646c460"/>
        <function-ref name="disable" scoped="" ref="0x7646c540"/>
        <function-ref name="edge" scoped="" ref="0x7646c620"/>
        <function-ref name="enable" scoped="" ref="0x7646c700"/>
        <function-ref name="getValue" scoped="" ref="0x7646c7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x76474c58" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x76474c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76474e30"/>
        <function-ref name="fired" scoped="" ref="0x76474f10"/>
        <function-ref name="disable" scoped="" ref="0x76477010"/>
        <function-ref name="edge" scoped="" ref="0x764770f0"/>
        <function-ref name="enable" scoped="" ref="0x764771d0"/>
        <function-ref name="getValue" scoped="" ref="0x764772b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7646f528" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7646f528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7646f700"/>
        <function-ref name="fired" scoped="" ref="0x7646f7e0"/>
        <function-ref name="disable" scoped="" ref="0x7646f8c0"/>
        <function-ref name="edge" scoped="" ref="0x7646f9a0"/>
        <function-ref name="enable" scoped="" ref="0x7646fa80"/>
        <function-ref name="getValue" scoped="" ref="0x7646fb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x764766e8" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x764766e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x764768c0"/>
        <function-ref name="fired" scoped="" ref="0x764769a0"/>
        <function-ref name="disable" scoped="" ref="0x76476a80"/>
        <function-ref name="edge" scoped="" ref="0x76476b60"/>
        <function-ref name="enable" scoped="" ref="0x76476c40"/>
        <function-ref name="getValue" scoped="" ref="0x76476d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7646d030" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7646d030"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7646d208"/>
        <function-ref name="fired" scoped="" ref="0x7646d2e8"/>
        <function-ref name="disable" scoped="" ref="0x7646d3c8"/>
        <function-ref name="edge" scoped="" ref="0x7646d4a8"/>
        <function-ref name="enable" scoped="" ref="0x7646d588"/>
        <function-ref name="getValue" scoped="" ref="0x7646d668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x76471188" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x76471188"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76471360"/>
        <function-ref name="fired" scoped="" ref="0x76471440"/>
        <function-ref name="disable" scoped="" ref="0x76471520"/>
        <function-ref name="edge" scoped="" ref="0x76471600"/>
        <function-ref name="enable" scoped="" ref="0x764716e0"/>
        <function-ref name="getValue" scoped="" ref="0x764717c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x76470368" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x76470368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76470540"/>
        <function-ref name="fired" scoped="" ref="0x76470620"/>
        <function-ref name="disable" scoped="" ref="0x76470700"/>
        <function-ref name="edge" scoped="" ref="0x764707e0"/>
        <function-ref name="enable" scoped="" ref="0x764708c0"/>
        <function-ref name="getValue" scoped="" ref="0x764709a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x76477528" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x76477528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76477700"/>
        <function-ref name="fired" scoped="" ref="0x764777e0"/>
        <function-ref name="disable" scoped="" ref="0x764778c0"/>
        <function-ref name="edge" scoped="" ref="0x764779a0"/>
        <function-ref name="enable" scoped="" ref="0x76477a80"/>
        <function-ref name="getValue" scoped="" ref="0x76477b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7646fdd8" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7646fdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7646e010"/>
        <function-ref name="fired" scoped="" ref="0x7646e0f0"/>
        <function-ref name="disable" scoped="" ref="0x7646e1d0"/>
        <function-ref name="edge" scoped="" ref="0x7646e2b0"/>
        <function-ref name="enable" scoped="" ref="0x7646e390"/>
        <function-ref name="getValue" scoped="" ref="0x7646e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x76467608" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x76467608"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x764677e0"/>
        <function-ref name="fired" scoped="" ref="0x764678c0"/>
        <function-ref name="disable" scoped="" ref="0x764679a0"/>
        <function-ref name="edge" scoped="" ref="0x76467a80"/>
        <function-ref name="enable" scoped="" ref="0x76467b60"/>
        <function-ref name="getValue" scoped="" ref="0x76467c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x76461010" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x76461010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x764611e8"/>
        <function-ref name="fired" scoped="" ref="0x764612c8"/>
        <function-ref name="disable" scoped="" ref="0x764613a8"/>
        <function-ref name="edge" scoped="" ref="0x76461488"/>
        <function-ref name="enable" scoped="" ref="0x76461568"/>
        <function-ref name="getValue" scoped="" ref="0x76461648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x76465070" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x76465070"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76465248"/>
        <function-ref name="fired" scoped="" ref="0x76465328"/>
        <function-ref name="disable" scoped="" ref="0x76465408"/>
        <function-ref name="edge" scoped="" ref="0x764654e8"/>
        <function-ref name="enable" scoped="" ref="0x764655c8"/>
        <function-ref name="getValue" scoped="" ref="0x764656a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x76464288" loc="50:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x76464288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76464460"/>
        <function-ref name="fired" scoped="" ref="0x76464540"/>
        <function-ref name="disable" scoped="" ref="0x76464620"/>
        <function-ref name="edge" scoped="" ref="0x76464700"/>
        <function-ref name="enable" scoped="" ref="0x764647e0"/>
        <function-ref name="getValue" scoped="" ref="0x764648c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x76468448" loc="41:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x76468448"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76468620"/>
        <function-ref name="fired" scoped="" ref="0x76468700"/>
        <function-ref name="disable" scoped="" ref="0x764687e0"/>
        <function-ref name="edge" scoped="" ref="0x764688c0"/>
        <function-ref name="enable" scoped="" ref="0x764689a0"/>
        <function-ref name="getValue" scoped="" ref="0x76468a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x76463cf8" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x76463cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76462010"/>
        <function-ref name="fired" scoped="" ref="0x764620f0"/>
        <function-ref name="disable" scoped="" ref="0x764621d0"/>
        <function-ref name="edge" scoped="" ref="0x764622b0"/>
        <function-ref name="enable" scoped="" ref="0x76462390"/>
        <function-ref name="getValue" scoped="" ref="0x76462470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x76467eb8" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x76467eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x764660c0"/>
        <function-ref name="fired" scoped="" ref="0x764661a0"/>
        <function-ref name="disable" scoped="" ref="0x76466280"/>
        <function-ref name="edge" scoped="" ref="0x76466360"/>
        <function-ref name="enable" scoped="" ref="0x76466440"/>
        <function-ref name="getValue" scoped="" ref="0x76466520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x764618c0" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x764618c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76461a98"/>
        <function-ref name="fired" scoped="" ref="0x76461b78"/>
        <function-ref name="disable" scoped="" ref="0x76461c58"/>
        <function-ref name="edge" scoped="" ref="0x76461d38"/>
        <function-ref name="enable" scoped="" ref="0x76461e18"/>
        <function-ref name="getValue" scoped="" ref="0x76461ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x76469288" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x76469288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76469460"/>
        <function-ref name="fired" scoped="" ref="0x76469540"/>
        <function-ref name="disable" scoped="" ref="0x76469620"/>
        <function-ref name="edge" scoped="" ref="0x76469700"/>
        <function-ref name="enable" scoped="" ref="0x764697e0"/>
        <function-ref name="getValue" scoped="" ref="0x764698c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x76464b38" loc="51:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x76464b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76464d10"/>
        <function-ref name="fired" scoped="" ref="0x76464df0"/>
        <function-ref name="disable" scoped="" ref="0x76464ed0"/>
        <function-ref name="edge" scoped="" ref="0x76463010"/>
        <function-ref name="enable" scoped="" ref="0x764630f0"/>
        <function-ref name="getValue" scoped="" ref="0x764631d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x76468cf8" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x76468cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76468ed0"/>
        <function-ref name="fired" scoped="" ref="0x76467010"/>
        <function-ref name="disable" scoped="" ref="0x764670f0"/>
        <function-ref name="edge" scoped="" ref="0x764671d0"/>
        <function-ref name="enable" scoped="" ref="0x764672b0"/>
        <function-ref name="getValue" scoped="" ref="0x76467390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x764626e8" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x764626e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x764628c0"/>
        <function-ref name="fired" scoped="" ref="0x764629a0"/>
        <function-ref name="disable" scoped="" ref="0x76462a80"/>
        <function-ref name="edge" scoped="" ref="0x76462b60"/>
        <function-ref name="enable" scoped="" ref="0x76462c40"/>
        <function-ref name="getValue" scoped="" ref="0x76462d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x76466798" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x76466798"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76466970"/>
        <function-ref name="fired" scoped="" ref="0x76466a50"/>
        <function-ref name="disable" scoped="" ref="0x76466b30"/>
        <function-ref name="edge" scoped="" ref="0x76466c10"/>
        <function-ref name="enable" scoped="" ref="0x76466cf0"/>
        <function-ref name="getValue" scoped="" ref="0x76466dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x76465920" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x76465920"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76465af8"/>
        <function-ref name="fired" scoped="" ref="0x76465bd8"/>
        <function-ref name="disable" scoped="" ref="0x76465cb8"/>
        <function-ref name="edge" scoped="" ref="0x76465d98"/>
        <function-ref name="enable" scoped="" ref="0x76465e78"/>
        <function-ref name="getValue" scoped="" ref="0x76464010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x76469b38" loc="40:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x76469b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76469d10"/>
        <function-ref name="fired" scoped="" ref="0x76469df0"/>
        <function-ref name="disable" scoped="" ref="0x76469ed0"/>
        <function-ref name="edge" scoped="" ref="0x76468010"/>
        <function-ref name="enable" scoped="" ref="0x764680f0"/>
        <function-ref name="getValue" scoped="" ref="0x764681d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x76463448" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x76463448"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76463620"/>
        <function-ref name="fired" scoped="" ref="0x76463700"/>
        <function-ref name="disable" scoped="" ref="0x764637e0"/>
        <function-ref name="edge" scoped="" ref="0x764638c0"/>
        <function-ref name="enable" scoped="" ref="0x764639a0"/>
        <function-ref name="getValue" scoped="" ref="0x76463a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x763eb190" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x763eb190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763eb368"/>
        <function-ref name="fired" scoped="" ref="0x763eb448"/>
        <function-ref name="disable" scoped="" ref="0x763eb528"/>
        <function-ref name="edge" scoped="" ref="0x763eb608"/>
        <function-ref name="enable" scoped="" ref="0x763eb6e8"/>
        <function-ref name="getValue" scoped="" ref="0x763eb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x763e3ad0" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x763e3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x763e3ca8"/>
        <function-ref name="disable" scoped="" ref="0x763e3d88"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x763e3e68"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x763eb010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x763eab38" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x763eab38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763ead10"/>
        <function-ref name="fired" scoped="" ref="0x763eadf0"/>
        <function-ref name="disable" scoped="" ref="0x763eaed0"/>
        <function-ref name="edge" scoped="" ref="0x763e2010"/>
        <function-ref name="enable" scoped="" ref="0x763e20f0"/>
        <function-ref name="getValue" scoped="" ref="0x763e21d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x763ea540" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x763ea540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x763ea718"/>
        <function-ref name="disable" scoped="" ref="0x763ea7f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x763ea8d8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x763ea9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7614cbd8" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7614cbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7614ceb0"/>
        <function-ref name="write" scoped="" ref="0x7614b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x76151190" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x76151190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76151368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7614d270" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7614d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7614d448"/>
        <function-ref name="write" scoped="" ref="0x7614d528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7614ba00" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7614ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7614bbd8"/>
        <function-ref name="write" scoped="" ref="0x7614bcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x761462b0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x761462b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76146488"/>
        <function-ref name="write" scoped="" ref="0x76146568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7614be38" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7614be38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76149050"/>
        <function-ref name="write" scoped="" ref="0x76149130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x76140b20" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x76140b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76140cf8"/>
        <function-ref name="write" scoped="" ref="0x76140dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x76141a00" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x76141a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76141bd8"/>
        <function-ref name="write" scoped="" ref="0x76141cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x76151b98" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x76151b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76151d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x76143190" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x76143190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76143368"/>
        <function-ref name="write" scoped="" ref="0x76143448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x76141190" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x76141190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76141368"/>
        <function-ref name="write" scoped="" ref="0x76141448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7614dae0" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7614dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7614dcb8"/>
        <function-ref name="write" scoped="" ref="0x7614dd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7614c368" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7614c368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7614c540"/>
        <function-ref name="write" scoped="" ref="0x7614c620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x761475c8" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x761475c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x761477a0"/>
        <function-ref name="write" scoped="" ref="0x76147880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x76148880" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x76148880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76148a58"/>
        <function-ref name="write" scoped="" ref="0x76148b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x761492b0" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x761492b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76149488"/>
        <function-ref name="write" scoped="" ref="0x76149568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x76152530" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x76152530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x76152708"/>
        <function-ref name="abortRelease" scoped="" ref="0x761527e8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x761528c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x76150910" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x76150910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76150ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x76150c68" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x76150c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76150ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x76143c00" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x76143c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76143dd8"/>
        <function-ref name="write" scoped="" ref="0x76143eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7614e080" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7614e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7614e258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x761415c8" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x761415c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x761417a0"/>
        <function-ref name="write" scoped="" ref="0x76141880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x76150260" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x76150260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76150438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x76145cb8" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x76145cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76145e90"/>
        <function-ref name="write" scoped="" ref="0x76143010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7614df18" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7614df18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7614c108"/>
        <function-ref name="write" scoped="" ref="0x7614c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7614d6a8" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7614d6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7614d880"/>
        <function-ref name="write" scoped="" ref="0x7614d960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x76152da0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x76152da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76151010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x76145448" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x76145448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76145620"/>
        <function-ref name="write" scoped="" ref="0x76145700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x761466e8" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x761466e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x761468c0"/>
        <function-ref name="write" scoped="" ref="0x761469a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x76145880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x76145880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76145a58"/>
        <function-ref name="write" scoped="" ref="0x76145b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x761406e8" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x761406e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x761408c0"/>
        <function-ref name="write" scoped="" ref="0x761409a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x76141e38" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x76141e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76140050"/>
        <function-ref name="write" scoped="" ref="0x76140130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x76148cb8" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x76148cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76148e90"/>
        <function-ref name="write" scoped="" ref="0x76147010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x76146b20" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x76146b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76146cf8"/>
        <function-ref name="write" scoped="" ref="0x76146dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x76142cf8" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x76142cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76142ed0"/>
        <function-ref name="write" scoped="" ref="0x76141010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x76149b20" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x76149b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76149cf8"/>
        <function-ref name="write" scoped="" ref="0x76149dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7613f010" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7613f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7613f1e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7613f2c8"/>
        <function-ref name="write" scoped="" ref="0x7613f3a8"/>
        <function-ref name="beginRead" scoped="" ref="0x7613f488"/>
        <function-ref name="readDone" scoped="" ref="0x7613f568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x76152a48" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x76152a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76152c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7614ede0" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7614ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7614d010"/>
        <function-ref name="write" scoped="" ref="0x7614d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7614c7a0" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7614c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7614c978"/>
        <function-ref name="write" scoped="" ref="0x7614ca58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x76147a00" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x76147a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76147bd8"/>
        <function-ref name="write" scoped="" ref="0x76147cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x761496e8" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x761496e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x761498c0"/>
        <function-ref name="write" scoped="" ref="0x761499a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x76147e38" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x76147e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76146050"/>
        <function-ref name="write" scoped="" ref="0x76146130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7614b190" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7614b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7614b368"/>
        <function-ref name="write" scoped="" ref="0x7614b448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x761514e8" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x761514e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x761516c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7614b5c8" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7614b5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7614b7a0"/>
        <function-ref name="write" scoped="" ref="0x7614b880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x76153e28" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x76153e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x76152050"/>
        <function-ref name="immediateRequest" scoped="" ref="0x76152130"/>
        <function-ref name="request" scoped="" ref="0x76152210"/>
        <function-ref name="granted" scoped="" ref="0x761522f0"/>
        <function-ref name="isOwner" scoped="" ref="0x761523d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7614e3d8" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7614e3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7614e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7614ea88" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7614ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7614ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x761428c0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x761428c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76142a98"/>
        <function-ref name="write" scoped="" ref="0x76142b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x76142488" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x76142488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76142660"/>
        <function-ref name="write" scoped="" ref="0x76142740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x761505b8" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x761505b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76150790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x76142050" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x76142050"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76142228"/>
        <function-ref name="write" scoped="" ref="0x76142308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x761402b0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x761402b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76140488"/>
        <function-ref name="write" scoped="" ref="0x76140568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x76147190" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x76147190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76147368"/>
        <function-ref name="write" scoped="" ref="0x76147448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x76145010" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x76145010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x761451e8"/>
        <function-ref name="write" scoped="" ref="0x761452c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x76151840" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x76151840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76151a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x76151ef0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x76151ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x761500e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x76148010" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x76148010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x761481e8"/>
        <function-ref name="write" scoped="" ref="0x761482c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7614e730" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7614e730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7614e908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x76148448" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x76148448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76148620"/>
        <function-ref name="write" scoped="" ref="0x76148700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x761435c8" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x761435c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x761439a0"/>
        <function-ref name="write" scoped="" ref="0x76143a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7613f6e8" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7613f6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7613f8c0"/>
        <function-ref name="writeDone" scoped="" ref="0x7613f9a0"/>
        <function-ref name="write" scoped="" ref="0x7613fa80"/>
        <function-ref name="beginRead" scoped="" ref="0x7613fb60"/>
        <function-ref name="readDone" scoped="" ref="0x7613fc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x763bc8a0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x763bc8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x763bca78"/>
        <function-ref name="writeDone" scoped="" ref="0x763bcb58"/>
        <function-ref name="write" scoped="" ref="0x763bcc38"/>
        <function-ref name="beginRead" scoped="" ref="0x763bcd18"/>
        <function-ref name="readDone" scoped="" ref="0x763bcdf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x763bc010" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x763bc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x763bc1e8"/>
        <function-ref name="abortRelease" scoped="" ref="0x763bc2c8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x763bc3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x763bb300" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x763bb300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x763bb4d8"/>
        <function-ref name="write" scoped="" ref="0x763bb5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x763bbac8" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x763bbac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x763bbca0"/>
        <function-ref name="write" scoped="" ref="0x763bbd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x763c5890" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x763c5890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x763c5a68"/>
        <function-ref name="immediateRequest" scoped="" ref="0x763c5b48"/>
        <function-ref name="request" scoped="" ref="0x763c5c28"/>
        <function-ref name="granted" scoped="" ref="0x763c5d08"/>
        <function-ref name="isOwner" scoped="" ref="0x763c5de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x763ba2c8" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x763ba2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x763ba4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x763ab378" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x763ab378"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x763ab550"/>
        <function-ref name="sendDone" scoped="" ref="0x763ab630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x763b6100" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x763b6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x763b62d8"/>
        <function-ref name="writeDone" scoped="" ref="0x763b63b8"/>
        <function-ref name="write" scoped="" ref="0x763b6498"/>
        <function-ref name="beginRead" scoped="" ref="0x763b6578"/>
        <function-ref name="readDone" scoped="" ref="0x763b6658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x763bae38" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x763bae38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x763b7050"/>
        <function-ref name="abortRelease" scoped="" ref="0x763b7130"/>
        <function-ref name="attemptRelease" scoped="" ref="0x763b7210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x763b3ec8" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x763b3ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x763b20c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x763ab848" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x763ab848"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x763aba20"/>
        <function-ref name="toIdle" scoped="" ref="0x763abb00"/>
        <function-ref name="isState" scoped="" ref="0x763abbe0"/>
        <function-ref name="isIdle" scoped="" ref="0x763abcc0"/>
        <function-ref name="requestState" scoped="" ref="0x763abda0"/>
        <function-ref name="forceState" scoped="" ref="0x763abe80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x763b4ee8" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x763b4ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x763b30e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x763b31c0"/>
        <function-ref name="request" scoped="" ref="0x763b32a0"/>
        <function-ref name="granted" scoped="" ref="0x763b3380"/>
        <function-ref name="isOwner" scoped="" ref="0x763b3460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x763b6b28" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x763b6b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x763b6d00"/>
        <function-ref name="write" scoped="" ref="0x763b6de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x763b42f0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x763b42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x763b44c8"/>
        <function-ref name="write" scoped="" ref="0x763b45a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x763b1010" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x763b1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x763b11e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x763b12c8"/>
        <function-ref name="led1On" scoped="" ref="0x763b13a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x763b1488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x763b1568"/>
        <function-ref name="get" scoped="" ref="0x763b1648"/>
        <function-ref name="led1Off" scoped="" ref="0x763b1728"/>
        <function-ref name="led2Off" scoped="" ref="0x763b1aa8"/>
        <function-ref name="set" scoped="" ref="0x763b1808"/>
        <function-ref name="led0On" scoped="" ref="0x763b18e8"/>
        <function-ref name="led2On" scoped="" ref="0x763b19c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x763b7688" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x763b7688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x763b7860"/>
        <function-ref name="immediateRequest" scoped="" ref="0x763b7940"/>
        <function-ref name="request" scoped="" ref="0x763b7a20"/>
        <function-ref name="granted" scoped="" ref="0x763b7b00"/>
        <function-ref name="isOwner" scoped="" ref="0x763b7be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x763acdd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x763acdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x763aa010"/>
        <function-ref name="runTask" scoped="" ref="0x763aa0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x763b4aa8" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x763b4aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x763b4c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x76377d08" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x76377d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x76377ee0"/>
        <function-ref name="toIdle" scoped="" ref="0x76376010"/>
        <function-ref name="isState" scoped="" ref="0x763760f0"/>
        <function-ref name="isIdle" scoped="" ref="0x763761d0"/>
        <function-ref name="requestState" scoped="" ref="0x763762b0"/>
        <function-ref name="forceState" scoped="" ref="0x76376390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x76375d98" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x76375d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x76372010"/>
        <function-ref name="toIdle" scoped="" ref="0x763720f0"/>
        <function-ref name="isState" scoped="" ref="0x763721d0"/>
        <function-ref name="isIdle" scoped="" ref="0x763722b0"/>
        <function-ref name="requestState" scoped="" ref="0x76372390"/>
        <function-ref name="forceState" scoped="" ref="0x76372470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x76372e48" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x76372e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7636f050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7636f4a8" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7636f4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7636f680"/>
        <function-ref name="toIdle" scoped="" ref="0x7636f760"/>
        <function-ref name="isState" scoped="" ref="0x7636f840"/>
        <function-ref name="isIdle" scoped="" ref="0x7636f920"/>
        <function-ref name="requestState" scoped="" ref="0x7636fa00"/>
        <function-ref name="forceState" scoped="" ref="0x7636fae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x76373828" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x76373828"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x76373a00"/>
        <function-ref name="sendDone" scoped="" ref="0x76373ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x763734f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x763734f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x763736c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x76167db0" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x76167db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x76373010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x763730f0"/>
        <function-ref name="request" scoped="" ref="0x763731d0"/>
        <function-ref name="granted" scoped="" ref="0x763732b0"/>
        <function-ref name="isOwner" scoped="" ref="0x76373390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x75349a70" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x75349a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x75349c48"/>
        <function-ref name="immediateRequested" scoped="" ref="0x75349d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x753487a8" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x753487a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75348980"/>
        <function-ref name="sendDone" scoped="" ref="0x75348a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x75348bc0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x75348bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x75348d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x75349e88" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x75349e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x75348070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x753493b8" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x753493b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x75349590"/>
        <function-ref name="immediateRequest" scoped="" ref="0x75349670"/>
        <function-ref name="request" scoped="" ref="0x75349750"/>
        <function-ref name="granted" scoped="" ref="0x75349830"/>
        <function-ref name="isOwner" scoped="" ref="0x75349910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x753481d0" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x753481d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x753483a8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x75348488"/>
        <function-ref name="splitRead" scoped="" ref="0x75348568"/>
        <function-ref name="write" scoped="" ref="0x75348648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x763236e0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x763236e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x763238b8"/>
        <function-ref name="configure" scoped="" ref="0x76323998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x76325820" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x76325820"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x763259f8"/>
        <function-ref name="sendDone" scoped="" ref="0x76325ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x76324a78" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x76324a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x76324c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x76323b40" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x76323b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x76323d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x76324028" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x76324028"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x76324200"/>
        <function-ref name="immediateRequest" scoped="" ref="0x763242e0"/>
        <function-ref name="request" scoped="" ref="0x763243c0"/>
        <function-ref name="granted" scoped="" ref="0x763244a0"/>
        <function-ref name="isOwner" scoped="" ref="0x76324580"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7632cd48" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7632cd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7632cf20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x76326018"/>
        <function-ref name="request" scoped="" ref="0x763260f8"/>
        <function-ref name="granted" scoped="" ref="0x763261d8"/>
        <function-ref name="isOwner" scoped="" ref="0x763262b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x76323ee8" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x76323ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x763250e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x763251c0"/>
        <function-ref name="splitRead" scoped="" ref="0x763252a0"/>
        <function-ref name="write" scoped="" ref="0x76325380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x76321d50" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x76321d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x76321f28"/>
        <function-ref name="txDone" scoped="" ref="0x76320018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x762dd3c8" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x762dd3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x762dd5b0"/>
        <function-ref name="configure" scoped="" ref="0x762dd690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x762dc208" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x762dc208"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x762dc3f0"/>
        <function-ref name="sendDone" scoped="" ref="0x762dc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x762dce48" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x762dce48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x762db050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x762dd7f0" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x762dd7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x762dd9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x762db1d0" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x762db1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x762db3a8"/>
        <function-ref name="enableUartRx" scoped="" ref="0x762db488"/>
        <function-ref name="setUctl" scoped="" ref="0x762db568"/>
        <function-ref name="enableUart" scoped="" ref="0x762db648"/>
        <function-ref name="setUrctl" scoped="" ref="0x762db728"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x762db808"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x762db8e8"/>
        <function-ref name="getUtctl" scoped="" ref="0x762db9c8"/>
        <function-ref name="getUrctl" scoped="" ref="0x762dbaa8"/>
        <function-ref name="resetUsart" scoped="" ref="0x762dbb88"/>
        <function-ref name="getUmctl" scoped="" ref="0x762dbc68"/>
        <function-ref name="disableIntr" scoped="" ref="0x762dbd48"/>
        <function-ref name="setUtctl" scoped="" ref="0x762dbe28"/>
        <function-ref name="getUbr" scoped="" ref="0x762da010"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x762da0f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x762da1d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x762da2b0"/>
        <function-ref name="isUart" scoped="" ref="0x762da390"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x762da470"/>
        <function-ref name="isSpi" scoped="" ref="0x762da550"/>
        <function-ref name="enableUartTx" scoped="" ref="0x762da630"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x762da710"/>
        <function-ref name="disableUartRx" scoped="" ref="0x762da7f0"/>
        <function-ref name="enableIntr" scoped="" ref="0x762da8d0"/>
        <function-ref name="getMode" scoped="" ref="0x762da9b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x762dab90"/>
        <function-ref name="clrIntr" scoped="" ref="0x762dac70"/>
        <function-ref name="setUbr" scoped="" ref="0x762dad50"/>
        <function-ref name="tx" scoped="" ref="0x762dae30"/>
        <function-ref name="getUctl" scoped="" ref="0x762daf10"/>
        <function-ref name="disableUart" scoped="" ref="0x762d9010"/>
        <function-ref name="enableSpi" scoped="" ref="0x762d90f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x762d91d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x762d92b0"/>
        <function-ref name="rx" scoped="" ref="0x762d9390"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x762d9470"/>
        <function-ref name="isUartTx" scoped="" ref="0x762d9550"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x762d9630"/>
        <function-ref name="disableSpi" scoped="" ref="0x762d9710"/>
        <function-ref name="disableUartTx" scoped="" ref="0x762d97f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x762d9d88" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x762d9d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x762d8010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x762d80f0"/>
        <function-ref name="led1On" scoped="" ref="0x762d81d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x762d82b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x762d8390"/>
        <function-ref name="get" scoped="" ref="0x762d8470"/>
        <function-ref name="led1Off" scoped="" ref="0x762d8550"/>
        <function-ref name="led2On" scoped="" ref="0x762d88d0"/>
        <function-ref name="set" scoped="" ref="0x762d8710"/>
        <function-ref name="led2Off" scoped="" ref="0x762d8630"/>
        <function-ref name="led0On" scoped="" ref="0x762d87f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x762dc6e8" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x762dc6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x762dc8d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x762dc9b0"/>
        <function-ref name="request" scoped="" ref="0x762dca90"/>
        <function-ref name="granted" scoped="" ref="0x762dcb70"/>
        <function-ref name="isOwner" scoped="" ref="0x762dcc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x762debc8" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x762debc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x762dedb0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x762dee90"/>
        <function-ref name="request" scoped="" ref="0x762dd010"/>
        <function-ref name="granted" scoped="" ref="0x762dd0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x762dd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x762ddb28" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x762ddb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x762ddd00"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x762ddde0"/>
        <function-ref name="splitRead" scoped="" ref="0x762ddec0"/>
        <function-ref name="write" scoped="" ref="0x762dc010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x762d9970" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x762d9970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x762d9b48"/>
        <function-ref name="txDone" scoped="" ref="0x762d9c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x762d8a50" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x762d8a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x762d8c28"/>
        <function-ref name="runTask" scoped="" ref="0x762d8d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x762cd3d0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x762cd3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x762cd5a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x762d07a8" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x762d07a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x762d0980"/>
        <function-ref name="txDone" scoped="" ref="0x762d0a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x762d5ee8" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x762d5ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x762d20e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x762d21c0"/>
        <function-ref name="setUctl" scoped="" ref="0x762d22a0"/>
        <function-ref name="enableUart" scoped="" ref="0x762d2380"/>
        <function-ref name="setUrctl" scoped="" ref="0x762d2460"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x762d2540"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x762d2620"/>
        <function-ref name="getUtctl" scoped="" ref="0x762d2700"/>
        <function-ref name="getUrctl" scoped="" ref="0x762d27e0"/>
        <function-ref name="resetUsart" scoped="" ref="0x762d28c0"/>
        <function-ref name="getUmctl" scoped="" ref="0x762d29a0"/>
        <function-ref name="disableIntr" scoped="" ref="0x762d2a80"/>
        <function-ref name="setUtctl" scoped="" ref="0x762d2b60"/>
        <function-ref name="getUbr" scoped="" ref="0x762d2cc0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x762d2da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x762d2e80"/>
        <function-ref name="isUartRx" scoped="" ref="0x762d1010"/>
        <function-ref name="isUart" scoped="" ref="0x762d10f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x762d11d0"/>
        <function-ref name="isSpi" scoped="" ref="0x762d12b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x762d1390"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x762d1470"/>
        <function-ref name="disableUartRx" scoped="" ref="0x762d1550"/>
        <function-ref name="enableIntr" scoped="" ref="0x762d1630"/>
        <function-ref name="getMode" scoped="" ref="0x762d1710"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x762d18f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x762d19d0"/>
        <function-ref name="setUbr" scoped="" ref="0x762d1ab0"/>
        <function-ref name="tx" scoped="" ref="0x762d1b90"/>
        <function-ref name="getUctl" scoped="" ref="0x762d1c70"/>
        <function-ref name="disableUart" scoped="" ref="0x762d1d50"/>
        <function-ref name="enableSpi" scoped="" ref="0x762d1e30"/>
        <function-ref name="setModeUart" scoped="" ref="0x762d1f10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x762d0010"/>
        <function-ref name="rx" scoped="" ref="0x762d00f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x762d01d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x762d02b0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x762d0390"/>
        <function-ref name="disableSpi" scoped="" ref="0x762d0470"/>
        <function-ref name="disableUartTx" scoped="" ref="0x762d0550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x762ac168" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x762ac168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x762ac340"/>
        <function-ref name="isInput" scoped="" ref="0x762ac420"/>
        <function-ref name="setResistor" scoped="" ref="0x762ac500"/>
        <function-ref name="toggle" scoped="" ref="0x762ac5e0"/>
        <function-ref name="isOutput" scoped="" ref="0x762ac6c0"/>
        <function-ref name="getResistor" scoped="" ref="0x762ac7a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x762ac880"/>
        <function-ref name="get" scoped="" ref="0x762ac960"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x762aca40"/>
        <function-ref name="getRaw" scoped="" ref="0x762acb20"/>
        <function-ref name="set" scoped="" ref="0x762acc00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x762acce0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x762acdc0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x762acf20"/>
        <function-ref name="clr" scoped="" ref="0x762ab018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x762caad0" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x762caad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x762caca8"/>
        <function-ref name="txDone" scoped="" ref="0x762cad88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x762ab280" loc="83:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x762ab280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x762ab458"/>
        <function-ref name="isInput" scoped="" ref="0x762ab538"/>
        <function-ref name="setResistor" scoped="" ref="0x762ab618"/>
        <function-ref name="toggle" scoped="" ref="0x762ab6f8"/>
        <function-ref name="isOutput" scoped="" ref="0x762ab7d8"/>
        <function-ref name="getResistor" scoped="" ref="0x762ab8b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x762ab998"/>
        <function-ref name="get" scoped="" ref="0x762aba78"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x762abb58"/>
        <function-ref name="getRaw" scoped="" ref="0x762abc38"/>
        <function-ref name="set" scoped="" ref="0x762abd18"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x762abdf8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x762abed8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x762aa090"/>
        <function-ref name="clr" scoped="" ref="0x762aa170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x762aa3d8" loc="84:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x762aa3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x762aa5b0"/>
        <function-ref name="isInput" scoped="" ref="0x762aa690"/>
        <function-ref name="setResistor" scoped="" ref="0x762aa770"/>
        <function-ref name="toggle" scoped="" ref="0x762aa850"/>
        <function-ref name="isOutput" scoped="" ref="0x762aa930"/>
        <function-ref name="getResistor" scoped="" ref="0x762aaa10"/>
        <function-ref name="makeOutput" scoped="" ref="0x762aaaf0"/>
        <function-ref name="get" scoped="" ref="0x762aabd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x762aacb0"/>
        <function-ref name="getRaw" scoped="" ref="0x762aad90"/>
        <function-ref name="set" scoped="" ref="0x762aae70"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x762a9010"/>
        <function-ref name="isIOFunc" scoped="" ref="0x762a90f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x762a9250"/>
        <function-ref name="clr" scoped="" ref="0x762a9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x762cc1a0" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x762cc1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x762cc378"/>
        <function-ref name="enableUartRx" scoped="" ref="0x762cc458"/>
        <function-ref name="setUctl" scoped="" ref="0x762cc538"/>
        <function-ref name="enableUart" scoped="" ref="0x762cc618"/>
        <function-ref name="setUrctl" scoped="" ref="0x762cc6f8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x762cc7d8"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x762cc8b8"/>
        <function-ref name="getUtctl" scoped="" ref="0x762cc998"/>
        <function-ref name="getUrctl" scoped="" ref="0x762cca78"/>
        <function-ref name="resetUsart" scoped="" ref="0x762ccb58"/>
        <function-ref name="getUmctl" scoped="" ref="0x762ccc38"/>
        <function-ref name="disableIntr" scoped="" ref="0x762ccd18"/>
        <function-ref name="setUtctl" scoped="" ref="0x762ccdf8"/>
        <function-ref name="getUbr" scoped="" ref="0x762cb010"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x762cb0f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x762cb1d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x762cb2b0"/>
        <function-ref name="isUart" scoped="" ref="0x762cb390"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x762cb470"/>
        <function-ref name="isSpi" scoped="" ref="0x762cb550"/>
        <function-ref name="enableUartTx" scoped="" ref="0x762cb630"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x762cb710"/>
        <function-ref name="disableUartRx" scoped="" ref="0x762cb7f0"/>
        <function-ref name="enableIntr" scoped="" ref="0x762cb8d0"/>
        <function-ref name="getMode" scoped="" ref="0x762cb9b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x762cbb90"/>
        <function-ref name="clrIntr" scoped="" ref="0x762cbc70"/>
        <function-ref name="setUbr" scoped="" ref="0x762cbd50"/>
        <function-ref name="tx" scoped="" ref="0x762cbe30"/>
        <function-ref name="getUctl" scoped="" ref="0x762cbf10"/>
        <function-ref name="disableUart" scoped="" ref="0x762ca010"/>
        <function-ref name="enableSpi" scoped="" ref="0x762ca0f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x762ca1d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x762ca2b0"/>
        <function-ref name="rx" scoped="" ref="0x762ca390"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x762ca470"/>
        <function-ref name="isUartTx" scoped="" ref="0x762ca550"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x762ca630"/>
        <function-ref name="disableSpi" scoped="" ref="0x762ca710"/>
        <function-ref name="disableUartTx" scoped="" ref="0x762ca7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x762b0380" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x762b0380"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x762b0558"/>
        <function-ref name="getStartByte" scoped="" ref="0x762b0638"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x762b0718"/>
        <function-ref name="setMasterMode" scoped="" ref="0x762b07f8"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x762b08d8"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x762b09b8"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x762b0a98"/>
        <function-ref name="getStopBit" scoped="" ref="0x762b0b78"/>
        <function-ref name="setClockSource" scoped="" ref="0x762b0c58"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x762b0d38"/>
        <function-ref name="getData" scoped="" ref="0x762b0e18"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x762b0ef8"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x762c8010"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x762c8170"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x762c8250"/>
        <function-ref name="getIV" scoped="" ref="0x762c8330"/>
        <function-ref name="enableI2C" scoped="" ref="0x762c8410"/>
        <function-ref name="setStartBit" scoped="" ref="0x762c84f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x762c85d0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x762c86b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x762c8790"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x762c8870"/>
        <function-ref name="isI2C" scoped="" ref="0x762c8950"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x762c8a30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x762c8b10"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x762c8cf0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x762c8dd0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x762c8eb0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x762c7010"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x762c70f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x762c71d0"/>
        <function-ref name="disableI2C" scoped="" ref="0x762c72b0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x762c7390"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x762c7470"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x762c7550"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x762c7630"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x762c7710"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x762c77f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x762c78d0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x762c79b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x762c7a90"/>
        <function-ref name="setWordMode" scoped="" ref="0x762c7b70"/>
        <function-ref name="setData" scoped="" ref="0x762c7c50"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x762c7d30"/>
        <function-ref name="getClockSource" scoped="" ref="0x762c7e10"/>
        <function-ref name="getWordMode" scoped="" ref="0x762c7ef0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x762af010"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x762af0f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x762af1d0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x762af4b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x762af590"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x762af670"/>
        <function-ref name="setStopBit" scoped="" ref="0x762af750"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x762af830"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x762af910"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x762af9f0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x762afad0"/>
        <function-ref name="setStartByte" scoped="" ref="0x762afbb0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x762afc90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x762ad030" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x762ad030"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x762ad208"/>
        <function-ref name="isInput" scoped="" ref="0x762ad2e8"/>
        <function-ref name="setResistor" scoped="" ref="0x762ad3c8"/>
        <function-ref name="toggle" scoped="" ref="0x762ad4a8"/>
        <function-ref name="isOutput" scoped="" ref="0x762ad588"/>
        <function-ref name="getResistor" scoped="" ref="0x762ad668"/>
        <function-ref name="makeOutput" scoped="" ref="0x762ad748"/>
        <function-ref name="get" scoped="" ref="0x762ad828"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x762ad908"/>
        <function-ref name="getRaw" scoped="" ref="0x762ad9e8"/>
        <function-ref name="set" scoped="" ref="0x762adac8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x762adba8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x762adc88"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x762adde8"/>
        <function-ref name="clr" scoped="" ref="0x762adec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x762c90b8" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x762c90b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x762c9290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x762afef8" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x762afef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x762ae0e0"/>
        <function-ref name="isInput" scoped="" ref="0x762ae1c0"/>
        <function-ref name="setResistor" scoped="" ref="0x762ae2a0"/>
        <function-ref name="toggle" scoped="" ref="0x762ae380"/>
        <function-ref name="isOutput" scoped="" ref="0x762ae460"/>
        <function-ref name="getResistor" scoped="" ref="0x762ae540"/>
        <function-ref name="makeOutput" scoped="" ref="0x762ae620"/>
        <function-ref name="get" scoped="" ref="0x762ae700"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x762ae7e0"/>
        <function-ref name="getRaw" scoped="" ref="0x762ae8c0"/>
        <function-ref name="set" scoped="" ref="0x762ae9a0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x762aea80"/>
        <function-ref name="isIOFunc" scoped="" ref="0x762aeb60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x762aecc0"/>
        <function-ref name="clr" scoped="" ref="0x762aeda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x76264e28" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x76264e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x76261050"/>
        <function-ref name="led0Toggle" scoped="" ref="0x76261130"/>
        <function-ref name="led1On" scoped="" ref="0x76261210"/>
        <function-ref name="led1Toggle" scoped="" ref="0x762612f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x762613d0"/>
        <function-ref name="get" scoped="" ref="0x762614b0"/>
        <function-ref name="led1Off" scoped="" ref="0x76261590"/>
        <function-ref name="led2Off" scoped="" ref="0x76261910"/>
        <function-ref name="set" scoped="" ref="0x76261670"/>
        <function-ref name="led0On" scoped="" ref="0x76261750"/>
        <function-ref name="led2On" scoped="" ref="0x76261830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7625d240" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7625d240"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7625d418"/>
        <function-ref name="isInput" scoped="" ref="0x7625d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7625d5d8"/>
        <function-ref name="isOutput" scoped="" ref="0x7625d6b8"/>
        <function-ref name="get" scoped="" ref="0x7625d798"/>
        <function-ref name="makeOutput" scoped="" ref="0x7625d878"/>
        <function-ref name="set" scoped="" ref="0x7625d958"/>
        <function-ref name="clr" scoped="" ref="0x7625da38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7625e1e0" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7625e1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7625e3b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7625dc28" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7625dc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7625de00"/>
        <function-ref name="isInput" scoped="" ref="0x7625dee0"/>
        <function-ref name="toggle" scoped="" ref="0x7625c010"/>
        <function-ref name="isOutput" scoped="" ref="0x7625c0f0"/>
        <function-ref name="get" scoped="" ref="0x7625c1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7625c2b0"/>
        <function-ref name="set" scoped="" ref="0x7625c390"/>
        <function-ref name="clr" scoped="" ref="0x7625c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7625e528" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7625e528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7625e700"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7625e7e0"/>
        <function-ref name="led1On" scoped="" ref="0x7625e8c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7625e9a0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7625ea80"/>
        <function-ref name="get" scoped="" ref="0x7625eb60"/>
        <function-ref name="led1Off" scoped="" ref="0x7625ec40"/>
        <function-ref name="led2Off" scoped="" ref="0x7625d010"/>
        <function-ref name="set" scoped="" ref="0x7625ed20"/>
        <function-ref name="led0On" scoped="" ref="0x7625ee00"/>
        <function-ref name="led2On" scoped="" ref="0x7625eee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7625c660" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7625c660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7625c838"/>
        <function-ref name="isInput" scoped="" ref="0x7625c918"/>
        <function-ref name="toggle" scoped="" ref="0x7625c9f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7625cad8"/>
        <function-ref name="get" scoped="" ref="0x7625cbb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7625cc98"/>
        <function-ref name="set" scoped="" ref="0x7625cd78"/>
        <function-ref name="clr" scoped="" ref="0x7625ce58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7624c110" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7624c110"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7624c2e8"/>
        <function-ref name="isInput" scoped="" ref="0x7624c3c8"/>
        <function-ref name="toggle" scoped="" ref="0x7624c4a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7624c588"/>
        <function-ref name="get" scoped="" ref="0x7624c668"/>
        <function-ref name="makeOutput" scoped="" ref="0x7624c748"/>
        <function-ref name="set" scoped="" ref="0x7624c828"/>
        <function-ref name="clr" scoped="" ref="0x7624c908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7624cb18" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7624cb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7624ccf0"/>
        <function-ref name="isInput" scoped="" ref="0x7624cdd0"/>
        <function-ref name="toggle" scoped="" ref="0x7624ceb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7624b010"/>
        <function-ref name="get" scoped="" ref="0x7624b0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7624b1d0"/>
        <function-ref name="set" scoped="" ref="0x7624b2b0"/>
        <function-ref name="clr" scoped="" ref="0x7624b390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7624bf28" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7624bf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7624a110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7624b5a0" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7624b5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7624b778"/>
        <function-ref name="isInput" scoped="" ref="0x7624b858"/>
        <function-ref name="toggle" scoped="" ref="0x7624b938"/>
        <function-ref name="isOutput" scoped="" ref="0x7624ba18"/>
        <function-ref name="get" scoped="" ref="0x7624baf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7624bbd8"/>
        <function-ref name="set" scoped="" ref="0x7624bcb8"/>
        <function-ref name="clr" scoped="" ref="0x7624bd98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x762495f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x762495f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x762497c8"/>
        <function-ref name="isInput" scoped="" ref="0x762498a8"/>
        <function-ref name="setResistor" scoped="" ref="0x76249988"/>
        <function-ref name="toggle" scoped="" ref="0x76249a68"/>
        <function-ref name="isOutput" scoped="" ref="0x76249b48"/>
        <function-ref name="getResistor" scoped="" ref="0x76249c28"/>
        <function-ref name="makeOutput" scoped="" ref="0x76249d08"/>
        <function-ref name="get" scoped="" ref="0x76249de8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76249ec8"/>
        <function-ref name="getRaw" scoped="" ref="0x76247010"/>
        <function-ref name="set" scoped="" ref="0x762470f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x762471d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x762472b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76247410"/>
        <function-ref name="clr" scoped="" ref="0x762474f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7624ac58" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7624ac58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7624ae30"/>
        <function-ref name="isInput" scoped="" ref="0x7624af10"/>
        <function-ref name="toggle" scoped="" ref="0x76249010"/>
        <function-ref name="isOutput" scoped="" ref="0x762490f0"/>
        <function-ref name="get" scoped="" ref="0x762491d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x762492b0"/>
        <function-ref name="set" scoped="" ref="0x76249390"/>
        <function-ref name="clr" scoped="" ref="0x76249470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x76246db8" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x76246db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76245010"/>
        <function-ref name="isInput" scoped="" ref="0x762450f0"/>
        <function-ref name="setResistor" scoped="" ref="0x762451d0"/>
        <function-ref name="toggle" scoped="" ref="0x762452b0"/>
        <function-ref name="isOutput" scoped="" ref="0x76245390"/>
        <function-ref name="getResistor" scoped="" ref="0x76245470"/>
        <function-ref name="makeOutput" scoped="" ref="0x76245550"/>
        <function-ref name="get" scoped="" ref="0x76245630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76245710"/>
        <function-ref name="getRaw" scoped="" ref="0x762457f0"/>
        <function-ref name="set" scoped="" ref="0x762458d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x762459b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76245a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76245bf0"/>
        <function-ref name="clr" scoped="" ref="0x76245cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x76246440" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x76246440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76246618"/>
        <function-ref name="isInput" scoped="" ref="0x762466f8"/>
        <function-ref name="toggle" scoped="" ref="0x762467d8"/>
        <function-ref name="isOutput" scoped="" ref="0x762468b8"/>
        <function-ref name="get" scoped="" ref="0x76246998"/>
        <function-ref name="makeOutput" scoped="" ref="0x76246a78"/>
        <function-ref name="set" scoped="" ref="0x76246b58"/>
        <function-ref name="clr" scoped="" ref="0x76246c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x762436d0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x762436d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x762438a8"/>
        <function-ref name="isInput" scoped="" ref="0x76243988"/>
        <function-ref name="setResistor" scoped="" ref="0x76243a68"/>
        <function-ref name="toggle" scoped="" ref="0x76243b48"/>
        <function-ref name="isOutput" scoped="" ref="0x76243c28"/>
        <function-ref name="getResistor" scoped="" ref="0x76243d08"/>
        <function-ref name="makeOutput" scoped="" ref="0x76243de8"/>
        <function-ref name="get" scoped="" ref="0x76243ec8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76242010"/>
        <function-ref name="getRaw" scoped="" ref="0x762420f0"/>
        <function-ref name="set" scoped="" ref="0x762421d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x762422b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76242390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x762424f0"/>
        <function-ref name="clr" scoped="" ref="0x762425d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x76244cd8" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x76244cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76244eb0"/>
        <function-ref name="isInput" scoped="" ref="0x76243010"/>
        <function-ref name="toggle" scoped="" ref="0x762430f0"/>
        <function-ref name="isOutput" scoped="" ref="0x762431d0"/>
        <function-ref name="get" scoped="" ref="0x762432b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76243390"/>
        <function-ref name="set" scoped="" ref="0x76243470"/>
        <function-ref name="clr" scoped="" ref="0x76243550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x75343898" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x75343898"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x75343a70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x75343b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x75340c88" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x75340c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x75340e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7533cb50" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7533cb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7533cd28"/>
        <function-ref name="configure" scoped="" ref="0x7533ce08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7533f010" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7533f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7533f1e8"/>
        <function-ref name="getStartByte" scoped="" ref="0x7533f2c8"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7533f3a8"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7533f488"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7533f568"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7533f648"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7533f728"/>
        <function-ref name="getStopBit" scoped="" ref="0x7533f808"/>
        <function-ref name="setClockSource" scoped="" ref="0x7533f8e8"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7533f9c8"/>
        <function-ref name="getData" scoped="" ref="0x7533faa8"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7533fb88"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7533fc68"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7533fdc8"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7533fea8"/>
        <function-ref name="getIV" scoped="" ref="0x7533e010"/>
        <function-ref name="enableI2C" scoped="" ref="0x7533e0f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7533e1d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7533e2b0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7533e390"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7533e470"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7533e550"/>
        <function-ref name="isI2C" scoped="" ref="0x7533e630"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7533e710"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7533e7f0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7533e9d0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7533eab0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7533eb90"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7533ec70"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7533ed50"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7533ee30"/>
        <function-ref name="disableI2C" scoped="" ref="0x7533ef10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7533d010"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7533d0f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7533d1d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7533d2b0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7533d390"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7533d470"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7533d550"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7533d630"/>
        <function-ref name="getStartBit" scoped="" ref="0x7533d710"/>
        <function-ref name="setWordMode" scoped="" ref="0x7533d7f0"/>
        <function-ref name="setData" scoped="" ref="0x7533d8d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7533d9b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7533da90"/>
        <function-ref name="getWordMode" scoped="" ref="0x7533db70"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7533dc50"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7533dd30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7533de10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7533c210"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7533c2f0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7533c3d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7533c4b0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7533c590"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7533c670"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7533c750"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7533c830"/>
        <function-ref name="setStartByte" scoped="" ref="0x7533c910"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7533c9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x75340870" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x75340870"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x75340a48"/>
        <function-ref name="txDone" scoped="" ref="0x75340b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x753431e0" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x753431e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x753433b8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x75343498"/>
        <function-ref name="request" scoped="" ref="0x75343578"/>
        <function-ref name="granted" scoped="" ref="0x75343658"/>
        <function-ref name="isOwner" scoped="" ref="0x75343738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x75342170" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x75342170"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x75342348"/>
        <function-ref name="enableUartRx" scoped="" ref="0x75342428"/>
        <function-ref name="setUctl" scoped="" ref="0x75342508"/>
        <function-ref name="enableUart" scoped="" ref="0x753425e8"/>
        <function-ref name="setUrctl" scoped="" ref="0x753426c8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x753427a8"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x75342888"/>
        <function-ref name="getUtctl" scoped="" ref="0x75342968"/>
        <function-ref name="getUrctl" scoped="" ref="0x75342a48"/>
        <function-ref name="resetUsart" scoped="" ref="0x75342b28"/>
        <function-ref name="getUmctl" scoped="" ref="0x75342c08"/>
        <function-ref name="disableIntr" scoped="" ref="0x75342ce8"/>
        <function-ref name="setUtctl" scoped="" ref="0x75342dc8"/>
        <function-ref name="getUbr" scoped="" ref="0x75342f28"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x75341018"/>
        <function-ref name="setUmctl" scoped="" ref="0x753410f8"/>
        <function-ref name="isUartRx" scoped="" ref="0x753411d8"/>
        <function-ref name="isUart" scoped="" ref="0x753412b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x75341398"/>
        <function-ref name="isSpi" scoped="" ref="0x75341478"/>
        <function-ref name="enableUartTx" scoped="" ref="0x75341558"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x75341638"/>
        <function-ref name="disableUartRx" scoped="" ref="0x75341718"/>
        <function-ref name="enableIntr" scoped="" ref="0x753417f8"/>
        <function-ref name="getMode" scoped="" ref="0x753418d8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x75341ab8"/>
        <function-ref name="clrIntr" scoped="" ref="0x75341b98"/>
        <function-ref name="setUbr" scoped="" ref="0x75341c78"/>
        <function-ref name="tx" scoped="" ref="0x75341d58"/>
        <function-ref name="getUctl" scoped="" ref="0x75341e38"/>
        <function-ref name="disableUart" scoped="" ref="0x75341f18"/>
        <function-ref name="enableSpi" scoped="" ref="0x75340010"/>
        <function-ref name="setModeUart" scoped="" ref="0x753400f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x753401d0"/>
        <function-ref name="rx" scoped="" ref="0x753402b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x75340390"/>
        <function-ref name="isUartTx" scoped="" ref="0x75340470"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x75340550"/>
        <function-ref name="disableSpi" scoped="" ref="0x75340630"/>
        <function-ref name="disableUartTx" scoped="" ref="0x75340710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x75343cb0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x75343cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x75343e88"/>
        <function-ref name="userId" scoped="" ref="0x75342010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7622b320" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7622b320"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7622b4f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7622b5d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7622a010" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7622a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7622a1e8"/>
        <function-ref name="configure" scoped="" ref="0x7622a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7622f9a0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7622f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7622fb78"/>
        <function-ref name="txDone" scoped="" ref="0x7622fc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7622c8a8" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7622c8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7622ca80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7622cb60"/>
        <function-ref name="request" scoped="" ref="0x7622cc40"/>
        <function-ref name="granted" scoped="" ref="0x7622cd20"/>
        <function-ref name="isOwner" scoped="" ref="0x7622ce00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7622c238" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7622c238"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7622c410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7622b7a8" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7622b7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7622b980"/>
        <function-ref name="userId" scoped="" ref="0x7622ba60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7621e9b0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7621e9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7621eb88"/>
        <function-ref name="userId" scoped="" ref="0x7621ec68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x762299b0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x762299b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x76229b98"/>
        <function-ref name="txDone" scoped="" ref="0x76229c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7621e678" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7621e678"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7621e850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x76229e90" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x76229e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7621e0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7621e240" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7621e240"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7621e418"/>
        <function-ref name="txDone" scoped="" ref="0x7621e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x761d8010" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x761d8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x761d81f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x761d82d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x761d7010" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x761d7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x761d71f8"/>
        <function-ref name="configure" scoped="" ref="0x761d72d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x761d8418" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x761d8418"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x761d85f0"/>
        <function-ref name="requested" scoped="" ref="0x761d86d0"/>
        <function-ref name="granted" scoped="" ref="0x761d87b0"/>
        <function-ref name="isOwner" scoped="" ref="0x761d8890"/>
        <function-ref name="immediateRequested" scoped="" ref="0x761d8970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7621b8a0" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7621b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7621ba88"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7621bb68"/>
        <function-ref name="request" scoped="" ref="0x7621bc48"/>
        <function-ref name="granted" scoped="" ref="0x7621bd28"/>
        <function-ref name="isOwner" scoped="" ref="0x7621be08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x761d8ab0" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x761d8ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x761d8c88"/>
        <function-ref name="userId" scoped="" ref="0x761d8d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x752f1120" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x752f1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x752f12f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x752f1458" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x752f1458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x752f1630"/>
        <function-ref name="isEmpty" scoped="" ref="0x752f1710"/>
        <function-ref name="isEnqueued" scoped="" ref="0x752f17f0"/>
        <function-ref name="dequeue" scoped="" ref="0x752f18d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x752f0cf8" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x752f0cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x752f0ee0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x752ef010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x752efca8" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x752efca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x752efe90"/>
        <function-ref name="configure" scoped="" ref="0x752ee010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x752ee170" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x752ee170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x752ee348"/>
        <function-ref name="isEmpty" scoped="" ref="0x752ee428"/>
        <function-ref name="isEnqueued" scoped="" ref="0x752ee508"/>
        <function-ref name="dequeue" scoped="" ref="0x752ee5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x752ef150" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x752ef150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x752ef328"/>
        <function-ref name="requested" scoped="" ref="0x752ef408"/>
        <function-ref name="granted" scoped="" ref="0x752ef4e8"/>
        <function-ref name="isOwner" scoped="" ref="0x752ef5c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x752ef6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x752ee728" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x752ee728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x752ee900"/>
        <function-ref name="led0Toggle" scoped="" ref="0x752ee9e0"/>
        <function-ref name="led1On" scoped="" ref="0x752eeac0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x752eeba0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x752eec80"/>
        <function-ref name="get" scoped="" ref="0x752eed60"/>
        <function-ref name="led1Off" scoped="" ref="0x752eee40"/>
        <function-ref name="led0On" scoped="" ref="0x752ed1d8"/>
        <function-ref name="set" scoped="" ref="0x752ed018"/>
        <function-ref name="led2On" scoped="" ref="0x752eef20"/>
        <function-ref name="led2Off" scoped="" ref="0x752ed0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x752f05b8" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x752f05b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x752f07a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x752f0880"/>
        <function-ref name="request" scoped="" ref="0x752f0960"/>
        <function-ref name="granted" scoped="" ref="0x752f0a40"/>
        <function-ref name="isOwner" scoped="" ref="0x752f0b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x752ef7e8" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x752ef7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x752ef9c0"/>
        <function-ref name="userId" scoped="" ref="0x752efaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x752ed358" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x752ed358"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x752ed530"/>
        <function-ref name="runTask" scoped="" ref="0x752ed610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x761d4ba8" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x761d4ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x761d4d80"/>
        <function-ref name="getStartByte" scoped="" ref="0x761d4e60"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x761d1010"/>
        <function-ref name="setMasterMode" scoped="" ref="0x761d10f0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x761d11d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x761d12b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x761d1390"/>
        <function-ref name="getStopBit" scoped="" ref="0x761d1470"/>
        <function-ref name="setClockSource" scoped="" ref="0x761d1550"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x761d1630"/>
        <function-ref name="getData" scoped="" ref="0x761d1710"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x761d17f0"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x761d18d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x761d1a30"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x761d1b10"/>
        <function-ref name="getIV" scoped="" ref="0x761d1bf0"/>
        <function-ref name="enableI2C" scoped="" ref="0x761d1cd0"/>
        <function-ref name="setStartBit" scoped="" ref="0x761d1db0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x761d1e90"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x761d0010"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x761d00f0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x761d01d0"/>
        <function-ref name="isI2C" scoped="" ref="0x761d02b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x761d0390"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x761d0470"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x761d0650"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x761d0730"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x761d0810"/>
        <function-ref name="disableNoAck" scoped="" ref="0x761d08f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x761d09d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x761d0ab0"/>
        <function-ref name="disableI2C" scoped="" ref="0x761d0b90"/>
        <function-ref name="getShiftClock" scoped="" ref="0x761d0c70"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x761d0d50"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x761d0e30"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x761d0f10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x761cf010"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x761cf0f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x761cf1d0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x761cf2b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x761cf390"/>
        <function-ref name="setWordMode" scoped="" ref="0x761cf470"/>
        <function-ref name="setData" scoped="" ref="0x761cf550"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x761cf630"/>
        <function-ref name="getClockSource" scoped="" ref="0x761cf710"/>
        <function-ref name="getWordMode" scoped="" ref="0x761cf7f0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x761cf8d0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x761cf9b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x761cfa90"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x761cfd70"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x761cfe50"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x761ce010"/>
        <function-ref name="setStopBit" scoped="" ref="0x761ce0f0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x761ce1d0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x761ce2b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x761ce390"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x761ce470"/>
        <function-ref name="setStartByte" scoped="" ref="0x761ce550"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x761ce630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x761c8c58" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x761c8c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x761c8e30"/>
        <function-ref name="enableUartRx" scoped="" ref="0x761c8f10"/>
        <function-ref name="setUctl" scoped="" ref="0x761c7010"/>
        <function-ref name="enableUart" scoped="" ref="0x761c70f0"/>
        <function-ref name="setUrctl" scoped="" ref="0x761c71d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x761c72b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x761c7390"/>
        <function-ref name="getUtctl" scoped="" ref="0x761c7470"/>
        <function-ref name="getUrctl" scoped="" ref="0x761c7550"/>
        <function-ref name="resetUsart" scoped="" ref="0x761c7630"/>
        <function-ref name="getUmctl" scoped="" ref="0x761c7710"/>
        <function-ref name="disableIntr" scoped="" ref="0x761c77f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x761c78d0"/>
        <function-ref name="getUbr" scoped="" ref="0x761c7a30"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x761c7b10"/>
        <function-ref name="setUmctl" scoped="" ref="0x761c7bf0"/>
        <function-ref name="isUartRx" scoped="" ref="0x761c7cd0"/>
        <function-ref name="isUart" scoped="" ref="0x761c7db0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x761c7e90"/>
        <function-ref name="isSpi" scoped="" ref="0x761c6010"/>
        <function-ref name="enableUartTx" scoped="" ref="0x761c60f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x761c61d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x761c62b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x761c6390"/>
        <function-ref name="getMode" scoped="" ref="0x761c6470"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x761c6650"/>
        <function-ref name="clrIntr" scoped="" ref="0x761c6730"/>
        <function-ref name="setUbr" scoped="" ref="0x761c6810"/>
        <function-ref name="tx" scoped="" ref="0x761c68f0"/>
        <function-ref name="getUctl" scoped="" ref="0x761c69d0"/>
        <function-ref name="disableUart" scoped="" ref="0x761c6ab0"/>
        <function-ref name="enableSpi" scoped="" ref="0x761c6b90"/>
        <function-ref name="setModeUart" scoped="" ref="0x761c6c70"/>
        <function-ref name="setModeSpi" scoped="" ref="0x761c6d50"/>
        <function-ref name="rx" scoped="" ref="0x761c6e30"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x761c6f10"/>
        <function-ref name="isUartTx" scoped="" ref="0x761c5010"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x761c50f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x761c51d0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x761c52b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x761c4678" loc="43:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x761c4678"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x761c4850"/>
        <function-ref name="isInput" scoped="" ref="0x761c4930"/>
        <function-ref name="setResistor" scoped="" ref="0x761c4a10"/>
        <function-ref name="toggle" scoped="" ref="0x761c4af0"/>
        <function-ref name="isOutput" scoped="" ref="0x761c4bd0"/>
        <function-ref name="getResistor" scoped="" ref="0x761c4cb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x761c4d90"/>
        <function-ref name="get" scoped="" ref="0x761c4e70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x761c3010"/>
        <function-ref name="getRaw" scoped="" ref="0x761c30f0"/>
        <function-ref name="set" scoped="" ref="0x761c31d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x761c32b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x761c3390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x761c34f0"/>
        <function-ref name="clr" scoped="" ref="0x761c35d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x761cb030" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x761cb030"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x761cb208"/>
        <function-ref name="getStartByte" scoped="" ref="0x761cb2e8"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x761cb3c8"/>
        <function-ref name="setMasterMode" scoped="" ref="0x761cb4a8"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x761cb588"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x761cb668"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x761cb748"/>
        <function-ref name="getStopBit" scoped="" ref="0x761cb828"/>
        <function-ref name="setClockSource" scoped="" ref="0x761cb908"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x761cb9e8"/>
        <function-ref name="getData" scoped="" ref="0x761cbac8"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x761cbba8"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x761cbc88"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x761cbde8"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x761cbec8"/>
        <function-ref name="getIV" scoped="" ref="0x761ca010"/>
        <function-ref name="enableI2C" scoped="" ref="0x761ca0f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x761ca1d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x761ca2b0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x761ca390"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x761ca470"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x761ca550"/>
        <function-ref name="isI2C" scoped="" ref="0x761ca630"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x761ca710"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x761ca7f0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x761ca9d0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x761caab0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x761cab90"/>
        <function-ref name="disableNoAck" scoped="" ref="0x761cac70"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x761cad50"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x761cae30"/>
        <function-ref name="disableI2C" scoped="" ref="0x761caf10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x761c9010"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x761c90f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x761c91d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x761c92b0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x761c9390"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x761c9470"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x761c9550"/>
        <function-ref name="setModeI2C" scoped="" ref="0x761c9630"/>
        <function-ref name="getStartBit" scoped="" ref="0x761c9710"/>
        <function-ref name="setWordMode" scoped="" ref="0x761c97f0"/>
        <function-ref name="setData" scoped="" ref="0x761c98d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x761c99b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x761c9a90"/>
        <function-ref name="getWordMode" scoped="" ref="0x761c9b70"/>
        <function-ref name="setShiftClock" scoped="" ref="0x761c9c50"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x761c9d30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x761c9e10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x761c8210"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x761c82f0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x761c83d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x761c84b0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x761c8590"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x761c8670"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x761c8750"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x761c8830"/>
        <function-ref name="setStartByte" scoped="" ref="0x761c8910"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x761c89f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x761c5518" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x761c5518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x761c56f0"/>
        <function-ref name="isInput" scoped="" ref="0x761c57d0"/>
        <function-ref name="setResistor" scoped="" ref="0x761c58b0"/>
        <function-ref name="toggle" scoped="" ref="0x761c5990"/>
        <function-ref name="isOutput" scoped="" ref="0x761c5a70"/>
        <function-ref name="getResistor" scoped="" ref="0x761c5b50"/>
        <function-ref name="makeOutput" scoped="" ref="0x761c5c30"/>
        <function-ref name="get" scoped="" ref="0x761c5d10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x761c5df0"/>
        <function-ref name="getRaw" scoped="" ref="0x761c5ed0"/>
        <function-ref name="set" scoped="" ref="0x761c4010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x761c40f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x761c41d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x761c4330"/>
        <function-ref name="clr" scoped="" ref="0x761c4410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x76131bd8" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x76131bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76131eb0"/>
        <function-ref name="write" scoped="" ref="0x76130010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x76136190" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x76136190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76136368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x76133270" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x76133270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76133448"/>
        <function-ref name="write" scoped="" ref="0x76133528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x76130a00" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x76130a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76130bd8"/>
        <function-ref name="write" scoped="" ref="0x76130cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7612b2b0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7612b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7612b488"/>
        <function-ref name="write" scoped="" ref="0x7612b568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x76130e38" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x76130e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7612f050"/>
        <function-ref name="write" scoped="" ref="0x7612f130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x76125b20" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x76125b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76125cf8"/>
        <function-ref name="write" scoped="" ref="0x76125dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x76127a00" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x76127a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76127bd8"/>
        <function-ref name="write" scoped="" ref="0x76127cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x76136b98" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x76136b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76136d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x76129190" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x76129190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76129368"/>
        <function-ref name="write" scoped="" ref="0x76129448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x76127190" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x76127190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76127368"/>
        <function-ref name="write" scoped="" ref="0x76127448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x76133ae0" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x76133ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76133cb8"/>
        <function-ref name="write" scoped="" ref="0x76133d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x76131368" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x76131368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76131540"/>
        <function-ref name="write" scoped="" ref="0x76131620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7612d5c8" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7612d5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7612d7a0"/>
        <function-ref name="write" scoped="" ref="0x7612d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7612e880" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7612e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7612ea58"/>
        <function-ref name="write" scoped="" ref="0x7612eb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7612f2b0" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7612f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7612f488"/>
        <function-ref name="write" scoped="" ref="0x7612f568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x76137550" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x76137550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x76137728"/>
        <function-ref name="abortRelease" scoped="" ref="0x76137808"/>
        <function-ref name="attemptRelease" scoped="" ref="0x761378e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x76135910" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x76135910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76135ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x76135c68" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x76135c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76135ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x76129c00" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x76129c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76129dd8"/>
        <function-ref name="write" scoped="" ref="0x76129eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x76134080" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x76134080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76134258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x761275c8" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x761275c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x761277a0"/>
        <function-ref name="write" scoped="" ref="0x76127880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x76135260" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x76135260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76135438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7612acb8" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7612acb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7612ae90"/>
        <function-ref name="write" scoped="" ref="0x76129010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x76133f18" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x76133f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76131108"/>
        <function-ref name="write" scoped="" ref="0x761311e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x761336a8" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x761336a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76133880"/>
        <function-ref name="write" scoped="" ref="0x76133960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x76137dc0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x76137dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76136010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7612a448" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7612a448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7612a620"/>
        <function-ref name="write" scoped="" ref="0x7612a700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7612b6e8" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7612b6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7612b8c0"/>
        <function-ref name="write" scoped="" ref="0x7612b9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7612a880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7612a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7612aa58"/>
        <function-ref name="write" scoped="" ref="0x7612ab38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x761256e8" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x761256e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x761258c0"/>
        <function-ref name="write" scoped="" ref="0x761259a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x76127e38" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x76127e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76125050"/>
        <function-ref name="write" scoped="" ref="0x76125130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7612ecb8" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7612ecb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7612ee90"/>
        <function-ref name="write" scoped="" ref="0x7612d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7612bb20" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7612bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7612bcf8"/>
        <function-ref name="write" scoped="" ref="0x7612bdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x76128cf8" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x76128cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76128ed0"/>
        <function-ref name="write" scoped="" ref="0x76127010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7612fb20" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7612fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7612fcf8"/>
        <function-ref name="write" scoped="" ref="0x7612fdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x76124010" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x76124010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x761241e8"/>
        <function-ref name="writeDone" scoped="" ref="0x761242c8"/>
        <function-ref name="write" scoped="" ref="0x761243a8"/>
        <function-ref name="beginRead" scoped="" ref="0x76124488"/>
        <function-ref name="readDone" scoped="" ref="0x76124568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x76137a68" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x76137a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76137c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x76134de0" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x76134de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76133010"/>
        <function-ref name="write" scoped="" ref="0x761330f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x761317a0" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x761317a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76131978"/>
        <function-ref name="write" scoped="" ref="0x76131a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7612da00" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7612da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7612dbd8"/>
        <function-ref name="write" scoped="" ref="0x7612dcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7612f6e8" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7612f6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7612f8c0"/>
        <function-ref name="write" scoped="" ref="0x7612f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7612de38" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7612de38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7612b050"/>
        <function-ref name="write" scoped="" ref="0x7612b130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x76130190" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x76130190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76130368"/>
        <function-ref name="write" scoped="" ref="0x76130448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x761364e8" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x761364e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x761366c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x761305c8" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x761305c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x761307a0"/>
        <function-ref name="write" scoped="" ref="0x76130880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x76139e88" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x76139e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x76137070"/>
        <function-ref name="immediateRequest" scoped="" ref="0x76137150"/>
        <function-ref name="request" scoped="" ref="0x76137230"/>
        <function-ref name="granted" scoped="" ref="0x76137310"/>
        <function-ref name="isOwner" scoped="" ref="0x761373f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x761343d8" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x761343d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x761345b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x76134a88" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x76134a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76134c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x761288c0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x761288c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76128a98"/>
        <function-ref name="write" scoped="" ref="0x76128b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x76128488" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x76128488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76128660"/>
        <function-ref name="write" scoped="" ref="0x76128740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x761355b8" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x761355b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76135790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x76128050" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x76128050"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76128228"/>
        <function-ref name="write" scoped="" ref="0x76128308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x761252b0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x761252b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76125488"/>
        <function-ref name="write" scoped="" ref="0x76125568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7612d190" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7612d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7612d368"/>
        <function-ref name="write" scoped="" ref="0x7612d448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7612a010" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7612a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7612a1e8"/>
        <function-ref name="write" scoped="" ref="0x7612a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x76136840" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x76136840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76136a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x76136ef0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x76136ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x761350e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7612e010" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7612e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7612e1e8"/>
        <function-ref name="write" scoped="" ref="0x7612e2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x76134730" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x76134730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76134908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7612e448" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7612e448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7612e620"/>
        <function-ref name="write" scoped="" ref="0x7612e700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x761295c8" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x761295c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x761299a0"/>
        <function-ref name="write" scoped="" ref="0x76129a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x761246e8" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x761246e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x761248c0"/>
        <function-ref name="writeDone" scoped="" ref="0x761249a0"/>
        <function-ref name="write" scoped="" ref="0x76124a80"/>
        <function-ref name="beginRead" scoped="" ref="0x76124b60"/>
        <function-ref name="readDone" scoped="" ref="0x76124c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x76119880" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x76119880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76119b58"/>
        <function-ref name="write" scoped="" ref="0x76119c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7611fc28" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7611fc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7611fe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7611be50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7611be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7611a050"/>
        <function-ref name="write" scoped="" ref="0x7611a130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x761186a8" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x761186a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76118880"/>
        <function-ref name="write" scoped="" ref="0x76118960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x76114e38" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x76114e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76113050"/>
        <function-ref name="write" scoped="" ref="0x76113130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x76118ae0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x76118ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76118cb8"/>
        <function-ref name="write" scoped="" ref="0x76118d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7610d6e8" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7610d6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7610d8c0"/>
        <function-ref name="write" scoped="" ref="0x7610d9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7610e5c8" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7610e5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7610e7a0"/>
        <function-ref name="write" scoped="" ref="0x7610e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7611e6c0" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7611e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7611e898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x76112cb8" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x76112cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76112e90"/>
        <function-ref name="write" scoped="" ref="0x76110010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7610fcf8" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7610fcf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7610fed0"/>
        <function-ref name="write" scoped="" ref="0x7610e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7611a6e8" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7611a6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7611a8c0"/>
        <function-ref name="write" scoped="" ref="0x7611a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x76119010" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x76119010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x761191e8"/>
        <function-ref name="write" scoped="" ref="0x761192c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x76114190" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x76114190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76114368"/>
        <function-ref name="write" scoped="" ref="0x76114448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x76115468" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x76115468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76115640"/>
        <function-ref name="write" scoped="" ref="0x76115720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x76118f18" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x76118f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76116108"/>
        <function-ref name="write" scoped="" ref="0x761161e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7611f060" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7611f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7611f238"/>
        <function-ref name="abortRelease" scoped="" ref="0x7611f318"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7611f3f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7611c4e8" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7611c4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7611c6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7611c840" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7611c840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7611ca98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x761107c8" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x761107c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x761109a0"/>
        <function-ref name="write" scoped="" ref="0x76110a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7611cc18" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7611cc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7611cdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7610e190" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7610e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7610e368"/>
        <function-ref name="write" scoped="" ref="0x7610e448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7611ed70" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7611ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7611c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x76112880" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x76112880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76112a58"/>
        <function-ref name="write" scoped="" ref="0x76112b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7611ab20" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7611ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7611acf8"/>
        <function-ref name="write" scoped="" ref="0x7611add8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7611a2b0" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7611a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7611a488"/>
        <function-ref name="write" scoped="" ref="0x7611a568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7611f8d0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7611f8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7611faa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x76112010" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x76112010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x761121e8"/>
        <function-ref name="write" scoped="" ref="0x761122c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x761132b0" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x761132b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76113488"/>
        <function-ref name="write" scoped="" ref="0x76113568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x76112448" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x76112448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76112620"/>
        <function-ref name="write" scoped="" ref="0x76112700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7610d2b0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7610d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7610d488"/>
        <function-ref name="write" scoped="" ref="0x7610d568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7610ea00" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7610ea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7610ebd8"/>
        <function-ref name="write" scoped="" ref="0x7610ecb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x761158a0" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x761158a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76115a78"/>
        <function-ref name="write" scoped="" ref="0x76115b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x761136e8" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x761136e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x761138c0"/>
        <function-ref name="write" scoped="" ref="0x761139a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7610f8c0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7610f8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7610fa98"/>
        <function-ref name="write" scoped="" ref="0x7610fb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x761167a0" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x761167a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76116978"/>
        <function-ref name="write" scoped="" ref="0x76116a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7610db20" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7610db20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7610dcf8"/>
        <function-ref name="writeDone" scoped="" ref="0x7610ddd8"/>
        <function-ref name="write" scoped="" ref="0x7610deb8"/>
        <function-ref name="beginRead" scoped="" ref="0x7610c010"/>
        <function-ref name="readDone" scoped="" ref="0x7610c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7611f578" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7611f578"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7611f750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7611ba18" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7611ba18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7611bbf0"/>
        <function-ref name="write" scoped="" ref="0x7611bcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x76119448" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x76119448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76119620"/>
        <function-ref name="write" scoped="" ref="0x76119700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x761145c8" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x761145c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x761147a0"/>
        <function-ref name="write" scoped="" ref="0x76114880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x76116368" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x76116368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76116540"/>
        <function-ref name="write" scoped="" ref="0x76116620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x76114a00" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x76114a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76114bd8"/>
        <function-ref name="write" scoped="" ref="0x76114cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x76119db8" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x76119db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76118010"/>
        <function-ref name="write" scoped="" ref="0x761180f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7611e010" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7611e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7611e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x76118270" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x76118270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76118448"/>
        <function-ref name="write" scoped="" ref="0x76118528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x76120980" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x76120980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x76120b58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x76120c38"/>
        <function-ref name="request" scoped="" ref="0x76120d18"/>
        <function-ref name="granted" scoped="" ref="0x76120df8"/>
        <function-ref name="isOwner" scoped="" ref="0x76120ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7611b010" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7611b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7611b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7611b6c0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7611b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7611b898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7610f488" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7610f488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7610f660"/>
        <function-ref name="write" scoped="" ref="0x7610f740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7610f050" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7610f050"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7610f228"/>
        <function-ref name="write" scoped="" ref="0x7610f308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7611c190" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7611c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7611c368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x76110c00" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x76110c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76110dd8"/>
        <function-ref name="write" scoped="" ref="0x76110eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7610ee38" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7610ee38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7610d050"/>
        <function-ref name="write" scoped="" ref="0x7610d130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x76115cd8" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x76115cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76115eb0"/>
        <function-ref name="write" scoped="" ref="0x76114010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x76113b20" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x76113b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76113cf8"/>
        <function-ref name="write" scoped="" ref="0x76113dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7611e368" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7611e368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7611e540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7611ea18" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7611ea18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7611ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x76116bd8" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x76116bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76116db0"/>
        <function-ref name="write" scoped="" ref="0x76116e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7611b368" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7611b368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7611b540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x76115030" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x76115030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76115208"/>
        <function-ref name="write" scoped="" ref="0x761152e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x76110190" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x76110190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76110568"/>
        <function-ref name="write" scoped="" ref="0x76110648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7610c270" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7610c270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7610c448"/>
        <function-ref name="writeDone" scoped="" ref="0x7610c528"/>
        <function-ref name="write" scoped="" ref="0x7610c608"/>
        <function-ref name="beginRead" scoped="" ref="0x7610c6e8"/>
        <function-ref name="readDone" scoped="" ref="0x7610c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x76107720" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x76107720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x761078f8"/>
        <function-ref name="changed" scoped="" ref="0x761079d8"/>
        <function-ref name="amGroup" scoped="" ref="0x76107ab8"/>
        <function-ref name="setAddress" scoped="" ref="0x76107b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x76106ae0" loc="13:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x76106ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x76106cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x760f61d8" loc="5:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x760f61d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x760f63b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x760f6db8" loc="8:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x760f6db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760f5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x760eeb08" loc="8:../../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x760eeb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760eece0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x760e60e0" loc="14:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x760e60e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760e62b8"/>
        <function-ref name="write" scoped="" ref="0x760e6398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x760e65e0" loc="15:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x760e65e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x760e67b8"/>
        <function-ref name="stop" scoped="" ref="0x760e6898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x760ea888" loc="11:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x760ea888"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760eaa60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x760dd010" loc="8:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x760dd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760dd1e8"/>
        <function-ref name="write" scoped="" ref="0x760dd2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x760dd4e8" loc="11:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x760dd4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x760dd6c0"/>
        <function-ref name="isInput" scoped="" ref="0x760dd7a0"/>
        <function-ref name="toggle" scoped="" ref="0x760dd880"/>
        <function-ref name="isOutput" scoped="" ref="0x760dd960"/>
        <function-ref name="get" scoped="" ref="0x760dda40"/>
        <function-ref name="makeOutput" scoped="" ref="0x760ddb20"/>
        <function-ref name="set" scoped="" ref="0x760ddc00"/>
        <function-ref name="clr" scoped="" ref="0x760ddce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x760d5588" loc="15:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x760d5588"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930d18"/>
            <typename><typedef-ref name="TMicro" ref="0x76930ef8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x760d5cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x760dc4e8" loc="11:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x760dc4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760dc6c0"/>
        <function-ref name="write" scoped="" ref="0x760dc7a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x760dc9c0" loc="14:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x760dc9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x760dcb98"/>
        <function-ref name="isInput" scoped="" ref="0x760dcc78"/>
        <function-ref name="toggle" scoped="" ref="0x760dcd58"/>
        <function-ref name="isOutput" scoped="" ref="0x760dce38"/>
        <function-ref name="get" scoped="" ref="0x760dcf18"/>
        <function-ref name="makeOutput" scoped="" ref="0x760d9010"/>
        <function-ref name="set" scoped="" ref="0x760d90f0"/>
        <function-ref name="clr" scoped="" ref="0x760d91d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x760c43e8" loc="41:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x760c43e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930d18"/>
            <typename><typedef-ref name="TMicro" ref="0x76930ef8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x760c4b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x760b9d60" loc="54:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x760b9d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930d18"/>
            <typename><typedef-ref name="TMicro" ref="0x76930ef8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x760c24e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x760c2860" loc="55:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x760c2860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930d18"/>
            <typename><typedef-ref name="TMicro" ref="0x76930ef8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x760b8010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x760b8500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x760b8288"/>
        <function-ref name="overflow" scoped="" ref="0x760b8778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x760b5610" loc="46:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x760b5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930d18"/>
            <typename><typedef-ref name="TMicro" ref="0x76930ef8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x760b5d60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x760b4288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x760b4010"/>
        <function-ref name="overflow" scoped="" ref="0x760b4500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x760b14b8" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x760b14b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x760b1690"/>
        <function-ref name="setClockSource" scoped="" ref="0x760b1770"/>
        <function-ref name="enableEvents" scoped="" ref="0x760b1850"/>
        <function-ref name="get" scoped="" ref="0x760b1930"/>
        <function-ref name="disableEvents" scoped="" ref="0x760b1a10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x760b1af0"/>
        <function-ref name="getMode" scoped="" ref="0x760b1bd0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x760b1cb0"/>
        <function-ref name="overflow" scoped="" ref="0x760b1d90"/>
        <function-ref name="setMode" scoped="" ref="0x760b1e70"/>
        <function-ref name="setInputDivider" scoped="" ref="0x760b0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x760b3388" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x760b3388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930d18"/>
            <typename><typedef-ref name="TMicro" ref="0x76930ef8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x760b3ad8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x760b1010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x760b3d50"/>
        <function-ref name="overflow" scoped="" ref="0x760b1288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x760ebbe8" loc="3:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x760ebbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x760ebdc0"/>
        <function-ref name="isInput" scoped="" ref="0x760ebea0"/>
        <function-ref name="toggle" scoped="" ref="0x760b6010"/>
        <function-ref name="isOutput" scoped="" ref="0x760b60f0"/>
        <function-ref name="get" scoped="" ref="0x760b61d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x760b62b0"/>
        <function-ref name="set" scoped="" ref="0x760b6390"/>
        <function-ref name="clr" scoped="" ref="0x760b6470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x760af988" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x760af988"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x760afb60"/>
        <function-ref name="isInput" scoped="" ref="0x760afc40"/>
        <function-ref name="setResistor" scoped="" ref="0x760afd20"/>
        <function-ref name="toggle" scoped="" ref="0x760afe00"/>
        <function-ref name="isOutput" scoped="" ref="0x760afee0"/>
        <function-ref name="getResistor" scoped="" ref="0x760ae010"/>
        <function-ref name="makeOutput" scoped="" ref="0x760ae0f0"/>
        <function-ref name="get" scoped="" ref="0x760ae1d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x760ae2b0"/>
        <function-ref name="getRaw" scoped="" ref="0x760ae390"/>
        <function-ref name="set" scoped="" ref="0x760ae470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x760ae550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x760ae630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x760ae790"/>
        <function-ref name="clr" scoped="" ref="0x760ae870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x760af010" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x760af010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x760af1e8"/>
        <function-ref name="isInput" scoped="" ref="0x760af2c8"/>
        <function-ref name="toggle" scoped="" ref="0x760af3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x760af488"/>
        <function-ref name="get" scoped="" ref="0x760af568"/>
        <function-ref name="makeOutput" scoped="" ref="0x760af648"/>
        <function-ref name="set" scoped="" ref="0x760af728"/>
        <function-ref name="clr" scoped="" ref="0x760af808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x760debc8" loc="14:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x760debc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x760deda0"/>
        <function-ref name="stop" scoped="" ref="0x760dee80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x760a5808" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x760a5808"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x760a59e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x760a5ac0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x760a5ba0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x760a5c80"/>
        <function-ref name="setCca" scoped="" ref="0x760a5d60"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x760a5e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x760a48d8" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x760a48d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x760a4ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x760a50f0" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x760a50f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x760a52c8"/>
        <function-ref name="cancel" scoped="" ref="0x760a53a8"/>
        <function-ref name="modify" scoped="" ref="0x760a5488"/>
        <function-ref name="sendDone" scoped="" ref="0x760a5568"/>
        <function-ref name="resend" scoped="" ref="0x760a5648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x760a8c00" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x760a8c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x760a8dd8"/>
        <function-ref name="stop" scoped="" ref="0x760a8eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x760a4d40" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x760a4d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x760a4f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7609c2d0" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7609c2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7609c4a8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7609c588"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7609c668"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7609c748"/>
        <function-ref name="setCca" scoped="" ref="0x7609c828"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7609c908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x76097088" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x76097088"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x76097b90"/>
        <function-ref name="clear" scoped="" ref="0x76096010"/>
        <function-ref name="isValid" scoped="" ref="0x760977d8"/>
        <function-ref name="set" scoped="" ref="0x760963c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7608bcd0" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7608bcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7608bea8"/>
        <function-ref name="write" scoped="" ref="0x7608a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7608a220" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7608a220"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7608a3f8"/>
        <function-ref name="write" scoped="" ref="0x7608a4d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7609cbc8" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7609cbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7609cda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7608c4c8" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7608c4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7608c6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x76095710" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x76095710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x760958e8"/>
        <function-ref name="disable" scoped="" ref="0x760959c8"/>
        <function-ref name="captured" scoped="" ref="0x76095aa8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x76095b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7609b680" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7609b680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7609ab30"/>
        <function-ref name="fired" scoped="" ref="0x7609a300"/>
        <function-ref name="startAt" scoped="" ref="0x7609a7f0"/>
        <function-ref name="isRunning" scoped="" ref="0x7609a578"/>
        <function-ref name="getAlarm" scoped="" ref="0x7609ada8"/>
        <function-ref name="start" scoped="" ref="0x7609bdd0"/>
        <function-ref name="stop" scoped="" ref="0x7609a088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x760980e0" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x760980e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x760982b8"/>
        <function-ref name="setNetwork" scoped="" ref="0x76098398"/>
        <function-ref name="getRssi" scoped="" ref="0x76098478"/>
        <function-ref name="getNetwork" scoped="" ref="0x76098558"/>
        <function-ref name="getPower" scoped="" ref="0x76098638"/>
        <function-ref name="getLqi" scoped="" ref="0x76098718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7608d258" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7608d258"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7608d430"/>
        <function-ref name="write" scoped="" ref="0x7608d510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7608d760" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7608d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7608d938"/>
        <function-ref name="write" scoped="" ref="0x7608da18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x76086978" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x76086978"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x76086b50"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x76086c30"/>
        <function-ref name="sfd" scoped="" ref="0x76086d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7609db28" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7609db28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7609dd00"/>
        <function-ref name="cancel" scoped="" ref="0x7609dde0"/>
        <function-ref name="modify" scoped="" ref="0x7609dec0"/>
        <function-ref name="sendDone" scoped="" ref="0x7609c010"/>
        <function-ref name="resend" scoped="" ref="0x7609c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7608f4a8" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7608f4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7608f680"/>
        <function-ref name="abortRelease" scoped="" ref="0x7608f760"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7608f840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7608c8f8" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7608c8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7608cad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x76094830" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x76094830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76094a08"/>
        <function-ref name="isInput" scoped="" ref="0x76094ae8"/>
        <function-ref name="toggle" scoped="" ref="0x76094bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x76094ca8"/>
        <function-ref name="get" scoped="" ref="0x76094d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x76094e68"/>
        <function-ref name="set" scoped="" ref="0x76090010"/>
        <function-ref name="clr" scoped="" ref="0x760900f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7609d290" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7609d290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7609d468"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x76098920" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x76098920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x76098af8"/>
        <function-ref name="getHeader" scoped="" ref="0x76098bd8"/>
        <function-ref name="getMetadata" scoped="" ref="0x76098cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x76095040" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x76095040"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x76095218"/>
        <function-ref name="isSet" scoped="" ref="0x760952f8"/>
        <function-ref name="cancel" scoped="" ref="0x760953d8"/>
        <function-ref name="set" scoped="" ref="0x760954b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7608cd38" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7608cd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7608b050"/>
        <function-ref name="write" scoped="" ref="0x7608b130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x76090d30" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x76090d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x76090f08"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7608f010"/>
        <function-ref name="request" scoped="" ref="0x7608f0f0"/>
        <function-ref name="granted" scoped="" ref="0x7608f1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7608f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x76095d88" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x76095d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76094010"/>
        <function-ref name="isInput" scoped="" ref="0x760940f0"/>
        <function-ref name="toggle" scoped="" ref="0x760941d0"/>
        <function-ref name="isOutput" scoped="" ref="0x760942b0"/>
        <function-ref name="get" scoped="" ref="0x76094390"/>
        <function-ref name="makeOutput" scoped="" ref="0x76094470"/>
        <function-ref name="set" scoped="" ref="0x76094550"/>
        <function-ref name="clr" scoped="" ref="0x76094630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7608a6e8" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7608a6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7608a8c0"/>
        <function-ref name="write" scoped="" ref="0x7608a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7608abc8" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7608abc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7608ada0"/>
        <function-ref name="write" scoped="" ref="0x7608ae80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7608dc48" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7608dc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7608de20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x760902f0" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x760902f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x760904c8"/>
        <function-ref name="isInput" scoped="" ref="0x760905a8"/>
        <function-ref name="toggle" scoped="" ref="0x76090688"/>
        <function-ref name="isOutput" scoped="" ref="0x76090768"/>
        <function-ref name="get" scoped="" ref="0x76090848"/>
        <function-ref name="makeOutput" scoped="" ref="0x76090928"/>
        <function-ref name="set" scoped="" ref="0x76090a08"/>
        <function-ref name="clr" scoped="" ref="0x76090ae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x76086ea0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x76086ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x760880c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x760881a0"/>
        <function-ref name="led1On" scoped="" ref="0x76088280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x76088360"/>
        <function-ref name="led2Toggle" scoped="" ref="0x76088440"/>
        <function-ref name="get" scoped="" ref="0x76088520"/>
        <function-ref name="led1Off" scoped="" ref="0x76088600"/>
        <function-ref name="led2Off" scoped="" ref="0x76088980"/>
        <function-ref name="set" scoped="" ref="0x760886e0"/>
        <function-ref name="led0On" scoped="" ref="0x760887c0"/>
        <function-ref name="led2On" scoped="" ref="0x760888a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7608b7b0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7608b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7608b988"/>
        <function-ref name="write" scoped="" ref="0x7608ba68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7609d630" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7609d630"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7609d808"/>
        <function-ref name="stop" scoped="" ref="0x7609d8e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7608fa68" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7608fa68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7608fc40"/>
        <function-ref name="writeDone" scoped="" ref="0x7608fd20"/>
        <function-ref name="write" scoped="" ref="0x7608fe00"/>
        <function-ref name="beginRead" scoped="" ref="0x7608fee0"/>
        <function-ref name="readDone" scoped="" ref="0x7608d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7608c098" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7608c098"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7608c270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7608b370" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7608b370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7608b548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7609b0b8" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7609b0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7609b290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7602dbd8" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7602dbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7602deb0"/>
        <function-ref name="write" scoped="" ref="0x7602c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x76032190" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x76032190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76032368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7602e270" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7602e270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7602e448"/>
        <function-ref name="write" scoped="" ref="0x7602e528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7602ca00" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7602ca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7602cbd8"/>
        <function-ref name="write" scoped="" ref="0x7602ccb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x760272b0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x760272b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76027488"/>
        <function-ref name="write" scoped="" ref="0x76027568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7602ce38" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7602ce38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7602b050"/>
        <function-ref name="write" scoped="" ref="0x7602b130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x76021b20" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x76021b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76021cf8"/>
        <function-ref name="write" scoped="" ref="0x76021dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x76022a00" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x76022a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76022bd8"/>
        <function-ref name="write" scoped="" ref="0x76022cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x76032b98" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x76032b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76032d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x76025190" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x76025190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76025368"/>
        <function-ref name="write" scoped="" ref="0x76025448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x76022190" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x76022190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76022368"/>
        <function-ref name="write" scoped="" ref="0x76022448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7602eae0" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7602eae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7602ecb8"/>
        <function-ref name="write" scoped="" ref="0x7602ed98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7602d368" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7602d368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7602d540"/>
        <function-ref name="write" scoped="" ref="0x7602d620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x760285c8" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x760285c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760287a0"/>
        <function-ref name="write" scoped="" ref="0x76028880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7602a880" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7602a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7602aa58"/>
        <function-ref name="write" scoped="" ref="0x7602ab38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7602b2b0" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7602b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7602b488"/>
        <function-ref name="write" scoped="" ref="0x7602b568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x760334f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x760334f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x760336c8"/>
        <function-ref name="abortRelease" scoped="" ref="0x760337a8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x76033888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x76031910" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x76031910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76031ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x76031c68" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x76031c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76031ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x76025c00" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x76025c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76025dd8"/>
        <function-ref name="write" scoped="" ref="0x76025eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x76030080" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x76030080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76030258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x760225c8" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x760225c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760227a0"/>
        <function-ref name="write" scoped="" ref="0x76022880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x76031260" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x76031260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76031438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x76026cb8" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x76026cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76026e90"/>
        <function-ref name="write" scoped="" ref="0x76025010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7602ef18" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7602ef18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7602d108"/>
        <function-ref name="write" scoped="" ref="0x7602d1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7602e6a8" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7602e6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7602e880"/>
        <function-ref name="write" scoped="" ref="0x7602e960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x76033d60" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x76033d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76032010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x76026448" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x76026448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76026620"/>
        <function-ref name="write" scoped="" ref="0x76026700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x760276e8" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x760276e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760278c0"/>
        <function-ref name="write" scoped="" ref="0x760279a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x76026880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x76026880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76026a58"/>
        <function-ref name="write" scoped="" ref="0x76026b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x760216e8" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x760216e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760218c0"/>
        <function-ref name="write" scoped="" ref="0x760219a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x76022e38" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x76022e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76021050"/>
        <function-ref name="write" scoped="" ref="0x76021130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7602acb8" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7602acb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7602ae90"/>
        <function-ref name="write" scoped="" ref="0x76028010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x76027b20" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x76027b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76027cf8"/>
        <function-ref name="write" scoped="" ref="0x76027dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x76024cf8" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x76024cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76024ed0"/>
        <function-ref name="write" scoped="" ref="0x76022010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7602bb20" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7602bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7602bcf8"/>
        <function-ref name="write" scoped="" ref="0x7602bdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x76020010" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x76020010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x760201e8"/>
        <function-ref name="writeDone" scoped="" ref="0x760202c8"/>
        <function-ref name="write" scoped="" ref="0x760203a8"/>
        <function-ref name="beginRead" scoped="" ref="0x76020488"/>
        <function-ref name="readDone" scoped="" ref="0x76020568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x76033a08" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x76033a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76033be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x76030de0" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x76030de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7602e010"/>
        <function-ref name="write" scoped="" ref="0x7602e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7602d7a0" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7602d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7602d978"/>
        <function-ref name="write" scoped="" ref="0x7602da58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x76028a00" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x76028a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76028bd8"/>
        <function-ref name="write" scoped="" ref="0x76028cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7602b6e8" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7602b6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7602b8c0"/>
        <function-ref name="write" scoped="" ref="0x7602b9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x76028e38" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x76028e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76027050"/>
        <function-ref name="write" scoped="" ref="0x76027130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7602c190" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7602c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7602c368"/>
        <function-ref name="write" scoped="" ref="0x7602c448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x760324e8" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x760324e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x760326c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7602c5c8" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7602c5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7602c7a0"/>
        <function-ref name="write" scoped="" ref="0x7602c880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x76034d88" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x76034d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x76033010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x760330f0"/>
        <function-ref name="request" scoped="" ref="0x760331d0"/>
        <function-ref name="granted" scoped="" ref="0x760332b0"/>
        <function-ref name="isOwner" scoped="" ref="0x76033390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x760303d8" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x760303d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x760305b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x76030a88" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x76030a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76030c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x760248c0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x760248c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76024a98"/>
        <function-ref name="write" scoped="" ref="0x76024b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x76024488" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x76024488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76024660"/>
        <function-ref name="write" scoped="" ref="0x76024740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x760315b8" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x760315b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76031790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x76024050" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x76024050"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76024228"/>
        <function-ref name="write" scoped="" ref="0x76024308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x760212b0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x760212b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76021488"/>
        <function-ref name="write" scoped="" ref="0x76021568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x76028190" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x76028190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76028368"/>
        <function-ref name="write" scoped="" ref="0x76028448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x76026010" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x76026010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760261e8"/>
        <function-ref name="write" scoped="" ref="0x760262c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x76032840" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x76032840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76032a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x76032ef0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x76032ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x760310e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7602a010" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7602a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7602a1e8"/>
        <function-ref name="write" scoped="" ref="0x7602a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x76030730" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x76030730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76030908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7602a448" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7602a448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7602a620"/>
        <function-ref name="write" scoped="" ref="0x7602a700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x760255c8" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x760255c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760259a0"/>
        <function-ref name="write" scoped="" ref="0x76025a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x760206e8" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x760206e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x760208c0"/>
        <function-ref name="writeDone" scoped="" ref="0x760209a0"/>
        <function-ref name="write" scoped="" ref="0x76020a80"/>
        <function-ref name="beginRead" scoped="" ref="0x76020b60"/>
        <function-ref name="readDone" scoped="" ref="0x76020c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x76017620" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x76017620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x760177f8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x760178d8"/>
        <function-ref name="sfd" scoped="" ref="0x760179b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x76017b60" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x76017b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x76017d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x76016010" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x76016010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x760161e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x76017180" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x76017180"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x76017358"/>
        <function-ref name="stop" scoped="" ref="0x76017438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x76012cc8" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x76012cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76012ea0"/>
        <function-ref name="isInput" scoped="" ref="0x76011010"/>
        <function-ref name="toggle" scoped="" ref="0x760110f0"/>
        <function-ref name="isOutput" scoped="" ref="0x760111d0"/>
        <function-ref name="get" scoped="" ref="0x760112b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76011390"/>
        <function-ref name="set" scoped="" ref="0x76011470"/>
        <function-ref name="clr" scoped="" ref="0x76011550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7600c010" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7600c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7600c1e8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7600c2c8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7600c3a8"/>
        <function-ref name="syncDone" scoped="" ref="0x7600c488"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7600c568"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7600c648"/>
        <function-ref name="setChannel" scoped="" ref="0x7600c728"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7600c808"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7600c8e8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7600c9c8"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7600caa8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7600cb88"/>
        <function-ref name="sync" scoped="" ref="0x7600cc68"/>
        <function-ref name="getChannel" scoped="" ref="0x7600cdc8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7600cea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x75fff378" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x75fff378"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75fff550"/>
        <function-ref name="runTask" scoped="" ref="0x75fff630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7600b2b0" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7600b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7600bdb8"/>
        <function-ref name="clear" scoped="" ref="0x7600a1a0"/>
        <function-ref name="isValid" scoped="" ref="0x7600ba00"/>
        <function-ref name="set" scoped="" ref="0x7600a558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x76011768" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x76011768"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76011940"/>
        <function-ref name="isInput" scoped="" ref="0x76011a20"/>
        <function-ref name="toggle" scoped="" ref="0x76011b00"/>
        <function-ref name="isOutput" scoped="" ref="0x76011be0"/>
        <function-ref name="get" scoped="" ref="0x76011cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76011da0"/>
        <function-ref name="set" scoped="" ref="0x76011e80"/>
        <function-ref name="clr" scoped="" ref="0x76010010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x76009408" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x76009408"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760095e0"/>
        <function-ref name="write" scoped="" ref="0x760096c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x760098d0" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x760098d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76009aa8"/>
        <function-ref name="write" scoped="" ref="0x76009b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x76008318" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x76008318"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760084f0"/>
        <function-ref name="write" scoped="" ref="0x760085d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7600d1f0" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7600d1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7600d3c8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7600d4a8"/>
        <function-ref name="getRssi" scoped="" ref="0x7600d588"/>
        <function-ref name="getNetwork" scoped="" ref="0x7600d668"/>
        <function-ref name="getPower" scoped="" ref="0x7600d748"/>
        <function-ref name="getLqi" scoped="" ref="0x7600d828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x76013500" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x76013500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x760136d8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x760137b8"/>
        <function-ref name="sfd" scoped="" ref="0x76013898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7600e8b0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7600e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7600ea88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x760122c0" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x760122c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76012498"/>
        <function-ref name="isInput" scoped="" ref="0x76012578"/>
        <function-ref name="toggle" scoped="" ref="0x76012658"/>
        <function-ref name="isOutput" scoped="" ref="0x76012738"/>
        <function-ref name="get" scoped="" ref="0x76012818"/>
        <function-ref name="makeOutput" scoped="" ref="0x760128f8"/>
        <function-ref name="set" scoped="" ref="0x760129d8"/>
        <function-ref name="clr" scoped="" ref="0x76012ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x76008818" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x76008818"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760089f0"/>
        <function-ref name="write" scoped="" ref="0x76008ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x76016c98" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x76016c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x76016e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7600da30" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7600da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7600dc08"/>
        <function-ref name="getHeader" scoped="" ref="0x7600dce8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7600ddc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x76013a40" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x76013a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x76013c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x76010968" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x76010968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x76010b40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x76010c20"/>
        <function-ref name="request" scoped="" ref="0x76010d00"/>
        <function-ref name="granted" scoped="" ref="0x76010de0"/>
        <function-ref name="isOwner" scoped="" ref="0x76010ec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x76009d98" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x76009d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76008010"/>
        <function-ref name="write" scoped="" ref="0x760080f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7600e128" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7600e128"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7600e300"/>
        <function-ref name="writeDone" scoped="" ref="0x7600e3e0"/>
        <function-ref name="write" scoped="" ref="0x7600e4c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7600e5a0"/>
        <function-ref name="readDone" scoped="" ref="0x7600e680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x76008d00" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x76008d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76006010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x76013ed8" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x76013ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x760120c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x760061a0" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x760061a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x76006378"/>
        <function-ref name="led0Toggle" scoped="" ref="0x76006458"/>
        <function-ref name="led1On" scoped="" ref="0x76006538"/>
        <function-ref name="led1Toggle" scoped="" ref="0x76006618"/>
        <function-ref name="led2Toggle" scoped="" ref="0x760066f8"/>
        <function-ref name="get" scoped="" ref="0x760067d8"/>
        <function-ref name="led1Off" scoped="" ref="0x760068b8"/>
        <function-ref name="led2Off" scoped="" ref="0x76006c38"/>
        <function-ref name="set" scoped="" ref="0x76006998"/>
        <function-ref name="led0On" scoped="" ref="0x76006a78"/>
        <function-ref name="led2On" scoped="" ref="0x76006b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7600ae98" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7600ae98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760090c0"/>
        <function-ref name="write" scoped="" ref="0x760091a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7600aa58" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7600aa58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7600ac30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x760102a8" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x760102a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x76010480"/>
        <function-ref name="disable" scoped="" ref="0x76010560"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x76010640"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x76010720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7600ece0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7600ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7600d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x76013060" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x76013060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x76013238"/>
        <function-ref name="stop" scoped="" ref="0x76013318"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x75fc6208" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x75fc6208"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x75fc63e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x75fcbdc8" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x75fcbdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x75fc7010"/>
        <function-ref name="setNetwork" scoped="" ref="0x75fc70f0"/>
        <function-ref name="getRssi" scoped="" ref="0x75fc71d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x75fc72b0"/>
        <function-ref name="getPower" scoped="" ref="0x75fc7390"/>
        <function-ref name="getLqi" scoped="" ref="0x75fc7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x75fc6860" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x75fc6860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x75fc53c8"/>
        <function-ref name="clear" scoped="" ref="0x75fc5780"/>
        <function-ref name="isValid" scoped="" ref="0x75fc5010"/>
        <function-ref name="set" scoped="" ref="0x75fc5b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x75fc7c60" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x75fc7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x75fc7e38"/>
        <function-ref name="getHeader" scoped="" ref="0x75fc7f18"/>
        <function-ref name="getMetadata" scoped="" ref="0x75fc6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x75fc2a00" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x75fc2a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75fc2bd8"/>
        <function-ref name="isSet" scoped="" ref="0x75fc2cb8"/>
        <function-ref name="cancel" scoped="" ref="0x75fc2d98"/>
        <function-ref name="set" scoped="" ref="0x75fc2e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x75fc4288" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x75fc4288"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x75fc4d90"/>
        <function-ref name="clear" scoped="" ref="0x75fc2178"/>
        <function-ref name="isValid" scoped="" ref="0x75fc49d8"/>
        <function-ref name="set" scoped="" ref="0x75fc2530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x75fc76e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x75fc76e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x75fc78b8"/>
        <function-ref name="noAck" scoped="" ref="0x75fc7998"/>
        <function-ref name="wasAcked" scoped="" ref="0x75fc7a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x75fbebc0" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x75fbebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x75fbed98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x75fc17e0" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x75fc17e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x75fc19b8"/>
        <function-ref name="setNetwork" scoped="" ref="0x75fc1a98"/>
        <function-ref name="getRssi" scoped="" ref="0x75fc1b78"/>
        <function-ref name="getNetwork" scoped="" ref="0x75fc1c58"/>
        <function-ref name="getPower" scoped="" ref="0x75fc1d38"/>
        <function-ref name="getLqi" scoped="" ref="0x75fc1e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x75fb9a28" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x75fb9a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75fb9c00"/>
        <function-ref name="payloadLength" scoped="" ref="0x75fb9ce0"/>
        <function-ref name="getPayload" scoped="" ref="0x75fb9dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75fb9ea0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75fb8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x75fbd260" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x75fbd260"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x75fbdd68"/>
        <function-ref name="clear" scoped="" ref="0x75fbc158"/>
        <function-ref name="isValid" scoped="" ref="0x75fbd9b0"/>
        <function-ref name="set" scoped="" ref="0x75fbc510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x75fbe630" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x75fbe630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x75fbe808"/>
        <function-ref name="getHeader" scoped="" ref="0x75fbe8e8"/>
        <function-ref name="getMetadata" scoped="" ref="0x75fbe9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x75fb9400" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x75fb9400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75fb95d8"/>
        <function-ref name="isSet" scoped="" ref="0x75fb96b8"/>
        <function-ref name="cancel" scoped="" ref="0x75fb9798"/>
        <function-ref name="set" scoped="" ref="0x75fb9878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x75fb7010" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x75fb7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75fb7658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x75fb7a68" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x75fb7a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75fb60d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x75fbcc50" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x75fbcc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x75fba7a8"/>
        <function-ref name="clear" scoped="" ref="0x75fbab60"/>
        <function-ref name="isValid" scoped="" ref="0x75fba3f0"/>
        <function-ref name="set" scoped="" ref="0x75fbaf18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x75fbe0b0" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x75fbe0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x75fbe288"/>
        <function-ref name="noAck" scoped="" ref="0x75fbe368"/>
        <function-ref name="wasAcked" scoped="" ref="0x75fbe448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x75f876b8" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x75f876b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75f87d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x75f860a0" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x75f860a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75f867f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x75f86ce0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x75f86a68"/>
        <function-ref name="overflow" scoped="" ref="0x75f80010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x75f7d9a0" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x75f7d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75f7a4c8"/>
        <function-ref name="fired" scoped="" ref="0x75f7c768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75f7ce70"/>
        <function-ref name="isOneShot" scoped="" ref="0x75f7cc18"/>
        <function-ref name="getdt" scoped="" ref="0x75f7a978"/>
        <function-ref name="gett0" scoped="" ref="0x75f7a720"/>
        <function-ref name="isRunning" scoped="" ref="0x75f7c9c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75f7c010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75f7a1a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x75f7c290"/>
        <function-ref name="stop" scoped="" ref="0x75f7c510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x75f7acd8" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x75f7acd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75f79370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75f7d1f0" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75f7d1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75f7d3c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x75f78bb0" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x75f78bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75f5d088"/>
        <function-ref name="fired" scoped="" ref="0x75f5e830"/>
        <function-ref name="startAt" scoped="" ref="0x75f5ed20"/>
        <function-ref name="isRunning" scoped="" ref="0x75f5eaa8"/>
        <function-ref name="getAlarm" scoped="" ref="0x75f5d300"/>
        <function-ref name="start" scoped="" ref="0x75f5e318"/>
        <function-ref name="stop" scoped="" ref="0x75f5e5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75f78758" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75f78758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75f78930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x75252c30" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x75252c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7524f0f8"/>
        <function-ref name="fired" scoped="" ref="0x752518b8"/>
        <function-ref name="startAt" scoped="" ref="0x75251da8"/>
        <function-ref name="isRunning" scoped="" ref="0x75251b30"/>
        <function-ref name="getAlarm" scoped="" ref="0x7524f370"/>
        <function-ref name="start" scoped="" ref="0x752513a0"/>
        <function-ref name="stop" scoped="" ref="0x75251640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x752527d8" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x752527d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x752529b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x75245ac8" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x75245ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x75245ca0"/>
        <function-ref name="setEvent" scoped="" ref="0x75245d80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x75245e60"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x75243010"/>
        <function-ref name="fired" scoped="" ref="0x752430f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x75246480" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x75246480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75246658"/>
        <function-ref name="setClockSource" scoped="" ref="0x75246738"/>
        <function-ref name="enableEvents" scoped="" ref="0x75246818"/>
        <function-ref name="get" scoped="" ref="0x752468f8"/>
        <function-ref name="disableEvents" scoped="" ref="0x752469d8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x75246ab8"/>
        <function-ref name="getMode" scoped="" ref="0x75246b98"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x75246c78"/>
        <function-ref name="overflow" scoped="" ref="0x75246d58"/>
        <function-ref name="setMode" scoped="" ref="0x75246e38"/>
        <function-ref name="setInputDivider" scoped="" ref="0x75246f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x75245090" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x75245090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x75245268"/>
        <function-ref name="getControl" scoped="" ref="0x75245348"/>
        <function-ref name="enableEvents" scoped="" ref="0x75245428"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x75245508"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x752455e8"/>
        <function-ref name="disableEvents" scoped="" ref="0x752456c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x752457a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x75245888"/>
        <function-ref name="setControl" scoped="" ref="0x75245968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7523f4f0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7523f4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7523f6c8"/>
        <function-ref name="setEvent" scoped="" ref="0x7523f7a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7523f888"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7523f968"/>
        <function-ref name="fired" scoped="" ref="0x7523fa48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x75241e48" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x75241e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75240050"/>
        <function-ref name="setClockSource" scoped="" ref="0x75240130"/>
        <function-ref name="enableEvents" scoped="" ref="0x75240210"/>
        <function-ref name="get" scoped="" ref="0x752402f0"/>
        <function-ref name="disableEvents" scoped="" ref="0x752403d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x752404b0"/>
        <function-ref name="getMode" scoped="" ref="0x75240590"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x75240670"/>
        <function-ref name="overflow" scoped="" ref="0x75240750"/>
        <function-ref name="setMode" scoped="" ref="0x75240830"/>
        <function-ref name="setInputDivider" scoped="" ref="0x75240910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x752424d8" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x752424d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x752419a0"/>
        <function-ref name="fired" scoped="" ref="0x75241170"/>
        <function-ref name="startAt" scoped="" ref="0x75241660"/>
        <function-ref name="isRunning" scoped="" ref="0x752413e8"/>
        <function-ref name="getAlarm" scoped="" ref="0x75241c18"/>
        <function-ref name="start" scoped="" ref="0x75242c28"/>
        <function-ref name="stop" scoped="" ref="0x75242ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75242060" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75242060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75242238"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x75240a70" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x75240a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x75240c48"/>
        <function-ref name="getControl" scoped="" ref="0x75240d28"/>
        <function-ref name="enableEvents" scoped="" ref="0x75240e08"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x75240ee8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7523f010"/>
        <function-ref name="disableEvents" scoped="" ref="0x7523f0f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7523f1d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7523f2b0"/>
        <function-ref name="setControl" scoped="" ref="0x7523f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x75f70cc8" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x75f70cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75f6c438"/>
        <function-ref name="clearOverflow" scoped="" ref="0x75f6c928"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x75f6c6b0"/>
        <function-ref name="overflow" scoped="" ref="0x75f6cba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x75f68870" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x75f68870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75f67010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x75f67500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x75f67288"/>
        <function-ref name="overflow" scoped="" ref="0x75f67778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x75f6a5c0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x75f6a5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75f6ad10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x75f68288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x75f68010"/>
        <function-ref name="overflow" scoped="" ref="0x75f68500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7524e6b8" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7524e6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7524db80"/>
        <function-ref name="fired" scoped="" ref="0x7524d350"/>
        <function-ref name="startAt" scoped="" ref="0x7524d840"/>
        <function-ref name="isRunning" scoped="" ref="0x7524d5c8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7524ddf8"/>
        <function-ref name="start" scoped="" ref="0x7524ee08"/>
        <function-ref name="stop" scoped="" ref="0x7524d0d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7524b3b8" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7524b3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75249878"/>
        <function-ref name="fired" scoped="" ref="0x75249048"/>
        <function-ref name="startAt" scoped="" ref="0x75249538"/>
        <function-ref name="isRunning" scoped="" ref="0x752492c0"/>
        <function-ref name="getAlarm" scoped="" ref="0x75249af0"/>
        <function-ref name="start" scoped="" ref="0x7524bb08"/>
        <function-ref name="stop" scoped="" ref="0x7524bda8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7524c180" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7524c180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7524c8d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7524cdc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7524cb48"/>
        <function-ref name="overflow" scoped="" ref="0x7524b048"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x75f414d8" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x75f414d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75f416b0"/>
        <function-ref name="runTask" scoped="" ref="0x75f41790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x75f44a48" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x75f44a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75f41010"/>
        <function-ref name="fired" scoped="" ref="0x75f43718"/>
        <function-ref name="startAt" scoped="" ref="0x75f43c08"/>
        <function-ref name="isRunning" scoped="" ref="0x75f43990"/>
        <function-ref name="getAlarm" scoped="" ref="0x75f41288"/>
        <function-ref name="start" scoped="" ref="0x75f43200"/>
        <function-ref name="stop" scoped="" ref="0x75f434a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x75f5b758" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x75f5b758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75f44248"/>
        <function-ref name="fired" scoped="" ref="0x75f454e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75f45bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x75f45998"/>
        <function-ref name="getdt" scoped="" ref="0x75f446f8"/>
        <function-ref name="gett0" scoped="" ref="0x75f444a0"/>
        <function-ref name="isRunning" scoped="" ref="0x75f45740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75f5bd80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75f45f10"/>
        <function-ref name="startOneShot" scoped="" ref="0x75f45010"/>
        <function-ref name="stop" scoped="" ref="0x75f45290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x75f13260" loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x75f13260"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75f13438"/>
        <function-ref name="runTask" scoped="" ref="0x75f13518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x75f16010" loc="49:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x75f16010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75f14b00"/>
        <function-ref name="fired" scoped="" ref="0x75f16d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75f144c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x75f14268"/>
        <function-ref name="getdt" scoped="" ref="0x75f13010"/>
        <function-ref name="gett0" scoped="" ref="0x75f14d58"/>
        <function-ref name="isRunning" scoped="" ref="0x75f14010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75f16638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75f147e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x75f168b8"/>
        <function-ref name="stop" scoped="" ref="0x75f16b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x75f3fbd0" loc="48:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x75f3fbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75f17790"/>
        <function-ref name="fired" scoped="" ref="0x75f3e9e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75f17130"/>
        <function-ref name="isOneShot" scoped="" ref="0x75f3eeb0"/>
        <function-ref name="getdt" scoped="" ref="0x75f17c60"/>
        <function-ref name="gett0" scoped="" ref="0x75f179f8"/>
        <function-ref name="isRunning" scoped="" ref="0x75f3ec48"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75f3e258"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75f17460"/>
        <function-ref name="startOneShot" scoped="" ref="0x75f3e4e8"/>
        <function-ref name="stop" scoped="" ref="0x75f3e778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x75f12730" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x75f12730"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75f12d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x75f110e8" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x75f110e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75f11838"/>
        <function-ref name="clearOverflow" scoped="" ref="0x75f11d28"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x75f11ab0"/>
        <function-ref name="overflow" scoped="" ref="0x75f0f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x75f0d4c8" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x75f0d4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75f07010"/>
        <function-ref name="fired" scoped="" ref="0x75f0c268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75f0c970"/>
        <function-ref name="isOneShot" scoped="" ref="0x75f0c718"/>
        <function-ref name="getdt" scoped="" ref="0x75f074c0"/>
        <function-ref name="gett0" scoped="" ref="0x75f07268"/>
        <function-ref name="isRunning" scoped="" ref="0x75f0c4c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75f0daf0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75f0cc90"/>
        <function-ref name="startOneShot" scoped="" ref="0x75f0dd70"/>
        <function-ref name="stop" scoped="" ref="0x75f0c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x75f06618" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x75f06618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75f04130"/>
        <function-ref name="fired" scoped="" ref="0x75f053c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75f05ad0"/>
        <function-ref name="isOneShot" scoped="" ref="0x75f05878"/>
        <function-ref name="getdt" scoped="" ref="0x75f045e0"/>
        <function-ref name="gett0" scoped="" ref="0x75f04388"/>
        <function-ref name="isRunning" scoped="" ref="0x75f05620"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75f06c40"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75f05df0"/>
        <function-ref name="startOneShot" scoped="" ref="0x75f06ec0"/>
        <function-ref name="stop" scoped="" ref="0x75f05170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x75efae38" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x75efae38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75ef9208"/>
        <function-ref name="write" scoped="" ref="0x75ef92e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x75eff3d8" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x75eff3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75eff5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x75efb4b8" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x75efb4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75efb690"/>
        <function-ref name="write" scoped="" ref="0x75efb770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x75ef9cd8" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x75ef9cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75ef9eb0"/>
        <function-ref name="write" scoped="" ref="0x75ef8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x75ef45c8" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x75ef45c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75ef47a0"/>
        <function-ref name="write" scoped="" ref="0x75ef4880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x75ef8190" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x75ef8190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75ef8368"/>
        <function-ref name="write" scoped="" ref="0x75ef8448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x75eeee38" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x75eeee38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75eed050"/>
        <function-ref name="write" scoped="" ref="0x75eed130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x75eefcb8" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x75eefcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75eefe90"/>
        <function-ref name="write" scoped="" ref="0x75eee010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x75effde0" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x75effde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75efe010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x75ef2448" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x75ef2448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75ef2620"/>
        <function-ref name="write" scoped="" ref="0x75ef2700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x75eef448" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x75eef448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75eef620"/>
        <function-ref name="write" scoped="" ref="0x75eef700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x75efbd28" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x75efbd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75efbf00"/>
        <function-ref name="write" scoped="" ref="0x75efa010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x75efa5c8" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x75efa5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75efa7a0"/>
        <function-ref name="write" scoped="" ref="0x75efa880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x75ef5880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x75ef5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75ef5a58"/>
        <function-ref name="write" scoped="" ref="0x75ef5b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x75ef7b20" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x75ef7b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75ef7cf8"/>
        <function-ref name="write" scoped="" ref="0x75ef7dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x75ef85c8" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x75ef85c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75ef87a0"/>
        <function-ref name="write" scoped="" ref="0x75ef8880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x75f007f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x75f007f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x75f009c8"/>
        <function-ref name="abortRelease" scoped="" ref="0x75f00aa8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x75f00b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x75efeb98" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x75efeb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75efed70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x75efeef0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x75efeef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75efd188"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x75ef2eb8" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x75ef2eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75ef10c0"/>
        <function-ref name="write" scoped="" ref="0x75ef11a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x75efd308" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x75efd308"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75efd4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x75eef880" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x75eef880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75eefa58"/>
        <function-ref name="write" scoped="" ref="0x75eefb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x75efe4e8" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x75efe4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75efe6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x75ef2010" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x75ef2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75ef21e8"/>
        <function-ref name="write" scoped="" ref="0x75ef22c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x75efa190" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x75efa190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75efa368"/>
        <function-ref name="write" scoped="" ref="0x75efa448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x75efb8f0" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x75efb8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75efbac8"/>
        <function-ref name="write" scoped="" ref="0x75efbba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x75eff080" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x75eff080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75eff258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x75ef36e8" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x75ef36e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75ef38c0"/>
        <function-ref name="write" scoped="" ref="0x75ef39a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x75ef4a00" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x75ef4a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75ef4bd8"/>
        <function-ref name="write" scoped="" ref="0x75ef4cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x75ef3b20" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x75ef3b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75ef3cf8"/>
        <function-ref name="write" scoped="" ref="0x75ef3dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x75eeea00" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x75eeea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75eeebd8"/>
        <function-ref name="write" scoped="" ref="0x75eeecb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x75eee190" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x75eee190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75eee368"/>
        <function-ref name="write" scoped="" ref="0x75eee448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x75ef5010" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x75ef5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75ef51e8"/>
        <function-ref name="write" scoped="" ref="0x75ef52c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x75ef4e38" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x75ef4e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75ef3050"/>
        <function-ref name="write" scoped="" ref="0x75ef3130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x75eef010" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x75eef010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75eef1e8"/>
        <function-ref name="write" scoped="" ref="0x75eef2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x75ef8e38" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x75ef8e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75ef7050"/>
        <function-ref name="write" scoped="" ref="0x75ef7130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x75eed2b0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x75eed2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x75eed488"/>
        <function-ref name="writeDone" scoped="" ref="0x75eed568"/>
        <function-ref name="write" scoped="" ref="0x75eed648"/>
        <function-ref name="beginRead" scoped="" ref="0x75eed728"/>
        <function-ref name="readDone" scoped="" ref="0x75eed808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x75f00d08" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x75f00d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75f00ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x75efb080" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x75efb080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75efb258"/>
        <function-ref name="write" scoped="" ref="0x75efb338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x75efaa00" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x75efaa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75efabd8"/>
        <function-ref name="write" scoped="" ref="0x75efacb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x75ef5cb8" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x75ef5cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75ef5e90"/>
        <function-ref name="write" scoped="" ref="0x75ef4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x75ef8a00" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x75ef8a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75ef8bd8"/>
        <function-ref name="write" scoped="" ref="0x75ef8cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x75ef4190" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x75ef4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75ef4368"/>
        <function-ref name="write" scoped="" ref="0x75ef4448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x75ef9468" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x75ef9468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75ef9640"/>
        <function-ref name="write" scoped="" ref="0x75ef9720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x75eff730" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x75eff730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75eff908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x75ef98a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x75ef98a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75ef9a78"/>
        <function-ref name="write" scoped="" ref="0x75ef9b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x75f00138" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x75f00138"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x75f00310"/>
        <function-ref name="immediateRequest" scoped="" ref="0x75f003f0"/>
        <function-ref name="request" scoped="" ref="0x75f004d0"/>
        <function-ref name="granted" scoped="" ref="0x75f005b0"/>
        <function-ref name="isOwner" scoped="" ref="0x75f00690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x75efd660" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x75efd660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75efd838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x75efdd10" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x75efdd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75efdee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x75ef1b90" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x75ef1b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75ef1d68"/>
        <function-ref name="write" scoped="" ref="0x75ef1e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x75ef1758" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x75ef1758"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75ef1930"/>
        <function-ref name="write" scoped="" ref="0x75ef1a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x75efe840" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x75efe840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75efea18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x75ef1320" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x75ef1320"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75ef14f8"/>
        <function-ref name="write" scoped="" ref="0x75ef15d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x75eee5c8" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x75eee5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75eee7a0"/>
        <function-ref name="write" scoped="" ref="0x75eee880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x75ef5448" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x75ef5448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75ef5620"/>
        <function-ref name="write" scoped="" ref="0x75ef5700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x75ef32b0" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x75ef32b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75ef3488"/>
        <function-ref name="write" scoped="" ref="0x75ef3568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x75effa88" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x75effa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75effc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x75efe190" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x75efe190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75efe368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x75ef72b0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x75ef72b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75ef7488"/>
        <function-ref name="write" scoped="" ref="0x75ef7568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x75efd9b8" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x75efd9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75efdb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x75ef76e8" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x75ef76e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75ef78c0"/>
        <function-ref name="write" scoped="" ref="0x75ef79a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x75ef2880" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x75ef2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75ef2c58"/>
        <function-ref name="write" scoped="" ref="0x75ef2d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x75eed988" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x75eed988"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x75eedb60"/>
        <function-ref name="writeDone" scoped="" ref="0x75eedc40"/>
        <function-ref name="write" scoped="" ref="0x75eedd20"/>
        <function-ref name="beginRead" scoped="" ref="0x75eede00"/>
        <function-ref name="readDone" scoped="" ref="0x75eedee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x75ed3c40" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x75ed3c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x75ed3e18"/>
        <function-ref name="rand32" scoped="" ref="0x75ed3ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x75ed3380" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x75ed3380"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75ed39a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75ed7060" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75ed7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75ed7238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x75ed16e0" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x75ed16e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x75ed18b8"/>
        <function-ref name="rand32" scoped="" ref="0x75ed1998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x75ed5dd0" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x75ed5dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75ed1448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75ed58b0" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75ed58b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75ed5a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x75ed9970" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x75ed9970"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x75ed9b48"/>
        <function-ref name="toIdle" scoped="" ref="0x75ed9c28"/>
        <function-ref name="isState" scoped="" ref="0x75ed9d08"/>
        <function-ref name="isIdle" scoped="" ref="0x75ed9de8"/>
        <function-ref name="requestState" scoped="" ref="0x75ed9ec8"/>
        <function-ref name="forceState" scoped="" ref="0x75ed8010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x75ec6010" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x75ec6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75ec61e8"/>
        <function-ref name="getPayload" scoped="" ref="0x75ec62c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75ec63a8"/>
        <function-ref name="cancel" scoped="" ref="0x75ec6488"/>
        <function-ref name="sendDone" scoped="" ref="0x75ec6568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x75ec97f0" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x75ec97f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75ec99c8"/>
        <function-ref name="getPayload" scoped="" ref="0x75ec9aa8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75ec9b88"/>
        <function-ref name="cancel" scoped="" ref="0x75ec9c68"/>
        <function-ref name="sendDone" scoped="" ref="0x75ec9d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x75ec3960" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x75ec3960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75ec3b38"/>
        <function-ref name="getPayload" scoped="" ref="0x75ec3c18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75ec3cf8"/>
        <function-ref name="cancel" scoped="" ref="0x75ec3dd8"/>
        <function-ref name="sendDone" scoped="" ref="0x75ec3eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x75ec6e90" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x75ec6e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75ec3080"/>
        <function-ref name="getPayload" scoped="" ref="0x75ec3160"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75ec3240"/>
        <function-ref name="cancel" scoped="" ref="0x75ec3320"/>
        <function-ref name="sendDone" scoped="" ref="0x75ec3400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x75ec2818" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x75ec2818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x75ec29f0"/>
        <function-ref name="rand32" scoped="" ref="0x75ec2ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75ec3570" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75ec3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75ec3748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x75ec2cb8" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x75ec2cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x75ec2e90"/>
        <function-ref name="getHeader" scoped="" ref="0x75ec1010"/>
        <function-ref name="getMetadata" scoped="" ref="0x75ec10f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x75ec2060" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x75ec2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x75ec2238"/>
        <function-ref name="toIdle" scoped="" ref="0x75ec2318"/>
        <function-ref name="isState" scoped="" ref="0x75ec23f8"/>
        <function-ref name="isIdle" scoped="" ref="0x75ec24d8"/>
        <function-ref name="requestState" scoped="" ref="0x75ec25b8"/>
        <function-ref name="forceState" scoped="" ref="0x75ec2698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x75ec5f10" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x75ec5f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x75ec4108"/>
        <function-ref name="toIdle" scoped="" ref="0x75ec41e8"/>
        <function-ref name="isState" scoped="" ref="0x75ec42c8"/>
        <function-ref name="isIdle" scoped="" ref="0x75ec43a8"/>
        <function-ref name="requestState" scoped="" ref="0x75ec4488"/>
        <function-ref name="forceState" scoped="" ref="0x75ec4568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x75ec7e78" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x75ec7e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75eb4070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x75ec7628" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x75ec7628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75ec7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x75ec7a50" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x75ec7a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75ec7c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x75eb16a8" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x75eb16a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75eb1880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75eb1280" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75eb1280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75eb1458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x75eb4af8" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x75eb4af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75eb4cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x75eb1a68" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x75eb1a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x75eb1c40"/>
        <function-ref name="getHeader" scoped="" ref="0x75eb1d20"/>
        <function-ref name="getMetadata" scoped="" ref="0x75eb1e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x75eb4f20" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x75eb4f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75eb1110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x75e97ea8" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x75e97ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75e960c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x75e96298" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x75e96298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75e96470"/>
        <function-ref name="getPayload" scoped="" ref="0x75e96550"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75e96630"/>
        <function-ref name="cancel" scoped="" ref="0x75e96710"/>
        <function-ref name="sendDone" scoped="" ref="0x75e967f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x75e98090" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x75e98090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75e98268"/>
        <function-ref name="getPayload" scoped="" ref="0x75e98348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75e98428"/>
        <function-ref name="cancel" scoped="" ref="0x75e98508"/>
        <function-ref name="sendDone" scoped="" ref="0x75e985e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x75e98b40" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x75e98b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75e98d18"/>
        <function-ref name="getPayload" scoped="" ref="0x75e98df8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75e98ed8"/>
        <function-ref name="cancel" scoped="" ref="0x75e97010"/>
        <function-ref name="sendDone" scoped="" ref="0x75e970f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x75e98770" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x75e98770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75e98948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x75e999a0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x75e999a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x75e99b78"/>
        <function-ref name="immediateRequest" scoped="" ref="0x75e99c58"/>
        <function-ref name="request" scoped="" ref="0x75e99d38"/>
        <function-ref name="granted" scoped="" ref="0x75e99e18"/>
        <function-ref name="isOwner" scoped="" ref="0x75e99ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x75e97320" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x75e97320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75e974f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x75e97700" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x75e97700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75e978d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x75e979b8"/>
        <function-ref name="getPayload" scoped="" ref="0x75e97a98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75e97b78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75e97c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x75e8f4c8" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x75e8f4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75e8f6a0"/>
        <function-ref name="getPayload" scoped="" ref="0x75e8f780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75e8f860"/>
        <function-ref name="cancel" scoped="" ref="0x75e8f940"/>
        <function-ref name="sendDone" scoped="" ref="0x75e8fa20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x75e8fc30" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x75e8fc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75e8fe08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x75e74cc8" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x75e74cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75e74ea0"/>
        <function-ref name="runTask" scoped="" ref="0x75e73010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x75e8e010" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x75e8e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x75e8e1e8"/>
        <function-ref name="setNetwork" scoped="" ref="0x75e8e2c8"/>
        <function-ref name="getRssi" scoped="" ref="0x75e8e3a8"/>
        <function-ref name="getNetwork" scoped="" ref="0x75e8e488"/>
        <function-ref name="getPower" scoped="" ref="0x75e8e568"/>
        <function-ref name="getLqi" scoped="" ref="0x75e8e648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x75e90118" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x75e90118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75e902f0"/>
        <function-ref name="getPayload" scoped="" ref="0x75e903d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75e904b0"/>
        <function-ref name="cancel" scoped="" ref="0x75e90590"/>
        <function-ref name="sendDone" scoped="" ref="0x75e90670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x75e8ede8" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x75e8ede8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x75e8d010"/>
        <function-ref name="isEmpty" scoped="" ref="0x75e8d0f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x75e8d1d0"/>
        <function-ref name="dequeue" scoped="" ref="0x75e8d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x75e8e830" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x75e8e830"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x75e8ea08"/>
        <function-ref name="getHeader" scoped="" ref="0x75e8eae8"/>
        <function-ref name="getMetadata" scoped="" ref="0x75e8ebc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x75e91d28" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x75e91d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75e91f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x75e94e50" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x75e94e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x75e91050"/>
        <function-ref name="immediateRequest" scoped="" ref="0x75e91130"/>
        <function-ref name="request" scoped="" ref="0x75e91210"/>
        <function-ref name="granted" scoped="" ref="0x75e912f0"/>
        <function-ref name="isOwner" scoped="" ref="0x75e913d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x75e915b8" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x75e915b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75e91790"/>
        <function-ref name="getPayload" scoped="" ref="0x75e91870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75e91950"/>
        <function-ref name="cancel" scoped="" ref="0x75e91a30"/>
        <function-ref name="sendDone" scoped="" ref="0x75e91b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x75e908a0" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x75e908a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75e90a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x75e90c80" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x75e90c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75e90e58"/>
        <function-ref name="payloadLength" scoped="" ref="0x75e8f010"/>
        <function-ref name="getPayload" scoped="" ref="0x75e8f0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75e8f1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75e8f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75e925c8" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75e925c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75e927a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x75e92900" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x75e92900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x75e92ad8"/>
        <function-ref name="isEmpty" scoped="" ref="0x75e92bb8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x75e92c98"/>
        <function-ref name="dequeue" scoped="" ref="0x75e92d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x75e5acd8" loc="46:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x75e5acd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x75e5aeb0"/>
        <function-ref name="stopDone" scoped="" ref="0x75e59010"/>
        <function-ref name="start" scoped="" ref="0x75e590f0"/>
        <function-ref name="stop" scoped="" ref="0x75e591d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x75e59c18" loc="51:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x75e59c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75e59df0"/>
        <function-ref name="getPayload" scoped="" ref="0x75e59ed0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75e58010"/>
        <function-ref name="cancel" scoped="" ref="0x75e580f0"/>
        <function-ref name="sendDone" scoped="" ref="0x75e581d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x75e583e0" loc="52:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x75e583e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75e585b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x75e5a260" loc="44:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x75e5a260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75e5a438"/>
        <function-ref name="getPayload" scoped="" ref="0x75e5a518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75e5a5f8"/>
        <function-ref name="cancel" scoped="" ref="0x75e5a6d8"/>
        <function-ref name="sendDone" scoped="" ref="0x75e5a7b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x75e5bba8" loc="43:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x75e5bba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x75e5bd80"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x75e5be60"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x75e5a010"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x75e5a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x75e593c8" loc="47:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x75e593c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x75e595a0"/>
        <function-ref name="toIdle" scoped="" ref="0x75e59680"/>
        <function-ref name="isState" scoped="" ref="0x75e59760"/>
        <function-ref name="isIdle" scoped="" ref="0x75e59840"/>
        <function-ref name="requestState" scoped="" ref="0x75e59920"/>
        <function-ref name="forceState" scoped="" ref="0x75e59a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x75e58800" loc="53:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x75e58800"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x75e589d8"/>
        <function-ref name="stopDone" scoped="" ref="0x75e58ab8"/>
        <function-ref name="start" scoped="" ref="0x75e58b98"/>
        <function-ref name="stop" scoped="" ref="0x75e58c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x75e5a940" loc="45:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x75e5a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75e5ab18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x75e52928" loc="59:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x75e52928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75e52b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x75e53228" loc="56:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x75e53228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75e53400"/>
        <function-ref name="getPayload" scoped="" ref="0x75e534e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75e535c0"/>
        <function-ref name="cancel" scoped="" ref="0x75e536a0"/>
        <function-ref name="sendDone" scoped="" ref="0x75e53780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x75e415a8" loc="109:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="send" scoped="" ref="0x75e415a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75e41780"/>
        <function-ref name="runTask" scoped="" ref="0x75e41860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioBackoff" ref="0x75e520e0" loc="58:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x75e520e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x75e522b8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x75e52398"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x75e52478"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x75e52558"/>
        <function-ref name="setCca" scoped="" ref="0x75e52638"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x75e52718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x75e42310" loc="71:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x75e42310"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x75e424e8"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x75e425c8"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x75e426a8"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x75e42788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OffTimer" ref="0x75e4c2d0" loc="67:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OffTimer" scoped="" ref="0x75e4c2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75e4bdb0"/>
        <function-ref name="fired" scoped="" ref="0x75e4b068"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75e4b770"/>
        <function-ref name="isOneShot" scoped="" ref="0x75e4b518"/>
        <function-ref name="getdt" scoped="" ref="0x75e4a2a0"/>
        <function-ref name="gett0" scoped="" ref="0x75e4a048"/>
        <function-ref name="isRunning" scoped="" ref="0x75e4b2c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75e4c8f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75e4ba90"/>
        <function-ref name="startOneShot" scoped="" ref="0x75e4cb78"/>
        <function-ref name="stop" scoped="" ref="0x75e4cdf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x75e546f8" loc="51:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x75e546f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75e548d0"/>
        <function-ref name="getPayload" scoped="" ref="0x75e549b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75e54a90"/>
        <function-ref name="cancel" scoped="" ref="0x75e54b70"/>
        <function-ref name="sendDone" scoped="" ref="0x75e54c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x75e54110" loc="50:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x75e54110"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x75e542e8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x75e543c8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x75e544a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x75e54588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x75e507c0" loc="64:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x75e507c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x75e50a18"/>
        <function-ref name="toIdle" scoped="" ref="0x75e50af8"/>
        <function-ref name="isState" scoped="" ref="0x75e50bd8"/>
        <function-ref name="isIdle" scoped="" ref="0x75e50cb8"/>
        <function-ref name="requestState" scoped="" ref="0x75e50d98"/>
        <function-ref name="forceState" scoped="" ref="0x75e50e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x75e47870" loc="69:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x75e47870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x75e47a48"/>
        <function-ref name="rand32" scoped="" ref="0x75e47b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resend" ref="0x75e539b0" loc="57:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resend" scoped="" ref="0x75e539b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75e53b88"/>
        <function-ref name="cancel" scoped="" ref="0x75e53c68"/>
        <function-ref name="modify" scoped="" ref="0x75e53d48"/>
        <function-ref name="sendDone" scoped="" ref="0x75e53e28"/>
        <function-ref name="resend" scoped="" ref="0x75e53f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75e57d20" loc="49:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75e57d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75e57ef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x75e52d48" loc="60:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x75e52d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x75e52f20"/>
        <function-ref name="stopDone" scoped="" ref="0x75e51018"/>
        <function-ref name="start" scoped="" ref="0x75e510f8"/>
        <function-ref name="stop" scoped="" ref="0x75e511d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x75e54dd8" loc="52:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x75e54dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75e53010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x75e4eba8" loc="62:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x75e4eba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x75e4ed80"/>
        <function-ref name="getHeader" scoped="" ref="0x75e4ee60"/>
        <function-ref name="getMetadata" scoped="" ref="0x75e50010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPowerState" ref="0x75e4d0c8" loc="65:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPowerState" scoped="" ref="0x75e4d0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x75e4d2a0"/>
        <function-ref name="toIdle" scoped="" ref="0x75e4d380"/>
        <function-ref name="isState" scoped="" ref="0x75e4d460"/>
        <function-ref name="isIdle" scoped="" ref="0x75e4d540"/>
        <function-ref name="requestState" scoped="" ref="0x75e4d620"/>
        <function-ref name="forceState" scoped="" ref="0x75e4d700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startRadio" ref="0x75e406a8" loc="111:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startRadio" scoped="" ref="0x75e406a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75e40880"/>
        <function-ref name="runTask" scoped="" ref="0x75e40960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x75e47c98" loc="70:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x75e47c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x75e47e70"/>
        <function-ref name="led0Toggle" scoped="" ref="0x75e46010"/>
        <function-ref name="led1On" scoped="" ref="0x75e460f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x75e461d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x75e462b0"/>
        <function-ref name="get" scoped="" ref="0x75e46390"/>
        <function-ref name="led1Off" scoped="" ref="0x75e46470"/>
        <function-ref name="led2Off" scoped="" ref="0x75e467f0"/>
        <function-ref name="set" scoped="" ref="0x75e46550"/>
        <function-ref name="led0On" scoped="" ref="0x75e46630"/>
        <function-ref name="led2On" scoped="" ref="0x75e46710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendDoneTimer" ref="0x75e4a660" loc="68:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendDoneTimer" scoped="" ref="0x75e4a660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75e47170"/>
        <function-ref name="fired" scoped="" ref="0x75e493f8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75e49b00"/>
        <function-ref name="isOneShot" scoped="" ref="0x75e498a8"/>
        <function-ref name="getdt" scoped="" ref="0x75e47620"/>
        <function-ref name="gett0" scoped="" ref="0x75e473c8"/>
        <function-ref name="isRunning" scoped="" ref="0x75e49650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75e4ac88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75e49e20"/>
        <function-ref name="startOneShot" scoped="" ref="0x75e4af08"/>
        <function-ref name="stop" scoped="" ref="0x75e491a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x75e50230" loc="63:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x75e50230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x75e50408"/>
        <function-ref name="noAck" scoped="" ref="0x75e504e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x75e505c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x75e4d948" loc="66:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x75e4d948"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x75e4db20"/>
        <function-ref name="toIdle" scoped="" ref="0x75e4dc00"/>
        <function-ref name="isState" scoped="" ref="0x75e4dce0"/>
        <function-ref name="isIdle" scoped="" ref="0x75e4ddc0"/>
        <function-ref name="requestState" scoped="" ref="0x75e4dea0"/>
        <function-ref name="forceState" scoped="" ref="0x75e4c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="resend" ref="0x75e41d98" loc="110:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="resend" scoped="" ref="0x75e41d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75e40010"/>
        <function-ref name="runTask" scoped="" ref="0x75e400f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerCycle" ref="0x75e4e628" loc="61:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerCycle" scoped="" ref="0x75e4e628"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerCycle"/>
      </instance>
      <interface-functions>
        <function-ref name="getSleepInterval" scoped="" ref="0x75e4e800"/>
        <function-ref name="detected" scoped="" ref="0x75e4e8e0"/>
        <function-ref name="setSleepInterval" scoped="" ref="0x75e4e9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopRadio" ref="0x75e40e90" loc="112:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopRadio" scoped="" ref="0x75e40e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75e3f080"/>
        <function-ref name="runTask" scoped="" ref="0x75e3f160"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x75e0f1d0" loc="42:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <component-ref qname="PowerCycleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x75e0f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x75e0f3a8"/>
        <function-ref name="stopDone" scoped="" ref="0x75e0f488"/>
        <function-ref name="start" scoped="" ref="0x75e0f568"/>
        <function-ref name="stop" scoped="" ref="0x75e0f648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPowerState" ref="0x75e0e118" loc="44:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <component-ref qname="PowerCycleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPowerState" scoped="" ref="0x75e0e118"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x75e0e2f0"/>
        <function-ref name="toIdle" scoped="" ref="0x75e0e3d0"/>
        <function-ref name="isState" scoped="" ref="0x75e0e4b0"/>
        <function-ref name="isIdle" scoped="" ref="0x75e0e590"/>
        <function-ref name="requestState" scoped="" ref="0x75e0e670"/>
        <function-ref name="forceState" scoped="" ref="0x75e0e750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControlState" ref="0x75e0f890" loc="43:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <component-ref qname="PowerCycleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x75e0f890"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x75e0fa68"/>
        <function-ref name="toIdle" scoped="" ref="0x75e0fb48"/>
        <function-ref name="isState" scoped="" ref="0x75e0fc28"/>
        <function-ref name="isIdle" scoped="" ref="0x75e0fd08"/>
        <function-ref name="requestState" scoped="" ref="0x75e0fde8"/>
        <function-ref name="forceState" scoped="" ref="0x75e0fec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PowerCycle" ref="0x75e12b98" loc="41:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <component-ref qname="PowerCycleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerCycle" scoped="" ref="0x75e12b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerCycle"/>
      </instance>
      <interface-functions>
        <function-ref name="getSleepInterval" scoped="" ref="0x75e12d70"/>
        <function-ref name="detected" scoped="" ref="0x75e12e50"/>
        <function-ref name="setSleepInterval" scoped="" ref="0x75e0f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x75e0b390" loc="59:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x75e0b390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x75e0b568"/>
        <function-ref name="stopDone" scoped="" ref="0x75e0b648"/>
        <function-ref name="start" scoped="" ref="0x75e0b728"/>
        <function-ref name="stop" scoped="" ref="0x75e0b808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ByteIndicator" ref="0x75e04010" loc="70:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x75e04010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x75e041e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EnergyIndicator" ref="0x75e05b70" loc="69:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x75e05b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x75e05d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x75e06668" loc="67:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x75e06668"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x75e06840"/>
        <function-ref name="toIdle" scoped="" ref="0x75e06920"/>
        <function-ref name="isState" scoped="" ref="0x75e06a00"/>
        <function-ref name="isIdle" scoped="" ref="0x75e06ae0"/>
        <function-ref name="requestState" scoped="" ref="0x75e06bc0"/>
        <function-ref name="forceState" scoped="" ref="0x75e06ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startRadio" ref="0x75e01308" loc="96:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startRadio" scoped="" ref="0x75e01308"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75e01560"/>
        <function-ref name="runTask" scoped="" ref="0x75e01640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x75e08e70" loc="64:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x75e08e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x75e07070"/>
        <function-ref name="stopDone" scoped="" ref="0x75e07150"/>
        <function-ref name="start" scoped="" ref="0x75e07230"/>
        <function-ref name="stop" scoped="" ref="0x75e07310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPowerState" ref="0x75e07540" loc="65:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPowerState" scoped="" ref="0x75e07540"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x75e07718"/>
        <function-ref name="toIdle" scoped="" ref="0x75e077f8"/>
        <function-ref name="isState" scoped="" ref="0x75e078d8"/>
        <function-ref name="isIdle" scoped="" ref="0x75e079b8"/>
        <function-ref name="requestState" scoped="" ref="0x75e07a98"/>
        <function-ref name="forceState" scoped="" ref="0x75e07b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketIndicator" ref="0x75e04488" loc="71:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x75e04488"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x75e04660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x75e06e10" loc="68:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x75e06e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x75e05010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x75e050f0"/>
        <function-ref name="led1On" scoped="" ref="0x75e051d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x75e052b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x75e05390"/>
        <function-ref name="get" scoped="" ref="0x75e05470"/>
        <function-ref name="led1Off" scoped="" ref="0x75e05550"/>
        <function-ref name="led2Off" scoped="" ref="0x75e058d0"/>
        <function-ref name="set" scoped="" ref="0x75e05630"/>
        <function-ref name="led0On" scoped="" ref="0x75e05710"/>
        <function-ref name="led2On" scoped="" ref="0x75e057f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="getCca" ref="0x75e01b48" loc="97:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="getCca" scoped="" ref="0x75e01b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75e01d20"/>
        <function-ref name="runTask" scoped="" ref="0x75e01e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x75e07dc0" loc="66:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x75e07dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x75e06010"/>
        <function-ref name="toIdle" scoped="" ref="0x75e060f0"/>
        <function-ref name="isState" scoped="" ref="0x75e061d0"/>
        <function-ref name="isIdle" scoped="" ref="0x75e062b0"/>
        <function-ref name="requestState" scoped="" ref="0x75e06390"/>
        <function-ref name="forceState" scoped="" ref="0x75e06470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OnTimer" ref="0x75e0baf8" loc="63:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OnTimer" scoped="" ref="0x75e0baf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75e086a8"/>
        <function-ref name="fired" scoped="" ref="0x75e0a938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75e08068"/>
        <function-ref name="isOneShot" scoped="" ref="0x75e0ade8"/>
        <function-ref name="getdt" scoped="" ref="0x75e08b58"/>
        <function-ref name="gett0" scoped="" ref="0x75e08900"/>
        <function-ref name="isRunning" scoped="" ref="0x75e0ab90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75e0a1e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75e08388"/>
        <function-ref name="startOneShot" scoped="" ref="0x75e0a460"/>
        <function-ref name="stop" scoped="" ref="0x75e0a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PowerCycle" ref="0x75e0edf8" loc="58:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerCycle" scoped="" ref="0x75e0edf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerCycle"/>
      </instance>
      <interface-functions>
        <function-ref name="getSleepInterval" scoped="" ref="0x75e0b010"/>
        <function-ref name="detected" scoped="" ref="0x75e0b0f0"/>
        <function-ref name="setSleepInterval" scoped="" ref="0x75e0b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopRadio" ref="0x75e03ad8" loc="95:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopRadio" scoped="" ref="0x75e03ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75e03cb0"/>
        <function-ref name="runTask" scoped="" ref="0x75e03d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x75de48e8" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="PowerCycleC.RadioPowerStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x75de48e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x75de4ac0"/>
        <function-ref name="toIdle" scoped="" ref="0x75de4ba0"/>
        <function-ref name="isState" scoped="" ref="0x75de4c80"/>
        <function-ref name="isIdle" scoped="" ref="0x75de4d60"/>
        <function-ref name="requestState" scoped="" ref="0x75de4e40"/>
        <function-ref name="forceState" scoped="" ref="0x75de4f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x75de3ad0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="PowerCycleC.SplitControlStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x75de3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x75de3ca8"/>
        <function-ref name="toIdle" scoped="" ref="0x75de3d88"/>
        <function-ref name="isState" scoped="" ref="0x75de3e68"/>
        <function-ref name="isIdle" scoped="" ref="0x75de2010"/>
        <function-ref name="requestState" scoped="" ref="0x75de20f0"/>
        <function-ref name="forceState" scoped="" ref="0x75de21d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x75de2db8" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="PowerCycleC.OnTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x75de2db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75ddf8a8"/>
        <function-ref name="fired" scoped="" ref="0x75de0b48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75ddf268"/>
        <function-ref name="isOneShot" scoped="" ref="0x75ddf010"/>
        <function-ref name="getdt" scoped="" ref="0x75ddfd58"/>
        <function-ref name="gett0" scoped="" ref="0x75ddfb00"/>
        <function-ref name="isRunning" scoped="" ref="0x75de0da0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75de03f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75ddf588"/>
        <function-ref name="startOneShot" scoped="" ref="0x75de0670"/>
        <function-ref name="stop" scoped="" ref="0x75de08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x75ddec00" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="PowerCycleC.CheckTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x75ddec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75ddb730"/>
        <function-ref name="fired" scoped="" ref="0x75ddd9b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75ddb0f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x75ddde60"/>
        <function-ref name="getdt" scoped="" ref="0x75ddbbe0"/>
        <function-ref name="gett0" scoped="" ref="0x75ddb988"/>
        <function-ref name="isRunning" scoped="" ref="0x75dddc08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75ddd258"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75ddb410"/>
        <function-ref name="startOneShot" scoped="" ref="0x75ddd4d8"/>
        <function-ref name="stop" scoped="" ref="0x75ddd758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x75dd6b30" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DefaultLplC.SendStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x75dd6b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x75dd6d08"/>
        <function-ref name="toIdle" scoped="" ref="0x75dd6de8"/>
        <function-ref name="isState" scoped="" ref="0x75dd6ec8"/>
        <function-ref name="isIdle" scoped="" ref="0x75dd5010"/>
        <function-ref name="requestState" scoped="" ref="0x75dd50f0"/>
        <function-ref name="forceState" scoped="" ref="0x75dd51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x75dd5dc0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="DefaultLplC.OffTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x75dd5dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75dd28e0"/>
        <function-ref name="fired" scoped="" ref="0x75dd4b60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75dd22a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x75dd2048"/>
        <function-ref name="getdt" scoped="" ref="0x75dd2d90"/>
        <function-ref name="gett0" scoped="" ref="0x75dd2b38"/>
        <function-ref name="isRunning" scoped="" ref="0x75dd4db8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75dd4408"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75dd25c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x75dd4688"/>
        <function-ref name="stop" scoped="" ref="0x75dd4908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x75dd1c20" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="DefaultLplC.SendDoneTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x75dd1c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75dcf730"/>
        <function-ref name="fired" scoped="" ref="0x75dd09b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75dcf0f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x75dd0e60"/>
        <function-ref name="getdt" scoped="" ref="0x75dcfbe0"/>
        <function-ref name="gett0" scoped="" ref="0x75dcf988"/>
        <function-ref name="isRunning" scoped="" ref="0x75dd0c08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75dd0258"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75dcf410"/>
        <function-ref name="startOneShot" scoped="" ref="0x75dd04d8"/>
        <function-ref name="stop" scoped="" ref="0x75dd0758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SystemLowPowerListening" ref="0x75dcd920" loc="3:../../../tos/system/SystemLowPowerListeningC.nc">
      <component-ref qname="SystemLowPowerListeningC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x75dcd920"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x75dcdaf8"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x75dcdbd8"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x75dcdcb8"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x75dcdd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SystemLowPowerListening" ref="0x75dca570" loc="5:../../../tos/system/SystemLowPowerListeningP.nc">
      <component-ref qname="SystemLowPowerListeningP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x75dca570"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x75dca748"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x75dca828"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x75dca908"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x75dca9e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x75dbb4c8" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x75dbb4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75dbb6a0"/>
        <function-ref name="getPayload" scoped="" ref="0x75dbb780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75dbb860"/>
        <function-ref name="cancel" scoped="" ref="0x75dbb940"/>
        <function-ref name="sendDone" scoped="" ref="0x75dbba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x75dbe610" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x75dbe610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75dbe7e8"/>
        <function-ref name="getPayload" scoped="" ref="0x75dbe8c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75dbe9a8"/>
        <function-ref name="cancel" scoped="" ref="0x75dbea88"/>
        <function-ref name="sendDone" scoped="" ref="0x75dbeb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x75dbed10" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x75dbed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x75dbeee8"/>
        <function-ref name="setRetries" scoped="" ref="0x75dbb010"/>
        <function-ref name="getRetries" scoped="" ref="0x75dbb0f0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x75dbb1d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x75dbb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x75db8938" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x75db8938"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x75db8b10"/>
        <function-ref name="noAck" scoped="" ref="0x75db8bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x75db8cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x75db8180" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x75db8180"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x75db8358"/>
        <function-ref name="setRetries" scoped="" ref="0x75db8438"/>
        <function-ref name="getRetries" scoped="" ref="0x75db8518"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x75db85f8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x75db86d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x75da7220" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x75da7220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75da73f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x75da8a88" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x75da8a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75da8c60"/>
        <function-ref name="getPayload" scoped="" ref="0x75da8d40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75da8e20"/>
        <function-ref name="cancel" scoped="" ref="0x75da8f00"/>
        <function-ref name="sendDone" scoped="" ref="0x75da7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x75da6390" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x75da6390"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x75da6568"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x75da6648"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x75da6728"/>
        <function-ref name="syncDone" scoped="" ref="0x75da6808"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x75da68e8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x75da69c8"/>
        <function-ref name="setChannel" scoped="" ref="0x75da6aa8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x75da6b88"/>
        <function-ref name="setPanAddr" scoped="" ref="0x75da6c68"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x75da6d48"/>
        <function-ref name="getExtAddr" scoped="" ref="0x75da6e28"/>
        <function-ref name="getShortAddr" scoped="" ref="0x75da6f08"/>
        <function-ref name="sync" scoped="" ref="0x75da5010"/>
        <function-ref name="getChannel" scoped="" ref="0x75da5170"/>
        <function-ref name="getPanAddr" scoped="" ref="0x75da5250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x75da8238" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x75da8238"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x75da8410"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x75da84f0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x75da85d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x75da86b0"/>
        <function-ref name="setCca" scoped="" ref="0x75da8790"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x75da8870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x75da9b88" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x75da9b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x75da9d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x75da5ba0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x75da5ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x75da5d78"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x75da5e58"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x75da4010"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x75da40f0"/>
        <function-ref name="setCca" scoped="" ref="0x75da41d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x75da42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x75da9190" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x75da9190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75da9368"/>
        <function-ref name="payloadLength" scoped="" ref="0x75da9448"/>
        <function-ref name="getPayload" scoped="" ref="0x75da9528"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75da9608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75da96e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x75dac100" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x75dac100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75dac2d8"/>
        <function-ref name="getPayload" scoped="" ref="0x75dac3b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75dac498"/>
        <function-ref name="cancel" scoped="" ref="0x75dac578"/>
        <function-ref name="sendDone" scoped="" ref="0x75dac658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x75daa178" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x75daa178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75daa350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x75da75b8" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x75da75b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x75da7790"/>
        <function-ref name="setNetwork" scoped="" ref="0x75da7870"/>
        <function-ref name="getRssi" scoped="" ref="0x75da7950"/>
        <function-ref name="getNetwork" scoped="" ref="0x75da7a30"/>
        <function-ref name="getPower" scoped="" ref="0x75da7b10"/>
        <function-ref name="getLqi" scoped="" ref="0x75da7bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x75da5460" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x75da5460"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x75da56b8"/>
        <function-ref name="changed" scoped="" ref="0x75da5798"/>
        <function-ref name="amGroup" scoped="" ref="0x75da5878"/>
        <function-ref name="setAddress" scoped="" ref="0x75da5958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x75da7dd8" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x75da7dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x75da6010"/>
        <function-ref name="getHeader" scoped="" ref="0x75da60f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x75da61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x75dacac0" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x75dacac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75dacc98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x75da4bb8" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x75da4bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x75da4d90"/>
        <function-ref name="led0Toggle" scoped="" ref="0x75da4e70"/>
        <function-ref name="led1On" scoped="" ref="0x75da3010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x75da30f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x75da31d0"/>
        <function-ref name="get" scoped="" ref="0x75da32b0"/>
        <function-ref name="led1Off" scoped="" ref="0x75da3390"/>
        <function-ref name="led2Off" scoped="" ref="0x75da3710"/>
        <function-ref name="set" scoped="" ref="0x75da3470"/>
        <function-ref name="led0On" scoped="" ref="0x75da3550"/>
        <function-ref name="led2On" scoped="" ref="0x75da3630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x75daa4e8" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x75daa4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x75daa6c0"/>
        <function-ref name="source" scoped="" ref="0x75daa7a0"/>
        <function-ref name="address" scoped="" ref="0x75daa880"/>
        <function-ref name="destination" scoped="" ref="0x75daa960"/>
        <function-ref name="setSource" scoped="" ref="0x75daaa40"/>
        <function-ref name="setDestination" scoped="" ref="0x75daab20"/>
        <function-ref name="type" scoped="" ref="0x75daac00"/>
        <function-ref name="setType" scoped="" ref="0x75daace0"/>
        <function-ref name="isForMe" scoped="" ref="0x75daadc0"/>
        <function-ref name="setGroup" scoped="" ref="0x75daaea0"/>
        <function-ref name="localGroup" scoped="" ref="0x75da9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x75da44f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x75da44f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x75da46c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x75da47a8"/>
        <function-ref name="request" scoped="" ref="0x75da4888"/>
        <function-ref name="granted" scoped="" ref="0x75da4968"/>
        <function-ref name="isOwner" scoped="" ref="0x75da4a48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x755d8df8" loc="5:../../../tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubAMSend" scoped="" ref="0x755d8df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x755d7010"/>
        <function-ref name="getPayload" scoped="" ref="0x755d70f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x755d71d0"/>
        <function-ref name="cancel" scoped="" ref="0x755d72b0"/>
        <function-ref name="sendDone" scoped="" ref="0x755d7390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x755d7aa8" loc="7:../../../tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x755d7aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x755d7c80"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x755d7d60"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x755d7e40"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x755d7f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x755d8710" loc="3:../../../tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x755d8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x755d88e8"/>
        <function-ref name="getPayload" scoped="" ref="0x755d89c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x755d8aa8"/>
        <function-ref name="cancel" scoped="" ref="0x755d8b88"/>
        <function-ref name="sendDone" scoped="" ref="0x755d8c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lpl" ref="0x755d74f0" loc="6:../../../tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Lpl" scoped="" ref="0x755d74f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x755d76c8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x755d77a8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x755d7888"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x755d7968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x75d3c8d8" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x75d3c8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75d3cab0"/>
        <function-ref name="payloadLength" scoped="" ref="0x75d3cb90"/>
        <function-ref name="getPayload" scoped="" ref="0x75d3cc70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75d3cd50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75d3ce30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x75d3c5c0" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x75d3c5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75d3c798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x75d3b010" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x75d3b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x75d3b1e8"/>
        <function-ref name="source" scoped="" ref="0x75d3b2c8"/>
        <function-ref name="address" scoped="" ref="0x75d3b3a8"/>
        <function-ref name="destination" scoped="" ref="0x75d3b488"/>
        <function-ref name="setSource" scoped="" ref="0x75d3b568"/>
        <function-ref name="setDestination" scoped="" ref="0x75d3b648"/>
        <function-ref name="type" scoped="" ref="0x75d3b728"/>
        <function-ref name="setType" scoped="" ref="0x75d3b808"/>
        <function-ref name="isForMe" scoped="" ref="0x75d3b8e8"/>
        <function-ref name="setGroup" scoped="" ref="0x75d3b9c8"/>
        <function-ref name="localGroup" scoped="" ref="0x75d3baa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x75d36070" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x75d36070"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75d36248"/>
        <function-ref name="getPayload" scoped="" ref="0x75d36328"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75d36408"/>
        <function-ref name="cancel" scoped="" ref="0x75d364e8"/>
        <function-ref name="sendDone" scoped="" ref="0x75d365c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x75d36708" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x75d36708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75d368e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x75d369c0"/>
        <function-ref name="getPayload" scoped="" ref="0x75d36aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75d36b80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75d36c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x75d36da0" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x75d36da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x75d35010"/>
        <function-ref name="source" scoped="" ref="0x75d350f0"/>
        <function-ref name="address" scoped="" ref="0x75d351d0"/>
        <function-ref name="destination" scoped="" ref="0x75d352b0"/>
        <function-ref name="setSource" scoped="" ref="0x75d35390"/>
        <function-ref name="setDestination" scoped="" ref="0x75d35470"/>
        <function-ref name="type" scoped="" ref="0x75d35550"/>
        <function-ref name="setType" scoped="" ref="0x75d35630"/>
        <function-ref name="isForMe" scoped="" ref="0x75d35710"/>
        <function-ref name="setGroup" scoped="" ref="0x75d357f0"/>
        <function-ref name="localGroup" scoped="" ref="0x75d358d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x75d35a30" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x75d35a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x75d35c08"/>
        <function-ref name="noAck" scoped="" ref="0x75d35ce8"/>
        <function-ref name="wasAcked" scoped="" ref="0x75d35dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x751be750" loc="6:../../../tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x751be750"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x751be928"/>
        <function-ref name="getPayload" scoped="" ref="0x751bea08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x751beae8"/>
        <function-ref name="cancel" scoped="" ref="0x751bebc8"/>
        <function-ref name="sendDone" scoped="" ref="0x751beca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x751bede8" loc="7:../../../tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x751bede8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x751bd010"/>
        <function-ref name="payloadLength" scoped="" ref="0x751bd0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x751bd1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x751bd2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x751bd390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x751bd4d0" loc="8:../../../tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x751bd4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x751bd6a8"/>
        <function-ref name="source" scoped="" ref="0x751bd788"/>
        <function-ref name="address" scoped="" ref="0x751bd868"/>
        <function-ref name="destination" scoped="" ref="0x751bd948"/>
        <function-ref name="setSource" scoped="" ref="0x751bda28"/>
        <function-ref name="setDestination" scoped="" ref="0x751bdb08"/>
        <function-ref name="type" scoped="" ref="0x751bdbe8"/>
        <function-ref name="setType" scoped="" ref="0x751bdcc8"/>
        <function-ref name="isForMe" scoped="" ref="0x751bdda8"/>
        <function-ref name="setGroup" scoped="" ref="0x751bde88"/>
        <function-ref name="localGroup" scoped="" ref="0x751b7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x751b7170" loc="9:../../../tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x751b7170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x751b7348"/>
        <function-ref name="noAck" scoped="" ref="0x751b7428"/>
        <function-ref name="wasAcked" scoped="" ref="0x751b7508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x751b12c8" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x751b12c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x751b14a0"/>
        <function-ref name="getPayload" scoped="" ref="0x751b1580"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x751b1660"/>
        <function-ref name="cancel" scoped="" ref="0x751b1740"/>
        <function-ref name="sendDone" scoped="" ref="0x751b1820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x751b1960" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x751b1960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x751b1b38"/>
        <function-ref name="payloadLength" scoped="" ref="0x751b1c18"/>
        <function-ref name="getPayload" scoped="" ref="0x751b1cf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x751b1dd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x751b1eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x751b0010" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x751b0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x751b01e8"/>
        <function-ref name="source" scoped="" ref="0x751b02c8"/>
        <function-ref name="address" scoped="" ref="0x751b03a8"/>
        <function-ref name="destination" scoped="" ref="0x751b0488"/>
        <function-ref name="setSource" scoped="" ref="0x751b0568"/>
        <function-ref name="setDestination" scoped="" ref="0x751b0648"/>
        <function-ref name="type" scoped="" ref="0x751b0728"/>
        <function-ref name="setType" scoped="" ref="0x751b0808"/>
        <function-ref name="isForMe" scoped="" ref="0x751b08e8"/>
        <function-ref name="setGroup" scoped="" ref="0x751b09c8"/>
        <function-ref name="localGroup" scoped="" ref="0x751b0aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x751b0c08" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x751b0c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x751b0de0"/>
        <function-ref name="noAck" scoped="" ref="0x751b0ec0"/>
        <function-ref name="wasAcked" scoped="" ref="0x751af010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x751a6420" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x751a6420"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x751a65f8"/>
        <function-ref name="getPayload" scoped="" ref="0x751a66d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x751a67b8"/>
        <function-ref name="cancel" scoped="" ref="0x751a6898"/>
        <function-ref name="sendDone" scoped="" ref="0x751a6978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x751a6ae8" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x751a6ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x751a6cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x751a6da0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x751a6e80"/>
        <function-ref name="cancel" scoped="" ref="0x751a5010"/>
        <function-ref name="sendDone" scoped="" ref="0x751a50f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x751a5230" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x751a5230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x751a5408"/>
        <function-ref name="source" scoped="" ref="0x751a54e8"/>
        <function-ref name="address" scoped="" ref="0x751a55c8"/>
        <function-ref name="destination" scoped="" ref="0x751a56a8"/>
        <function-ref name="setSource" scoped="" ref="0x751a5788"/>
        <function-ref name="setDestination" scoped="" ref="0x751a5868"/>
        <function-ref name="type" scoped="" ref="0x751a5948"/>
        <function-ref name="setType" scoped="" ref="0x751a5a28"/>
        <function-ref name="isForMe" scoped="" ref="0x751a5b08"/>
        <function-ref name="setGroup" scoped="" ref="0x751a5be8"/>
        <function-ref name="localGroup" scoped="" ref="0x751a5cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x751ae580" loc="5:../../../tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubAMSend" scoped="" ref="0x751ae580"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x751ae758"/>
        <function-ref name="getPayload" scoped="" ref="0x751ae838"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x751ae918"/>
        <function-ref name="cancel" scoped="" ref="0x751ae9f8"/>
        <function-ref name="sendDone" scoped="" ref="0x751aead8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x751ad230" loc="7:../../../tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x751ad230"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x751ad408"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x751ad4e8"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x751ad5c8"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x751ad6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x751afe88" loc="3:../../../tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x751afe88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x751ae070"/>
        <function-ref name="getPayload" scoped="" ref="0x751ae150"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x751ae230"/>
        <function-ref name="cancel" scoped="" ref="0x751ae310"/>
        <function-ref name="sendDone" scoped="" ref="0x751ae3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lpl" ref="0x751aec38" loc="6:../../../tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Lpl" scoped="" ref="0x751aec38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x751aee10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x751aeef0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x751ad010"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x751ad0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x75d338d8" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x75d338d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75d33ab0"/>
        <function-ref name="payloadLength" scoped="" ref="0x75d33b90"/>
        <function-ref name="getPayload" scoped="" ref="0x75d33c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75d33d50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75d33e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x75d335c0" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x75d335c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75d33798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x75d32010" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x75d32010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x75d321e8"/>
        <function-ref name="source" scoped="" ref="0x75d322c8"/>
        <function-ref name="address" scoped="" ref="0x75d323a8"/>
        <function-ref name="destination" scoped="" ref="0x75d32488"/>
        <function-ref name="setSource" scoped="" ref="0x75d32568"/>
        <function-ref name="setDestination" scoped="" ref="0x75d32648"/>
        <function-ref name="type" scoped="" ref="0x75d32728"/>
        <function-ref name="setType" scoped="" ref="0x75d32808"/>
        <function-ref name="isForMe" scoped="" ref="0x75d328e8"/>
        <function-ref name="setGroup" scoped="" ref="0x75d329c8"/>
        <function-ref name="localGroup" scoped="" ref="0x75d32aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75d31b88" loc="46:../../../tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75d31b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75d31d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x75d31ef0" loc="47:../../../tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x75d31ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x75d2e0e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x75d2e1c0"/>
        <function-ref name="led1On" scoped="" ref="0x75d2e2a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x75d2e380"/>
        <function-ref name="led2Toggle" scoped="" ref="0x75d2e460"/>
        <function-ref name="get" scoped="" ref="0x75d2e540"/>
        <function-ref name="led1Off" scoped="" ref="0x75d2e620"/>
        <function-ref name="led2Off" scoped="" ref="0x75d2e9a0"/>
        <function-ref name="set" scoped="" ref="0x75d2e700"/>
        <function-ref name="led0On" scoped="" ref="0x75d2e7e0"/>
        <function-ref name="led2On" scoped="" ref="0x75d2e8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x75d01e30" loc="51:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="DemoAppC.Object32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisseminationUpdate" scoped="" ref="0x75d01e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x75ca8468"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x75d01010" loc="50:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="DemoAppC.Object32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisseminationValue" scoped="" ref="0x75d01010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x75d01b70"/>
        <function-ref name="get" scoped="" ref="0x75d01658"/>
        <function-ref name="set" scoped="" ref="0x75d018d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="changedTask" ref="0x7518e6d0" loc="62:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DemoAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="changedTask" scoped="" ref="0x7518e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7518e8a8"/>
        <function-ref name="runTask" scoped="" ref="0x7518e988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationCache" ref="0x75190280" loc="50:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DemoAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisseminationCache" scoped="" ref="0x75190280"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-functions>
        <function-ref name="requestData" scoped="" ref="0x75190538"/>
        <function-ref name="storeData" scoped="" ref="0x751908b8"/>
        <function-ref name="newData" scoped="" ref="0x75190618"/>
        <function-ref name="start" scoped="" ref="0x751906f8"/>
        <function-ref name="requestSeqno" scoped="" ref="0x751907d8"/>
        <function-ref name="stop" scoped="" ref="0x75190458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x751918d0" loc="49:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DemoAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisseminationUpdate" scoped="" ref="0x751918d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x75191ef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x75190a18" loc="52:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DemoAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x75190a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x75190bf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x75190cd0"/>
        <function-ref name="led1On" scoped="" ref="0x75190db0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x75190e90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7518e010"/>
        <function-ref name="get" scoped="" ref="0x7518e0f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7518e1d0"/>
        <function-ref name="led0On" scoped="" ref="0x7518e550"/>
        <function-ref name="set" scoped="" ref="0x7518e390"/>
        <function-ref name="led2On" scoped="" ref="0x7518e2b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7518e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x75192a80" loc="48:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DemoAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisseminationValue" scoped="" ref="0x75192a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x75191610"/>
        <function-ref name="get" scoped="" ref="0x751910f8"/>
        <function-ref name="set" scoped="" ref="0x75191370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x751925d8" loc="46:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DemoAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x751925d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x751927b0"/>
        <function-ref name="stop" scoped="" ref="0x75192890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x75d03910" loc="45:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationTimerP.nc">
      <component-ref qname="DisseminationTimerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TrickleTimer" scoped="" ref="0x75d03910"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x75d03ae8"/>
        <function-ref name="incrementCounter" scoped="" ref="0x75d03bc8"/>
        <function-ref name="reset" scoped="" ref="0x75d03ca8"/>
        <function-ref name="start" scoped="" ref="0x75d03d88"/>
        <function-ref name="stop" scoped="" ref="0x75d03e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x75cfee28" loc="55:/home/pi/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TrickleTimer" scoped="" ref="0x75cfee28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x75ca9050"/>
        <function-ref name="incrementCounter" scoped="" ref="0x75ca9130"/>
        <function-ref name="reset" scoped="" ref="0x75ca9210"/>
        <function-ref name="start" scoped="" ref="0x75ca92f0"/>
        <function-ref name="stop" scoped="" ref="0x75ca93d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pending" ref="0x7517c498" loc="62:/home/pi/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pending" scoped="" ref="0x7517c498"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7517c670"/>
        <function-ref name="clear" scoped="" ref="0x7517c750"/>
        <function-ref name="toggle" scoped="" ref="0x7517c830"/>
        <function-ref name="get" scoped="" ref="0x7517c910"/>
        <function-ref name="assign" scoped="" ref="0x7517c9f0"/>
        <function-ref name="setAll" scoped="" ref="0x7517cad0"/>
        <function-ref name="set" scoped="" ref="0x7517cbb0"/>
        <function-ref name="size" scoped="" ref="0x7517cc90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Changed" ref="0x7517cdf0" loc="63:/home/pi/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Changed" scoped="" ref="0x7517cdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7517b010"/>
        <function-ref name="clear" scoped="" ref="0x7517b0f0"/>
        <function-ref name="toggle" scoped="" ref="0x7517b1d0"/>
        <function-ref name="get" scoped="" ref="0x7517b2b0"/>
        <function-ref name="assign" scoped="" ref="0x7517b390"/>
        <function-ref name="setAll" scoped="" ref="0x7517b470"/>
        <function-ref name="set" scoped="" ref="0x7517b550"/>
        <function-ref name="size" scoped="" ref="0x7517b630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7517b770" loc="64:/home/pi/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7517b770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7517b948"/>
        <function-ref name="rand32" scoped="" ref="0x7517ba28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x7517fa58" loc="58:/home/pi/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TrickleTimer" scoped="" ref="0x7517fa58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7517fc40"/>
        <function-ref name="incrementCounter" scoped="" ref="0x7517fd20"/>
        <function-ref name="reset" scoped="" ref="0x7517fe00"/>
        <function-ref name="start" scoped="" ref="0x7517fee0"/>
        <function-ref name="stop" scoped="" ref="0x7517e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7517f6a8" loc="57:/home/pi/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7517f6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7517f880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="timerTask" ref="0x751797b0" loc="154:/home/pi/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="timerTask" scoped="" ref="0x751797b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75179988"/>
        <function-ref name="runTask" scoped="" ref="0x75179a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7517bb68" loc="65:/home/pi/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7517bb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7517bd40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7517be20"/>
        <function-ref name="led1On" scoped="" ref="0x7517bf00"/>
        <function-ref name="led1Toggle" scoped="" ref="0x75179010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x751790f0"/>
        <function-ref name="get" scoped="" ref="0x751791d0"/>
        <function-ref name="led1Off" scoped="" ref="0x751792b0"/>
        <function-ref name="led0On" scoped="" ref="0x75179630"/>
        <function-ref name="set" scoped="" ref="0x75179470"/>
        <function-ref name="led2On" scoped="" ref="0x75179390"/>
        <function-ref name="led2Off" scoped="" ref="0x75179550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7517e210" loc="61:/home/pi/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7517e210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7517dd58"/>
        <function-ref name="fired" scoped="" ref="0x7517d010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7517d718"/>
        <function-ref name="isOneShot" scoped="" ref="0x7517d4c0"/>
        <function-ref name="getdt" scoped="" ref="0x7517c268"/>
        <function-ref name="gett0" scoped="" ref="0x7517c010"/>
        <function-ref name="isRunning" scoped="" ref="0x7517d268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7517e838"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7517da38"/>
        <function-ref name="startOneShot" scoped="" ref="0x7517eab8"/>
        <function-ref name="stop" scoped="" ref="0x7517ed38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x751771c8" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x751771c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75176d58"/>
        <function-ref name="fired" scoped="" ref="0x75176010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75176718"/>
        <function-ref name="isOneShot" scoped="" ref="0x751764c0"/>
        <function-ref name="getdt" scoped="" ref="0x75175268"/>
        <function-ref name="gett0" scoped="" ref="0x75175010"/>
        <function-ref name="isRunning" scoped="" ref="0x75176268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x751777f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75176a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x75177a70"/>
        <function-ref name="stop" scoped="" ref="0x75177cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75174010" loc="46:../../../tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75174010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x751741e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x75174348" loc="47:../../../tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BitVector" scoped="" ref="0x75174348"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x75174520"/>
        <function-ref name="clear" scoped="" ref="0x75174600"/>
        <function-ref name="toggle" scoped="" ref="0x751746e0"/>
        <function-ref name="get" scoped="" ref="0x751747c0"/>
        <function-ref name="assign" scoped="" ref="0x751748a0"/>
        <function-ref name="setAll" scoped="" ref="0x75174980"/>
        <function-ref name="set" scoped="" ref="0x75174a60"/>
        <function-ref name="size" scoped="" ref="0x75174b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x751737a8" loc="46:../../../tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x751737a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75173980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x75173ae0" loc="47:../../../tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BitVector" scoped="" ref="0x75173ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x75173cb8"/>
        <function-ref name="clear" scoped="" ref="0x75173d98"/>
        <function-ref name="toggle" scoped="" ref="0x75173e78"/>
        <function-ref name="get" scoped="" ref="0x75171010"/>
        <function-ref name="assign" scoped="" ref="0x751710f0"/>
        <function-ref name="setAll" scoped="" ref="0x751711d0"/>
        <function-ref name="set" scoped="" ref="0x751712b0"/>
        <function-ref name="size" scoped="" ref="0x75171390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x75c91700" loc="59:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x75c91700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x75c918d8"/>
        <function-ref name="setRoot" scoped="" ref="0x75c919b8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x75c91a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x75ca2108" loc="54:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionPacket" scoped="" ref="0x75ca2108"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x75ca22e0"/>
        <function-ref name="setOrigin" scoped="" ref="0x75ca23c0"/>
        <function-ref name="setType" scoped="" ref="0x75ca24a0"/>
        <function-ref name="getOrigin" scoped="" ref="0x75ca2580"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x75ca2660"/>
        <function-ref name="getType" scoped="" ref="0x75ca2740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x75c8aef0" loc="65:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionDebug" scoped="" ref="0x75c8aef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x75c920e0"/>
        <function-ref name="logEventMsg" scoped="" ref="0x75c921c0"/>
        <function-ref name="logEventSimple" scoped="" ref="0x75c922a0"/>
        <function-ref name="logEventRoute" scoped="" ref="0x75c92380"/>
        <function-ref name="logEventDbg" scoped="" ref="0x75c92460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x75c9e5d8" loc="51:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Intercept" scoped="" ref="0x75c9e5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x76994500"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x75c9e7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x75c9e930" loc="53:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x75c9e930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75c9eb08"/>
        <function-ref name="payloadLength" scoped="" ref="0x75c9ebe8"/>
        <function-ref name="getPayload" scoped="" ref="0x75c9ecc8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75c9eda8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75c9ee88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x75ca39c8" loc="50:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x75ca39c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x76994500"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75ca3ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x75ca58f8" loc="48:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x75ca58f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75ca5ad0"/>
        <function-ref name="getPayload" scoped="" ref="0x75ca5bb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75ca5c90"/>
        <function-ref name="cancel" scoped="" ref="0x75ca5d70"/>
        <function-ref name="sendDone" scoped="" ref="0x75ca5e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x75ca1678" loc="57:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpInfo" scoped="" ref="0x75ca1678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x75ca1850"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x75ca1930"/>
        <function-ref name="numNeighbors" scoped="" ref="0x75ca1a10"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x75ca1af0"/>
        <function-ref name="getEtx" scoped="" ref="0x75ca1bd0"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x75ca1cb0"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x75ca1d90"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x75ca1e70"/>
        <function-ref name="getParent" scoped="" ref="0x75c9f010"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x75c9f0f0"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x75c9f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x75ca3318" loc="49:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x75ca3318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x76994500"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75ca34f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x75c9f398" loc="58:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpCongestion" scoped="" ref="0x75c9f398"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x75c9f570"/>
        <function-ref name="setClientCongested" scoped="" ref="0x75c9f650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnicastNameFreeRouting" ref="0x75c8e178" loc="60:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x75c8e178"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x75c8e350"/>
        <function-ref name="routeFound" scoped="" ref="0x75c8e430"/>
        <function-ref name="nextHop" scoped="" ref="0x75c8e510"/>
        <function-ref name="noRoute" scoped="" ref="0x75c8e5f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x75c94618" loc="55:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpPacket" scoped="" ref="0x75c94618"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x75c947f0"/>
        <function-ref name="option" scoped="" ref="0x75c948d0"/>
        <function-ref name="setEtx" scoped="" ref="0x75c949b0"/>
        <function-ref name="setOrigin" scoped="" ref="0x75c94a90"/>
        <function-ref name="clearOption" scoped="" ref="0x75c94b70"/>
        <function-ref name="getEtx" scoped="" ref="0x75c94c50"/>
        <function-ref name="getOrigin" scoped="" ref="0x75c94d30"/>
        <function-ref name="setType" scoped="" ref="0x75c94e10"/>
        <function-ref name="setOption" scoped="" ref="0x75c94ef0"/>
        <function-ref name="matchPacket" scoped="" ref="0x75ca1010"/>
        <function-ref name="getThl" scoped="" ref="0x75ca10f0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x75ca11d0"/>
        <function-ref name="matchInstance" scoped="" ref="0x75ca12b0"/>
        <function-ref name="getType" scoped="" ref="0x75ca1410"/>
        <function-ref name="setThl" scoped="" ref="0x75ca14f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x75ca51c8" loc="47:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x75ca51c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x75ca53a0"/>
        <function-ref name="stop" scoped="" ref="0x75ca5480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x75c93310" loc="64:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionId" scoped="" ref="0x75c93310"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x75c93568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x75c82aa0" loc="92:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x75c82aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x75c82c78"/>
        <function-ref name="setRoot" scoped="" ref="0x75c82d58"/>
        <function-ref name="unsetRoot" scoped="" ref="0x75c82e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x75c85578" loc="86:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionPacket" scoped="" ref="0x75c85578"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x75c85750"/>
        <function-ref name="setOrigin" scoped="" ref="0x75c85830"/>
        <function-ref name="setType" scoped="" ref="0x75c85910"/>
        <function-ref name="getOrigin" scoped="" ref="0x75c859f0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x75c85ad0"/>
        <function-ref name="getType" scoped="" ref="0x75c85bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x75c7c9e8" loc="90:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkEstimator" scoped="" ref="0x75c7c9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="getLinkQuality" scoped="" ref="0x75c82470"/>
        <function-ref name="txAck" scoped="" ref="0x75c7cca0"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x75c7cd80"/>
        <function-ref name="txNoAck" scoped="" ref="0x75c7ce60"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x75c82010"/>
        <function-ref name="evicted" scoped="" ref="0x75c820f0"/>
        <function-ref name="clearDLQ" scoped="" ref="0x75c821d0"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x75c822b0"/>
        <function-ref name="getForwardQuality" scoped="" ref="0x75c82390"/>
        <function-ref name="getReverseQuality" scoped="" ref="0x75c7cbc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x75c81ef0" loc="98:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionDebug" scoped="" ref="0x75c81ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x75c7b0e0"/>
        <function-ref name="logEventMsg" scoped="" ref="0x75c7b1c0"/>
        <function-ref name="logEventSimple" scoped="" ref="0x75c7b2a0"/>
        <function-ref name="logEventRoute" scoped="" ref="0x75c7b380"/>
        <function-ref name="logEventDbg" scoped="" ref="0x75c7b460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x75c86aa0" loc="83:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Intercept" scoped="" ref="0x75c86aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x76994500"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x75c86c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x75c86df8" loc="85:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x75c86df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75c85010"/>
        <function-ref name="payloadLength" scoped="" ref="0x75c850f0"/>
        <function-ref name="getPayload" scoped="" ref="0x75c851d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75c852b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75c85390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x75c863f8" loc="82:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x75c863f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x76994500"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75c865d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x75c87318" loc="80:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x75c87318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75c874f0"/>
        <function-ref name="getPayload" scoped="" ref="0x75c875d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75c876b0"/>
        <function-ref name="cancel" scoped="" ref="0x75c87790"/>
        <function-ref name="sendDone" scoped="" ref="0x75c87870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x75c84d80" loc="89:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpInfo" scoped="" ref="0x75c84d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x75c83010"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x75c830f0"/>
        <function-ref name="numNeighbors" scoped="" ref="0x75c831d0"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x75c832b0"/>
        <function-ref name="getEtx" scoped="" ref="0x75c83390"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x75c83470"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x75c83550"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x75c83630"/>
        <function-ref name="getParent" scoped="" ref="0x75c83710"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x75c837f0"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x75c838d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x75c87d28" loc="81:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x75c87d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x76994500"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75c87f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x75c82638" loc="91:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpCongestion" scoped="" ref="0x75c82638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x75c82810"/>
        <function-ref name="setClientCongested" scoped="" ref="0x75c828f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnicastNameFreeRouting" ref="0x75c81140" loc="93:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x75c81140"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x75c81398"/>
        <function-ref name="routeFound" scoped="" ref="0x75c81478"/>
        <function-ref name="nextHop" scoped="" ref="0x75c81558"/>
        <function-ref name="noRoute" scoped="" ref="0x75c81638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x75c85d50" loc="87:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpPacket" scoped="" ref="0x75c85d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x75c85f28"/>
        <function-ref name="option" scoped="" ref="0x75c84018"/>
        <function-ref name="setEtx" scoped="" ref="0x75c840f8"/>
        <function-ref name="setOrigin" scoped="" ref="0x75c841d8"/>
        <function-ref name="clearOption" scoped="" ref="0x75c842b8"/>
        <function-ref name="getEtx" scoped="" ref="0x75c84398"/>
        <function-ref name="getOrigin" scoped="" ref="0x75c84478"/>
        <function-ref name="setType" scoped="" ref="0x75c84558"/>
        <function-ref name="setOption" scoped="" ref="0x75c84638"/>
        <function-ref name="matchPacket" scoped="" ref="0x75c84718"/>
        <function-ref name="getThl" scoped="" ref="0x75c847f8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x75c848d8"/>
        <function-ref name="matchInstance" scoped="" ref="0x75c849b8"/>
        <function-ref name="getType" scoped="" ref="0x75c84b18"/>
        <function-ref name="setThl" scoped="" ref="0x75c84bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x75c92bc8" loc="79:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x75c92bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x75c92da0"/>
        <function-ref name="stop" scoped="" ref="0x75c92e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x75c81b40" loc="97:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionId" scoped="" ref="0x75c81b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x75c81d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x75ba6b10" loc="142:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x75ba6b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75ba6ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x75ba4d68" loc="145:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x75ba4d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x75ba3010"/>
        <function-ref name="setRoot" scoped="" ref="0x75ba30f0"/>
        <function-ref name="unsetRoot" scoped="" ref="0x75ba31d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x75bb3d18" loc="126:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x75bb3d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75bb3ef0"/>
        <function-ref name="getPayload" scoped="" ref="0x75bb2010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75bb20f0"/>
        <function-ref name="cancel" scoped="" ref="0x75bb21d0"/>
        <function-ref name="sendDone" scoped="" ref="0x75bb22b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x75ba1408" loc="156:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionDebug" scoped="" ref="0x75ba1408"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x75ba15e0"/>
        <function-ref name="logEventMsg" scoped="" ref="0x75ba16c0"/>
        <function-ref name="logEventSimple" scoped="" ref="0x75ba17a0"/>
        <function-ref name="logEventRoute" scoped="" ref="0x75ba1880"/>
        <function-ref name="logEventDbg" scoped="" ref="0x75ba1960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x75bb4150" loc="116:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionPacket" scoped="" ref="0x75bb4150"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x75bb4328"/>
        <function-ref name="setOrigin" scoped="" ref="0x75bb4408"/>
        <function-ref name="setType" scoped="" ref="0x75bb44e8"/>
        <function-ref name="getOrigin" scoped="" ref="0x75bb45c8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x75bb46a8"/>
        <function-ref name="getType" scoped="" ref="0x75bb4788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x75bafbc8" loc="129:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkEstimator" scoped="" ref="0x75bafbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="getReverseQuality" scoped="" ref="0x75bae630"/>
        <function-ref name="txAck" scoped="" ref="0x75bafe80"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x75bae010"/>
        <function-ref name="txNoAck" scoped="" ref="0x75bae0f0"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x75bae1d0"/>
        <function-ref name="evicted" scoped="" ref="0x75bae2b0"/>
        <function-ref name="clearDLQ" scoped="" ref="0x75bae390"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x75bae470"/>
        <function-ref name="getForwardQuality" scoped="" ref="0x75bae550"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x75bafda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SentCache" ref="0x75ba7d98" loc="140:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SentCache" scoped="" ref="0x75ba7d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
              <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x75ba63e0"/>
        <function-ref name="flush" scoped="" ref="0x75ba68e0"/>
        <function-ref name="lookup" scoped="" ref="0x75ba6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x75bb56d0" loc="114:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Intercept" scoped="" ref="0x75bb56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x76994500"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x75bb58b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x75bb59f8" loc="115:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x75bb59f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75bb5bd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x75bb5cb0"/>
        <function-ref name="getPayload" scoped="" ref="0x75bb5d90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75bb5e70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75bb4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x75bb5310" loc="113:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x75bb5310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x76994500"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75bb54f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x75ba1010" loc="149:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x75ba1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x75ba11e8"/>
        <function-ref name="rand32" scoped="" ref="0x75ba12c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x75bb67d8" loc="111:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x75bb67d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75bb69c0"/>
        <function-ref name="getPayload" scoped="" ref="0x75bb6aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75bb6b80"/>
        <function-ref name="cancel" scoped="" ref="0x75bb6c60"/>
        <function-ref name="sendDone" scoped="" ref="0x75bb6d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RetxmitTimer" ref="0x75bb2978" loc="128:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RetxmitTimer" scoped="" ref="0x75bb2978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75baf508"/>
        <function-ref name="fired" scoped="" ref="0x75bb17a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75bb1ea8"/>
        <function-ref name="isOneShot" scoped="" ref="0x75bb1c50"/>
        <function-ref name="getdt" scoped="" ref="0x75baf9b8"/>
        <function-ref name="gett0" scoped="" ref="0x75baf760"/>
        <function-ref name="isRunning" scoped="" ref="0x75bb19f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75bb1048"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75baf1e8"/>
        <function-ref name="startOneShot" scoped="" ref="0x75bb12c8"/>
        <function-ref name="stop" scoped="" ref="0x75bb1548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x75ba1ac0" loc="162:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x75ba1ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x75ba1c98"/>
        <function-ref name="stopDone" scoped="" ref="0x75ba1d78"/>
        <function-ref name="start" scoped="" ref="0x75ba1e58"/>
        <function-ref name="stop" scoped="" ref="0x75ba0010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x75ba0190" loc="234:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendTask" scoped="" ref="0x75ba0190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75ba0368"/>
        <function-ref name="runTask" scoped="" ref="0x75ba0448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x75bad4c8" loc="137:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendQueue" scoped="" ref="0x75bad4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x75c6d0f8"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x75c6d3a8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x75bab4c0"/>
        <function-ref name="enqueue" scoped="" ref="0x75babbb0"/>
        <function-ref name="element" scoped="" ref="0x75babf08"/>
        <function-ref name="full" scoped="" ref="0x75badd48"/>
        <function-ref name="maxSize" scoped="" ref="0x75bab268"/>
        <function-ref name="dequeue" scoped="" ref="0x75bab838"/>
        <function-ref name="empty" scoped="" ref="0x75badaf0"/>
        <function-ref name="size" scoped="" ref="0x75bab010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpInfo" ref="0x75ba4190" loc="144:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpInfo" scoped="" ref="0x75ba4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x75ba4368"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x75ba4448"/>
        <function-ref name="numNeighbors" scoped="" ref="0x75ba4528"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x75ba4608"/>
        <function-ref name="getEtx" scoped="" ref="0x75ba46e8"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x75ba47c8"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x75ba48a8"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x75ba4988"/>
        <function-ref name="getParent" scoped="" ref="0x75ba4a68"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x75ba4b48"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x75ba4c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x75baed48" loc="131:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x75baed48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75baef20"/>
        <function-ref name="payloadLength" scoped="" ref="0x75bad018"/>
        <function-ref name="getPayload" scoped="" ref="0x75bad0f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75bad1d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75bad2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75bb6030" loc="109:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75bb6030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75bb6208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x75bb6f18" loc="112:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x75bb6f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x76994500"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75bb5118"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x75bb38d0" loc="118:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpCongestion" scoped="" ref="0x75bb38d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x75bb3aa8"/>
        <function-ref name="setClientCongested" scoped="" ref="0x75bb3b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnicastNameFreeRouting" ref="0x75bae770" loc="130:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x75bae770"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x75bae948"/>
        <function-ref name="routeFound" scoped="" ref="0x75baea28"/>
        <function-ref name="nextHop" scoped="" ref="0x75baeb08"/>
        <function-ref name="noRoute" scoped="" ref="0x75baebe8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x75ba23f0" loc="148:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x75ba23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x75ba25c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x75ba26a8"/>
        <function-ref name="led1On" scoped="" ref="0x75ba2788"/>
        <function-ref name="led1Toggle" scoped="" ref="0x75ba2868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x75ba2948"/>
        <function-ref name="get" scoped="" ref="0x75ba2a28"/>
        <function-ref name="led1Off" scoped="" ref="0x75ba2b08"/>
        <function-ref name="led2On" scoped="" ref="0x75ba2e88"/>
        <function-ref name="set" scoped="" ref="0x75ba2cc8"/>
        <function-ref name="led2Off" scoped="" ref="0x75ba2be8"/>
        <function-ref name="led0On" scoped="" ref="0x75ba2da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x75bb23f0" loc="127:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x75bb23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x75bb25c8"/>
        <function-ref name="noAck" scoped="" ref="0x75bb26a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x75bb2788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x75bb48c8" loc="117:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpPacket" scoped="" ref="0x75bb48c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x75bb4aa0"/>
        <function-ref name="option" scoped="" ref="0x75bb4b80"/>
        <function-ref name="setEtx" scoped="" ref="0x75bb4c60"/>
        <function-ref name="setOrigin" scoped="" ref="0x75bb4d40"/>
        <function-ref name="clearOption" scoped="" ref="0x75bb4e20"/>
        <function-ref name="getEtx" scoped="" ref="0x75bb4f00"/>
        <function-ref name="getOrigin" scoped="" ref="0x75bb3010"/>
        <function-ref name="setType" scoped="" ref="0x75bb30f0"/>
        <function-ref name="setOption" scoped="" ref="0x75bb31d0"/>
        <function-ref name="matchPacket" scoped="" ref="0x75bb32b0"/>
        <function-ref name="getThl" scoped="" ref="0x75bb3390"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x75bb3470"/>
        <function-ref name="matchInstance" scoped="" ref="0x75bb3550"/>
        <function-ref name="getType" scoped="" ref="0x75bb36b0"/>
        <function-ref name="setThl" scoped="" ref="0x75bb3790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QEntryPool" ref="0x75baa328" loc="138:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="QEntryPool" scoped="" ref="0x75baa328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x75c6d0f8"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x75c6d3a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75ba9400"/>
        <function-ref name="maxSize" scoped="" ref="0x75baae00"/>
        <function-ref name="empty" scoped="" ref="0x75baa950"/>
        <function-ref name="put" scoped="" ref="0x75ba9068"/>
        <function-ref name="size" scoped="" ref="0x75baaba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x75ba37d0" loc="147:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x75ba37d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x75ba39a8"/>
        <function-ref name="source" scoped="" ref="0x75ba3a88"/>
        <function-ref name="address" scoped="" ref="0x75ba3b68"/>
        <function-ref name="destination" scoped="" ref="0x75ba3c48"/>
        <function-ref name="setSource" scoped="" ref="0x75ba3d28"/>
        <function-ref name="setDestination" scoped="" ref="0x75ba3e08"/>
        <function-ref name="type" scoped="" ref="0x75ba3ee8"/>
        <function-ref name="setType" scoped="" ref="0x75ba2010"/>
        <function-ref name="isForMe" scoped="" ref="0x75ba20f0"/>
        <function-ref name="setGroup" scoped="" ref="0x75ba21d0"/>
        <function-ref name="localGroup" scoped="" ref="0x75ba22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x75bb6348" loc="110:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x75bb6348"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x75bb6520"/>
        <function-ref name="stop" scoped="" ref="0x75bb6600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x75ba6e48" loc="143:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSnoop" scoped="" ref="0x75ba6e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75ba4050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MessagePool" ref="0x75ba9840" loc="139:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MessagePool" scoped="" ref="0x75ba9840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
            <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75ba7938"/>
        <function-ref name="maxSize" scoped="" ref="0x75ba7348"/>
        <function-ref name="empty" scoped="" ref="0x75ba9e68"/>
        <function-ref name="put" scoped="" ref="0x75ba75a0"/>
        <function-ref name="size" scoped="" ref="0x75ba70f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x75ba33a8" loc="146:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionId" scoped="" ref="0x75ba33a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x75ba3690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x75b9b950" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="CtpP.MessagePoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x75b9b950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
            <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75b9aab0"/>
        <function-ref name="maxSize" scoped="" ref="0x75b9a4c0"/>
        <function-ref name="empty" scoped="" ref="0x75b9a010"/>
        <function-ref name="put" scoped="" ref="0x75b9a718"/>
        <function-ref name="size" scoped="" ref="0x75b9a268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x750cbe98" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x750cbe98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
            <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x750c8010"/>
        <function-ref name="maxSize" scoped="" ref="0x750c9988"/>
        <function-ref name="empty" scoped="" ref="0x750c94d8"/>
        <function-ref name="put" scoped="" ref="0x750c9be0"/>
        <function-ref name="size" scoped="" ref="0x750c9730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x750cbaf0" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x750cbaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x750cbcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x75b83e40" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="CtpP.QEntryPoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x75b83e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x75c6d0f8"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x75c6d3a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75b81010"/>
        <function-ref name="maxSize" scoped="" ref="0x75b82968"/>
        <function-ref name="empty" scoped="" ref="0x75b824b8"/>
        <function-ref name="put" scoped="" ref="0x75b82bc0"/>
        <function-ref name="size" scoped="" ref="0x75b82710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x750c06f8" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x750c06f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x75c6d0f8"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x75c6d3a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x750be858"/>
        <function-ref name="maxSize" scoped="" ref="0x750be268"/>
        <function-ref name="empty" scoped="" ref="0x750c0d20"/>
        <function-ref name="put" scoped="" ref="0x750be4c0"/>
        <function-ref name="size" scoped="" ref="0x750be010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x750c0350" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x750c0350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x750c0528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x75b7f158" loc="43:../../../tos/system/QueueC.nc">
      <component-ref qname="CtpP.SendQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x75b7f158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x75c6d0f8"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x75c6d3a8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x75b6e0f0"/>
        <function-ref name="enqueue" scoped="" ref="0x75b6e7e0"/>
        <function-ref name="element" scoped="" ref="0x75b6eb38"/>
        <function-ref name="full" scoped="" ref="0x75b7f9d8"/>
        <function-ref name="maxSize" scoped="" ref="0x75b7fe88"/>
        <function-ref name="dequeue" scoped="" ref="0x75b6e468"/>
        <function-ref name="empty" scoped="" ref="0x75b7f780"/>
        <function-ref name="size" scoped="" ref="0x75b7fc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x75b6b0c0" loc="39:/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <component-ref qname="CtpP.SentCacheP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Cache" scoped="" ref="0x75b6b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
              <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x75b6b6e8"/>
        <function-ref name="flush" scoped="" ref="0x75b6bbe8"/>
        <function-ref name="lookup" scoped="" ref="0x75b6b968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x750b09e0" loc="46:/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Cache" scoped="" ref="0x750b09e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
              <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x750ae048"/>
        <function-ref name="flush" scoped="" ref="0x750ae548"/>
        <function-ref name="lookup" scoped="" ref="0x750ae2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x750b0618" loc="45:/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x750b0618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x750b07f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpPacket" ref="0x750ae788" loc="49:/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpPacket" scoped="" ref="0x750ae788"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x750ae960"/>
        <function-ref name="option" scoped="" ref="0x750aea40"/>
        <function-ref name="setEtx" scoped="" ref="0x750aeb20"/>
        <function-ref name="setOrigin" scoped="" ref="0x750aec00"/>
        <function-ref name="clearOption" scoped="" ref="0x750aece0"/>
        <function-ref name="getEtx" scoped="" ref="0x750aedc0"/>
        <function-ref name="getOrigin" scoped="" ref="0x750aeea0"/>
        <function-ref name="setType" scoped="" ref="0x750ad010"/>
        <function-ref name="setOption" scoped="" ref="0x750ad0f0"/>
        <function-ref name="matchPacket" scoped="" ref="0x750ad1d0"/>
        <function-ref name="getThl" scoped="" ref="0x750ad2b0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x750ad390"/>
        <function-ref name="matchInstance" scoped="" ref="0x750ad470"/>
        <function-ref name="getType" scoped="" ref="0x750ad5d0"/>
        <function-ref name="setThl" scoped="" ref="0x750ad6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x75b4fb98" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RoutingBeaconTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x75b4fb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75b4d6a8"/>
        <function-ref name="fired" scoped="" ref="0x75b4e938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75b4d068"/>
        <function-ref name="isOneShot" scoped="" ref="0x75b4ede8"/>
        <function-ref name="getdt" scoped="" ref="0x75b4db58"/>
        <function-ref name="gett0" scoped="" ref="0x75b4d900"/>
        <function-ref name="isRunning" scoped="" ref="0x75b4eb90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75b4e1e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75b4d388"/>
        <function-ref name="startOneShot" scoped="" ref="0x75b4e460"/>
        <function-ref name="stop" scoped="" ref="0x75b4e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x75b4c9a0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RouteUpdateTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x75b4c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75b494c8"/>
        <function-ref name="fired" scoped="" ref="0x75b4a768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75b4ae70"/>
        <function-ref name="isOneShot" scoped="" ref="0x75b4ac18"/>
        <function-ref name="getdt" scoped="" ref="0x75b49978"/>
        <function-ref name="gett0" scoped="" ref="0x75b49720"/>
        <function-ref name="isRunning" scoped="" ref="0x75b4a9c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75b4a010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75b491a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x75b4a290"/>
        <function-ref name="stop" scoped="" ref="0x75b4a510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x75b3bdd8" loc="57:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x75b3bdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75b3a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x75b40538" loc="47:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkEstimator" scoped="" ref="0x75b40538"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="getLinkQuality" scoped="" ref="0x75b40ef0"/>
        <function-ref name="txAck" scoped="" ref="0x75b407f0"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x75b408d0"/>
        <function-ref name="txNoAck" scoped="" ref="0x75b409b0"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x75b40a90"/>
        <function-ref name="evicted" scoped="" ref="0x75b40b70"/>
        <function-ref name="clearDLQ" scoped="" ref="0x75b40c50"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x75b40d30"/>
        <function-ref name="getForwardQuality" scoped="" ref="0x75b40e10"/>
        <function-ref name="getReverseQuality" scoped="" ref="0x75b40710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x75b3f3e8" loc="49:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x75b3f3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75b3f5c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x75b3f6a0"/>
        <function-ref name="getPayload" scoped="" ref="0x75b3f780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75b3f860"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75b3f940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x75b3e210" loc="54:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x75b3e210"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75b3e3e8"/>
        <function-ref name="getPayload" scoped="" ref="0x75b3e4c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75b3e5a8"/>
        <function-ref name="cancel" scoped="" ref="0x75b3e688"/>
        <function-ref name="sendDone" scoped="" ref="0x75b3e768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x75b41a00" loc="45:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x75b41a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75b41bd8"/>
        <function-ref name="getPayload" scoped="" ref="0x75b41cb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75b41d98"/>
        <function-ref name="cancel" scoped="" ref="0x75b41e78"/>
        <function-ref name="sendDone" scoped="" ref="0x75b40010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x75b3a560" loc="59:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x75b3a560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x75b3a7b8"/>
        <function-ref name="rand32" scoped="" ref="0x75b3a898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x75b3b670" loc="56:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x75b3b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75b3b848"/>
        <function-ref name="payloadLength" scoped="" ref="0x75b3b928"/>
        <function-ref name="getPayload" scoped="" ref="0x75b3ba08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75b3bae8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75b3bbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75b3f090" loc="48:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75b3f090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75b3f268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x75b3e990" loc="55:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubAMPacket" scoped="" ref="0x75b3e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x75b3eb68"/>
        <function-ref name="source" scoped="" ref="0x75b3ec48"/>
        <function-ref name="address" scoped="" ref="0x75b3ed28"/>
        <function-ref name="destination" scoped="" ref="0x75b3ee08"/>
        <function-ref name="setSource" scoped="" ref="0x75b3eee8"/>
        <function-ref name="setDestination" scoped="" ref="0x75b3b010"/>
        <function-ref name="type" scoped="" ref="0x75b3b0f0"/>
        <function-ref name="setType" scoped="" ref="0x75b3b1d0"/>
        <function-ref name="isForMe" scoped="" ref="0x75b3b2b0"/>
        <function-ref name="setGroup" scoped="" ref="0x75b3b390"/>
        <function-ref name="localGroup" scoped="" ref="0x75b3b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x75b40198" loc="46:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x75b40198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75b40370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareBit" ref="0x75b3ce68" loc="50:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareBit" scoped="" ref="0x75b3ce68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x75b3e050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x75b41578" loc="44:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x75b41578"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x75b41750"/>
        <function-ref name="stop" scoped="" ref="0x75b41830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkPacketMetadata" ref="0x75b3a208" loc="58:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x75b3a208"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x75b3a3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x75b46e18" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x75b46e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75ac2010"/>
        <function-ref name="getPayload" scoped="" ref="0x75ac20f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75ac21d0"/>
        <function-ref name="cancel" scoped="" ref="0x75ac22b0"/>
        <function-ref name="sendDone" scoped="" ref="0x75ac2390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x75ac24d0" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x75ac24d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75ac26a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x75ac2788"/>
        <function-ref name="getPayload" scoped="" ref="0x75ac2868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75ac2948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75ac2a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x75ac2b68" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x75ac2b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x75ac2d40"/>
        <function-ref name="source" scoped="" ref="0x75ac2e20"/>
        <function-ref name="address" scoped="" ref="0x75ac2f00"/>
        <function-ref name="destination" scoped="" ref="0x75ac1010"/>
        <function-ref name="setSource" scoped="" ref="0x75ac10f0"/>
        <function-ref name="setDestination" scoped="" ref="0x75ac11d0"/>
        <function-ref name="type" scoped="" ref="0x75ac12b0"/>
        <function-ref name="setType" scoped="" ref="0x75ac1390"/>
        <function-ref name="isForMe" scoped="" ref="0x75ac1470"/>
        <function-ref name="setGroup" scoped="" ref="0x75ac1550"/>
        <function-ref name="localGroup" scoped="" ref="0x75ac1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x75ac1790" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x75ac1790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x75ac1968"/>
        <function-ref name="noAck" scoped="" ref="0x75ac1a48"/>
        <function-ref name="wasAcked" scoped="" ref="0x75ac1b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x750999e0" loc="6:../../../tos/system/LplAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x750999e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75099bb8"/>
        <function-ref name="getPayload" scoped="" ref="0x75099c98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75099d78"/>
        <function-ref name="cancel" scoped="" ref="0x75099e58"/>
        <function-ref name="sendDone" scoped="" ref="0x75096010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x75096150" loc="7:../../../tos/system/LplAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x75096150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75096328"/>
        <function-ref name="payloadLength" scoped="" ref="0x75096408"/>
        <function-ref name="getPayload" scoped="" ref="0x750964e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x750965c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x750966a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x750967e8" loc="8:../../../tos/system/LplAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x750967e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x750969c0"/>
        <function-ref name="source" scoped="" ref="0x75096aa0"/>
        <function-ref name="address" scoped="" ref="0x75096b80"/>
        <function-ref name="destination" scoped="" ref="0x75096c60"/>
        <function-ref name="setSource" scoped="" ref="0x75096d40"/>
        <function-ref name="setDestination" scoped="" ref="0x75096e20"/>
        <function-ref name="type" scoped="" ref="0x75096f00"/>
        <function-ref name="setType" scoped="" ref="0x75094010"/>
        <function-ref name="isForMe" scoped="" ref="0x750940f0"/>
        <function-ref name="setGroup" scoped="" ref="0x750941d0"/>
        <function-ref name="localGroup" scoped="" ref="0x750942b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x75094410" loc="9:../../../tos/system/LplAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x75094410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x750945e8"/>
        <function-ref name="noAck" scoped="" ref="0x750946c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x750947a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7508f070" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7508f070"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7508f248"/>
        <function-ref name="getPayload" scoped="" ref="0x7508f328"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7508f408"/>
        <function-ref name="cancel" scoped="" ref="0x7508f4e8"/>
        <function-ref name="sendDone" scoped="" ref="0x7508f5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7508f708" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7508f708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7508f8e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7508f9c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7508faa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7508fb80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7508fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7508fda0" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7508fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7508e010"/>
        <function-ref name="source" scoped="" ref="0x7508e0f0"/>
        <function-ref name="address" scoped="" ref="0x7508e1d0"/>
        <function-ref name="destination" scoped="" ref="0x7508e2b0"/>
        <function-ref name="setSource" scoped="" ref="0x7508e390"/>
        <function-ref name="setDestination" scoped="" ref="0x7508e470"/>
        <function-ref name="type" scoped="" ref="0x7508e550"/>
        <function-ref name="setType" scoped="" ref="0x7508e630"/>
        <function-ref name="isForMe" scoped="" ref="0x7508e710"/>
        <function-ref name="setGroup" scoped="" ref="0x7508e7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7508e8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7508ea30" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7508ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7508ec08"/>
        <function-ref name="noAck" scoped="" ref="0x7508ece8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7508edc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x750840c8" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x750840c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x750842a0"/>
        <function-ref name="getPayload" scoped="" ref="0x75084380"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75084460"/>
        <function-ref name="cancel" scoped="" ref="0x75084540"/>
        <function-ref name="sendDone" scoped="" ref="0x75084620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x75084790" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x75084790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75084968"/>
        <function-ref name="getPayload" scoped="" ref="0x75084a48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75084b28"/>
        <function-ref name="cancel" scoped="" ref="0x75084c08"/>
        <function-ref name="sendDone" scoped="" ref="0x75084ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x75084e28" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x75084e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x75083050"/>
        <function-ref name="source" scoped="" ref="0x75083130"/>
        <function-ref name="address" scoped="" ref="0x75083210"/>
        <function-ref name="destination" scoped="" ref="0x750832f0"/>
        <function-ref name="setSource" scoped="" ref="0x750833d0"/>
        <function-ref name="setDestination" scoped="" ref="0x750834b0"/>
        <function-ref name="type" scoped="" ref="0x75083590"/>
        <function-ref name="setType" scoped="" ref="0x75083670"/>
        <function-ref name="isForMe" scoped="" ref="0x75083750"/>
        <function-ref name="setGroup" scoped="" ref="0x75083830"/>
        <function-ref name="localGroup" scoped="" ref="0x75083910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x7508c360" loc="5:../../../tos/system/LplAMSenderP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubAMSend" scoped="" ref="0x7508c360"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7508c538"/>
        <function-ref name="getPayload" scoped="" ref="0x7508c618"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7508c6f8"/>
        <function-ref name="cancel" scoped="" ref="0x7508c7d8"/>
        <function-ref name="sendDone" scoped="" ref="0x7508c8b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x7508a010" loc="7:../../../tos/system/LplAMSenderP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7508a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x7508a1e8"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x7508a2c8"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x7508a3a8"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x7508a488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7508dc58" loc="3:../../../tos/system/LplAMSenderP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7508dc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7508de30"/>
        <function-ref name="getPayload" scoped="" ref="0x7508df10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7508c010"/>
        <function-ref name="cancel" scoped="" ref="0x7508c0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7508c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lpl" ref="0x7508ca18" loc="6:../../../tos/system/LplAMSenderP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Lpl" scoped="" ref="0x7508ca18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7508cbf0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7508ccd0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7508cdb0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7508ce90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x75abe030" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x75abe030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75abe208"/>
        <function-ref name="payloadLength" scoped="" ref="0x75abe2e8"/>
        <function-ref name="getPayload" scoped="" ref="0x75abe3c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75abe4a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75abe588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x75ac0ce8" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x75ac0ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75ac0ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x75abe6c8" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x75abe6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x75abe8a0"/>
        <function-ref name="source" scoped="" ref="0x75abe980"/>
        <function-ref name="address" scoped="" ref="0x75abea60"/>
        <function-ref name="destination" scoped="" ref="0x75abeb40"/>
        <function-ref name="setSource" scoped="" ref="0x75abec20"/>
        <function-ref name="setDestination" scoped="" ref="0x75abed00"/>
        <function-ref name="type" scoped="" ref="0x75abede0"/>
        <function-ref name="setType" scoped="" ref="0x75abeec0"/>
        <function-ref name="isForMe" scoped="" ref="0x75abd010"/>
        <function-ref name="setGroup" scoped="" ref="0x75abd0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x75abd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x75abca70" loc="47:../../../tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x75abca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75abcc48"/>
        <function-ref name="payloadLength" scoped="" ref="0x75abcd28"/>
        <function-ref name="getPayload" scoped="" ref="0x75abce08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75abcee8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75abb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x75abc758" loc="46:../../../tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x75abc758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75abc930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x75abb150" loc="48:../../../tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x75abb150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x75abb328"/>
        <function-ref name="source" scoped="" ref="0x75abb408"/>
        <function-ref name="address" scoped="" ref="0x75abb4e8"/>
        <function-ref name="destination" scoped="" ref="0x75abb5c8"/>
        <function-ref name="setSource" scoped="" ref="0x75abb6a8"/>
        <function-ref name="setDestination" scoped="" ref="0x75abb788"/>
        <function-ref name="type" scoped="" ref="0x75abb868"/>
        <function-ref name="setType" scoped="" ref="0x75abb948"/>
        <function-ref name="isForMe" scoped="" ref="0x75abba28"/>
        <function-ref name="setGroup" scoped="" ref="0x75abbb08"/>
        <function-ref name="localGroup" scoped="" ref="0x75abbbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x75a22070" loc="110:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x75a22070"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x75a22248"/>
        <function-ref name="setRoot" scoped="" ref="0x75a22328"/>
        <function-ref name="unsetRoot" scoped="" ref="0x75a22408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateRouteTask" ref="0x75a16678" loc="269:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateRouteTask" scoped="" ref="0x75a16678"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75a16850"/>
        <function-ref name="runTask" scoped="" ref="0x75a16930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x75a17408" loc="125:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionDebug" scoped="" ref="0x75a17408"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x75a175e0"/>
        <function-ref name="logEventMsg" scoped="" ref="0x75a176c0"/>
        <function-ref name="logEventSimple" scoped="" ref="0x75a177a0"/>
        <function-ref name="logEventRoute" scoped="" ref="0x75a17880"/>
        <function-ref name="logEventDbg" scoped="" ref="0x75a17960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x75a20bd0" loc="119:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkEstimator" scoped="" ref="0x75a20bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="getReverseQuality" scoped="" ref="0x75a1e630"/>
        <function-ref name="txAck" scoped="" ref="0x75a20e88"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x75a1e010"/>
        <function-ref name="txNoAck" scoped="" ref="0x75a1e0f0"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x75a1e1d0"/>
        <function-ref name="evicted" scoped="" ref="0x75a1e2b0"/>
        <function-ref name="clearDLQ" scoped="" ref="0x75a1e390"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x75a1e470"/>
        <function-ref name="getForwardQuality" scoped="" ref="0x75a1e550"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x75a20da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpRoutingPacket" ref="0x75a21548" loc="113:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpRoutingPacket" scoped="" ref="0x75a21548"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpRoutingPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clearOptions" scoped="" ref="0x75a21720"/>
        <function-ref name="setEtx" scoped="" ref="0x75a21800"/>
        <function-ref name="clearOption" scoped="" ref="0x75a218e0"/>
        <function-ref name="getEtx" scoped="" ref="0x75a219c0"/>
        <function-ref name="setOption" scoped="" ref="0x75a21aa0"/>
        <function-ref name="setParent" scoped="" ref="0x75a21b80"/>
        <function-ref name="getParent" scoped="" ref="0x75a21c60"/>
        <function-ref name="getOption" scoped="" ref="0x75a21d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x75a1d410" loc="121:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x75a1d410"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x75a1d5e8"/>
        <function-ref name="stopDone" scoped="" ref="0x75a1d6c8"/>
        <function-ref name="start" scoped="" ref="0x75a1d7a8"/>
        <function-ref name="stop" scoped="" ref="0x75a1d888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x75a17010" loc="124:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x75a17010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x75a171e8"/>
        <function-ref name="rand32" scoped="" ref="0x75a172c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x75a22548" loc="111:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpInfo" scoped="" ref="0x75a22548"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x75a22720"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x75a22800"/>
        <function-ref name="numNeighbors" scoped="" ref="0x75a228e0"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x75a229c0"/>
        <function-ref name="getEtx" scoped="" ref="0x75a22aa0"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x75a22b80"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x75a22c60"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x75a22d40"/>
        <function-ref name="getParent" scoped="" ref="0x75a22e20"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x75a22f00"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x75a21010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBeaconTask" ref="0x75a16240" loc="388:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendBeaconTask" scoped="" ref="0x75a16240"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75a16418"/>
        <function-ref name="runTask" scoped="" ref="0x75a164f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75a21e80" loc="114:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75a21e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75a20070"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSend" ref="0x75a20200" loc="117:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BeaconSend" scoped="" ref="0x75a20200"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75a203d8"/>
        <function-ref name="getPayload" scoped="" ref="0x75a204b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75a20598"/>
        <function-ref name="cancel" scoped="" ref="0x75a20678"/>
        <function-ref name="sendDone" scoped="" ref="0x75a20758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconTimer" ref="0x75a1da78" loc="122:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BeaconTimer" scoped="" ref="0x75a1da78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75a1b570"/>
        <function-ref name="fired" scoped="" ref="0x75a1c810"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75a1cf18"/>
        <function-ref name="isOneShot" scoped="" ref="0x75a1ccc0"/>
        <function-ref name="getdt" scoped="" ref="0x75a1ba20"/>
        <function-ref name="gett0" scoped="" ref="0x75a1b7c8"/>
        <function-ref name="isRunning" scoped="" ref="0x75a1ca68"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75a1c0b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75a1b250"/>
        <function-ref name="startOneShot" scoped="" ref="0x75a1c338"/>
        <function-ref name="stop" scoped="" ref="0x75a1c5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteTimer" ref="0x75a1bce0" loc="123:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RouteTimer" scoped="" ref="0x75a1bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75a188a8"/>
        <function-ref name="fired" scoped="" ref="0x75a1ab18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75a18268"/>
        <function-ref name="isOneShot" scoped="" ref="0x75a18010"/>
        <function-ref name="getdt" scoped="" ref="0x75a18d58"/>
        <function-ref name="gett0" scoped="" ref="0x75a18b00"/>
        <function-ref name="isRunning" scoped="" ref="0x75a1ad70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75a1a3c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75a18588"/>
        <function-ref name="startOneShot" scoped="" ref="0x75a1a640"/>
        <function-ref name="stop" scoped="" ref="0x75a1a8c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpCongestion" ref="0x75a17aa0" loc="126:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpCongestion" scoped="" ref="0x75a17aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x75a17c78"/>
        <function-ref name="setClientCongested" scoped="" ref="0x75a17d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareBit" ref="0x75a17e98" loc="128:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareBit" scoped="" ref="0x75a17e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x75a160c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconReceive" ref="0x75a208b8" loc="118:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BeaconReceive" scoped="" ref="0x75a208b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75a20a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x75a1e770" loc="120:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x75a1e770"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x75a1e948"/>
        <function-ref name="source" scoped="" ref="0x75a1ea28"/>
        <function-ref name="address" scoped="" ref="0x75a1eb08"/>
        <function-ref name="destination" scoped="" ref="0x75a1ebe8"/>
        <function-ref name="setSource" scoped="" ref="0x75a1ecc8"/>
        <function-ref name="setDestination" scoped="" ref="0x75a1eda8"/>
        <function-ref name="type" scoped="" ref="0x75a1ee88"/>
        <function-ref name="setType" scoped="" ref="0x75a1d010"/>
        <function-ref name="isForMe" scoped="" ref="0x75a1d0f0"/>
        <function-ref name="setGroup" scoped="" ref="0x75a1d1d0"/>
        <function-ref name="localGroup" scoped="" ref="0x75a1d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x75a21150" loc="112:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x75a21150"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x75a21328"/>
        <function-ref name="stop" scoped="" ref="0x75a21408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Routing" ref="0x75a23a88" loc="109:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Routing" scoped="" ref="0x75a23a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x75a23c60"/>
        <function-ref name="routeFound" scoped="" ref="0x75a23d40"/>
        <function-ref name="nextHop" scoped="" ref="0x75a23e20"/>
        <function-ref name="noRoute" scoped="" ref="0x75a23f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x75a11a70" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RetxmitTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x75a11a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75a0e570"/>
        <function-ref name="fired" scoped="" ref="0x75a10810"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75a10f18"/>
        <function-ref name="isOneShot" scoped="" ref="0x75a10cc0"/>
        <function-ref name="getdt" scoped="" ref="0x75a0ea20"/>
        <function-ref name="gett0" scoped="" ref="0x75a0e7c8"/>
        <function-ref name="isRunning" scoped="" ref="0x75a10a68"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75a100b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75a0e250"/>
        <function-ref name="startOneShot" scoped="" ref="0x75a10338"/>
        <function-ref name="stop" scoped="" ref="0x75a105b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x75a0bd70" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x75a0bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75a0a010"/>
        <function-ref name="getPayload" scoped="" ref="0x75a0a0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75a0a1d0"/>
        <function-ref name="cancel" scoped="" ref="0x75a0a2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x75a0a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x75a0a4d0" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x75a0a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75a0a6a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x75a0a788"/>
        <function-ref name="getPayload" scoped="" ref="0x75a0a868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75a0a948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75a0aa28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x75a0ab68" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x75a0ab68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x75a0ad40"/>
        <function-ref name="source" scoped="" ref="0x75a0ae20"/>
        <function-ref name="address" scoped="" ref="0x75a0af00"/>
        <function-ref name="destination" scoped="" ref="0x75a09010"/>
        <function-ref name="setSource" scoped="" ref="0x75a090f0"/>
        <function-ref name="setDestination" scoped="" ref="0x75a091d0"/>
        <function-ref name="type" scoped="" ref="0x75a092b0"/>
        <function-ref name="setType" scoped="" ref="0x75a09390"/>
        <function-ref name="isForMe" scoped="" ref="0x75a09470"/>
        <function-ref name="setGroup" scoped="" ref="0x75a09550"/>
        <function-ref name="localGroup" scoped="" ref="0x75a09630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x75a09790" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x75a09790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x75a09968"/>
        <function-ref name="noAck" scoped="" ref="0x75a09a48"/>
        <function-ref name="wasAcked" scoped="" ref="0x75a09b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7502dce8" loc="6:../../../tos/system/LplAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7502dce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7502dec0"/>
        <function-ref name="getPayload" scoped="" ref="0x75029010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x750290f0"/>
        <function-ref name="cancel" scoped="" ref="0x750291d0"/>
        <function-ref name="sendDone" scoped="" ref="0x750292b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x750293f0" loc="7:../../../tos/system/LplAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x750293f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x750295c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x750296a8"/>
        <function-ref name="getPayload" scoped="" ref="0x75029788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75029868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75029948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x75029a88" loc="8:../../../tos/system/LplAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x75029a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x75029c60"/>
        <function-ref name="source" scoped="" ref="0x75029d40"/>
        <function-ref name="address" scoped="" ref="0x75029e20"/>
        <function-ref name="destination" scoped="" ref="0x75029f00"/>
        <function-ref name="setSource" scoped="" ref="0x75028010"/>
        <function-ref name="setDestination" scoped="" ref="0x750280f0"/>
        <function-ref name="type" scoped="" ref="0x750281d0"/>
        <function-ref name="setType" scoped="" ref="0x750282b0"/>
        <function-ref name="isForMe" scoped="" ref="0x75028390"/>
        <function-ref name="setGroup" scoped="" ref="0x75028470"/>
        <function-ref name="localGroup" scoped="" ref="0x75028550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x750286b0" loc="9:../../../tos/system/LplAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x750286b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x75028888"/>
        <function-ref name="noAck" scoped="" ref="0x75028968"/>
        <function-ref name="wasAcked" scoped="" ref="0x75028a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x750223e0" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x750223e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x750225b8"/>
        <function-ref name="getPayload" scoped="" ref="0x75022698"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75022778"/>
        <function-ref name="cancel" scoped="" ref="0x75022858"/>
        <function-ref name="sendDone" scoped="" ref="0x75022938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x75022a78" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x75022a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75022c50"/>
        <function-ref name="payloadLength" scoped="" ref="0x75022d30"/>
        <function-ref name="getPayload" scoped="" ref="0x75022e10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75022ef0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75021010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x75021150" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x75021150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x75021328"/>
        <function-ref name="source" scoped="" ref="0x75021408"/>
        <function-ref name="address" scoped="" ref="0x750214e8"/>
        <function-ref name="destination" scoped="" ref="0x750215c8"/>
        <function-ref name="setSource" scoped="" ref="0x750216a8"/>
        <function-ref name="setDestination" scoped="" ref="0x75021788"/>
        <function-ref name="type" scoped="" ref="0x75021868"/>
        <function-ref name="setType" scoped="" ref="0x75021948"/>
        <function-ref name="isForMe" scoped="" ref="0x75021a28"/>
        <function-ref name="setGroup" scoped="" ref="0x75021b08"/>
        <function-ref name="localGroup" scoped="" ref="0x75021be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x75021d48" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x75021d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x75021f20"/>
        <function-ref name="noAck" scoped="" ref="0x75020018"/>
        <function-ref name="wasAcked" scoped="" ref="0x750200f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x750174a8" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x750174a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75017680"/>
        <function-ref name="getPayload" scoped="" ref="0x75017760"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75017840"/>
        <function-ref name="cancel" scoped="" ref="0x75017920"/>
        <function-ref name="sendDone" scoped="" ref="0x75017a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x75017b70" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x75017b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75017d48"/>
        <function-ref name="getPayload" scoped="" ref="0x75017e28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75017f08"/>
        <function-ref name="cancel" scoped="" ref="0x75016010"/>
        <function-ref name="sendDone" scoped="" ref="0x750160f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x75016230" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x75016230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x75016408"/>
        <function-ref name="source" scoped="" ref="0x750164e8"/>
        <function-ref name="address" scoped="" ref="0x750165c8"/>
        <function-ref name="destination" scoped="" ref="0x750166a8"/>
        <function-ref name="setSource" scoped="" ref="0x75016788"/>
        <function-ref name="setDestination" scoped="" ref="0x75016868"/>
        <function-ref name="type" scoped="" ref="0x75016948"/>
        <function-ref name="setType" scoped="" ref="0x75016a28"/>
        <function-ref name="isForMe" scoped="" ref="0x75016b08"/>
        <function-ref name="setGroup" scoped="" ref="0x75016be8"/>
        <function-ref name="localGroup" scoped="" ref="0x75016cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x7501f6f8" loc="5:../../../tos/system/LplAMSenderP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubAMSend" scoped="" ref="0x7501f6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7501f8d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7501f9b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7501fa90"/>
        <function-ref name="cancel" scoped="" ref="0x7501fb70"/>
        <function-ref name="sendDone" scoped="" ref="0x7501fc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x7501e3f0" loc="7:../../../tos/system/LplAMSenderP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x7501e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x7501e5c8"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x7501e6a8"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x7501e788"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x7501e868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7501f010" loc="3:../../../tos/system/LplAMSenderP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7501f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7501f1e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7501f2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7501f3a8"/>
        <function-ref name="cancel" scoped="" ref="0x7501f488"/>
        <function-ref name="sendDone" scoped="" ref="0x7501f568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lpl" ref="0x7501fdb0" loc="6:../../../tos/system/LplAMSenderP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Lpl" scoped="" ref="0x7501fdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7501e010"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7501e0f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7501e1d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7501e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x75a07150" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x75a07150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75a07328"/>
        <function-ref name="payloadLength" scoped="" ref="0x75a07408"/>
        <function-ref name="getPayload" scoped="" ref="0x75a074e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75a075c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75a076a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x75a08dc8" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x75a08dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75a07010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x75a077e8" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x75a077e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x75a079c0"/>
        <function-ref name="source" scoped="" ref="0x75a07aa0"/>
        <function-ref name="address" scoped="" ref="0x75a07b80"/>
        <function-ref name="destination" scoped="" ref="0x75a07c60"/>
        <function-ref name="setSource" scoped="" ref="0x75a07d40"/>
        <function-ref name="setDestination" scoped="" ref="0x75a07e20"/>
        <function-ref name="type" scoped="" ref="0x75a07f00"/>
        <function-ref name="setType" scoped="" ref="0x75a05010"/>
        <function-ref name="isForMe" scoped="" ref="0x75a050f0"/>
        <function-ref name="setGroup" scoped="" ref="0x75a051d0"/>
        <function-ref name="localGroup" scoped="" ref="0x75a052b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x759f28f0" loc="46:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="DemoAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x759f28f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x759f2ac8"/>
        <function-ref name="payloadLength" scoped="" ref="0x759f2ba8"/>
        <function-ref name="getPayload" scoped="" ref="0x759f2c88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x759f2d68"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x759f2e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x759f2258" loc="45:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="DemoAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x759f2258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x759f2430"/>
        <function-ref name="getPayload" scoped="" ref="0x759f2510"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x759f25f0"/>
        <function-ref name="cancel" scoped="" ref="0x759f26d0"/>
        <function-ref name="sendDone" scoped="" ref="0x759f27b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x75003a20" loc="38:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="DemoAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x75003a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75003bf8"/>
        <function-ref name="payloadLength" scoped="" ref="0x75003cd8"/>
        <function-ref name="getPayload" scoped="" ref="0x75003db8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75003e98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75002010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x75003388" loc="37:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="DemoAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x75003388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75003560"/>
        <function-ref name="getPayload" scoped="" ref="0x75003640"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75003720"/>
        <function-ref name="cancel" scoped="" ref="0x75003800"/>
        <function-ref name="sendDone" scoped="" ref="0x750038e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionId" ref="0x75001b48" loc="46:/home/pi/tinyos-main/tos/lib/net/CollectionIdP.nc">
      <component-ref qname="DemoAppC.CollectionSenderC.CollectionSenderP.CollectionIdP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionId" scoped="" ref="0x75001b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x75001d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x759e4ca8" loc="45:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
      <component-ref qname="DemoAppC.InternalTempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x759e4ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x759e32e8"/>
        <function-ref name="readDone" scoped="" ref="0x759e3540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x759e38c8" loc="46:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
      <component-ref qname="DemoAppC.InternalTempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x759e38c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x75799678"/>
        <function-ref name="postBuffer" scoped="" ref="0x759e3ef0"/>
        <function-ref name="read" scoped="" ref="0x757993f8"/>
        <function-ref name="readDone" scoped="" ref="0x75799bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x74ffebe0" loc="48:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x74ffebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x74ffc258"/>
        <function-ref name="readDone" scoped="" ref="0x74ffc4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x74ffc878" loc="49:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x74ffc878"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x759d6408"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x759d7ec8"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x74ffcec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResourceReadNow" ref="0x759bd9c8" loc="46:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubResourceReadNow" scoped="" ref="0x759bd9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x759bdba0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x759bdc80"/>
        <function-ref name="request" scoped="" ref="0x759bdd60"/>
        <function-ref name="granted" scoped="" ref="0x759bde40"/>
        <function-ref name="isOwner" scoped="" ref="0x759bdf20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x759c7e90" loc="38:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x759c7e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x759c24d8"/>
        <function-ref name="readDone" scoped="" ref="0x759c2730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x759c1380" loc="39:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x759c1380"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x759c19c8"/>
        <function-ref name="readDone" scoped="" ref="0x759c1c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceReadNow" ref="0x759be3d0" loc="40:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceReadNow" scoped="" ref="0x759be3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x759be5a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x759be688"/>
        <function-ref name="request" scoped="" ref="0x759be768"/>
        <function-ref name="granted" scoped="" ref="0x759be848"/>
        <function-ref name="isOwner" scoped="" ref="0x759be928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x759bc660" loc="48:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x759bc660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x759d6408"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x759d7ec8"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x759bcca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x759ba010" loc="49:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x759ba010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x759ba1e8"/>
        <function-ref name="configureSingle" scoped="" ref="0x759ba2c8"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x759ba3a8"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x759ba488"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x759ba568"/>
        <function-ref name="configureMultiple" scoped="" ref="0x759ba648"/>
        <function-ref name="singleDataReady" scoped="" ref="0x759ba728"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceRead" ref="0x759beeb8" loc="44:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRead" scoped="" ref="0x759beeb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x759bd0c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x759bd1a0"/>
        <function-ref name="request" scoped="" ref="0x759bd280"/>
        <function-ref name="granted" scoped="" ref="0x759bd360"/>
        <function-ref name="isOwner" scoped="" ref="0x759bd440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDone" ref="0x759a0a68" loc="136:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readDone" scoped="" ref="0x759a0a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x759a0c40"/>
        <function-ref name="runTask" scoped="" ref="0x759a0d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x74ff5150" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x74ff5150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x74ff5328"/>
        <function-ref name="configure" scoped="" ref="0x74ff5408"/>
        <function-ref name="dataReady" scoped="" ref="0x74ff54e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x74ff6820" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x74ff6820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x74ff69f8"/>
        <function-ref name="configureSingle" scoped="" ref="0x74ff6ad8"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x74ff6bb8"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x74ff6c98"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x74ff6d78"/>
        <function-ref name="configureMultiple" scoped="" ref="0x74ff6e58"/>
        <function-ref name="singleDataReady" scoped="" ref="0x74ff5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x74ff5628" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x74ff5628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x74ff5800"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x74ff58e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x74ff5b10" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x74ff5b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x759d6408"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x759d7ec8"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x74ff3200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x74ff6188" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x74ff6188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x74ff6360"/>
        <function-ref name="immediateRequest" scoped="" ref="0x74ff6440"/>
        <function-ref name="request" scoped="" ref="0x74ff6520"/>
        <function-ref name="granted" scoped="" ref="0x74ff6600"/>
        <function-ref name="isOwner" scoped="" ref="0x74ff66e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7597b010" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7597b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7597b1e8"/>
        <function-ref name="configure" scoped="" ref="0x7597b2c8"/>
        <function-ref name="dataReady" scoped="" ref="0x7597b3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x75979120" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x75979120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x759792f8"/>
        <function-ref name="stop" scoped="" ref="0x759793d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7597b900" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7597b900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7597bad8"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7597bbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7597c2a8" loc="41:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7597c2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7597c480"/>
        <function-ref name="configureSingle" scoped="" ref="0x7597c560"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7597c640"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7597c720"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7597c800"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7597c8e0"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7597c9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x75980740" loc="40:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x75980740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x75980918"/>
        <function-ref name="immediateRequest" scoped="" ref="0x759809f8"/>
        <function-ref name="request" scoped="" ref="0x75980ad8"/>
        <function-ref name="granted" scoped="" ref="0x75980bb8"/>
        <function-ref name="isOwner" scoped="" ref="0x75980c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x759741f8" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x759741f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x759743d0"/>
        <function-ref name="configure" scoped="" ref="0x759744b0"/>
        <function-ref name="dataReady" scoped="" ref="0x75974590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x75969538" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x75969538"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x75969710"/>
        <function-ref name="getMCtl" scoped="" ref="0x759697f0"/>
        <function-ref name="resetIFGs" scoped="" ref="0x759698d0"/>
        <function-ref name="isBusy" scoped="" ref="0x759699b0"/>
        <function-ref name="conversionDone" scoped="" ref="0x75969a90"/>
        <function-ref name="getCtl1" scoped="" ref="0x75969b70"/>
        <function-ref name="setMCtl" scoped="" ref="0x75969c50"/>
        <function-ref name="startConversion" scoped="" ref="0x75969d30"/>
        <function-ref name="setCtl0" scoped="" ref="0x75969e10"/>
        <function-ref name="getMem" scoped="" ref="0x75969ef0"/>
        <function-ref name="setIEFlags" scoped="" ref="0x75972010"/>
        <function-ref name="getIEFlags" scoped="" ref="0x759720f0"/>
        <function-ref name="stopConversion" scoped="" ref="0x759721d0"/>
        <function-ref name="enableConversion" scoped="" ref="0x75972330"/>
        <function-ref name="setCtl1" scoped="" ref="0x75972410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port64" ref="0x75962070" loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x75962070"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x75962248"/>
        <function-ref name="isInput" scoped="" ref="0x75962328"/>
        <function-ref name="setResistor" scoped="" ref="0x75962408"/>
        <function-ref name="toggle" scoped="" ref="0x759624e8"/>
        <function-ref name="isOutput" scoped="" ref="0x759625c8"/>
        <function-ref name="getResistor" scoped="" ref="0x759626a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x75962788"/>
        <function-ref name="get" scoped="" ref="0x75962868"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x75962948"/>
        <function-ref name="getRaw" scoped="" ref="0x75962a28"/>
        <function-ref name="set" scoped="" ref="0x75962b08"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x75962be8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x75962cc8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x75962e28"/>
        <function-ref name="clr" scoped="" ref="0x75962f08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA1" ref="0x75967258" loc="53:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x75967258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x75967430"/>
        <function-ref name="setEvent" scoped="" ref="0x75967510"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x759675f0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x759676d0"/>
        <function-ref name="fired" scoped="" ref="0x759677b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA0" ref="0x75971368" loc="50:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x75971368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x75971540"/>
        <function-ref name="getControl" scoped="" ref="0x75971620"/>
        <function-ref name="enableEvents" scoped="" ref="0x75971700"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x759717e0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x759718c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x759719a0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x75971a80"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x75971b60"/>
        <function-ref name="setControl" scoped="" ref="0x75971c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x75973310" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x75973310"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x759734e8"/>
        <function-ref name="stop" scoped="" ref="0x759735c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port62" ref="0x75965d68" loc="56:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x75965d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x75964010"/>
        <function-ref name="isInput" scoped="" ref="0x759640f0"/>
        <function-ref name="setResistor" scoped="" ref="0x759641d0"/>
        <function-ref name="toggle" scoped="" ref="0x759642b0"/>
        <function-ref name="isOutput" scoped="" ref="0x75964390"/>
        <function-ref name="getResistor" scoped="" ref="0x75964470"/>
        <function-ref name="makeOutput" scoped="" ref="0x75964550"/>
        <function-ref name="get" scoped="" ref="0x75964630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x75964710"/>
        <function-ref name="getRaw" scoped="" ref="0x759647f0"/>
        <function-ref name="set" scoped="" ref="0x759648d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x759649b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x75964a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x75964bf0"/>
        <function-ref name="clr" scoped="" ref="0x75964cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x75974ae8" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x75974ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x75974cc0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x75974da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port67" ref="0x7595f4a8" loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7595f4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7595f680"/>
        <function-ref name="isInput" scoped="" ref="0x7595f760"/>
        <function-ref name="setResistor" scoped="" ref="0x7595f840"/>
        <function-ref name="toggle" scoped="" ref="0x7595f920"/>
        <function-ref name="isOutput" scoped="" ref="0x7595fa00"/>
        <function-ref name="getResistor" scoped="" ref="0x7595fae0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7595fbc0"/>
        <function-ref name="get" scoped="" ref="0x7595fca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7595fd80"/>
        <function-ref name="getRaw" scoped="" ref="0x7595fe60"/>
        <function-ref name="set" scoped="" ref="0x7595e010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7595e0f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7595e1d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7595e330"/>
        <function-ref name="clr" scoped="" ref="0x7595e410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port60" ref="0x75967a08" loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x75967a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x75967c60"/>
        <function-ref name="isInput" scoped="" ref="0x75967d40"/>
        <function-ref name="setResistor" scoped="" ref="0x75967e20"/>
        <function-ref name="toggle" scoped="" ref="0x75967f00"/>
        <function-ref name="isOutput" scoped="" ref="0x75966010"/>
        <function-ref name="getResistor" scoped="" ref="0x759660f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x759661d0"/>
        <function-ref name="get" scoped="" ref="0x759662b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x75966390"/>
        <function-ref name="getRaw" scoped="" ref="0x75966470"/>
        <function-ref name="set" scoped="" ref="0x75966550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x75966630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x75966710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x75966870"/>
        <function-ref name="clr" scoped="" ref="0x75966950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75979c88" loc="40:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75979c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75979e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port65" ref="0x75961178" loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x75961178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x75961350"/>
        <function-ref name="isInput" scoped="" ref="0x75961430"/>
        <function-ref name="setResistor" scoped="" ref="0x75961510"/>
        <function-ref name="toggle" scoped="" ref="0x759615f0"/>
        <function-ref name="isOutput" scoped="" ref="0x759616d0"/>
        <function-ref name="getResistor" scoped="" ref="0x759617b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x75961890"/>
        <function-ref name="get" scoped="" ref="0x75961970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x75961a50"/>
        <function-ref name="getRaw" scoped="" ref="0x75961b30"/>
        <function-ref name="set" scoped="" ref="0x75961c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x75961cf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x75961dd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x75960010"/>
        <function-ref name="clr" scoped="" ref="0x759600f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerA" ref="0x75972620" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x75972620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x759727f8"/>
        <function-ref name="setClockSource" scoped="" ref="0x759728d8"/>
        <function-ref name="enableEvents" scoped="" ref="0x759729b8"/>
        <function-ref name="get" scoped="" ref="0x75972a98"/>
        <function-ref name="disableEvents" scoped="" ref="0x75972b78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x75972c58"/>
        <function-ref name="getMode" scoped="" ref="0x75972d38"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x75972e18"/>
        <function-ref name="overflow" scoped="" ref="0x75972ef8"/>
        <function-ref name="setMode" scoped="" ref="0x75971010"/>
        <function-ref name="setInputDivider" scoped="" ref="0x759710f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADCArbiterInfo" ref="0x75973868" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCArbiterInfo" scoped="" ref="0x75973868"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x75973a40"/>
        <function-ref name="userId" scoped="" ref="0x75973b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA1" ref="0x75971eb8" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x75971eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x759680c0"/>
        <function-ref name="getControl" scoped="" ref="0x759681a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x75968280"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x75968360"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x75968440"/>
        <function-ref name="disableEvents" scoped="" ref="0x75968520"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x75968600"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x759686e0"/>
        <function-ref name="setControl" scoped="" ref="0x759687c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x759754e0" loc="41:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x759754e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x759756b8"/>
        <function-ref name="configureSingle" scoped="" ref="0x75975798"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x75975878"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x75975958"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x75975a38"/>
        <function-ref name="configureMultiple" scoped="" ref="0x75975b18"/>
        <function-ref name="singleDataReady" scoped="" ref="0x75975bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port63" ref="0x75964f28" loc="57:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x75964f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x75963110"/>
        <function-ref name="isInput" scoped="" ref="0x759631f0"/>
        <function-ref name="setResistor" scoped="" ref="0x759632d0"/>
        <function-ref name="toggle" scoped="" ref="0x759633b0"/>
        <function-ref name="isOutput" scoped="" ref="0x75963490"/>
        <function-ref name="getResistor" scoped="" ref="0x75963570"/>
        <function-ref name="makeOutput" scoped="" ref="0x75963650"/>
        <function-ref name="get" scoped="" ref="0x75963730"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x75963810"/>
        <function-ref name="getRaw" scoped="" ref="0x759638f0"/>
        <function-ref name="set" scoped="" ref="0x759639d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x75963ab0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x75963b90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x75963cf0"/>
        <function-ref name="clr" scoped="" ref="0x75963dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA0" ref="0x75968a08" loc="52:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x75968a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x75968be0"/>
        <function-ref name="setEvent" scoped="" ref="0x75968cc0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x75968da0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x75968e80"/>
        <function-ref name="fired" scoped="" ref="0x75967010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port61" ref="0x75966ba8" loc="55:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x75966ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x75966d80"/>
        <function-ref name="isInput" scoped="" ref="0x75966e60"/>
        <function-ref name="setResistor" scoped="" ref="0x75965010"/>
        <function-ref name="toggle" scoped="" ref="0x759650f0"/>
        <function-ref name="isOutput" scoped="" ref="0x759651d0"/>
        <function-ref name="getResistor" scoped="" ref="0x759652b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x75965390"/>
        <function-ref name="get" scoped="" ref="0x75965470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x75965550"/>
        <function-ref name="getRaw" scoped="" ref="0x75965630"/>
        <function-ref name="set" scoped="" ref="0x75965710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x759657f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x759658d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x75965a30"/>
        <function-ref name="clr" scoped="" ref="0x75965b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port66" ref="0x75960348" loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x75960348"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x75960520"/>
        <function-ref name="isInput" scoped="" ref="0x75960600"/>
        <function-ref name="setResistor" scoped="" ref="0x759606e0"/>
        <function-ref name="toggle" scoped="" ref="0x759607c0"/>
        <function-ref name="isOutput" scoped="" ref="0x759608a0"/>
        <function-ref name="getResistor" scoped="" ref="0x75960980"/>
        <function-ref name="makeOutput" scoped="" ref="0x75960a60"/>
        <function-ref name="get" scoped="" ref="0x75960b40"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x75960c20"/>
        <function-ref name="getRaw" scoped="" ref="0x75960d00"/>
        <function-ref name="set" scoped="" ref="0x75960de0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x75960ec0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7595f010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7595f170"/>
        <function-ref name="clr" scoped="" ref="0x7595f250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAdc12" ref="0x758f19f0" loc="46:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <component-ref qname="HplAdc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x758f19f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x758f1bc8"/>
        <function-ref name="getMCtl" scoped="" ref="0x758f1ca8"/>
        <function-ref name="resetIFGs" scoped="" ref="0x758f1d88"/>
        <function-ref name="isBusy" scoped="" ref="0x758f1e68"/>
        <function-ref name="conversionDone" scoped="" ref="0x758ee010"/>
        <function-ref name="getCtl1" scoped="" ref="0x758ee0f0"/>
        <function-ref name="setMCtl" scoped="" ref="0x758ee1d0"/>
        <function-ref name="startConversion" scoped="" ref="0x758ee2b0"/>
        <function-ref name="setCtl0" scoped="" ref="0x758ee390"/>
        <function-ref name="getMem" scoped="" ref="0x758ee470"/>
        <function-ref name="setIEFlags" scoped="" ref="0x758ee550"/>
        <function-ref name="getIEFlags" scoped="" ref="0x758ee630"/>
        <function-ref name="stopConversion" scoped="" ref="0x758ee710"/>
        <function-ref name="enableConversion" scoped="" ref="0x758ee870"/>
        <function-ref name="setCtl1" scoped="" ref="0x758ee950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x758cf1e8" loc="86:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x758cf1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x758cf3d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x758cf4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x758cfaa0" loc="89:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x758cfaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x758cfc88"/>
        <function-ref name="configure" scoped="" ref="0x758cfd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x758ef9f8" loc="85:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x758ef9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x758efbe0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x758efcc0"/>
        <function-ref name="request" scoped="" ref="0x758efda0"/>
        <function-ref name="granted" scoped="" ref="0x758efe80"/>
        <function-ref name="isOwner" scoped="" ref="0x758cf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x758cf5f0" loc="87:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x758cf5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x758cf7c8"/>
        <function-ref name="userId" scoped="" ref="0x758cf8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x74fe17a0" loc="44:../../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x74fe17a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x74fe1978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x74fe1ad8" loc="45:../../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoundRobinQueue" scoped="" ref="0x74fe1ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x74fe1cb0"/>
        <function-ref name="isEmpty" scoped="" ref="0x74fe1d90"/>
        <function-ref name="isEnqueued" scoped="" ref="0x74fe1e70"/>
        <function-ref name="dequeue" scoped="" ref="0x74fe0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x74fdf2d0" loc="52:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x74fdf2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x74fdf4b8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x74fdf598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x74fdfb98" loc="56:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x74fdfb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x74fdfd80"/>
        <function-ref name="configure" scoped="" ref="0x74fdfe60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x74fde010" loc="57:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x74fde010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x74fde1e8"/>
        <function-ref name="isEmpty" scoped="" ref="0x74fde2c8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x74fde3a8"/>
        <function-ref name="dequeue" scoped="" ref="0x74fde488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x74fe0b78" loc="51:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x74fe0b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x74fe0d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x74fe0e40"/>
        <function-ref name="request" scoped="" ref="0x74fe0f20"/>
        <function-ref name="granted" scoped="" ref="0x74fdf018"/>
        <function-ref name="isOwner" scoped="" ref="0x74fdf0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x74fdf6d8" loc="53:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x74fdf6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x74fdf8b0"/>
        <function-ref name="userId" scoped="" ref="0x74fdf990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x74fde608" loc="68:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x74fde608"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x74fde7e0"/>
        <function-ref name="runTask" scoped="" ref="0x74fde8c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7588c638" loc="55:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7588c638"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x759d6408"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x759d7ec8"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7588cc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7588d9a0" loc="54:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7588d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7588db78"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7588dc58"/>
        <function-ref name="request" scoped="" ref="0x7588dd38"/>
        <function-ref name="granted" scoped="" ref="0x7588de18"/>
        <function-ref name="isOwner" scoped="" ref="0x7588def8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x75890ea0" loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x75890ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7588d0c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7588d1a0"/>
        <function-ref name="request" scoped="" ref="0x7588d280"/>
        <function-ref name="granted" scoped="" ref="0x7588d360"/>
        <function-ref name="isOwner" scoped="" ref="0x7588d440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x758862d0" loc="43:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x758862d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x758864a8"/>
        <function-ref name="getMCtl" scoped="" ref="0x75886588"/>
        <function-ref name="resetIFGs" scoped="" ref="0x75886668"/>
        <function-ref name="isBusy" scoped="" ref="0x75886748"/>
        <function-ref name="conversionDone" scoped="" ref="0x75886828"/>
        <function-ref name="getCtl1" scoped="" ref="0x75886908"/>
        <function-ref name="setMCtl" scoped="" ref="0x758869e8"/>
        <function-ref name="startConversion" scoped="" ref="0x75886ac8"/>
        <function-ref name="setCtl0" scoped="" ref="0x75886ba8"/>
        <function-ref name="getMem" scoped="" ref="0x75886c88"/>
        <function-ref name="setIEFlags" scoped="" ref="0x75886d68"/>
        <function-ref name="getIEFlags" scoped="" ref="0x75886e48"/>
        <function-ref name="stopConversion" scoped="" ref="0x75886f28"/>
        <function-ref name="enableConversion" scoped="" ref="0x75885098"/>
        <function-ref name="setCtl1" scoped="" ref="0x75885178"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffTimer" ref="0x75883888" loc="45:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffTimer" scoped="" ref="0x75883888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75880388"/>
        <function-ref name="fired" scoped="" ref="0x75881628"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75881d30"/>
        <function-ref name="isOneShot" scoped="" ref="0x75881ad8"/>
        <function-ref name="getdt" scoped="" ref="0x75880838"/>
        <function-ref name="gett0" scoped="" ref="0x758805e0"/>
        <function-ref name="isRunning" scoped="" ref="0x75881880"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75883eb0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75880068"/>
        <function-ref name="startOneShot" scoped="" ref="0x75881150"/>
        <function-ref name="stop" scoped="" ref="0x758813d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_2_5V" ref="0x7588ac70" loc="39:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7588ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7588ae48"/>
        <function-ref name="stopDone" scoped="" ref="0x7588af28"/>
        <function-ref name="start" scoped="" ref="0x75886018"/>
        <function-ref name="stop" scoped="" ref="0x758860f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffSettleTimer" ref="0x75880c40" loc="46:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x75880c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7587e730"/>
        <function-ref name="fired" scoped="" ref="0x7587f9d0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7587e0f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7587fe80"/>
        <function-ref name="getdt" scoped="" ref="0x7587ebe0"/>
        <function-ref name="gett0" scoped="" ref="0x7587e988"/>
        <function-ref name="isRunning" scoped="" ref="0x7587fc28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7587f278"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7587e410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7587f4f8"/>
        <function-ref name="stop" scoped="" ref="0x7587f778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_1_5V" ref="0x7588a598" loc="38:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7588a598"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7588a770"/>
        <function-ref name="stopDone" scoped="" ref="0x7588a850"/>
        <function-ref name="start" scoped="" ref="0x7588a930"/>
        <function-ref name="stop" scoped="" ref="0x7588aa10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOnTimer" ref="0x75885468" loc="44:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOnTimer" scoped="" ref="0x75885468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75883010"/>
        <function-ref name="fired" scoped="" ref="0x75884268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75884970"/>
        <function-ref name="isOneShot" scoped="" ref="0x75884718"/>
        <function-ref name="getdt" scoped="" ref="0x758834c0"/>
        <function-ref name="gett0" scoped="" ref="0x75883268"/>
        <function-ref name="isRunning" scoped="" ref="0x758844c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75885a90"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75884c90"/>
        <function-ref name="startOneShot" scoped="" ref="0x75885d10"/>
        <function-ref name="stop" scoped="" ref="0x75884010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7584c378" loc="43:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7584c378"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x759d6408"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x759d7ec8"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7584c9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_2_5V" ref="0x7584d7b8" loc="42:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7584d7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7584d990"/>
        <function-ref name="stopDone" scoped="" ref="0x7584da70"/>
        <function-ref name="start" scoped="" ref="0x7584db50"/>
        <function-ref name="stop" scoped="" ref="0x7584dc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7584e8f0" loc="40:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7584e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7584eac8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7584eba8"/>
        <function-ref name="request" scoped="" ref="0x7584ec88"/>
        <function-ref name="granted" scoped="" ref="0x7584ed68"/>
        <function-ref name="isOwner" scoped="" ref="0x7584ee48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x75889df8" loc="38:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x75889df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7584e010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7584e0f0"/>
        <function-ref name="request" scoped="" ref="0x7584e1d0"/>
        <function-ref name="granted" scoped="" ref="0x7584e2b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7584e390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="switchOff" ref="0x7584b940" loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="switchOff" scoped="" ref="0x7584b940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7584bb18"/>
        <function-ref name="runTask" scoped="" ref="0x7584bbf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_1_5V" ref="0x7584d0e0" loc="41:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7584d0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7584d2b8"/>
        <function-ref name="stopDone" scoped="" ref="0x7584d398"/>
        <function-ref name="start" scoped="" ref="0x7584d478"/>
        <function-ref name="stop" scoped="" ref="0x7584d558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7584f1c8" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7584f1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7582ed58"/>
        <function-ref name="fired" scoped="" ref="0x7582e010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7582e718"/>
        <function-ref name="isOneShot" scoped="" ref="0x7582e4c0"/>
        <function-ref name="getdt" scoped="" ref="0x7582d268"/>
        <function-ref name="gett0" scoped="" ref="0x7582d010"/>
        <function-ref name="isRunning" scoped="" ref="0x7582e268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7584f7f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7582ea38"/>
        <function-ref name="startOneShot" scoped="" ref="0x7584fa70"/>
        <function-ref name="stop" scoped="" ref="0x7584fcf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7582c0c0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7582c0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7582bba8"/>
        <function-ref name="fired" scoped="" ref="0x7582ce40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7582b568"/>
        <function-ref name="isOneShot" scoped="" ref="0x7582b310"/>
        <function-ref name="getdt" scoped="" ref="0x75829068"/>
        <function-ref name="gett0" scoped="" ref="0x7582be00"/>
        <function-ref name="isRunning" scoped="" ref="0x7582b0b8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7582c6e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7582b888"/>
        <function-ref name="startOneShot" scoped="" ref="0x7582c968"/>
        <function-ref name="stop" scoped="" ref="0x7582cbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x75829eb0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x75829eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x758279a8"/>
        <function-ref name="fired" scoped="" ref="0x75828c40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75827368"/>
        <function-ref name="isOneShot" scoped="" ref="0x75827110"/>
        <function-ref name="getdt" scoped="" ref="0x75827e58"/>
        <function-ref name="gett0" scoped="" ref="0x75827c00"/>
        <function-ref name="isRunning" scoped="" ref="0x75828e98"/>
        <function-ref name="startPeriodic" scoped="" ref="0x758284e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75827688"/>
        <function-ref name="startOneShot" scoped="" ref="0x75828768"/>
        <function-ref name="stop" scoped="" ref="0x758289e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x74fec010" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x74fec010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x759d6408"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x759d7ec8"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x74fec658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x74fec978" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x74fec978"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x759d6408"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x759d7ec8"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x74feb010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x74ff8160" loc="49:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x74ff8160"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x759d6408"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x759d7ec8"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x74ff87a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x74ffba50" loc="48:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x74ffba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x74ffa7f8"/>
        <function-ref name="postBuffer" scoped="" ref="0x74ffa098"/>
        <function-ref name="read" scoped="" ref="0x74ffa578"/>
        <function-ref name="readDone" scoped="" ref="0x74ffad78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Adc12SingleChannel" ref="0x75808260" loc="23:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x75808260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x75808438"/>
        <function-ref name="configureSingle" scoped="" ref="0x75808518"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x758085f8"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x758086d8"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x758087b8"/>
        <function-ref name="configureMultiple" scoped="" ref="0x75808898"/>
        <function-ref name="singleDataReady" scoped="" ref="0x75808978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x758095d8" loc="22:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x758095d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x759d6408"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x759d7ec8"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x75809c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7580e970" loc="20:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7580e970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7580b770"/>
        <function-ref name="postBuffer" scoped="" ref="0x7580b010"/>
        <function-ref name="read" scoped="" ref="0x7580b4f0"/>
        <function-ref name="readDone" scoped="" ref="0x7580bcf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x75808e18" loc="24:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x75808e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x75807010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x758070f0"/>
        <function-ref name="request" scoped="" ref="0x758071d0"/>
        <function-ref name="granted" scoped="" ref="0x758072b0"/>
        <function-ref name="isOwner" scoped="" ref="0x75807390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="bufferDone" ref="0x757e74d0" loc="156:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="bufferDone" scoped="" ref="0x757e74d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x757e76a8"/>
        <function-ref name="runTask" scoped="" ref="0x757e7788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamDone" ref="0x757ef448" loc="119:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamDone" scoped="" ref="0x757ef448"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x757ef620"/>
        <function-ref name="runTask" scoped="" ref="0x757ef700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamFail" ref="0x757ecc88" loc="135:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamFail" scoped="" ref="0x757ecc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x757ece60"/>
        <function-ref name="runTask" scoped="" ref="0x757eb010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x75800b48" loc="54:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x75800b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x757fd068"/>
        <function-ref name="fired" scoped="" ref="0x757fe820"/>
        <function-ref name="startAt" scoped="" ref="0x757fed10"/>
        <function-ref name="isRunning" scoped="" ref="0x757fea98"/>
        <function-ref name="getAlarm" scoped="" ref="0x757fd2e0"/>
        <function-ref name="start" scoped="" ref="0x757fe308"/>
        <function-ref name="stop" scoped="" ref="0x757fe5a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75804010" loc="48:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75804010"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x76c39160"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x76c39160"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x758041e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x75800100" loc="53:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x75800100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x759d6408"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x759d7ec8"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x75800748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x75801280" loc="52:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x75801280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x75801458"/>
        <function-ref name="configureSingle" scoped="" ref="0x75801538"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x75801618"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x758016f8"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x758017d8"/>
        <function-ref name="configureMultiple" scoped="" ref="0x758018b8"/>
        <function-ref name="singleDataReady" scoped="" ref="0x75801998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x75804780" loc="49:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x75804780"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x75802518"/>
        <function-ref name="postBuffer" scoped="" ref="0x75804da8"/>
        <function-ref name="read" scoped="" ref="0x75802298"/>
        <function-ref name="readDone" scoped="" ref="0x75802a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x757c4690" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x757c4690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x757c3b50"/>
        <function-ref name="fired" scoped="" ref="0x757c3320"/>
        <function-ref name="startAt" scoped="" ref="0x757c3810"/>
        <function-ref name="isRunning" scoped="" ref="0x757c3598"/>
        <function-ref name="getAlarm" scoped="" ref="0x757c3dc8"/>
        <function-ref name="start" scoped="" ref="0x757c4de0"/>
        <function-ref name="stop" scoped="" ref="0x757c30a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x757c4238" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x757c4238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x757c4410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x74fb7530" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x74fb7530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x74fb69e0"/>
        <function-ref name="fired" scoped="" ref="0x74fb61b0"/>
        <function-ref name="startAt" scoped="" ref="0x74fb66a0"/>
        <function-ref name="isRunning" scoped="" ref="0x74fb6428"/>
        <function-ref name="getAlarm" scoped="" ref="0x74fb6c58"/>
        <function-ref name="start" scoped="" ref="0x74fb7c80"/>
        <function-ref name="stop" scoped="" ref="0x74fb7f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x74fb70d8" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x74fb70d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x74fb72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x74faa4f0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x74faa4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x74faa6c8"/>
        <function-ref name="setEvent" scoped="" ref="0x74faa7a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x74faa888"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x74faa968"/>
        <function-ref name="fired" scoped="" ref="0x74faaa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x74face48" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x74face48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x74fab050"/>
        <function-ref name="setClockSource" scoped="" ref="0x74fab130"/>
        <function-ref name="enableEvents" scoped="" ref="0x74fab210"/>
        <function-ref name="get" scoped="" ref="0x74fab2f0"/>
        <function-ref name="disableEvents" scoped="" ref="0x74fab3d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x74fab4b0"/>
        <function-ref name="getMode" scoped="" ref="0x74fab590"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x74fab670"/>
        <function-ref name="overflow" scoped="" ref="0x74fab750"/>
        <function-ref name="setMode" scoped="" ref="0x74fab830"/>
        <function-ref name="setInputDivider" scoped="" ref="0x74fab910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x74faba70" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x74faba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x74fabc48"/>
        <function-ref name="getControl" scoped="" ref="0x74fabd28"/>
        <function-ref name="enableEvents" scoped="" ref="0x74fabe08"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x74fabee8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x74faa010"/>
        <function-ref name="disableEvents" scoped="" ref="0x74faa0f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x74faa1d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x74faa2b0"/>
        <function-ref name="setControl" scoped="" ref="0x74faa390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x74fa5e48" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x74fa5e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x74fa4050"/>
        <function-ref name="setEvent" scoped="" ref="0x74fa4130"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x74fa4210"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x74fa42f0"/>
        <function-ref name="fired" scoped="" ref="0x74fa43d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x74fa67f8" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x74fa67f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x74fa69d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x74fa6ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x74fa6b90"/>
        <function-ref name="get" scoped="" ref="0x74fa6c70"/>
        <function-ref name="disableEvents" scoped="" ref="0x74fa6d50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x74fa6e30"/>
        <function-ref name="getMode" scoped="" ref="0x74fa6f10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x74fa5010"/>
        <function-ref name="overflow" scoped="" ref="0x74fa50f0"/>
        <function-ref name="setMode" scoped="" ref="0x74fa51d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x74fa52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x74fa9e20" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x74fa9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x74fa6350"/>
        <function-ref name="fired" scoped="" ref="0x74fa8aa8"/>
        <function-ref name="startAt" scoped="" ref="0x74fa6010"/>
        <function-ref name="isRunning" scoped="" ref="0x74fa8d20"/>
        <function-ref name="getAlarm" scoped="" ref="0x74fa65c8"/>
        <function-ref name="start" scoped="" ref="0x74fa8590"/>
        <function-ref name="stop" scoped="" ref="0x74fa8830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x74fa99a8" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x74fa99a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x74fa9b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x74fa5410" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x74fa5410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x74fa55e8"/>
        <function-ref name="getControl" scoped="" ref="0x74fa56c8"/>
        <function-ref name="enableEvents" scoped="" ref="0x74fa57a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x74fa5888"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x74fa5968"/>
        <function-ref name="disableEvents" scoped="" ref="0x74fa5a48"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x74fa5b28"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x74fa5c08"/>
        <function-ref name="setControl" scoped="" ref="0x74fa5ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x74fb3010" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x74fb3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x74fb24e0"/>
        <function-ref name="fired" scoped="" ref="0x74fb3c78"/>
        <function-ref name="startAt" scoped="" ref="0x74fb21a0"/>
        <function-ref name="isRunning" scoped="" ref="0x74fb3ef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x74fb2758"/>
        <function-ref name="start" scoped="" ref="0x74fb3760"/>
        <function-ref name="stop" scoped="" ref="0x74fb3a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x74fb1d00" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x74fb1d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x769308c0"/>
            <typename><typedef-ref name="T32khz" ref="0x76930aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x74fae1e8"/>
        <function-ref name="fired" scoped="" ref="0x74fb0990"/>
        <function-ref name="startAt" scoped="" ref="0x74fb0e80"/>
        <function-ref name="isRunning" scoped="" ref="0x74fb0c08"/>
        <function-ref name="getAlarm" scoped="" ref="0x74fae460"/>
        <function-ref name="start" scoped="" ref="0x74fb0478"/>
        <function-ref name="stop" scoped="" ref="0x74fb0718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x74fb2aa8" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x74fb2aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x74fb1228"/>
        <function-ref name="clearOverflow" scoped="" ref="0x74fb1718"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x74fb14a0"/>
        <function-ref name="overflow" scoped="" ref="0x74fb1990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x757a77d8" loc="26:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Service" scoped="" ref="0x757a77d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x757a55b0"/>
        <function-ref name="postBuffer" scoped="" ref="0x757a7e10"/>
        <function-ref name="read" scoped="" ref="0x757a5320"/>
        <function-ref name="readDone" scoped="" ref="0x757a5b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x757c0010" loc="24:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x757c0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x757c0dc8"/>
        <function-ref name="postBuffer" scoped="" ref="0x757c0648"/>
        <function-ref name="read" scoped="" ref="0x757c0b38"/>
        <function-ref name="readDone" scoped="" ref="0x757a7378"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x757a5ec0" loc="27:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x757a5ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x757a40c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x757a41a0"/>
        <function-ref name="request" scoped="" ref="0x757a4280"/>
        <function-ref name="granted" scoped="" ref="0x757a4360"/>
        <function-ref name="isOwner" scoped="" ref="0x757a4440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x74fbff00" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x74fbff00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x74fbe0f0"/>
        <function-ref name="configure" scoped="" ref="0x74fbe1d0"/>
        <function-ref name="dataReady" scoped="" ref="0x74fbe2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x74fbf6a8" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x74fbf6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x74fbf880"/>
        <function-ref name="configureSingle" scoped="" ref="0x74fbf960"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x74fbfa40"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x74fbfb20"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x74fbfc00"/>
        <function-ref name="configureMultiple" scoped="" ref="0x74fbfce0"/>
        <function-ref name="singleDataReady" scoped="" ref="0x74fbfdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x74fbe3f0" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x74fbe3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x74fbe5c8"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x74fbe6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x74fbe8d8" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x74fbe8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x759d6408"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x759d7ec8"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x74fbef20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x74fbf010" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x74fbf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x74fbf1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x74fbf2c8"/>
        <function-ref name="request" scoped="" ref="0x74fbf3a8"/>
        <function-ref name="granted" scoped="" ref="0x74fbf488"/>
        <function-ref name="isOwner" scoped="" ref="0x74fbf568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x74f817d8" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x74f817d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x759d6408"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x759d7ec8"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x74f81e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x74f7f160" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x74f7f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x759d6408"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x759d7ec8"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x74f7f7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0x7579a888" loc="35:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureP.nc">
      <component-ref qname="Msp430InternalTemperatureP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7579a888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x759d6408"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x759d7ec8"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7579aed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x756c4ba8" loc="49:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="DemoAppC.TempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0x756c4ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x756c4d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x756c4010" loc="48:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="DemoAppC.TempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x756c4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x756c4638"/>
        <function-ref name="readDone" scoped="" ref="0x756c4890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x756c6c10" loc="47:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="DemoAppC.TempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0x756c6c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x756c6de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x756c6078" loc="46:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="DemoAppC.TempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x756c6078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x756c66a0"/>
        <function-ref name="readDone" scoped="" ref="0x756c68f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0x74f77a20" loc="54:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Hum" scoped="" ref="0x74f77a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x74f77bf8"/>
        <function-ref name="readStatusReg" scoped="" ref="0x74f77cd8"/>
        <function-ref name="measureHumidity" scoped="" ref="0x74f77db8"/>
        <function-ref name="measureTemperature" scoped="" ref="0x74f77e98"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x74f75010"/>
        <function-ref name="reset" scoped="" ref="0x74f750f0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x74f751d0"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x74f752b0"/>
        <function-ref name="resetDone" scoped="" ref="0x74f75390"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x74f75470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x74f79168" loc="48:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0x74f79168"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x74f79340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x74f79550" loc="49:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x74f79550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x74f79b78"/>
        <function-ref name="readDone" scoped="" ref="0x74f79dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x74f7a1d8" loc="46:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0x74f7a1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x74f7a3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x74f78108" loc="51:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TempResource" scoped="" ref="0x74f78108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x74f782e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x74f783c0"/>
        <function-ref name="request" scoped="" ref="0x74f784a0"/>
        <function-ref name="granted" scoped="" ref="0x74f78580"/>
        <function-ref name="isOwner" scoped="" ref="0x74f78660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0x74f78eb8" loc="53:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Temp" scoped="" ref="0x74f78eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x74f770c0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x74f771a0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x74f77280"/>
        <function-ref name="measureTemperature" scoped="" ref="0x74f77360"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x74f77440"/>
        <function-ref name="reset" scoped="" ref="0x74f77520"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x74f77600"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x74f776e0"/>
        <function-ref name="resetDone" scoped="" ref="0x74f777c0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x74f778a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x74f787e0" loc="52:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumResource" scoped="" ref="0x74f787e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x74f789b8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x74f78a98"/>
        <function-ref name="request" scoped="" ref="0x74f78b78"/>
        <function-ref name="granted" scoped="" ref="0x74f78c58"/>
        <function-ref name="isOwner" scoped="" ref="0x74f78d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x74f7a5c0" loc="47:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x74f7a5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x74f7abe8"/>
        <function-ref name="readDone" scoped="" ref="0x74f7ae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x757626c8" loc="45:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0x757626c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x757628a0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x75762980"/>
        <function-ref name="measureHumidity" scoped="" ref="0x75762a60"/>
        <function-ref name="measureTemperature" scoped="" ref="0x75762b40"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x75762c20"/>
        <function-ref name="reset" scoped="" ref="0x75762d00"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x75762de0"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x75762ec0"/>
        <function-ref name="resetDone" scoped="" ref="0x75761010"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x757610f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x75765bf0" loc="44:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x75765bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x75765dc8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x75765ea8"/>
        <function-ref name="request" scoped="" ref="0x75762010"/>
        <function-ref name="granted" scoped="" ref="0x757620f0"/>
        <function-ref name="isOwner" scoped="" ref="0x757621d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0x75719358" loc="58:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0x75719358"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x75719530"/>
        <function-ref name="disable" scoped="" ref="0x75719610"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x757196f0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x757197d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0x75715cc8" loc="102:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readSensor" scoped="" ref="0x75715cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75715ea0"/>
        <function-ref name="runTask" scoped="" ref="0x75714010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalStatusDone" ref="0x75715890" loc="103:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalStatusDone" scoped="" ref="0x75715890"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75715a68"/>
        <function-ref name="runTask" scoped="" ref="0x75715b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0x7571a9c8" loc="57:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CLOCK" scoped="" ref="0x7571a9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7571aba0"/>
        <function-ref name="isInput" scoped="" ref="0x7571ac80"/>
        <function-ref name="toggle" scoped="" ref="0x7571ad60"/>
        <function-ref name="isOutput" scoped="" ref="0x7571ae40"/>
        <function-ref name="get" scoped="" ref="0x7571af20"/>
        <function-ref name="makeOutput" scoped="" ref="0x75719018"/>
        <function-ref name="set" scoped="" ref="0x757190f8"/>
        <function-ref name="clr" scoped="" ref="0x757191d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7571b4d8" loc="54:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0x7571b4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7571b6c0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7571b7a0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7571b880"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7571b960"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7571ba40"/>
        <function-ref name="reset" scoped="" ref="0x7571bb20"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7571bc00"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7571bce0"/>
        <function-ref name="resetDone" scoped="" ref="0x7571bdc0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7571bea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7571a050" loc="56:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7571a050"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7571a228"/>
        <function-ref name="isInput" scoped="" ref="0x7571a308"/>
        <function-ref name="toggle" scoped="" ref="0x7571a3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7571a4c8"/>
        <function-ref name="get" scoped="" ref="0x7571a5a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7571a688"/>
        <function-ref name="set" scoped="" ref="0x7571a768"/>
        <function-ref name="clr" scoped="" ref="0x7571a848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x75717ba8" loc="62:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x75717ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x75717d80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x75717e60"/>
        <function-ref name="led1On" scoped="" ref="0x75715010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x757150f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x757151d0"/>
        <function-ref name="get" scoped="" ref="0x757152b0"/>
        <function-ref name="led1Off" scoped="" ref="0x75715390"/>
        <function-ref name="led2On" scoped="" ref="0x75715710"/>
        <function-ref name="set" scoped="" ref="0x75715550"/>
        <function-ref name="led2Off" scoped="" ref="0x75715470"/>
        <function-ref name="led0On" scoped="" ref="0x75715630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x757199c0" loc="60:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x757199c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x757174c8"/>
        <function-ref name="fired" scoped="" ref="0x75718768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75718e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x75718c18"/>
        <function-ref name="getdt" scoped="" ref="0x75717978"/>
        <function-ref name="gett0" scoped="" ref="0x75717720"/>
        <function-ref name="isRunning" scoped="" ref="0x757189c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75718010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x757171a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x75718290"/>
        <function-ref name="stop" scoped="" ref="0x75718510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0x7570fc98" loc="47:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0x7570fc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7570fe70"/>
        <function-ref name="disable" scoped="" ref="0x7570e010"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7570e0f0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7570e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x7570f210" loc="46:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0x7570f210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7570f3e8"/>
        <function-ref name="isInput" scoped="" ref="0x7570f4c8"/>
        <function-ref name="toggle" scoped="" ref="0x7570f5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7570f688"/>
        <function-ref name="get" scoped="" ref="0x7570f768"/>
        <function-ref name="makeOutput" scoped="" ref="0x7570f848"/>
        <function-ref name="set" scoped="" ref="0x7570f928"/>
        <function-ref name="clr" scoped="" ref="0x7570fa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0x75710778" loc="45:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x75710778"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x75710950"/>
        <function-ref name="isInput" scoped="" ref="0x75710a30"/>
        <function-ref name="toggle" scoped="" ref="0x75710b10"/>
        <function-ref name="isOutput" scoped="" ref="0x75710bf0"/>
        <function-ref name="get" scoped="" ref="0x75710cd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x75710db0"/>
        <function-ref name="set" scoped="" ref="0x75710e90"/>
        <function-ref name="clr" scoped="" ref="0x7570f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x75710010" loc="44:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x75710010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x757101e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x757102c8"/>
        <function-ref name="request" scoped="" ref="0x757103a8"/>
        <function-ref name="granted" scoped="" ref="0x75710488"/>
        <function-ref name="isOwner" scoped="" ref="0x75710568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7570d5f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7570d5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7570d7c8"/>
        <function-ref name="isInput" scoped="" ref="0x7570d8a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7570d988"/>
        <function-ref name="toggle" scoped="" ref="0x7570da68"/>
        <function-ref name="isOutput" scoped="" ref="0x7570db48"/>
        <function-ref name="getResistor" scoped="" ref="0x7570dc28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7570dd08"/>
        <function-ref name="get" scoped="" ref="0x7570dde8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7570dec8"/>
        <function-ref name="getRaw" scoped="" ref="0x7570c010"/>
        <function-ref name="set" scoped="" ref="0x7570c0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7570c1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7570c2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7570c410"/>
        <function-ref name="clr" scoped="" ref="0x7570c4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7570ec50" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7570ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7570ee28"/>
        <function-ref name="isInput" scoped="" ref="0x7570ef08"/>
        <function-ref name="toggle" scoped="" ref="0x7570d010"/>
        <function-ref name="isOutput" scoped="" ref="0x7570d0f0"/>
        <function-ref name="get" scoped="" ref="0x7570d1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7570d2b0"/>
        <function-ref name="set" scoped="" ref="0x7570d390"/>
        <function-ref name="clr" scoped="" ref="0x7570d470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7570bdb0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7570bdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7570a010"/>
        <function-ref name="isInput" scoped="" ref="0x7570a0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7570a1d0"/>
        <function-ref name="toggle" scoped="" ref="0x7570a2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7570a390"/>
        <function-ref name="getResistor" scoped="" ref="0x7570a470"/>
        <function-ref name="makeOutput" scoped="" ref="0x7570a550"/>
        <function-ref name="get" scoped="" ref="0x7570a630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7570a710"/>
        <function-ref name="getRaw" scoped="" ref="0x7570a7f0"/>
        <function-ref name="set" scoped="" ref="0x7570a8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7570a9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7570aa90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7570abf0"/>
        <function-ref name="clr" scoped="" ref="0x7570acd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7570b438" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7570b438"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7570b610"/>
        <function-ref name="isInput" scoped="" ref="0x7570b6f0"/>
        <function-ref name="toggle" scoped="" ref="0x7570b7d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7570b8b0"/>
        <function-ref name="get" scoped="" ref="0x7570b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7570ba70"/>
        <function-ref name="set" scoped="" ref="0x7570bb50"/>
        <function-ref name="clr" scoped="" ref="0x7570bc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x757086d0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x757086d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x757088a8"/>
        <function-ref name="isInput" scoped="" ref="0x75708988"/>
        <function-ref name="setResistor" scoped="" ref="0x75708a68"/>
        <function-ref name="toggle" scoped="" ref="0x75708b48"/>
        <function-ref name="isOutput" scoped="" ref="0x75708c28"/>
        <function-ref name="getResistor" scoped="" ref="0x75708d08"/>
        <function-ref name="makeOutput" scoped="" ref="0x75708de8"/>
        <function-ref name="get" scoped="" ref="0x75708ec8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x75707010"/>
        <function-ref name="getRaw" scoped="" ref="0x757070f0"/>
        <function-ref name="set" scoped="" ref="0x757071d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x757072b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x75707390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x757074f0"/>
        <function-ref name="clr" scoped="" ref="0x757075d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x75709cc0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x75709cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x75709e98"/>
        <function-ref name="isInput" scoped="" ref="0x75708010"/>
        <function-ref name="toggle" scoped="" ref="0x757080f0"/>
        <function-ref name="isOutput" scoped="" ref="0x757081d0"/>
        <function-ref name="get" scoped="" ref="0x757082b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x75708390"/>
        <function-ref name="set" scoped="" ref="0x75708470"/>
        <function-ref name="clr" scoped="" ref="0x75708550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x75703010" loc="43:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x75703010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x757031e8"/>
        <function-ref name="stopDone" scoped="" ref="0x757032c8"/>
        <function-ref name="start" scoped="" ref="0x757033a8"/>
        <function-ref name="stop" scoped="" ref="0x75703488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x756fec50" loc="50:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0x756fec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x756fee28"/>
        <function-ref name="runTask" scoped="" ref="0x756fef08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x756ffde0" loc="47:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0x756ffde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x756fe010"/>
        <function-ref name="isInput" scoped="" ref="0x756fe0f0"/>
        <function-ref name="toggle" scoped="" ref="0x756fe1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x756fe2b0"/>
        <function-ref name="get" scoped="" ref="0x756fe390"/>
        <function-ref name="makeOutput" scoped="" ref="0x756fe470"/>
        <function-ref name="set" scoped="" ref="0x756fe550"/>
        <function-ref name="clr" scoped="" ref="0x756fe630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PWR" ref="0x757009c8" loc="45:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PWR" scoped="" ref="0x757009c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x75700ba0"/>
        <function-ref name="isInput" scoped="" ref="0x75700c80"/>
        <function-ref name="toggle" scoped="" ref="0x75700d60"/>
        <function-ref name="isOutput" scoped="" ref="0x75700e40"/>
        <function-ref name="get" scoped="" ref="0x75700f20"/>
        <function-ref name="makeOutput" scoped="" ref="0x756ff018"/>
        <function-ref name="set" scoped="" ref="0x756ff0f8"/>
        <function-ref name="clr" scoped="" ref="0x756ff1d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x756ff3e8" loc="46:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x756ff3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x756ff5c0"/>
        <function-ref name="isInput" scoped="" ref="0x756ff6a0"/>
        <function-ref name="toggle" scoped="" ref="0x756ff780"/>
        <function-ref name="isOutput" scoped="" ref="0x756ff860"/>
        <function-ref name="get" scoped="" ref="0x756ff940"/>
        <function-ref name="makeOutput" scoped="" ref="0x756ffa20"/>
        <function-ref name="set" scoped="" ref="0x756ffb00"/>
        <function-ref name="clr" scoped="" ref="0x756ffbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x757036f0" loc="44:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x757036f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75700248"/>
        <function-ref name="fired" scoped="" ref="0x757014e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75701bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x75701998"/>
        <function-ref name="getdt" scoped="" ref="0x757006f8"/>
        <function-ref name="gett0" scoped="" ref="0x757004a0"/>
        <function-ref name="isRunning" scoped="" ref="0x75701740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75703d18"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75701f10"/>
        <function-ref name="startOneShot" scoped="" ref="0x75701010"/>
        <function-ref name="stop" scoped="" ref="0x75701290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x75704c70" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x75704c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x756f6790"/>
        <function-ref name="fired" scoped="" ref="0x756f7a20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x756f6150"/>
        <function-ref name="isOneShot" scoped="" ref="0x756f7ed0"/>
        <function-ref name="getdt" scoped="" ref="0x756f6c40"/>
        <function-ref name="gett0" scoped="" ref="0x756f69e8"/>
        <function-ref name="isRunning" scoped="" ref="0x756f7c78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x756f72c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x756f6470"/>
        <function-ref name="startOneShot" scoped="" ref="0x756f7548"/>
        <function-ref name="stop" scoped="" ref="0x756f77c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x756f4530" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x756f4530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x756f4708"/>
        <function-ref name="fired" scoped="" ref="0x756f47e8"/>
        <function-ref name="disable" scoped="" ref="0x756f48c8"/>
        <function-ref name="edge" scoped="" ref="0x756f49a8"/>
        <function-ref name="enable" scoped="" ref="0x756f4a88"/>
        <function-ref name="getValue" scoped="" ref="0x756f4b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x756f5f28" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x756f5f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x756f4110"/>
        <function-ref name="disable" scoped="" ref="0x756f41f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x756f42d0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x756f43b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x756f2a28" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x756f2a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x756f2c10"/>
        <function-ref name="immediateRequested" scoped="" ref="0x756f2cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x756f09c0" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x756f09c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x756f0ba8"/>
        <function-ref name="configure" scoped="" ref="0x756f0c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x756f2e30" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x756f2e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x756f0050"/>
        <function-ref name="requested" scoped="" ref="0x756f0130"/>
        <function-ref name="granted" scoped="" ref="0x756f0210"/>
        <function-ref name="isOwner" scoped="" ref="0x756f02f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x756f03d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x756f22e8" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x756f22e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x756f24d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x756f25b0"/>
        <function-ref name="request" scoped="" ref="0x756f2690"/>
        <function-ref name="granted" scoped="" ref="0x756f2770"/>
        <function-ref name="isOwner" scoped="" ref="0x756f2850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x756f0510" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x756f0510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x756f06e8"/>
        <function-ref name="userId" scoped="" ref="0x756f07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x74f2c878" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x74f2c878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x74f2ca50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x74f2cbb0" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x74f2cbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x74f2cd88"/>
        <function-ref name="isEmpty" scoped="" ref="0x74f2ce68"/>
        <function-ref name="isEnqueued" scoped="" ref="0x74f29010"/>
        <function-ref name="dequeue" scoped="" ref="0x74f290f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x74f28568" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x74f28568"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x74f28750"/>
        <function-ref name="immediateRequested" scoped="" ref="0x74f28830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x74f274f0" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x74f274f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x74f276d8"/>
        <function-ref name="configure" scoped="" ref="0x74f277b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x74f27918" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x74f27918"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x74f27af0"/>
        <function-ref name="isEmpty" scoped="" ref="0x74f27bd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x74f27cb0"/>
        <function-ref name="dequeue" scoped="" ref="0x74f27d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x74f28970" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x74f28970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x74f28b48"/>
        <function-ref name="requested" scoped="" ref="0x74f28c28"/>
        <function-ref name="granted" scoped="" ref="0x74f28d08"/>
        <function-ref name="isOwner" scoped="" ref="0x74f28de8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x74f28ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x74f27ed0" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x74f27ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x74f260c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x74f261a0"/>
        <function-ref name="led1On" scoped="" ref="0x74f26280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x74f26360"/>
        <function-ref name="led2Toggle" scoped="" ref="0x74f26440"/>
        <function-ref name="get" scoped="" ref="0x74f26520"/>
        <function-ref name="led1Off" scoped="" ref="0x74f26600"/>
        <function-ref name="led0On" scoped="" ref="0x74f26980"/>
        <function-ref name="set" scoped="" ref="0x74f267c0"/>
        <function-ref name="led2On" scoped="" ref="0x74f266e0"/>
        <function-ref name="led2Off" scoped="" ref="0x74f268a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x74f29dc8" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x74f29dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x74f28010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x74f280f0"/>
        <function-ref name="request" scoped="" ref="0x74f281d0"/>
        <function-ref name="granted" scoped="" ref="0x74f282b0"/>
        <function-ref name="isOwner" scoped="" ref="0x74f28390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x74f27030" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x74f27030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x74f27208"/>
        <function-ref name="userId" scoped="" ref="0x74f272e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x74f26b00" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x74f26b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x74f26cd8"/>
        <function-ref name="runTask" scoped="" ref="0x74f26db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x756eeca0" loc="69:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x756eeca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x756eee78"/>
        <function-ref name="stopDone" scoped="" ref="0x756ed010"/>
        <function-ref name="start" scoped="" ref="0x756ed0f0"/>
        <function-ref name="stop" scoped="" ref="0x756ed1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x756ed310" loc="71:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x756ed310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x756ed4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x756ed628" loc="72:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x756ed628"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x756ed800"/>
        <function-ref name="requested" scoped="" ref="0x756ed8e0"/>
        <function-ref name="granted" scoped="" ref="0x756ed9c0"/>
        <function-ref name="isOwner" scoped="" ref="0x756edaa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x756edb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x756edcc0" loc="73:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x756edcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x756ede98"/>
        <function-ref name="userId" scoped="" ref="0x756d3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x74f0b900" loc="61:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x74f0b900"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x74f0bad8"/>
        <function-ref name="stopDone" scoped="" ref="0x74f0bbb8"/>
        <function-ref name="start" scoped="" ref="0x74f0bc98"/>
        <function-ref name="stop" scoped="" ref="0x74f0bd78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x74f0beb8" loc="63:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x74f0beb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x74f0a0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x74f0acd0" loc="78:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0x74f0acd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x74f0aea8"/>
        <function-ref name="runTask" scoped="" ref="0x74f09010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x74f0a200" loc="64:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x74f0a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x74f0a3d8"/>
        <function-ref name="requested" scoped="" ref="0x74f0a4b8"/>
        <function-ref name="granted" scoped="" ref="0x74f0a598"/>
        <function-ref name="isOwner" scoped="" ref="0x74f0a678"/>
        <function-ref name="immediateRequested" scoped="" ref="0x74f0a758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x74f09190" loc="73:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startTask" scoped="" ref="0x74f09190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x74f09368"/>
        <function-ref name="runTask" scoped="" ref="0x74f09448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x74f0b508" loc="60:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x74f0b508"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x74f0b6e0"/>
        <function-ref name="stop" scoped="" ref="0x74f0b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x74f0a898" loc="65:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x74f0a898"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x74f0aa70"/>
        <function-ref name="userId" scoped="" ref="0x74f0ab50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x756cedc0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x756cedc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x756cb8e0"/>
        <function-ref name="fired" scoped="" ref="0x756cdb60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x756cb2a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x756cb048"/>
        <function-ref name="getdt" scoped="" ref="0x756cbd90"/>
        <function-ref name="gett0" scoped="" ref="0x756cbb38"/>
        <function-ref name="isRunning" scoped="" ref="0x756cddb8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x756cd408"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x756cb5c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x756cd688"/>
        <function-ref name="stop" scoped="" ref="0x756cd908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x756c3d80" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="DemoAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x756c3d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76930468"/>
            <typename><typedef-ref name="TMilli" ref="0x76930648"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x756c18a8"/>
        <function-ref name="fired" scoped="" ref="0x756c2b18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x756c1268"/>
        <function-ref name="isOneShot" scoped="" ref="0x756c1010"/>
        <function-ref name="getdt" scoped="" ref="0x756c1d58"/>
        <function-ref name="gett0" scoped="" ref="0x756c1b00"/>
        <function-ref name="isRunning" scoped="" ref="0x756c2d70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x756c23c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x756c1588"/>
        <function-ref name="startOneShot" scoped="" ref="0x756c2640"/>
        <function-ref name="stop" scoped="" ref="0x756c28c0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="CollectionPacket" loc="42:/home/pi/tinyos-main/tos/lib/net/CollectionPacket.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x76941368" loc="50:/home/pi/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x76941010" loc="50:/home/pi/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x76941208" loc="50:/home/pi/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x76945788" loc="44:/home/pi/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x76945420" loc="44:/home/pi/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x76945628" loc="44:/home/pi/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x76942510" loc="47:/home/pi/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x76994500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x76942188" loc="47:/home/pi/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x769423b0" loc="47:/home/pi/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x76994500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x76945020" loc="43:/home/pi/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x76944eb0" loc="43:/home/pi/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x76942b00" loc="49:/home/pi/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x769429a8" loc="49:/home/pi/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x76945d60" loc="46:/home/pi/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x76994500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x76945c08" loc="46:/home/pi/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7698fad8" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x76983cb0" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x76983b58" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x769486a0" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x76948548" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x76946648" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x769462e8" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x769464c8" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x76949cf0" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x76949350" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x76949010" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x769491f0" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7698c990" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7698ce58" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x76980168" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x76980010" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x76980eb0" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x76980d58" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x769858d0" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x76980678" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <function command="" provided="0" name="send" ref="0x7694f978" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7694f638" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7694f818" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7694b4a8" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7694b148" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7694b328" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7694cbb8" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7694d5e0" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7694d488" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7694c290" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7694df28" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7694c130" loc="100:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpInfo" loc="44:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
      <function command="" provided="0" name="getNeighborLinkQuality" ref="0x7693c450" loc="96:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7693c2f8" loc="96:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="recomputeRoutes" ref="0x7693ea78" loc="83:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="80:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short> &#10; Tell the routing engine it might want to recompute its routes.</short>
          <long> &#10; Tell the routing engine it might want to recompute its routes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="numNeighbors" ref="0x7693dde8" loc="95:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerRouteUpdate" ref="0x7693e010" loc="71:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="66:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.</short>
          <long>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x7693fa18" loc="64:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="55:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the ETX for the current path to the root through the current&#10; parent.</short>
          <long>&#10; Get the ETX for the current path to the root through the current&#10; parent. Sets etx argument to ETX*10.  The pointer is allocated by&#10; the caller.  If the parent is invalid, return FAIL (no info).&#10; The caller MUST NOT use the value in parent if the return is not&#10; SUCCESS. Calling getEtx at the root will set the etx argument to&#10; 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="etx" ref="0x7693f8c0" loc="64:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerImmediateRouteUpdate" ref="0x7693e560" loc="78:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="73:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.</short>
          <long>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNeighborCongested" ref="0x7693d378" loc="88:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="85:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Informs the routing engine that a neighbor is congested&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7693d010" loc="88:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </variable>
          <variable name="congested" ref="0x7693d218" loc="88:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborAddr" ref="0x7693a010" loc="98:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7693ce90" loc="98:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x7693f390" loc="53:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="46:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the parent of the node in the tree.</short>
          <long>&#10; Get the parent of the node in the tree.  The pointer is allocated&#10; by the caller.  If the parent is invalid, return FAIL.  The&#10; caller MUST NOT use the value in parent if the return is not&#10; SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent" ref="0x7693f238" loc="53:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborRouteQuality" ref="0x7693ca40" loc="97:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7693c8e8" loc="97:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isNeighborCongested" ref="0x7693d980" loc="93:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="90:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10;  Returns the currently known state about a neighbor's congestion state&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7693d828" loc="93:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationValue" loc="44:/home/pi/tinyos-main/tos/lib/net/DisseminationValue.nc">
      <documentation loc="33:/home/pi/tinyos-main/tos/lib/net/DisseminationValue.nc">
        <short>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.</short>
        <long>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10;&#10; @date   Jan 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x769880d8" loc="44:/home/pi/tinyos-main/tos/lib/net/DisseminationValue.nc">
          <interfacedef-ref qname="DisseminationValue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x769880d8"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="changed" ref="0x76987090" loc="69:/home/pi/tinyos-main/tos/lib/net/DisseminationValue.nc">
        <documentation loc="66:/home/pi/tinyos-main/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Signalled whenever variable may have changed.</short>
          <long>&#10; Signalled whenever variable may have changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x76988580" loc="55:/home/pi/tinyos-main/tos/lib/net/DisseminationValue.nc">
        <documentation loc="46:/home/pi/tinyos-main/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Obtain a pointer to the variable.</short>
          <long>&#10; Obtain a pointer to the variable. The provider of this&#10; interface only will change the memory the pointer references&#10; in tasks. Therefore the memory region does not change during&#10; the execution of any other task. A user of this interface&#10; must not in any circumstance write to this memory location.&#10;&#10; @return A const pointer to the variable.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x769880d8"/></type-var>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x76988bc0" loc="64:/home/pi/tinyos-main/tos/lib/net/DisseminationValue.nc">
        <documentation loc="57:/home/pi/tinyos-main/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Set the variable to a new value.</short>
          <long>&#10; Set the variable to a new value. The provider of this interface&#10; will copy the value from the pointer. NOTE: This command does&#10; not cause the new value to begin disseminating. It is intended to&#10; be used for setting default values.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x769880d8"/></type-var>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x76988a68" loc="64:/home/pi/tinyos-main/tos/lib/net/DisseminationValue.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x769880d8"/></type-var>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x76c30988" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x76c30ea0" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpCongestion" loc="1:/home/pi/tinyos-main/tos/lib/net/ctp/CtpCongestion.nc">
      <function command="" provided="0" name="isCongested" ref="0x76939330" loc="7:/home/pi/tinyos-main/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClientCongested" ref="0x769398e0" loc="14:/home/pi/tinyos-main/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="congested" ref="0x76939788" loc="14:/home/pi/tinyos-main/tos/lib/net/ctp/CtpCongestion.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7698a700" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7698a700"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7698abb0" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x76984398" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7698a700"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x76984068" loc="63:../../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x76984238" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7698a700"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x769360f8" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x76936540" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x769369c0" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x76935278" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x76933010" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x769334b8" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x76936de8" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x76933bf8" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x76933aa0" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x76937cb0" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x769356f8" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x76935b20" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7692f3b8" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7692f3b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7692bc28" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7692da00" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7692cbc0" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7692c878" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7692ca60" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7692c3d0" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7692a5c0" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7692a090" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7692de90" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7692fa10" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7692f8b8" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7692b608" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7692b2c0" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7692b4a8" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7692d168" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7692d010" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7692d638" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x769118e0" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x768f2438" loc="48:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x768f33c8" loc="43:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x768f2038" loc="47:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x768f3010" loc="42:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x768f3810" loc="45:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x768f67d0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x768f6b88" loc="41:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x768f3c10" loc="46:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x769a6548" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x76bcade0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x768c11c0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x768c1068" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x768ca8f0" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x768edcf0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x768ec340"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x768c16e8" loc="57:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x768c1f28" loc="59:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x768c3bf8" loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x768c1ae0" loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x768cad48" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x768c31a8" loc="44:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x768c37c8" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x768edcf0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x768ec340"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x768c3670" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x768edcf0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x768ec340"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x768bed18" loc="44:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x768b8448" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x768b82f0" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x768b8b98" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x768b8a40" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x768b9dd8" loc="73:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x768b9870" loc="68:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x768b92a0" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x768b9148" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x768c4990" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x768c4ee8" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x768c4d90" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x768bd4b0" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x768bd358" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x768bda50" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x768bd8f8" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x768bddf8" loc="45:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x768c8eb8" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x768c6c98" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x768c6b40" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x768c62d0" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x768cb628" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x768c66c8" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x768cbe70" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x768c8b10" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x768cba78" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x768c8268" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x768c8758" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x768c8600" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x768c52d8" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x768c5180" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x768a4928" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x769b95a8" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x769b99a0" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x769b9138" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x769a7538" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x76c39f10" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x76c37818" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x76c37350" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrickleTimer" loc="57:/home/pi/tinyos-main/tos/lib/net/TrickleTimer.nc">
      <function event="" provided="0" name="fired" ref="0x767f9410" loc="90:/home/pi/tinyos-main/tos/lib/net/TrickleTimer.nc">
        <documentation loc="87:/home/pi/tinyos-main/tos/lib/net/TrickleTimer.nc">
          <short>&#10; The trickle timer has fired.</short>
          <long>&#10; The trickle timer has fired. Signaled if C &#38;gt; K.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="incrementCounter" ref="0x767f9010" loc="85:/home/pi/tinyos-main/tos/lib/net/TrickleTimer.nc">
        <documentation loc="82:/home/pi/tinyos-main/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Increment the counter C.</short>
          <long>&#10; Increment the counter C. When an interval ends, C is set to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x767faaa0" loc="80:/home/pi/tinyos-main/tos/lib/net/TrickleTimer.nc">
        <documentation loc="76:/home/pi/tinyos-main/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Reset the timer period to L.</short>
          <long>&#10; Reset the timer period to L. If called while the timer is running,&#10; then a new interval (of length L) begins immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x767fa1a8" loc="68:/home/pi/tinyos-main/tos/lib/net/TrickleTimer.nc">
        <documentation loc="59:/home/pi/tinyos-main/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Start the trickle timer.</short>
          <long>&#10; Start the trickle timer. At boot, the timer period is its maximum&#10; value (H). If a protocol requires starting at the minimum value&#10; (e.g., fast start), then it should call &#60;tt>reset&#60;/tt> before&#10; &#60;tt>start&#60;/tt>.&#10;&#10; @return error_t SUCCESS if the timer was started, EBUSY if it is already&#10; running, and FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x767fa698" loc="74:/home/pi/tinyos-main/tos/lib/net/TrickleTimer.nc">
        <documentation loc="70:/home/pi/tinyos-main/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Stop the trickle timer.</short>
          <long>&#10; Stop the trickle timer. This call sets the timer period to H and&#10; C to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationCache" loc="44:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
      <documentation loc="34:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <short>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.</short>
        <long>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-04 04:31:08 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestData" ref="0x767febf8" loc="47:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x767fea80" loc="47:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="storeData" ref="0x767fd7e0" loc="48:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x767fd280" loc="48:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x767fd470" loc="48:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
          <variable name="seqno" ref="0x767fd678" loc="48:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="newData" ref="0x767fb010" loc="50:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="start" ref="0x767fe2b0" loc="45:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestSeqno" ref="0x767fdc08" loc="49:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="stop" ref="0x767fe678" loc="46:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x767ed7f0" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
              <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x767ed2a8" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x767ed488" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x767ed668" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x767f4d90" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x767f4830" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x767f4a48" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x767f4c28" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x767efa88" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x767ef728" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x767ef908" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x767ef1c8" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x767f1b88" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x767f1a30" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x767ee8a0" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x767ee548" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x767ee740" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x767b4650" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x76ba49d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x767b44f8" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x767bbe40" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x767bbce8" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x767bed58" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x767bb438" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x767bb2e0" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x767b8820" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x767b84b8" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x767b86c0" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x767baae8" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x767ba780" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x767ba988" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x767b6010" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x767b7df8" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x767b6b50" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x767b6820" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x767b69f0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x76ba4778"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x767b7410" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x767b72b8" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x767b5370" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x76ba49d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x767b5010" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x767b5210" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x76ba49d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x767b5bf0" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x76ba49d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x767b1398" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x767b1240" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x767b1e98" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x767b1d40" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x767af958" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x767af800" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x76763c48" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x76763c48"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x76763db0" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x76763db0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7675f010" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x76763db0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x76760e50" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7675fab0" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7675f958" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x76760450" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x767602f8" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7675d588" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x76763db0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7675d218" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7675d428" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x76763db0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x76757590" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x767571f8" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x76757430" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x76755088" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x76757f00" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x76758d10" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x76758690" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x76758538" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7673d840" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7673d6e8" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7673e6d0" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7673e578" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x76741848" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x767416f0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x76741168" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x76741010" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x76741e40" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x76741ce8" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7673d010" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7673ee30" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x76735228" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7673ce98" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x767350c8" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x76746438" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x767460e0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x767462d8" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x76743408" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x76743088" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x767432a8" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x76746ac0" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x76f72800"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x76746968" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x76745a68" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x76745910" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x76749be0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x76749a88" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x767451c0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x76745068" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x76738188" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x76738030" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7673a590" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7673a1f8" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7673a430" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x76739808" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x767396b0" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x76739190" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7673add8" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x76739030" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x76738ab0" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x76738958" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x76748be0" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x76748a88" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x76730a18" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x767300f8" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x76733ad8" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x767305a8" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7672e138" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7671c4c8" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7671c180" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7671c368" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7671a010" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x76719730" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7671af10" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x767193e8" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x767195c8" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7671aa20" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7671a6c8" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7671a8c0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7671cb18" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7671c9c0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x767174e0" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x76717038" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x76713300" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x76713188" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x76718c90" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7697eec8"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7697c010"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x76718af8" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x76713dd8" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7697c6e0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7697a680"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x76713c40" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7671f4e8" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7671e7f0" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7671e388" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x76723628" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7671f010" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7671fa00" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7671fec0" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x76723b30" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
          <long>&#10; Signals that the voltage regulator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x767105d0" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x76711768" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x76710168" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x76710010" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x76711b80" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x76716c68" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x76716b10" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x767112e0" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x76711188" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x766da170" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x766dbd28" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x766da010" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x766db390" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x766dcd90" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x766dc9a0" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x766dcc30" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x766df168" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x766df010" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x766db8a8" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x766dea78" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x766de920" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x766dfb00" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x766df9a8" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x766dac58" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x766dc490" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x766dc338" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x766da790" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x766de010" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x76753400"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x767538a8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x766de4a0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x766e2ac8" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x766df578" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x766deeb8" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
          <long>&#10; Change the PAN address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x766c5d18" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7697fb50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x766c5bc0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x766ba3d8" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7697fb50"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x766ba280" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x766d27b8" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x76753400"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x767538a8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x766cf3b8" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x766cf3b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x766cf520" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x766cf520"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x766cc810" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x766cf520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x766ce4d0" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x766cc1c8" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x766cf520"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x766cf520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x766cee48" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x766cf520"/></type-var>
          </variable>
          <variable name="dt" ref="0x766cc068" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x766cf520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x766ce940" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x766ccca0" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x766cf520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x766cfb50" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x766cf520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x766cf9f8" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x766cf520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x766ce070" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x766c6010" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x766c63f8" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x766c77d0" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x766c6bc8" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x766c7b90" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x766c67d0" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x766c7090" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x766c7420" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x766c08e0" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x766bf168" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x766c0d50" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x76ba49d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x766c03f0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x76ba49d0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x766c0088" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x76ba49d0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x766c0290" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x766b95d8" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7697fb50"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x766be880" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7697fb50"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x766be030" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x766be518" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x766be718" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x766bd698" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7697fb50"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x766bee28" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x766bd330" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x766bd530" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x766c1138" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x766c3cb8" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x766c38a8" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x766c3340" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x766248f0" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x766248f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x76624a58" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x76624a58"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x76621010" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x76624a58"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x76621a38" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x76621538" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x76621e60" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x765ce958" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
          <long>&#10; Set pin direction to input.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x765ced80" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x765cbd30" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x765cbbd8" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x765cfc10" loc="58:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x765cd5e0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x765ca2e8" loc="117:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x765cd1a8" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
          <long>&#10; Set pin direction to output.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x765ce518" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x765cb2b0" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x765ce070" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x765cf450" loc="48:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x765cda08" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x765cb6f8" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x765cde88" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x765cf820" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7648db98" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7648a5b0" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7648a168" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7648a010" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7648d690" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x76475a90" loc="52:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x76474a18" loc="72:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x76475658" loc="47:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x76474550" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x764743f8" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x76475210" loc="42:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x76475f28" loc="59:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x763ddac8" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x763da010" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x763da4f0" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x763c4e90" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x763c4b30" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x763c4d30" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x763c0608" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x763c00a8" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x763c02a8" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x763c04a0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x763c1858" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7697fb50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x763c14f8" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x763c16f8" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x763c4290" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7697fb50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x763c7f10" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x763c4130" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x763c2c90" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x763c2730" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x763c2930" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x763c2b28" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x763af198" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x763b2c10" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x763b2e28" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x763af030" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x763ae808" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x763ae088" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x763ae2a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x763ae490" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x763ae698" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x763b3c90" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x763b3b38" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7632f6f0" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7632fcc8" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7632d918" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7634c1c0"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7634c408"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7632b1e0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7632b088" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7632bdc8" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7632bc70" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7632b6f0" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7632a430" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7632a2d8" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x763231c8" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x76326cf0" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x76321ad0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x76321978" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x763214f0" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x76308458" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7630f210" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x763165d8" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7635c178"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7635c630"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x76316480" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7635c178"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7635c630"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x76310070" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Enables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x76315ad8" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7635a538"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7635a9f0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x76315980" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7635a538"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7635a9f0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7630b290" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x76309770" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x763154f0" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7635b2f0"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7635b740"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x76314010" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7635a538"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7635a9f0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x763129d8" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x76312880" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x76312460" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7630ce18" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x76315058" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7635b2f0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7635b740"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x76316ed8" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7635b2f0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7635b740"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x763149d0" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7630b680" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x76312010" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x76314e18" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x763117f8" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x76311c20" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7630c640" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7630d340" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x76310928" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7630ca38" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7630f698" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
          <long>&#10; Disables the Uart RX module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7630ba58" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x76312e58" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x763604b8"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7635d318"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7630bea0" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x76308010" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x76314580" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x76314428" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x763089c0" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x76308868" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x76316a50" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7635c178"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7635c630"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x763104c0" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7630fab8" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
          <long>&#10; Enables the USART when in Spi mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7630c188" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x76340530"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x76340778"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7630c030" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x76340530"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x76340778"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7630d9c0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
          <long>&#10; Switches USART to Spi mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7634c1c0"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7634c408"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7630d868" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7634c1c0"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7634c408"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x76308f18" loc="231:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x76309348" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x76311338" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x76309b78" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7630fef0" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
          <long>&#10; Disables the USART when in Spi mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x76310db0" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
          <long>&#10; Disables the Uart TX module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x762cd268" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x762b62c0" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x762c02b0" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x762b9438" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x762b92e0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x762c5838" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x762b8958" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x762bc010" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x762c1a70" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x762c0aa8" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x762c1168" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x762c1010" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x762c31a8" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x762bfa90" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x762b9c90" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x762b7e38" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x762bbe68" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x762b32e0" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x762b01a8" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x762c4010" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x762bf680" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x762bd4a8" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x762c1668" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x762c9dd8" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x762bb9f8" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x762bb8a0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x762c99e8" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x762b8518" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x762b66d8" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x762b2070" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x762b2d98" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x762b71c8" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x762b6ac8" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x762b9870" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x762b4958" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x762c43e8" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x762bca20" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x762b4310" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x762b7a18" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x762bdb70" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x762bda18" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x762b24d0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x762bb470" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x762b8d88" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x762c5430" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x76336908"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x76336b50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x762c52d8" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x76336908"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x76336b50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x762bf2a0" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x762c4d50" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x762c4bf8" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x762bd010" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x762bfe70" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x762b4dd8" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x762c3b50" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x762c4808" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x762bb010" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x762bce58" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x762c5c28" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x762b6ea8" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x762b75f0" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x762b80f8" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x762bc5c0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x762bc468" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x762c0e80" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x762c1e70" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x762b2900" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x762c3708" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x762c35b0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x762b3760" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x762c06a0" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x762b3bd8" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x76239a88" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x76236010" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x76216568" loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x76214010" loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x76216038" loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x76216a78" loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x762145e8" loc="81:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7620eca8" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x762175d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7620eb50" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x762175d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x762118b0" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7620e010" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x762175d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x76211e18" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x762175d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7620e5c0" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x762175d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x760f6c50" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x760f6af8" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x760e7770" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x760e7228" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x760e7428" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x760e7608" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x760e7ed8" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x760e7b98" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x760e7d78" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x760d99e8" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x760d99e8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x760d9b50" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x760d9b50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x760d5188" loc="66:../../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x760d9b50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x760d5030" loc="66:../../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x760d9b50"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x760a4648" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x76086758" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x760861d0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x760865f8" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x76089cf0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x76089870" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x76089718" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x76093920" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x760937c8" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x76093010" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x76096e78" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x76092b10" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x760929b8" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x76092220" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x760920c8" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x75fb8758" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x75fb8758"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x75fb8c38" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x75ed77a0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x75ed77a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x75ed7df0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x75ed77a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x75ed7c98" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x75ed77a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SystemLowPowerListening" loc="1:../../../tos/interfaces/SystemLowPowerListening.nc">
      <function command="" provided="0" name="setDefaultRemoteWakeupInterval" ref="0x75e43248" loc="3:../../../tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x75e430f0" loc="3:../../../tos/interfaces/SystemLowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultRemoteWakeupInterval" ref="0x75e43d08" loc="6:../../../tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDelayAfterReceive" ref="0x75e421a8" loc="7:../../../tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDelayAfterReceive" ref="0x75e43830" loc="4:../../../tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x75e436d8" loc="4:../../../tos/interfaces/SystemLowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerCycle" loc="37:../../../tos/chips/cc2420/interfaces/PowerCycle.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/PowerCycle.nc">
        <short>&#10; Manage the CC2420's duty cycle and power management&#10; </short>
        <long>&#10; Manage the CC2420's duty cycle and power management&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSleepInterval" ref="0x75e4e038" loc="48:../../../tos/chips/cc2420/interfaces/PowerCycle.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PowerCycle.nc">
          <short>&#10; </short>
          <long>&#10; @return the sleep interval in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerCycle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="detected" ref="0x75e4e420" loc="55:../../../tos/chips/cc2420/interfaces/PowerCycle.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/PowerCycle.nc">
          <short>&#10; </short>
          <long>&#10; @deprecated Should be removed in the future when the PowerCycle&#10;     component does packet-level detects and is in full control of radio&#10;     power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerCycle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSleepInterval" ref="0x75e51b20" loc="43:../../../tos/chips/cc2420/interfaces/PowerCycle.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/PowerCycle.nc">
          <short>&#10; Set the sleep interval, in binary milliseconds&#10; </short>
          <long>&#10; Set the sleep interval, in binary milliseconds&#10; @param sleepIntervalMs the sleep interval in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerCycle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepIntervalMs" ref="0x75e519c8" loc="43:../../../tos/chips/cc2420/interfaces/PowerCycle.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationUpdate" loc="48:/home/pi/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
      <documentation loc="33:/home/pi/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
        <short>&#10; Update a network shared (disseminated) value.</short>
        <long>&#10; Update a network shared (disseminated) value. Updates are assured&#10; to be eventually consistent across a connected network. If multiple&#10; nodes update a value simultaneously, then nodes within the network&#10; will see a series of one or more updates, the last update will&#10; be the same for all nodes. Components that need to use the&#10; variable should use the DisseminationValue interface.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10; @date   January 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x75d1f210" loc="48:/home/pi/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
          <interfacedef-ref qname="DisseminationUpdate"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75d1f210"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="change" ref="0x75d1f9c0" loc="60:/home/pi/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
        <documentation loc="49:/home/pi/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
          <short>&#10; Update the variable to a new value.</short>
          <long>&#10; Update the variable to a new value. This changes the local copy&#10; and begins to disseminate the new value throughout the network.&#10; As other nodes may have also changed the variable, it is possible&#10; that an update may not 'stick,' but will instead be overwritten by&#10; a separate update.&#10;&#10; @param newVal A pointer to the new value. The memory pointed to&#10; by newVal is copied out, so newVal can be reclaimed when&#10; &#60;tt>change&#60;/tt> returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75d1f210"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x75d1f868" loc="60:/home/pi/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75d1f210"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVector" loc="40:../../../tos/interfaces/BitVector.nc">
      <documentation loc="34:../../../tos/interfaces/BitVector.nc">
        <short>&#10; Interface to a bit vector.</short>
        <long>&#10; Interface to a bit vector.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearAll" ref="0x75cf57e8" loc="45:../../../tos/interfaces/BitVector.nc">
        <documentation loc="42:../../../tos/interfaces/BitVector.nc">
          <short>&#10; Clear all bits in the vector.</short>
          <long>&#10; Clear all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x75cf1d20" loc="69:../../../tos/interfaces/BitVector.nc">
        <documentation loc="65:../../../tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to clear.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x75cf1bc8" loc="69:../../../tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x75cf02f8" loc="75:../../../tos/interfaces/BitVector.nc">
        <documentation loc="71:../../../tos/interfaces/BitVector.nc">
          <short>&#10; Toggle a bit in the vector.</short>
          <long>&#10; Toggle a bit in the vector.&#10; @param bitnum Bit to toggle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x75cf01a0" loc="75:../../../tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x75cf11c0" loc="57:../../../tos/interfaces/BitVector.nc">
        <documentation loc="52:../../../tos/interfaces/BitVector.nc">
          <short>&#10; Read a bit from the vector.</short>
          <long>&#10; Read a bit from the vector.&#10; @param bitnum Bit to read.&#10; @return Bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x75cf1068" loc="57:../../../tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="assign" ref="0x75cf0aa0" loc="82:../../../tos/interfaces/BitVector.nc">
        <documentation loc="77:../../../tos/interfaces/BitVector.nc">
          <short>&#10; Write a bit in the vector.</short>
          <long>&#10; Write a bit in the vector.&#10; @param bitnum Bit to clear.&#10; @param value New bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x75cf0760" loc="82:../../../tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x75cf0940" loc="82:../../../tos/interfaces/BitVector.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x75cf5bf0" loc="50:../../../tos/interfaces/BitVector.nc">
        <documentation loc="47:../../../tos/interfaces/BitVector.nc">
          <short>&#10; Set all bits in the vector.</short>
          <long>&#10; Set all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x75cf1770" loc="63:../../../tos/interfaces/BitVector.nc">
        <documentation loc="59:../../../tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to set.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x75cf1618" loc="63:../../../tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x75cf0f20" loc="88:../../../tos/interfaces/BitVector.nc">
        <documentation loc="84:../../../tos/interfaces/BitVector.nc">
          <short>&#10; Return bit vector length.</short>
          <long>&#10; Return bit vector length.&#10; @return Bit vector length.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RootControl" loc="40:/home/pi/tinyos-main/tos/lib/net/RootControl.nc">
      <documentation loc="35:/home/pi/tinyos-main/tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x75c91598" loc="43:/home/pi/tinyos-main/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x75c9fdc8" loc="41:/home/pi/tinyos-main/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x75c911d8" loc="42:/home/pi/tinyos-main/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionDebug" loc="59:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
      <documentation loc="35:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <short> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure.</short>
        <long> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure. An implementer can choose to send the event&#10;  information to different destinations. Primary examples can include:&#10;  &#60;ul>&#10;    &#60;li> logging to the UART, in case of a testbed of network-connected&#10;         nodes;&#10;    &#60;li> logging to flash, if the logs are to be retrieved later&#10;    &#60;li> logging to the standard output, in the case of TOSSIM.&#10;  &#60;/ul>&#10;  &#10;  The interface does not specify in what format the log is to be produced,&#10;  or if other information, like timestamps, should be added, and this is&#10;  up to the implementer.&#10; &#10;  Some commands are generic, like Event, EventSimple, and EventDbg, while others&#10;  are for more specific events related to collection, like EventRoute and EventMsg.&#10;&#10; @author Rodrigo Fonseca&#10; @author Kyle Jamieson&#10; @date   $Date: 2010-06-29 22:07:47 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="logEvent" ref="0x75c8c210" loc="61:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x75c8c0b8" loc="61:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventMsg" ref="0x75c8a180" loc="73:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x75c8b9e0" loc="73:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x75c8bbd0" loc="73:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
          <variable name="origin" ref="0x75c8bde8" loc="73:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </variable>
          <variable name="node" ref="0x75c8a010" loc="73:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventSimple" ref="0x75c8c9c0" loc="64:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x75c8c670" loc="64:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
          <variable name="arg" ref="0x75c8c860" loc="64:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventRoute" ref="0x75c8ad88" loc="79:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x75c8a5d8" loc="79:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
          <variable name="parent" ref="0x75c8a7f0" loc="79:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </variable>
          <variable name="hopcount" ref="0x75c8aa08" loc="79:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
          <variable name="metric" ref="0x75c8ac18" loc="79:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventDbg" ref="0x75c8b5a0" loc="67:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x75c8ce00" loc="67:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
          <variable name="arg1" ref="0x75c8b030" loc="67:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
          <variable name="arg2" ref="0x75c8b230" loc="67:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
          <variable name="arg3" ref="0x75c8b430" loc="67:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:../../../tos/interfaces/Intercept.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x75ca0850" loc="31:../../../tos/interfaces/Intercept.nc">
        <documentation loc="16:../../../tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75ca0328" loc="31:../../../tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x75ca0508" loc="31:../../../tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x75ca06e8" loc="31:../../../tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UnicastNameFreeRouting" loc="41:/home/pi/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
      <documentation loc="35:/home/pi/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <short>&#10;  Provides a single next hop on a name-free protocol.</short>
        <long>&#10;  Provides a single next hop on a name-free protocol.&#10;&#10;  @author Philip Levis&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="hasRoute" ref="0x75c90878" loc="49:/home/pi/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="routeFound" ref="0x75c90c30" loc="51:/home/pi/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="nextHop" ref="0x75c90390" loc="48:/home/pi/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <documentation loc="43:/home/pi/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
          <short>&#10; Get the address of the best next hop set to the destination.</short>
          <long>&#10; Get the address of the best next hop set to the destination.&#10; If there is not best next hop, the address is the local address.&#10; @return : The next best hop, or the local address if there is no route.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="noRoute" ref="0x75c8e010" loc="52:/home/pi/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpPacket" loc="44:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
      <documentation loc="33:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <short>&#10;  ADT for CTP data frames.</short>
        <long>&#10;  ADT for CTP data frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007-11-28 04:42:52 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSequenceNumber" ref="0x75c977b8" loc="64:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75c97460" loc="64:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x75c97658" loc="64:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="option" ref="0x75c9b2b0" loc="52:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x76993c78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75c9deb0" loc="52:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x75c9b150" loc="52:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x76993c78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x75c9acd0" loc="58:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75c9a980" loc="58:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x75c9ab70" loc="58:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x75c98a08" loc="61:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75c986a0" loc="61:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x75c988a8" loc="61:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x75c9da90" loc="49:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x76993c78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75c9d6f0" loc="49:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x75c9d930" loc="49:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x76993c78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x75c9a5a0" loc="57:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75c9a448" loc="57:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x75c982a0" loc="60:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75c98148" loc="60:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x75c96480" loc="67:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75c96148" loc="67:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x75c96320" loc="67:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x75c9d2d0" loc="46:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x76993c78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75ca2ed8" loc="46:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x75c9d170" loc="46:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x76993c78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchPacket" ref="0x75c944b0" loc="70:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x75c94140" loc="70:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x75c94350" loc="70:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getThl" ref="0x75c9b830" loc="54:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75c9b6d8" loc="54:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x75c97010" loc="63:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75c98ea0" loc="63:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchInstance" ref="0x75c96cc0" loc="69:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x75c96950" loc="69:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x75c96b60" loc="69:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x75c97d40" loc="66:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75c97be8" loc="66:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setThl" ref="0x75c9a010" loc="55:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75c9bc10" loc="55:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="thl" ref="0x75c9bdf0" loc="55:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionId" loc="45:/home/pi/tinyos-main/tos/lib/net/CollectionId.nc">
      <documentation loc="35:/home/pi/tinyos-main/tos/lib/net/CollectionId.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="fetch" ref="0x75c8ee80" loc="46:/home/pi/tinyos-main/tos/lib/net/CollectionId.nc">
        <interfacedef-ref qname="CollectionId"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x76994500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkEstimator" loc="46:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
      <documentation loc="35:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <short> Provides an additive quality measure for a neighbor.</short>
        <long> Provides an additive quality measure for a neighbor. The&#10; provided quality increases when the true link quality increases.&#10;  @author Rodrigo Fonseca&#10;  @author Omprakash Gnawali&#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getReverseQuality" ref="0x75c80940" loc="52:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x75c807e8" loc="52:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txAck" ref="0x75c7d780" loc="68:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x75c7d628" loc="68:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pinNeighbor" ref="0x75c7ebe0" loc="61:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x75c7ea88" loc="61:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txNoAck" ref="0x75c7dd30" loc="72:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x75c7dbd8" loc="72:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNeighbor" ref="0x75c7e608" loc="58:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x75c7e4b0" loc="58:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x75c7c880" loc="78:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x75c7c728" loc="78:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearDLQ" ref="0x75c7c318" loc="75:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x75c7c1c0" loc="75:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="unpinNeighbor" ref="0x75c7d1e0" loc="64:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x75c7d088" loc="64:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getForwardQuality" ref="0x75c7e010" loc="55:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x75c80e08" loc="55:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLinkQuality" ref="0x75c80320" loc="49:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x75c801c8" loc="49:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Cache" loc="44:../../../tos/interfaces/Cache.nc">
      <documentation loc="34:../../../tos/interfaces/Cache.nc">
        <short>&#10; A data item cache.</short>
        <long>&#10; A data item cache. The cache does not own the items it caches:&#10; there is no allocation/deallocation policy, or notification of&#10; eviction. Correspondingly, using references (pointers) as data&#10; items can be difficult.&#10; &#10; @author Rodrigo Fonseca&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x75c4baa8" loc="44:../../../tos/interfaces/Cache.nc">
          <interfacedef-ref qname="Cache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75c4baa8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="insert" ref="0x75c47088" loc="51:../../../tos/interfaces/Cache.nc">
        <documentation loc="45:../../../tos/interfaces/Cache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary.</short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.&#10; An atomic lookup after insert should return true.&#10;&#10; @param item - the data item to insert.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75c4baa8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x75c4bf10" loc="51:../../../tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75c4baa8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x75c47ac0" loc="65:../../../tos/interfaces/Cache.nc">
        <documentation loc="61:../../../tos/interfaces/Cache.nc">
          <short>&#10; Flush the cache of all entries.</short>
          <long>&#10; Flush the cache of all entries.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="lookup" ref="0x75c47670" loc="59:../../../tos/interfaces/Cache.nc">
        <documentation loc="53:../../../tos/interfaces/Cache.nc">
          <short>&#10; Return whether the data item is in the cache.</short>
          <long>&#10; Return whether the data item is in the cache.&#10;&#10; @param item - the data item to query&#10; @return Whether the item is in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75c4baa8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x75c47518" loc="59:../../../tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75c4baa8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:../../../tos/interfaces/Queue.nc">
      <documentation loc="33:../../../tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x75c56110" loc="43:../../../tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75c56110"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x75c55720" loc="80:../../../tos/interfaces/Queue.nc">
        <documentation loc="74:../../../tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75c56110"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x75c525f8" loc="97:../../../tos/interfaces/Queue.nc">
        <documentation loc="90:../../../tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75c56110"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x75c524a0" loc="97:../../../tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75c56110"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x76f749e0"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x76f749e0"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x75c52ef8" loc="108:../../../tos/interfaces/Queue.nc">
        <documentation loc="99:../../../tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75c56110"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x75c52da0" loc="108:../../../tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x75c569e0" loc="57:../../../tos/interfaces/Queue.nc">
        <documentation loc="52:../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x75c552f0" loc="72:../../../tos/interfaces/Queue.nc">
        <documentation loc="67:../../../tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x75c55dd0" loc="88:../../../tos/interfaces/Queue.nc">
        <documentation loc="82:../../../tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75c56110"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x75c565b0" loc="50:../../../tos/interfaces/Queue.nc">
        <documentation loc="45:../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x75c56e20" loc="65:../../../tos/interfaces/Queue.nc">
        <documentation loc="59:../../../tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:../../../tos/interfaces/Pool.nc">
      <documentation loc="33:../../../tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x75c518a8" loc="50:../../../tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75c518a8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x75c4c578" loc="97:../../../tos/interfaces/Pool.nc">
        <documentation loc="91:../../../tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75c518a8"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x75c4e7e0" loc="80:../../../tos/interfaces/Pool.nc">
        <documentation loc="74:../../../tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x75c51d48" loc="61:../../../tos/interfaces/Pool.nc">
        <documentation loc="52:../../../tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x75c4ede8" loc="89:../../../tos/interfaces/Pool.nc">
        <documentation loc="82:../../../tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75c518a8"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x75c4ec90" loc="89:../../../tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75c518a8"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x75c4e2a8" loc="72:../../../tos/interfaces/Pool.nc">
        <documentation loc="63:../../../tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CompareBit" loc="47:/home/pi/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
      <documentation loc="35:/home/pi/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
        <short> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table.</short>
        <long> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table. The return value is the &#34;pin bit&#34; - if true&#10; insert into the neighbor table. In the reference implementation&#10; the router will return true if the path through the source&#10; will be better than a path through at least one current neighbor.&#10;@ author Omprakash Gnawali&#10;@ Created: September 16, 2006&#10;@date   $Date: 2010-06-29 22:07:49 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="shouldInsert" ref="0x75b3cd00" loc="51:/home/pi/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
        <interfacedef-ref qname="CompareBit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75b3c520" loc="51:/home/pi/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x75b3c9b8" loc="51:/home/pi/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x75b3cb98" loc="51:/home/pi/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpRoutingPacket" loc="43:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
      <documentation loc="33:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <short>&#10;  ADT for CTP routing frames.</short>
        <long>&#10;  ADT for CTP routing frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2009-09-21 02:19:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearOptions" ref="0x75aa8bf8" loc="51:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75aa8aa0" loc="51:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x75aa6d50" loc="57:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75aa6a00" loc="57:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x75aa6bf0" loc="57:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x75aa84b0" loc="48:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x76993c78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75aa8130" loc="48:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x75aa8350" loc="48:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x76993c78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x75aa6460" loc="56:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75aa6308" loc="56:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x75aaab48" loc="47:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x76993c78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75aaa7c8" loc="47:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x75aaa9e8" loc="47:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x76993c78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setParent" ref="0x75aa7cc8" loc="54:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75aa7960" loc="54:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x75aa7b68" loc="54:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x75aa73a0" loc="53:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x76ba4c30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75aa7248" loc="53:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOption" ref="0x75aaa208" loc="46:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x76993c78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75aade60" loc="46:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x76952c50"/>
                <typename><typedef-ref name="message_t" ref="0x7694f1a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x75aaa0a8" loc="46:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x76993c78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadStream" loc="57:../../../tos/interfaces/ReadStream.nc">
      <documentation loc="33:../../../tos/interfaces/ReadStream.nc">
        <short>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices.</short>
        <long>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices. The type of the values being&#10; read is given as a template argument. &#10;&#10; &#60;p> To use this interface, allocate one or more buffers in your own&#10; space. Then, call postBuffer to pass these buffers into the&#10; device. Call read() to begin the sampling process. The buffers will&#10; be filled in the order originally posted, and a bufferDone() event&#10; will be signaled once each buffer has been filled with data. At any&#10; time while the read() is running, you may post new buffers to be&#10; filled. If the lower layer finishes signaling readDone() and then&#10; finds that no more buffers have been posted, it will consider the&#10; read to be finished, and signal readDone(). &#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x759de458" loc="57:../../../tos/interfaces/ReadStream.nc">
          <interfacedef-ref qname="ReadStream"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x759de458"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="bufferDone" ref="0x759dd2a0" loc="89:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="80:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a previously posted buffer has been filled by the&#10; device.</short>
          <long>&#10; Signalled when a previously posted buffer has been filled by the&#10; device. In the event of a read error, result will not equal&#10; SUCCESS, and the buffer will be filled with zeroes.&#10;&#10; @param result SUCCESS if the buffer was filled without errors&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer that has been filled&#10; @param count the number of values actually read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x759de458"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x759dcd08" loc="89:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x759dcf08" loc="90:../../../tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x759de458"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x759dd138" loc="90:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="postBuffer" ref="0x759decd0" loc="68:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="58:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer.</short>
          <long>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer. Make sure your count doesn't&#10; overrun the buffer.&#10;&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer&#10; @param count the number of values the buffer should hold&#10;&#10; @return SUCCESS if the post was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x759de458"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x759de968" loc="68:../../../tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x759de458"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x759deb70" loc="68:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x759dc7e8" loc="78:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="70:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period.</short>
          <long>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period. &#10; &#10; @param usPeriod the between-sample period in microseconds&#10; &#10; @return SUCCESS if the reading process began&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="usPeriod" ref="0x759dc690" loc="78:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x759db010" loc="102:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="92:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted.</short>
          <long>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted. In the event of a read error, all previously posted&#10; buffers will have their bufferDone() event signalled, and then&#10; this event will be signalled with a non-SUCCESS argument.&#10;&#10; @param result SUCCESS if all buffers were filled without errors&#10; @param usActualPeriod Actual sampling period used - may be different&#10;   from period requested at read time. Undefined if result != SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x759ddc20" loc="102:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
          </variable>
          <variable name="usActualPeriod" ref="0x759dde80" loc="102:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76f71550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AdcConfigure" loc="45:../../../tos/interfaces/AdcConfigure.nc">
      <documentation loc="36:../../../tos/interfaces/AdcConfigure.nc">
        <short> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration.</short>
        <long> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration. &#10; &#10; @author Jan Hauer &#10; @see  Please refer to TEP 101 for more information about this interface and&#10; its intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="adc_config_t" ref="0x759c50b8" loc="45:../../../tos/interfaces/AdcConfigure.nc">
          <interfacedef-ref qname="AdcConfigure"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x759c50b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getConfiguration" ref="0x759c5648" loc="58:../../../tos/interfaces/AdcConfigure.nc">
        <documentation loc="48:../../../tos/interfaces/AdcConfigure.nc">
          <short> &#10; Returns the configuration of an ADC client.</short>
          <long> &#10; Returns the configuration of an ADC client.  &#60;code>adc_config_t&#60;/code> is&#10; a hardware specific data type that contains all information necessary to&#10; configure the respective ADC hardware for the client. A client MUST always&#10; return the same configuration and, if configuration data is passed as a&#10; pointer, the ADC subsystem (HIL component) MUST NOT reference it after the&#10; return of this command.&#10;  &#10; @return chip specific configuration.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AdcConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x759c50b8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:../../../tos/interfaces/ReadNow.nc">
      <documentation loc="33:../../../tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x759bf010" loc="52:../../../tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x759bf010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x759bf4e0" loc="58:../../../tos/interfaces/ReadNow.nc">
        <documentation loc="53:../../../tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x759bfcb0" loc="66:../../../tos/interfaces/ReadNow.nc">
        <documentation loc="60:../../../tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x759bf010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x759bf980" loc="66:../../../tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x759bfb50" loc="66:../../../tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x759bf010"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12SingleChannel" loc="69:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <short> &#10; &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample a single adc channel once or repeatedly (one event is&#10; signalled per conversion result) or perform multiple conversions for a&#10; single channel once or repeatedly (one event is signalled per multiple&#10; conversion results). It cannot be used to sample different adc channels with&#10; a single command (use the Msp430Adc12MultiChannel interface instead).&#10; Sampling a channel requires calling a sequence of two commands, configureX()&#10; and getData(), where X is either 'Single', 'SingleRepeat', 'Multiple' or&#10; 'MultipleRepeat'. Conversion results will be signalled by the&#10; dataReadySingle() or dataReadyMultiple() event, depending on the previous&#10; configuration, i.e. there are four possible sequences:&#10; &#10; &#60;p> configureSingle()          -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureSingleRepeat()    -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureMultiple()        -> ( getData() -> multipleDataReady() )*&#10; &#60;p> configureMultipleRepeat()  -> getData() -> multipleDataReady()&#10;&#10; &#60;p> where configureX() and getData() are commands called by the client and&#10; singleDataReady() and multipleDataReady() are events signalled back to the&#10; client by the adc subsystem. Note that a configuration is valid until the&#10; client reconfigures or releases the ADC (using the Resource interface),&#10; except for configureMultipleRepeat(), which is only valid for a single call&#10; to getData(). This means that after a successful configuration with, for&#10; example, configureSingle() the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface).&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x759b3c58" loc="189:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="180:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.</short>
          <long> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event singleDataReady() or multipleDataReady() will be signalled&#10; (depending on the previous configuration). Otherwise no such event will be&#10; signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingle" ref="0x759b8188" loc="84:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="72:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC to perform a single conversion.</short>
          <long> &#10; Configures the ADC to perform a single conversion. Any previous&#10; configuration will be overwritten.  If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>singleDataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config ADC12 configuration data.  &#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x759d6408"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x759d7ec8"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x759b8030" loc="84:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x759d6408"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x759d7ec8"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingleRepeat" ref="0x759b8ee0" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for repeated single channel conversion mode.</short>
          <long> &#10; Configures the ADC for repeated single channel conversion mode. Any&#10; previous configuration will be overwritten. If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start sampling the adc channel periodically&#10; (the first conversion is started immediately).  The sampling period is&#10; specified by the &#60;code>jiffies&#60;/code> parameter, which defines the time&#10; between successive conversions in terms of clock ticks of clock source&#10; &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34; as specified in the&#10; &#60;code>config&#60;/code> parameter. If jiffies is zero successive conversions&#10; are performed as quickly as possible.  Conversion result are signalled&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>singleDataReady()&#60;/code> event handler.&#10; &#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34; and&#10; input divider &#34;sampcon_id&#34;.&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x759d6408"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x759d7ec8"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x759b8b68" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x759d6408"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x759d7ec8"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="jiffies" ref="0x759b8d80" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultipleRepeat" ref="0x759b3010" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="140:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.</short>
          <long> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.  Any&#10; previous configuration will be overwritten. In contrast to the&#10; &#60;code>configureSingleRepeat()&#60;/code> command this configuration means that&#10; an event with &#60;code>numSamples&#60;/code> conversion results will be&#10; signalled, where 0 &#60; &#60;code>numSamples&#60;/code> &#60;= 16. In contrast to the&#10; &#60;code>configureMultiple()&#60;/code> command, this configuration means that&#10; &#60;code>numSamples&#60;/code> conversion results will be signalled repeatedly&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler. &#10;&#10; If &#60;code>configureMultipleRepeat()&#60;/code> returns SUCCESS calling&#10; &#60;code>getData()&#60;/code> will start the the first conversion immediately.&#10; The sampling period is specified by the &#60;code>jiffies&#60;/code> parameter,&#10; which defines the time between successive conversions in terms of clock&#10; ticks of clock source &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34;&#10; as specified in the &#60;code>config&#60;/code> parameter. If jiffies is zero&#10; successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with &#60;code>numSamples&#60;/code>&#10; conversion results. If the client returns &#60;code>SUCCESS&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler, &#60;code>numSamples&#60;/code>&#10; new conversions will be performed, otherwise not.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples to take, 0 &#60;&#10; &#60;code>numSamples&#60;/code> &#60;= 16&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x759d6408"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x759d7ec8"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x759b4500" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x759d6408"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x759d7ec8"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x759b4a08" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x759b4c30" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x759b4e48" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="multipleDataReady" ref="0x759b06a0" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="208:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Multiple ADC conversion results are ready.</short>
          <long> &#10; Multiple ADC conversion results are ready.  If the ADC was configured&#10; with the &#60;code>configureMultiple()&#60;/code> command, then the return value&#10; is ignored. If the ADC was configured with the&#10; &#60;code>configureMultipleRepeat()&#60;/code> command then the returned pointer&#10; defines where to store the next &#60;code>numSamples&#60;/code>&#10; conversion results (the client must make sure that the buffer is big&#10; enough!).  Returning a null pointer means that the repeated conversion&#10; mode will be stopped.&#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of samples stored in &#60;code>buffer&#60;/code> &#10;&#10; @return&#10; A null pointer stops a repeated conversion mode. Any non-zero value is&#10; interpreted as the next buffer, which must have at least&#10; &#60;code>numSamples&#60;/code> entries. The return value is ignored if the ADC&#10; was configured with &#60;code>configureMultiple()&#60;/code>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x759b02c8" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x759b0500" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultiple" ref="0x759b5628" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="109:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period.</short>
          <long> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period. Any previous configuration will be&#10; overwritten.  In contrast to the &#60;code>configureSingleRepeat()&#60;/code>&#10; command, this configuration means that only one event will be signalled&#10; after all samples have been taken (which is useful for high-frequency&#10; sampling). If SUCCESS is returned calling &#60;code>getData()&#60;/code> will&#10; start sampling the adc channel &#60;code>numSamples&#60;/code> times and the first&#10; conversion is started immediately. Conversion results are stored in a&#10; buffer allocated by the client (the &#60;code>buffer&#60;/code>&#10; parameter). The sampling period is specified by the &#60;code>jiffies&#60;/code>&#10; parameter, which defines the time between successive conversions in terms&#10; of clock ticks of clock source &#34;sampcon_ssel&#34; and clock input divider&#10; &#34;sampcon_id&#34; as specified in the &#60;code>config&#60;/code> parameter. If jiffies&#10; is zero successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with the conversion results.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x759d6408"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x759d7ec8"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x759b6b20" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x759d6408"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x759d7ec8"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x759b5068" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x759b52a0" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x759b54b8" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="singleDataReady" ref="0x759b14a0" loc="206:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="191:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; A single ADC conversion result is ready.</short>
          <long> &#10; A single ADC conversion result is ready. If the ADC was configured with&#10; the &#60;code>configureSingle()&#60;/code> command, then the return value is&#10; ignored. If the ADC was configured with the&#10; &#60;code>configureSingleRepeat()&#60;/code> command then the return value tells&#10; whether another conversion should be performed (&#60;code>SUCCESS()&#60;/code>) or&#10; not (&#60;code>FAIL&#60;/code>).&#10; &#10; @param data Conversion result (lower 12 bit).  &#10;&#10; @return If this event is signalled as response to a call to&#10; &#60;code>configureSingleRepeat()&#60;/code> then &#60;code>SUCCESS&#60;/code> results in&#10; another sampling and &#60;code>FAIL&#60;/code> stops the repeated sampling.&#10; Otherwise the return value is ignored.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x759b1348" loc="206:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12MultiChannel" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <short> &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample up to 16 (different) ADC channels. It separates between&#10; configuration and data collection: every time a client has been granted&#10; access to the ADC subsystem (via the Resource interface), it first has to&#10; configure the ADC.  Afterwards the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface), i.e.&#60;p>&#10; &#10;    configure() -> ( getData() -> dataReady() )*&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x75981010" loc="97:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="90:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.</short>
          <long> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event dataReady() will be signalled. Otherwise no event will be signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x759825f0" loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Configures the ADC to perform conversion(s) on multiple channels.</short>
          <long> &#10; Configures the ADC to perform conversion(s) on multiple channels.  Any&#10; previous configuration will be overwritten.  If SUCCESS is returned&#10; calling &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>dataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config Main ADC12 configuration and configuration of the first&#10; channel &#10;&#10; @param memctl List of additional channels and respective reference&#10; voltages&#10;&#10; @param numMemctl Number of entries in the list&#10; &#10; @param buffer Buffer to store the conversion results, it must have&#10; numSamples entries. Results will be stored in the order the channels where&#10; specified.&#10;&#10; @param numSamples Total number of samples. Note: numSamples %&#10; (numMemctl+1) must be zero. For example, to sample every channel twice use&#10; numSamples = (numMemctl+1) * 2&#10;&#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;. Samples are taken equally-spaced in&#10; time iterating round-robin over the channels (different channels are  &#10; not sampled simultaneously but one after another).&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x759d6408"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x759d7ec8"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x759d6ba8"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x759d6e58"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x75985918" loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x759d6408"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x759d7ec8"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="memctl" ref="0x75985b88" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x759d6ba8"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x759d6e58"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="numMemctl" ref="0x75985da8" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
          <variable name="buffer" ref="0x75982010" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x75982258" loc="88:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x75982470" loc="88:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x75981980" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="99:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Conversion results are ready.</short>
          <long> &#10; Conversion results are ready. Results are stored in the buffer in the&#10; order the channels where specified in the &#60;code>configure()&#60;/code>&#10; command, i.e. every (numMemctl+1)-th entry maps to the same channel. &#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of results stored in &#60;code>buffer&#60;/code> &#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x759815e8" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x75981820" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12Overflow" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <short> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.</short>
        <long> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function event="" provided="0" name="memOverflow" ref="0x75984938" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; An ADC12MEMx overflow condition has occured.</short>
          <long> &#10; An ADC12MEMx overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionTimeOverflow" ref="0x75984e00" loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; A conversion time overflow condition has occured.</short>
          <long> &#10; A conversion time overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x759775a8" loc="95:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x75977a90" loc="105:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAdc12" loc="45:../../../tos/chips/msp430/adc12/HplAdc12.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCtl0" ref="0x7596e0c8" loc="63:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="59:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Returns the ADC12 control register ADC12CTL0.&#10; @return ADC12CTL0&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x759cb348"/>
            <typename><typedef-ref name="adc12ctl0_t" ref="0x759cb930"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMCtl" ref="0x7596d470" loc="82:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="77:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @return memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x759d6ba8"/>
            <typename><typedef-ref name="adc12memctl_t" ref="0x759d6e58"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7596d318" loc="82:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetIFGs" ref="0x7596cad8" loc="106:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="103:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.</short>
          <long> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBusy" ref="0x7596a5d8" loc="118:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="114:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 BUSY flag.</short>
          <long> &#10; Returns the ADC12 BUSY flag.&#10; @return ADC12BUSY &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76c3a388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionDone" ref="0x7596a168" loc="112:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="108:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Signals a conversion result.</short>
          <long> &#10; Signals a conversion result. &#10; @param iv ADC12 interrupt vector value 0x6, 0x8, ... , 0x24&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iv" ref="0x7596a010" loc="112:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtl1" ref="0x7596e580" loc="68:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="65:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> Returns the ADC12 control register ADC12CTL1.</short>
          <long> Returns the ADC12 control register ADC12CTL1. &#10;  @return ADC12CTL1&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x759c9688"/>
            <typename><typedef-ref name="adc12ctl1_t" ref="0x759c9ba0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMCtl" ref="0x7596eda0" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="70:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @param memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x759d6ba8"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x759d6e58"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7596e9d8" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
          <variable name="memControl" ref="0x7596ec40" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x759d6ba8"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x759d6e58"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7596af08" loc="128:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="125:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Starts a conversion.</short>
          <long>&#10; Starts a conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl0" ref="0x75970598" loc="51:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="47:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL0.&#10; @param control0 ADC12CTL0 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x759cb348"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x759cb930"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control0" ref="0x75970440" loc="51:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x759cb348"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x759cb930"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMem" ref="0x7596daf8" loc="89:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="84:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory register ADC12MEMx.</short>
          <long> &#10; Returns the ADC12 conversion memory register ADC12MEMx.&#10; @param idx The register index (the 'x' in ADC12MEMx) [0..15] &#10; @return ADC12MEMx &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7596d9a0" loc="89:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIEFlags" ref="0x7596c168" loc="95:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="91:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Sets the ADC12 interrupt enable register, ADC12IE.&#10; @param mask Bitmask (0 means interrupt disabled, 1 menas interrupt enabled) &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7596c010" loc="95:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIEFlags" ref="0x7596c668" loc="101:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="97:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Returns the ADC12 interrupt enable register, ADC12IE.&#10; @return ADC12IE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0x7596aa40" loc="123:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="120:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Stops a conversion.</short>
          <long>&#10; Stops a conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableConversion" ref="0x75969370" loc="133:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="130:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Enables conversion (sets the ENC bit).</short>
          <long>&#10; Enables conversion (sets the ENC bit).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl1" ref="0x75970bc0" loc="57:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="53:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL1.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL1. &#10; @param control1 ADC12CTL1 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x759c9688"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x759c9ba0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control1" ref="0x75970a68" loc="57:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x759c9688"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x759c9ba0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DeviceMetadata" loc="40:../../../tos/interfaces/DeviceMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/DeviceMetadata.nc">
        <short>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID.</short>
        <long>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID. See TEP109 and TEP114 for details.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSignificantBits" ref="0x7578d010" loc="41:../../../tos/interfaces/DeviceMetadata.nc">
        <interfacedef-ref qname="DeviceMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht11" loc="40:../../../tos/chips/sht11/SensirionSht11.nc">
      <documentation loc="32:../../../tos/chips/sht11/SensirionSht11.nc">
        <short>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0x757813d8" loc="84:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="78:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a humidity measurement.</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x75781088" loc="84:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x75781278" loc="84:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readStatusReg" ref="0x757818d0" loc="92:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="86:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Reads the current contents of the SHT11 status and control&#10; register.</short>
          <long>&#10; Reads the current contents of the SHT11 status and control&#10; register. See the datasheet for interpretation of this register.&#10;&#10; @return SUCCESS if the read will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0x75782b88" loc="76:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="71:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a humidity measurement.</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0x75784d50" loc="61:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="56:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a temperature measurement.</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeStatusReg" ref="0x757807d0" loc="109:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="102:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Writes a new value to the SHT11 status and control register.</short>
          <long>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10; @param val the new value to be written&#10;&#10; @return SUCCESS if the write will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x75780678" loc="109:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x757842b0" loc="47:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="42:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Resets the sensor.</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="writeStatusRegDone" ref="0x75780e58" loc="116:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="111:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals the completion of the status register write.</short>
          <long>&#10; Signals the completion of the status register write.&#10;&#10; @param result SUCCESS if the write was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x75780d00" loc="116:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readStatusRegDone" ref="0x75780170" loc="100:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="94:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the value of the status register.</short>
          <long>&#10; Presents the value of the status register.&#10;&#10; @param result SUCCESS if the read succeeded&#10; @param val the value of the register&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x75781e10" loc="100:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x75780010" loc="100:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76f710f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0x75784860" loc="54:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="49:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals that the sensor has been reset.</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x75784708" loc="54:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0x75782678" loc="69:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="63:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a temperature measurement.</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x75782328" loc="69:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76c323e0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x75782518" loc="69:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76f71310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x756e95b8" loc="62:../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
