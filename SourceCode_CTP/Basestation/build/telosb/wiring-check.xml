<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="22:DemoAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x768f8a48"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x76869010"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x76869010"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x76867840"/></to>
    </wire>
    <wire loc="23:DemoAppC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x768f53c8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x75c011c8"/></to>
    </wire>
    <wire loc="72:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x75c011c8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x75be6e38"/></to>
    </wire>
    <wire loc="24:DemoAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x768aeec0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x75c00318"/>
      <arguments>
        <value cst="I:238">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:DemoAppC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x768a2178"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x75bff108"/></to>
    </wire>
    <wire loc="79:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x75bff108"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x75be38d0"/></to>
    </wire>
    <wire loc="26:DemoAppC.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x7689de68"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x75bfe678"/></to>
    </wire>
    <wire loc="82:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x75bfe678"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x75be1198"/></to>
    </wire>
    <wire loc="27:DemoAppC.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x7689b750"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x75bfb398"/></to>
    </wire>
    <wire loc="83:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x75bfb398"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x75be09b8"/></to>
    </wire>
    <wire loc="28:DemoAppC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x768b0d18"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x75952258"/></to>
    </wire>
    <wire loc="51:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x75952258"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x74d59d58"/></to>
    </wire>
    <wire loc="29:DemoAppC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x768e86d0"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x75bfb800"/></to>
    </wire>
    <wire loc="84:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x75bfb800"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x75be0e20"/></to>
    </wire>
    <wire loc="30:DemoAppC.nc">
      <from><interface-ref name="DisseminationControl" scoped="" ref="0x768f3e70"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7675d430"/></to>
    </wire>
    <wire loc="51:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7675d430"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x76759010"/></to>
    </wire>
    <wire loc="31:DemoAppC.nc">
      <from><interface-ref name="IntTemp" scoped="" ref="0x768ecec0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x75946ca8"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x75946ca8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x74d51618"/></to>
    </wire>
    <wire loc="32:DemoAppC.nc">
      <from><interface-ref name="Temp" scoped="" ref="0x768eebb8"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x75628078"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x75628078"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x74ccfdf0"/></to>
    </wire>
    <wire loc="33:DemoAppC.nc">
      <from><interface-ref name="DisseminationPeriod" scoped="" ref="0x768f40f0"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x75c5e010"/></to>
    </wire>
    <wire loc="59:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationValue" scoped="" ref="0x75c5e010"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x74ee6a80"/></to>
    </wire>
    <wire loc="34:DemoAppC.nc">
      <from><interface-ref name="Update" scoped="" ref="0x768ef070"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x75c5ee30"/></to>
    </wire>
    <wire loc="60:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x75c5ee30"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x74ee58d0"/></to>
    </wire>
    <wire loc="35:DemoAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x768e5de0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x766c71c8"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x766c71c8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x766ad310"/></to>
    </wire>
    <wire loc="36:DemoAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x768a9e68"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x766c6e68"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x766c6e68"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x766aac78"/></to>
    </wire>
    <wire loc="38:DemoAppC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7689bc90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x75626b20"/></to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x75626b20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x755e73a8"/></to>
    </wire>
    <wire loc="39:DemoAppC.nc">
      <from><interface-ref name="SerialAMSend" scoped="" ref="0x76894bb0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x75623470"/>
      <arguments>
        <value cst="I:150">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:DemoAppC.nc">
      <from><interface-ref name="SerialReceive" scoped="" ref="0x7689a420"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x75623e30"/>
      <arguments>
        <value cst="I:150">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:DemoAppC.nc">
      <from><interface-ref name="SerialPacket" scoped="" ref="0x7689c410"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x756221d0"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x756221d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7561d850"/></to>
    </wire>
    <wire loc="43:DemoAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7688d9e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x761c4e28"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x761c4e28"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x761be528"/></to>
    </wire>
    <wire loc="44:DemoAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x76885210"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7541a238"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7541a238"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x75e67618"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:DemoP.nc">
      <from><interface-ref name="sendSerialPacket" scoped="" ref="0x768837e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76869c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x74bd7770"/></to>
    </wire>
    <wire loc="59:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76869c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x755e7010"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76869c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x74c7e2c8"/></to>
    </wire>
    <wire loc="37:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76869c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x75766010"/></to>
    </wire>
    <wire loc="96:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76869c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x74d35070"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76869c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x758dcc88"/></to>
    </wire>
    <wire loc="46:/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76869c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x74e030a0"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76869c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x74e15e00"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76869c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x74e1e658"/></to>
    </wire>
    <wire loc="153:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76869c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x75984e80"/></to>
    </wire>
    <wire loc="178:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76869c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x75b19030"/></to>
    </wire>
    <wire loc="229:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76869c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x75aa2090"/></to>
    </wire>
    <wire loc="71:/home/pi/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76869c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x74ed35d0"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76869c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x75db7de8"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76869c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x75df3ed0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76869c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x75e11280"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76869c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x75e23570"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76869c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x75e358b0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76869c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x75edc1f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76869c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x75f76c98"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76869c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x75ffe290"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76869c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x765cc4b0"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76869c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x75045120"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76869c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x762d2e48"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76869c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x76639d70"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x76867bd8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x76ba1a78"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x76ba1a78"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x76927da0"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x76850240"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x76868480"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x76868480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x76868e40"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x76850648"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x76869c28"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x76863288"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x76864338"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x76864338"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x76864b88"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x76863668"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x76865460"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x76863a48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x761abf28"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x76864b88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x768411e0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7684a2a0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x768415b0"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x769108a8"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x76840010"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7681c628"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x767aa050"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7680e548"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x767a7e78"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x768145f8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x767ad350"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x76804930"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x76799be8"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x768175f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x767afb98"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x76808e68"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x76799510"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x76801438"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7678cb08"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7680b468"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x767968f8"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7681ae68"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x767da2c8"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x76805788"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x767a2e88"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x76809e98"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x767a27b0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7680d0e0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x767a3cb8"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x76814e98"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x767a9198"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x76802278"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x76795b08"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7680dcd0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7679eb00"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x76817db8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x767aaaa8"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7681d1f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x767fe3a0"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x76807638"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x76795430"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x768229e8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x767af140"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7680a010"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x767918f8"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7680fca8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x767b2430"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x76804090"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7679dcc8"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x76815d58"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x767dad20"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x768086a8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7679d5f0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x76802b18"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x76790b08"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7680c8c8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7679aa20"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x76813750"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x767dfd58"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x76807df8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x76790430"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x76806eb8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x767a5010"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x768065f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7678c430"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x768096d8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x767a68f0"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7680ab80"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7678d8f8"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x767e13d0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x767e1068"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x767e1728"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x76789558"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x767e1a80"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x767899e0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x767b2be8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x767fe3a0"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x767b1890"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x767e1068"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x767adb08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x767fe3a0"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x767ac7b0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x767e1068"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x767a9950"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x767fe3a0"/></to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x767a85f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x767e1068"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x767dee50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x767deae8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x767dd1d0"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x76789e68"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x767dd528"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x76786300"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x767a57c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x767dfd58"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x767a4430"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x767deae8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x767a0650"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x767dfd58"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7679f278"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x767deae8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7679c510"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x767dfd58"/></to>
    </wire>
    <wire loc="144:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7679b190"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x767deae8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x76798430"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x767dfd58"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x76797080"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x767deae8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x76794350"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x767dfd58"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x76793010"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x767deae8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7678f350"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x767dfd58"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7678e010"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x767deae8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7678b350"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x767dfd58"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7678a010"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x767deae8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76926670"/></to>
    </wire>
    <wire loc="55:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x76923b08"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x76ba2928"/></to>
    </wire>
    <wire loc="58:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x76759010"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x76754a38"/></to>
    </wire>
    <wire loc="59:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x7674f250"/></from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x76758010"/></to>
    </wire>
    <wire loc="60:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x7674fd40"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x767513d8"/></to>
    </wire>
    <wire loc="61:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x7674d828"/></from>
      <to><interface-ref name="DisseminatorControl" scoped="" ref="0x76751ea8"/></to>
    </wire>
    <wire loc="64:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7674dc60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x76750bb8"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x76750bb8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x753365d0"/></to>
    </wire>
    <wire loc="67:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7674c358"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x75c975c0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x75c975c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x766c6478"/>
      <arguments>
        <value cst="I:96">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeAMSend" scoped="" ref="0x7674c740"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x75c91070"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x75c91070"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x74f0d750"/></to>
    </wire>
    <wire loc="74:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeReceive" scoped="" ref="0x7674cec0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x75c8e5c0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x75c8e5c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x766c6478"/>
      <arguments>
        <value cst="I:97">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7674b230"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x75c8cef0"/></to>
    </wire>
    <wire loc="20:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x753365d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7532cc58"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x76721310"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x75336c68"/></to>
    </wire>
    <wire loc="21:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x75336c68"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7532e708"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x767219a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x75334318"/></to>
    </wire>
    <wire loc="22:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x75334318"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7532eda0"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x75c9a5d0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x75334f10"/></to>
    </wire>
    <wire loc="23:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x75334f10"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7532da30"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7532e708"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x766c6e68"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7532eda0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x766c5568"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7532da30"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x766c3238"/></to>
    </wire>
    <wire loc="25:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="SubAMSend" scoped="" ref="0x7532b360"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7532e070"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7532e070"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x75323328"/></to>
    </wire>
    <wire loc="26:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Lpl" scoped="" ref="0x7532ba18"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x766b44f8"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x766b44f8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x766a7660"/></to>
    </wire>
    <wire loc="27:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x75329010"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x75d28920"/></to>
    </wire>
    <wire loc="9:../../../tos/system/SystemLowPowerListeningC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x75d28920"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x75d25570"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x766c5568"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x766aa060"/></to>
    </wire>
    <wire loc="85:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x766c3238"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x766a3dc8"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x753239f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x766f8220"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x75322150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x766c5568"/></to>
    </wire>
    <wire loc="53:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x766f8220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x766f47a8"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x766f4f18"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x766c7aa0"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x766c7aa0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x766adbe8"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x766cc5d8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x766c5568"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x766cb230"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x766c6e68"/></to>
    </wire>
    <wire loc="169:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x766cb908"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x766cbd40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x766ad310"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7669ccd0"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x766adbe8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x75d07100"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x766c6b10"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x766accd0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x766accd0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x75d06178"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x766aac78"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x75d05190"/></to>
    </wire>
    <wire loc="89:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x766bec70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x75f27860"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x75f27860"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x75f1d260"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x766a7660"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7668de28"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x766c6478"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x766ac638"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x766ac638"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x75d07ac0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x766a3dc8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7668d4d0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x766aa060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x75d064e8"/></to>
    </wire>
    <wire loc="90:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x766c1670"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x75f24288"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x75f24288"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x75f1cc50"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7669ccd0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x75dba610"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7669dda8"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x75d03238"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x76696ab8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x75d05b88"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x766a3570"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7668ec08"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7668ec08"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x75f2bdc8"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7668de28"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x75dbb530"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7668d4d0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x75f286e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x766a2010"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7668c498"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7668c498"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x75d19d10"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x766a0230"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7668da60"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7668da60"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x75f27208"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x75cff4f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7668f6c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x75d03a88"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7668e0e8"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7668e0e8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x75df8b40"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x75d02220"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7668e870"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7668e870"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x75df7320"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x75d00460"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x76068720"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x75d025b8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x75f2bdc8"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x75f2bdc8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x75f217e0"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x75d02dd8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x75f28c60"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x75f28c60"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x75f1e630"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x75d01390"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7663adf8"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7663adf8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x76636900"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x75d00ba0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x766882d0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x766882d0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x76684010"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x75cffbb8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x761c4e28"/></to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x75dba610"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x75d6a2b0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x75f27208"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x75f1ebc0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x75d19d10"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x75d13180"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x75df8b40"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x75df19b8"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x75dbb530"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x75db4200"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x766915a8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x75df8770"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x75df8770"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x75df15e8"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x75f286e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x75f1e0b0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7668f6c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x75df99a0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x75df99a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x75df2720"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7668fe08"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x75df8090"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x75df8090"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x75df2e60"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x76691988"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x75df7700"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x75df7700"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x75def540"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x75df7320"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x75def160"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x75db7168"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x76689200"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x76689200"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x76685250"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x75df6298"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x75e297f0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x75e297f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x75e26e90"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x75e26010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x75d19610"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x75d19610"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x75d164c8"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x75d164c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x75dbbb18"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x75dbbb18"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x75db47e8"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x75db95a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x76689808"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x76689808"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x76685858"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x75df7ea8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x75dba278"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x75dba278"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x75db4ec8"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x75db9d10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x75e27628"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x75e27628"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x75e14af8"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x75e27e78"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x76689f08"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x76689f08"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x75f77b60"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x75f77b60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x75f73a40"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x76684800"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x76645ba8"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x76645ba8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x766361c8"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7667e9c0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x76641ea0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x76641ea0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x76635a40"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x76682420"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x76009c00"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x76682420"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x75f77180"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x75f77180"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x75f73060"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x76009c00"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x75ffe630"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7667a9f0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x760060f0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x760060f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x75ffeb28"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x76681278"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x76006808"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x76006808"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x75ffc2d0"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7667d810"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x75f2bdc8"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x76676010"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x75f28c60"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x766776e0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x75e34c40"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x75e34c40"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x75e316e0"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x76670838"/></from>
      <to><interface-ref name="State" scoped="" ref="0x75e39970"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x75e39970"/></from>
      <to><interface-ref name="State" scoped="" ref="0x762d5d98"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x76677b28"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x761c4e28"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7666ea00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7666e1f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x76672998"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x766409d0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x766335a0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x766311c8"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x765cca78"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x765cca78"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x765c6c80"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x76626d80"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x76539a08"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x76539a08"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x76407a58"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7662a840"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x765378f0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x765378f0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x763ff2a0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x76629300"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x76536d00"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x76536d00"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x763fa2a0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x766223e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x763e9ef0"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x763e9ef0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x76343ad0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x76618a98"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x760b3e28"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x760b3e28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x76325890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x766198b8"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x760b14e8"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x760b14e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x76619cd0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x760b1ef0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x760b1ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x76618678"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x760b2da0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x760b2da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x76618158"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x760b0260"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x760b0260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7661b660"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x760ab190"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x760ab190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7661bb68"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x760aa2b0"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x760aa2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x766240a0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x760aa6e8"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x760aa6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x766245c0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x760ad270"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x760ad270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x76624ae0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x760ad6a8"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x760ad6a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7661dee8"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x760a38c0"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x760a38c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7661d998"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x760a3488"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x760a3488"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7661c010"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x760acbd8"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x760acbd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7661c508"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x760adae0"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x760adae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7661ca10"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x760ac368"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x760ac368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x76617a18"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x76099e88"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x76099e88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x76325890"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x76617268"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x76080980"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x76080980"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x76325890"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7661f350"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x76068720"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x766329a8"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x76067ae0"/></to>
    </wire>
    <wire loc="23:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x76067ae0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x760561d8"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x76610328"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x76611b20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x765cc4b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x765c6808"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x765c6808"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x752ecb98"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x765c6c80"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x752eb010"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x752ecb98"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x752e8c68"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x752eb010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x752e4b48"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x752e8c68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x752d9628"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x752e1870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x752e70e8"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x752e70e8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x752d9aa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x752e2630"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x765805a8"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x765805a8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7657e908"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x752d64b8"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x752dca90"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x752dca90"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x765b38e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x752d5170"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x752db6b0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x752db6b0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x765b0890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x752d5ba8"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x752da170"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x752da170"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x765af698"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x765b38e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x76813750"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x765b0890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7680e548"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x765af698"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x768096d8"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x765b38e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x76813750"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x765b0890"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7680dcd0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x765af698"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x768086a8"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x765b38e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x76813750"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x765b0890"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7680c8c8"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x765af698"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x76808e68"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x765b38e8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x76813750"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x765b0890"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7680b468"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x765af698"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x76807638"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x765b38e8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x76813750"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x765b0890"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7680a010"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x765af698"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x76807df8"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x765b38e8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x76813750"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x765b0890"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7680ab80"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x765af698"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x768065f8"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x76560b40"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7657d118"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7657d118"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7657bae8"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x76573ca0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x76813750"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x765384c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x764042a0"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x76538ed0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x76402a68"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x76539010"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x764122d0"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x765362f8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x763fda58"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x76412c48"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x76528bc8"/></to>
    </wire>
    <wire loc="442:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x76528bc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764b6148"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x76406430"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7650e3e8"/></to>
    </wire>
    <wire loc="473:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7650e3e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7647ed68"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x76404c18"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x76529a08"/></to>
    </wire>
    <wire loc="441:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x76529a08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764b9948"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x76401430"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7652a558"/></to>
    </wire>
    <wire loc="438:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7652a558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764d63a8"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x763ffc18"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7650aae8"/></to>
    </wire>
    <wire loc="477:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7650aae8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76474d68"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x763fc430"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7650f288"/></to>
    </wire>
    <wire loc="472:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7650f288"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764805f8"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x763fac18"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7650b928"/></to>
    </wire>
    <wire loc="476:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7650b928"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764765f8"/></to>
    </wire>
    <wire loc="455:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7651dd88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7649dd68"/></to>
    </wire>
    <wire loc="531:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x764f4f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764955f8"/></to>
    </wire>
    <wire loc="551:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x764dfc98"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7644ad68"/></to>
    </wire>
    <wire loc="532:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x764f2068"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76493d68"/></to>
    </wire>
    <wire loc="460:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7651a178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76498d68"/></to>
    </wire>
    <wire loc="486:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x765034c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76464d68"/></to>
    </wire>
    <wire loc="497:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x764fa368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76450d68"/></to>
    </wire>
    <wire loc="535:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x764ef4c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7648ed68"/></to>
    </wire>
    <wire loc="545:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x764e5280"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7645ad68"/></to>
    </wire>
    <wire loc="557:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x764da288"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764475f8"/></to>
    </wire>
    <wire loc="445:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x76524178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764af730"/></to>
    </wire>
    <wire loc="536:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x764ee680"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7648b5f8"/></to>
    </wire>
    <wire loc="450:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x765224c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764aa5f8"/></to>
    </wire>
    <wire loc="463:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x76517688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764905f8"/></to>
    </wire>
    <wire loc="489:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x76500a08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7645c5f8"/></to>
    </wire>
    <wire loc="500:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x764f7848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764475f8"/></to>
    </wire>
    <wire loc="440:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x76530848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764bb220"/></to>
    </wire>
    <wire loc="453:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7651fa08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764a2de8"/></to>
    </wire>
    <wire loc="466:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x76514bc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76488d68"/></to>
    </wire>
    <wire loc="530:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x764f5d80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764955f8"/></to>
    </wire>
    <wire loc="548:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x764e2758"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764525f8"/></to>
    </wire>
    <wire loc="555:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x764db168"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764475f8"/></to>
    </wire>
    <wire loc="541:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x764ead80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764665f8"/></to>
    </wire>
    <wire loc="471:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x76510010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76483e68"/></to>
    </wire>
    <wire loc="484:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x76505178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76469d68"/></to>
    </wire>
    <wire loc="495:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x764fc010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76455d68"/></to>
    </wire>
    <wire loc="549:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x764e1918"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76450d68"/></to>
    </wire>
    <wire loc="538:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x764ed838"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7646fd68"/></to>
    </wire>
    <wire loc="443:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x76527d88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764b48a0"/></to>
    </wire>
    <wire loc="456:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7651b010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7649a5f8"/></to>
    </wire>
    <wire loc="493:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x764ffbc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7645ad68"/></to>
    </wire>
    <wire loc="461:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x76519368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764955f8"/></to>
    </wire>
    <wire loc="474:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7650d5a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7647b5f8"/></to>
    </wire>
    <wire loc="487:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x76502688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764615f8"/></to>
    </wire>
    <wire loc="498:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x764f94c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7644d5f8"/></to>
    </wire>
    <wire loc="540:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x764ebbc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76469d68"/></to>
    </wire>
    <wire loc="451:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x76521688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764a7d68"/></to>
    </wire>
    <wire loc="464:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x76516848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7648ed68"/></to>
    </wire>
    <wire loc="542:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x764e7010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76488d68"/></to>
    </wire>
    <wire loc="546:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x764e43d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764575f8"/></to>
    </wire>
    <wire loc="552:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x764dee58"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764475f8"/></to>
    </wire>
    <wire loc="482:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x76508e68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7646fd68"/></to>
    </wire>
    <wire loc="543:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x764e6170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764855f8"/></to>
    </wire>
    <wire loc="454:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7651ebc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7649f5f8"/></to>
    </wire>
    <wire loc="467:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x76513d88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764855f8"/></to>
    </wire>
    <wire loc="539:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x764eca00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7646c5f8"/></to>
    </wire>
    <wire loc="550:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x764e0ad8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7644d5f8"/></to>
    </wire>
    <wire loc="485:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x76504368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764665f8"/></to>
    </wire>
    <wire loc="496:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x764fb178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764525f8"/></to>
    </wire>
    <wire loc="444:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x76525010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764b1030"/></to>
    </wire>
    <wire loc="494:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x764fed88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764575f8"/></to>
    </wire>
    <wire loc="449:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x76523368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764ade50"/></to>
    </wire>
    <wire loc="462:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x765184c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76493d68"/></to>
    </wire>
    <wire loc="475:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7650c768"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76479d68"/></to>
    </wire>
    <wire loc="488:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x76501848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7645fd68"/></to>
    </wire>
    <wire loc="499:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x764f8688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7644ad68"/></to>
    </wire>
    <wire loc="439:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x76531688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764beaa0"/></to>
    </wire>
    <wire loc="452:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x76520848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764a45f8"/></to>
    </wire>
    <wire loc="465:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x76515a08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7648b5f8"/></to>
    </wire>
    <wire loc="478:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x76509ca8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764715f8"/></to>
    </wire>
    <wire loc="534:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x764f0348"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764905f8"/></to>
    </wire>
    <wire loc="547:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x764e3598"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76455d68"/></to>
    </wire>
    <wire loc="533:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x764f11a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x764905f8"/></to>
    </wire>
    <wire loc="483:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x76506010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7646c5f8"/></to>
    </wire>
    <wire loc="554:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x764dc010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7644ad68"/></to>
    </wire>
    <wire loc="558:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x764d93e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7645c5f8"/></to>
    </wire>
    <wire loc="529:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x764f6a28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76498d68"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x763e97f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x763e89f0"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x763eb618"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7634b540"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x763e7010"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7680d0e0"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x763e7a48"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x76805788"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x763dc270"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7650f288"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7634c190"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x763d3010"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x763d3010"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x763c7608"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7634bb38"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x763d4c58"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x763d4c58"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x763c9288"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x763cd8e0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x763c1010"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x763d2a38"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x763c5070"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x763d0c18"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x763c4288"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x763d7dd8"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x763c8448"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x763ce6e8"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x763c3cf8"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x763d38c0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x763c7eb8"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x763cc1a8"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x763c18c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x763cf528"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x763c4b38"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x763d66e8"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x763c8cf8"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x763cd030"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x763c26e8"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x763d2188"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x763c6798"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x763d0368"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x763c5920"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x763d7528"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x763c9b38"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x763cfdd8"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x763c3448"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x760b1190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x760aba00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x760a62b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x760abe38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x760a0b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x760a1a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x760b1b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x760a4190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x760a1190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x760a75c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x760a9880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x760b2530"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7631d010"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7631d010"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7631ae38"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x760b0910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x760b0c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x760a4c00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x760af080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x760a15c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x760a5cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x760adf18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x760a5448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x760a66e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x760a5880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x760a06e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x760a1e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x760a9cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x760a6b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x760a3cf8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x760aab20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7609f010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7631d8a0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x760b2a48"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x760afde0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x760ac7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x760a7a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x760a7e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x760ab5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x760af3d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x760afa88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x760b05b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x760a3050"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x760a02b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x760a7190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x760a5010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x760b1840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x760a9010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x760af730"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x760a9448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x760a45c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7609f6e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7631d8a0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7631d8a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x76316100"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7631b300"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x76316b28"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7631bac8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x763152f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x76325890"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x76317688"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x76315aa8"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7630b848"/></from>
      <to><interface-ref name="State" scoped="" ref="0x762d7d08"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x762d7d08"/></from>
      <to><interface-ref name="State" scoped="" ref="0x762d5d98"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x76315ee8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x760c7db0"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x760c7db0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7509d3b8"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x76313ec8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x762d44f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x762d44f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7509de88"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7630b378"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x762d4828"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x762d4828"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7509b7a8"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x76311010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x761c4e28"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7630ddd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x762d5d98"/></from>
      <to><interface-ref name="State" scoped="" ref="0x762cf4a8"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7509b7a8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x76285820"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7509de88"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x76283b40"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7509d3b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7628cd48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7509da70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x75097898"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x75097898"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7618b320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x76283b40"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7623e7f0"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7509b1d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x76283ee8"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x76283ee8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7623eb28"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x76284a78"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7509bbc0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x75090b50"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x762836e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x76284028"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x750971e0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x750971e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7618d8a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x76282d50"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x75094870"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x75094870"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x761909a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x762836e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7623e3c8"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x76285820"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7623d208"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7628cd48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7627dbc8"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7623de48"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x76284a78"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7623d6e8"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x76284028"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x76239970"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x76282d50"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7623b1d0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x76235ee8"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x76235ee8"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7622c1a0"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x76239d88"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x761c4e28"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x76238a50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7622d3d0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x762290b8"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x762307a8"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7622aad0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x76210ef8"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x764f5d80"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7620e030"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x764f2068"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7620d168"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x764f11a0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7620c280"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x764ee680"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7620a3d8"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x764ef4c0"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x76211380"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7612b030"/></to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x761abf28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x761be1e0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x761bd240"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x761ac110"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x761ac110"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x761aac58"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x761bdc28"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x761acb18"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x761acb18"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x761a7440"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x761bc660"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x761ab5a0"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x761ab5a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x761a5cd8"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x761a95f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x765034c8"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x761a7db8"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x76502688"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x761a46d0"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x76501848"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x75094c88"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7618d238"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x75093010"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x76134ba8"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x76134ba8"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7612b030"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x75096170"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x76235ee8"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x75097cb0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7618b7a8"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7618b7a8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x76138ab0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7618a010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x75090b50"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7618b320"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x76138010"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x76138010"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x75044cf8"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x761909a0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x761899b0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7618d8a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x761398a0"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x761398a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x750445b8"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7618d238"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x76189e90"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x76138ab0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x750437e8"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x76137010"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7618a010"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x761889b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x76138ab0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x76188240"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x762307a8"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x76188678"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7622d3d0"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x76138418"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x75043150"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x75043ca8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x76137010"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x75042170"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x75045458"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x75040358"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x76128c58"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7622c1a0"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x76125518"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x764f5d80"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x76124678"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x764f11a0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x76092bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x76097190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x76093270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x76090a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7608c2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x76090e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x76086b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x76087a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x76097b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x76089190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x76087190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x76093ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x76092368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7608d5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7608e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7608f2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x76098550"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7631d010"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x76095910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x76095c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x76089c00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x76094080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x760875c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x76095260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7608acb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x76093f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x760936a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x76098dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7608a448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7608c6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7608a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x760866e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x76087e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7608ecb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7608cb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x76088cf8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7608fb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x76084010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7631d8a0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x76098a68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x76094de0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x760927a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7608da00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7608f6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7608de38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x76090190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x760974e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x760905c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x760943d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x76094a88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x760888c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x76088488"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x760955b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x76088050"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x760862b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7608d190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7608a010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x76097840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x76097ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7608e010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x76094730"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7608e448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x760895c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x760846e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7631d8a0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x76079880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7607fc28"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7607ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x760786a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x76074e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x76078ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7606d6e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7606e5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7607e6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x76072cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7606fcf8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7607a6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x76079010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x76074190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x76075468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x76078f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7607f060"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7631d010"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7607d4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7607d840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x760717c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7607dc18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7606e190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7607ed70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x76072880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7607ab20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7607a2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7607f8d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x76072010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x760732b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x76072448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7606d2b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7606ea00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x760758a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x760736e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7606f8c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x760777a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7606db20"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7631d8a0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7607f578"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7607ca18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x76079448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x760745c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x76077368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x76074a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x76079db8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7607e010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x76078270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7607c010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7607c6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7606f488"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7606f050"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7607d190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x76071c00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7606ee38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x76075cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x76073b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7607e368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7607ea18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x76077bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7607c368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x76075030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x76071190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7606c270"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7631d8a0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x76056db8"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7604fb08"/></to>
    </wire>
    <wire loc="20:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7604fb08"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7604a888"/></to>
    </wire>
    <wire loc="16:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x760450e0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7603d010"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7603d010"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7603c4e8"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x760455e0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7603abc8"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7603d4e8"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7604cbe8"/></to>
    </wire>
    <wire loc="11:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7604cbe8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7600f010"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x76036588"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x760243e8"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x760243e8"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x76019d60"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7603c9c0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7603d4e8"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x76022860"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x76015610"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x76015610"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x76013388"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x760124b8"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7681d1f8"/></to>
    </wire>
    <wire loc="9:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7600f988"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7651fa08"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x760058d8"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x75ffcbc8"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x76005d40"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x75ffb0b8"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x75ffb680"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x765cca78"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x75ff5d88"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x76539010"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x75ff4830"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x76539a08"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x75ff02f0"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x765362f8"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x75ff5710"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x763e97f0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x75ff0d30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x75f95d88"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x75f95d88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x76325890"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x75fef4a8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x75f944f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x75f944f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7631d010"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x75feec48"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x75f94a08"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x75f94a08"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x75fed098"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x75f93840"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x75f93840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x75fed4c8"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x75f93b98"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x75f93b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x75fed8f8"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x75f91910"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x75f91910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x75fee760"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x75f8e368"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x75f8e368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x75fefa68"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x75f806e8"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x75f806e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7631d8a0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x75fee258"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x75f83190"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x75f83190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x75fedd38"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x75f8f6a8"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x75f8f6a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x75fec7b0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x75f8c5c8"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x75f8c5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x75feccd0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x75f8ca00"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x75f8ca00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x75fec370"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x75f90730"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x75f90730"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x75feabc8"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x75f826e8"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x75f826e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x75fea220"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x75f83a00"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x75f83a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x75fea6e8"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x75f83e38"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x75f83e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x75fe6978"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x75f77620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x75f77620"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x75f73500"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x75ff90e0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x75f2bdc8"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x75ff9920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x75f28c60"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x75ff8088"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x75f27860"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x75ff5040"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x75f23a00"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x75f23a00"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x75f19400"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x75fe6ea0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x761c4e28"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x75f8ebd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x75f93190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x75f8f270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x75f882b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x75f8ce38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x75f82b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x75f85190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x75f8fae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x75f895c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x75f8a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x75f8b2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x75f91c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x75f85c00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x75f90080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x75f835c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x75f91260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x75f86cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x75f8ff18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x75f94d60"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x75f86448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x75f886e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x75f86880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x75f8acb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x75f88b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x75f84cf8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x75f8bb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x75f80010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7631d8a0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x75f90de0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x75f8e7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x75f89a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x75f8b6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x75f89e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x75f8c190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x75f934e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x75f903d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x75f90a88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x75f848c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x75f84488"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x75f915b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x75f84050"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x75f822b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x75f89190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x75f86010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x75f93ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x75f8a010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x75f8a448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x75f855c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x75f76010"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x75f73ed8"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x75f671a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x761c4e28"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x75f722c0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x76539a08"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x75f72cc8"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x765384c0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x75f71768"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x76538ed0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x75f702a8"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x763eb618"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x75f70968"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x75e61138"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x75e61138"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x76325890"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x75f6f128"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x75e4d2b0"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x75e4d2b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7631d8a0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x75f6fce0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x75e5e840"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x75e5e840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x75f6f8b0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x75e5eef0"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x75e5eef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x75f6e1f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x75f2bdc8"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x75f6ea30"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x75f28c60"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x75f6c2b0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x75f27860"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x75f6d010"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7663adf8"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x75f6ae98"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x75e598a0"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x75e598a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x75f69408"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x75e59cd8"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x75e59cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x75f6aa58"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x75e5d660"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x75e5d660"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x75f68318"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x75e4ee38"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x75e4ee38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x75f698d0"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x75e50cb8"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x75e50cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x75f69d98"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x75e4e190"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x75e4e190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x75f68818"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x75e50880"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x75e50880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x75f68d00"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x75e61d08"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x75e61d08"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x75f60378"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x75ee60a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x765805a8"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x75f17010"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x75ee76b8"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x75f17a68"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x75edacd8"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x75edacd8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x75e72730"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x75edc9a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x75e9fbd0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x75edc1f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x75ed7758"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x75ed7758"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x74fb77d8"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x75e76010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x75ebb758"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x75ea4a48"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x75ed7bb0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x75ed7bb0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x74fb36b8"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x75e710e8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x75ed0cc8"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x75ed0cc8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x75eca5c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x74fb77d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x74fa7060"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x74faf3b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x74fb7c30"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x74fb7c30"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x74fa74d8"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x74fb0180"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x75ed0cc8"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x74fa6e48"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x74faa480"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x74faa480"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x765b38e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x74fa5a70"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x74fa9090"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x74fa9090"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x765b0890"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x74f934f0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x74fa9ac8"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x74fa9ac8"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x765af698"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x75ec9870"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7657d118"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x75ea24d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x75e73260"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x75e6d4c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x75e67618"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x75e67618"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x75edc9a0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x75e5ae38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x75e5f3d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x75e5c4b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x75e545c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x75e58190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x75e5fde0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x75e52448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x75e50448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x75e5cd28"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x75e5a5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x75e56880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x75e57b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x75e585c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x75e617f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7631d010"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x75e5eb98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x75e52eb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x75e5d308"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x75e5e4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x75e52010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x75e5a190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x75e5c8f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x75e5f080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x75e536e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x75e54a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x75e53b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x75e4ea00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x75e56010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x75e54e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x75e50010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x75e58e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x75e5c080"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x75e5aa00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x75e56cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x75e58a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x75e54190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x75e59468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x75e5f730"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x75e5dd10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x75e51b90"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x75e51758"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x75e51320"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x75e4e5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7631b300"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x75e56448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x75e532b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x75e5fa88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x75e5e190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x75e572b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x75e5d9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x75e576e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x75e52880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7631bac8"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x75e4d988"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7631d8a0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x75e34380"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x75e35dd0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x75e37060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x75e358b0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x75e23960"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x75e26010"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x75e22060"/></from>
      <to><interface-ref name="State" scoped="" ref="0x75e25f10"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x75e25f10"/></from>
      <to><interface-ref name="State" scoped="" ref="0x762d5d98"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x75e22818"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x75e34c40"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x75e22cb8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x75f28c60"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x75e27a50"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x75e14f20"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x75e116a8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x75e27e78"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x75e11a68"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x75f28c60"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x75defcb0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x75df6298"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x75dee4c0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x75df7ea8"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x75dee858"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x75f2bdc8"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x75ded108"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x75f28c60"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x75ded6c0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x75dc1220"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x75dd35c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x75d6a2b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x75d65490"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x75dbac80"/></from>
      <to><interface-ref name="State" scoped="" ref="0x75d30b30"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x75d30b30"/></from>
      <to><interface-ref name="State" scoped="" ref="0x762d5d98"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x75db2e38"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x75db7168"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x75db2a18"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x75db9d10"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x75db32d8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x75db95a8"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x75dafac0"/></from>
      <to><interface-ref name="SplitControlState" scoped="" ref="0x75d6a970"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x75d6a970"/></from>
      <to><interface-ref name="State" scoped="" ref="0x75d3dad0"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="RadioPowerState" scoped="" ref="0x75daf240"/></from>
      <to><interface-ref name="RadioPowerState" scoped="" ref="0x75d69240"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="RadioPowerState" scoped="" ref="0x75d69240"/></from>
      <to><interface-ref name="State" scoped="" ref="0x75d3e8e8"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x75db08a0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x75d30b30"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="OffTimer" scoped="" ref="0x75da8490"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x75d2fdc0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x75d2fdc0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x75e67618"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SendDoneTimer" scoped="" ref="0x75da5880"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x75d2bc20"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x75d2bc20"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x75e67618"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="PowerCycle" scoped="" ref="0x75da9748"/></from>
      <to><interface-ref name="PowerCycle" scoped="" ref="0x75d6dcf0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="PowerCycle" scoped="" ref="0x75d6dcf0"/></from>
      <to><interface-ref name="PowerCycle" scoped="" ref="0x75d69f20"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="Resend" scoped="" ref="0x75db3a60"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x760060f0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x75db0310"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7668d4d0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x75da9cc8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x75f28c60"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x75db21d0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x766882d0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x75da3a88"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x75e34c40"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x75da3eb0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x761c4e28"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x75d9d448"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x75d28920"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <from><interface-ref name="send" scoped="" ref="0x75d9f720"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <from><interface-ref name="startRadio" scoped="" ref="0x75d9c7a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="110:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <from><interface-ref name="resend" scoped="" ref="0x75d9ff10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <from><interface-ref name="stopRadio" scoped="" ref="0x75d9a010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x75d3e8e8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x762d5d98"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x75d3dad0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x762d5d98"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x75d5fbb0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x760058d8"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x75d5e030"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x76005d40"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x75d5e4a8"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x75f76010"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x75d62ef8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x76689200"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x75d606a8"/></from>
      <to><interface-ref name="SendState" scoped="" ref="0x75dbac80"/></to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="RadioPowerState" scoped="" ref="0x75d615b0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x75d3e8e8"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x75d61e30"/></from>
      <to><interface-ref name="State" scoped="" ref="0x75d3dad0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="OnTimer" scoped="" ref="0x75d65bf8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x75d3cdb8"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x75d3cdb8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x75e67618"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x75d60e50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x761c4e28"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <from><interface-ref name="startRadio" scoped="" ref="0x75d5c308"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <from><interface-ref name="getCca" scoped="" ref="0x75d5cb48"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <from><interface-ref name="stopRadio" scoped="" ref="0x75d5dad8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x75d38c00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x75e67618"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x75d13938"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7668d4d0"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x75c978d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x766c6e68"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x75c93010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x766c5568"/></to>
    </wire>
    <wire loc="20:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x74f0d750"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x74f03e88"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x75c91708"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x74f0dde8"/></to>
    </wire>
    <wire loc="21:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x74f0dde8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x74f05960"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x75c91da0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x74f0c4d0"/></to>
    </wire>
    <wire loc="22:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x74f0c4d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x74f04010"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x75c90a30"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x74f0a170"/></to>
    </wire>
    <wire loc="23:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x74f0a170"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x74f04c08"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x74f05960"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x766c6e68"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x74f04010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x766c5568"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x74f04c08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x766c3238"/></to>
    </wire>
    <wire loc="25:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="SubAMSend" scoped="" ref="0x74f02580"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x74f052c8"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x74f052c8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x74efa420"/></to>
    </wire>
    <wire loc="26:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Lpl" scoped="" ref="0x74f02c38"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x766b44f8"/></to>
    </wire>
    <wire loc="27:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x74f00230"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x75d28920"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x74efaae8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x766f8220"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x74ef9230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x766c5568"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x75c8e8d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x766c6e68"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x75c8d010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x766c5568"/></to>
    </wire>
    <wire loc="63:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x76758010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x74ee3280"/></to>
    </wire>
    <wire loc="64:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x76751ea8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="StdControl" scoped="" ref="0x74ee65d8"/></to>
    </wire>
    <wire loc="67:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x767513d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x75c60788"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x74ee3a18"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x761c4e28"/></to>
    </wire>
    <wire loc="62:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <from><interface-ref name="changedTask" scoped="" ref="0x74ee26d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationTimerP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x75c60788"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x75c5ae28"/></to>
    </wire>
    <wire loc="63:/home/pi/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x75c5ae28"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x74ed3980"/></to>
    </wire>
    <wire loc="65:/home/pi/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x74ed2100"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x74ecb010"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x74ecb010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x75e67618"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/pi/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x74ece5b0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x75e34c40"/></to>
    </wire>
    <wire loc="67:/home/pi/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Changed" scoped="" ref="0x74ecfc40"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x74ec67f8"/></to>
    </wire>
    <wire loc="68:/home/pi/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Pending" scoped="" ref="0x74ecf2e8"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x74ec7060"/></to>
    </wire>
    <wire loc="70:/home/pi/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x74ece9a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x761c4e28"/></to>
    </wire>
    <wire loc="154:/home/pi/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <from><interface-ref name="timerTask" scoped="" ref="0x74ecd5f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x75be0e20"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x75985070"/></to>
    </wire>
    <wire loc="122:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x75be38d0"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x75b17150"/></to>
    </wire>
    <wire loc="76:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x75bfa5d8"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x75be4d68"/></to>
    </wire>
    <wire loc="119:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x75be4d68"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x75b186d0"/></to>
    </wire>
    <wire loc="78:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x75bfa930"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x75be3190"/></to>
    </wire>
    <wire loc="120:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x75be3190"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x75b189f8"/></to>
    </wire>
    <wire loc="75:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x75c009c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x75be46c0"/></to>
    </wire>
    <wire loc="118:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x75be46c0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x75b18310"/></to>
    </wire>
    <wire loc="73:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x75c018f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x75be55a8"/></to>
    </wire>
    <wire loc="115:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x75be55a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x75b197d8"/></to>
    </wire>
    <wire loc="168:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x75be1198"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x75985548"/></to>
    </wire>
    <wire loc="74:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x75c00318"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x75be4010"/></to>
    </wire>
    <wire loc="117:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x75be4010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x75b19f18"/></to>
    </wire>
    <wire loc="124:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x75be09b8"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x75b168d0"/></to>
    </wire>
    <wire loc="85:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x75bec2a0"/></from>
      <to><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x75bdf3f0"/></to>
    </wire>
    <wire loc="151:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x75bdf3f0"/></from>
      <to><interface-ref name="Routing" scoped="" ref="0x75986a88"/></to>
    </wire>
    <wire loc="80:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x75bf1618"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x75be20c0"/></to>
    </wire>
    <wire loc="123:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x75be20c0"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x75b178c8"/></to>
    </wire>
    <wire loc="116:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x75be6e38"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x75b19348"/></to>
    </wire>
    <wire loc="148:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x75be6e38"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x75984150"/></to>
    </wire>
    <wire loc="149:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x75be6e38"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x75aa4578"/></to>
    </wire>
    <wire loc="87:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x75bdfdf0"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x75beb490"/></to>
    </wire>
    <wire loc="88:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x75bd81e8"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x75be6178"/></to>
    </wire>
    <wire loc="193:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x75bdadf8"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x75aa3538"/></to>
    </wire>
    <wire loc="121:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x75b063a8"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x75bdfdf0"/></to>
    </wire>
    <wire loc="128:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="QEntryPool" scoped="" ref="0x75b0d328"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x75ae6e40"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x75ae6e40"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x74e131e0"/></to>
    </wire>
    <wire loc="129:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="MessagePool" scoped="" ref="0x75b0b840"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x75afd950"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x75afd950"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x74e1ea00"/></to>
    </wire>
    <wire loc="132:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x75b104c8"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x75ae1158"/></to>
    </wire>
    <wire loc="135:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SentCache" scoped="" ref="0x75b0ad98"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x75ace0c0"/></to>
    </wire>
    <wire loc="44:/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="Cache" scoped="" ref="0x75ace0c0"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x74e03468"/></to>
    </wire>
    <wire loc="140:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x75b12bc8"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x75aa3538"/></to>
    </wire>
    <wire loc="154:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconSend" scoped="" ref="0x75982200"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x75aa4a00"/></to>
    </wire>
    <wire loc="155:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconReceive" scoped="" ref="0x759828b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x75aa3198"/></to>
    </wire>
    <wire loc="156:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x75982bd0"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x75aa3538"/></to>
    </wire>
    <wire loc="158:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CompareBit" scoped="" ref="0x7597ae98"/></from>
      <to><interface-ref name="CompareBit" scoped="" ref="0x75a9fe68"/></to>
    </wire>
    <wire loc="160:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x75981770"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x766c5568"/></to>
    </wire>
    <wire loc="161:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x75980410"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x766c71c8"/></to>
    </wire>
    <wire loc="162:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconTimer" scoped="" ref="0x75980a78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x75ab2b98"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x75ab2b98"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x75e67618"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RouteTimer" scoped="" ref="0x7597ece0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x75aae9a0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x75aae9a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x75e67618"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x7597a408"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x75bd81e8"/></to>
    </wire>
    <wire loc="165:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x75b04408"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x75bd81e8"/></to>
    </wire>
    <wire loc="166:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x75b07190"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x75985548"/></to>
    </wire>
    <wire loc="167:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x7597aaa0"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x75b168d0"/></to>
    </wire>
    <wire loc="172:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RetxmitTimer" scoped="" ref="0x75b14978"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x75973a70"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x75973a70"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x75e67618"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7597a010"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x75e34c40"/></to>
    </wire>
    <wire loc="176:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x75b04010"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x75e34c40"/></to>
    </wire>
    <wire loc="179:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x75b16d18"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x75aa9e18"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x75aa9e18"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x74dea3b8"/></to>
    </wire>
    <wire loc="180:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x75b08b10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x75a22ce8"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x75a22ce8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x766c6478"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="181:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x75b08e48"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x75a1f758"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMSnooperC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x75a1f758"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x766c6b10"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="182:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x75b11d48"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x75a244d0"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x75a244d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x74deaa50"/></to>
    </wire>
    <wire loc="183:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x75b07d68"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x75985070"/></to>
    </wire>
    <wire loc="184:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x75b11770"/></from>
      <to><interface-ref name="Routing" scoped="" ref="0x75986a88"/></to>
    </wire>
    <wire loc="185:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x75b04ac0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x766c71c8"/></to>
    </wire>
    <wire loc="186:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x75b143f0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x75a23790"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x75a23790"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x74de9d48"/></to>
    </wire>
    <wire loc="187:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x75b067d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x75a24b68"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x75a24b68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x74de9150"/></to>
    </wire>
    <wire loc="188:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x75b053f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x761c4e28"/></to>
    </wire>
    <wire loc="195:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x75a9d560"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x75e34c40"/></to>
    </wire>
    <wire loc="197:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x75aa1210"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7596ed70"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7596ed70"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x74d7e780"/></to>
    </wire>
    <wire loc="198:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x75aa0dd8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7596adc8"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7596adc8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x766c6478"/>
      <arguments>
        <value cst="I:112">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="199:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x75aa0670"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7596d4d0"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7596d4d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x74d7ee18"/></to>
    </wire>
    <wire loc="200:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x75aa1990"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7596db68"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7596db68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x74d7d4d0"/></to>
    </wire>
    <wire loc="224:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x75a9d208"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x766a0230"/></to>
    </wire>
    <wire loc="234:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x75b02190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x74e02250"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x75be20c0"/></to>
    </wire>
    <wire loc="20:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x74dea3b8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x74de0550"/></to>
    </wire>
    <wire loc="21:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x74deaa50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x74de3070"/></to>
    </wire>
    <wire loc="22:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x74de9150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x74de3708"/></to>
    </wire>
    <wire loc="23:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x74de9d48"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x74de1330"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x74de3070"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x766c6e68"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x74de3708"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x766c5568"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x74de1330"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x766c3238"/></to>
    </wire>
    <wire loc="25:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="SubAMSend" scoped="" ref="0x74de0c38"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x74de69a0"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x74de69a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x74ddb9d8"/></to>
    </wire>
    <wire loc="26:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Lpl" scoped="" ref="0x74ddf330"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x766b44f8"/></to>
    </wire>
    <wire loc="27:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x74ddf8e8"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x75d28920"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x74dd8180"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x766f8220"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x74dd8818"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x766c5568"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x75a21030"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x766c6e68"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x75a216c8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x766c5568"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMSnooperC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x75a1fa70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x766c6e68"/></to>
    </wire>
    <wire loc="57:../../../tos/system/AMSnooperC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x75a1e150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x766c5568"/></to>
    </wire>
    <wire loc="269:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <from><interface-ref name="updateRouteTask" scoped="" ref="0x75979678"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="388:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <from><interface-ref name="sendBeaconTask" scoped="" ref="0x75979240"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="20:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x74d7e780"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x74d74a90"/></to>
    </wire>
    <wire loc="21:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x74d7ee18"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x74d76580"/></to>
    </wire>
    <wire loc="22:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x74d7d4d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x74d76c18"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7596b790"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x74d7c170"/></to>
    </wire>
    <wire loc="23:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x74d7c170"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x74d75870"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x74d76580"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x766c6e68"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x74d76c18"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x766c5568"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x74d75870"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x766c3238"/></to>
    </wire>
    <wire loc="25:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="SubAMSend" scoped="" ref="0x74d731a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x74d7aeb0"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x74d7aeb0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x74d6fee8"/></to>
    </wire>
    <wire loc="26:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="Lpl" scoped="" ref="0x74d73858"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x766b44f8"/></to>
    </wire>
    <wire loc="27:../../../tos/system/LplAMSenderC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x74d73e10"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x75d28920"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x74d6b5d0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x766f8220"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x74d6bc68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x766c5568"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x75969150"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x766c6e68"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x759697e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x766c5568"/></to>
    </wire>
    <wire loc="52:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x759528f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x74d574d0"/></to>
    </wire>
    <wire loc="47:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x74d574d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x75bfa930"/></to>
    </wire>
    <wire loc="46:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x74d59d58"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x75c018f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x75beb490"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x74d535b8"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x74d51618"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x75929e90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x759458c8"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x74d4e460"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x74d4e460"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x75771970"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x74d50290"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x756fd888"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x74d4dbd8"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x756fd888"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7591f660"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x74d50290"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7591c010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x74d49310"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x74d49310"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x758df2a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="ResourceRead" scoped="" ref="0x75921eb8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x74d4bbe8"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x74d4bbe8"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x757f3ea0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x74d48558"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x74d50290"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/adc12/AdcP.nc">
      <from><interface-ref name="readDone" scoped="" ref="0x75903a68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x74d49b68"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x758dd010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x74d48070"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x758dd900"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x757f09a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x758e2740"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x74d40258"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x74d48558"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x757ee638"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x74d418d8"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="MultiChannel" scoped="" ref="0x758dd010"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x758d71f8"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="DMAExtension" scoped="" ref="0x758dc120"/></from>
      <to><interface-ref name="DMAExtension" scoped="" ref="0x758d5310"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x758dd900"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x758d7ae8"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x758df2a8"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x758d84e0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x758e2740"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x758529f8"/></to>
    </wire>
    <wire loc="98:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x758529f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x74d343d8"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ADCArbiterInfo" scoped="" ref="0x758d5868"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x757ff5f0"/></to>
    </wire>
    <wire loc="100:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x757ff5f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x74d34f20"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x758cc538"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x758549f0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x758caa08"/></from>
      <to><interface-ref name="Port60" scoped="" ref="0x764ffbc8"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x758c9ba8"/></from>
      <to><interface-ref name="Port61" scoped="" ref="0x764fed88"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x758c8d68"/></from>
      <to><interface-ref name="Port62" scoped="" ref="0x764fc010"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x758c7f28"/></from>
      <to><interface-ref name="Port63" scoped="" ref="0x764fb178"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x758c5070"/></from>
      <to><interface-ref name="Port64" scoped="" ref="0x764fa368"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x758c4178"/></from>
      <to><interface-ref name="Port65" scoped="" ref="0x764f94c8"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x758c3348"/></from>
      <to><interface-ref name="Port66" scoped="" ref="0x764f8688"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x758c14a8"/></from>
      <to><interface-ref name="Port67" scoped="" ref="0x764f7848"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x758d4620"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7681d1f8"/></to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x758d3368"/></from>
      <to><interface-ref name="ControlA0" scoped="" ref="0x7681ae68"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x758d3eb8"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x768229e8"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x758cba08"/></from>
      <to><interface-ref name="CompareA0" scoped="" ref="0x76815d58"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x758ca258"/></from>
      <to><interface-ref name="CompareA1" scoped="" ref="0x768175f8"/></to>
    </wire>
    <wire loc="99:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x757ff1e8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x74d34b18"/></to>
    </wire>
    <wire loc="101:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x74d333f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x757ffaa0"/></to>
    </wire>
    <wire loc="103:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x74d33820"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x74d353a8"/></to>
    </wire>
    <wire loc="68:../../../tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x74d33e18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="ClientResource" scoped="" ref="0x757f3ea0"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x757ecdf8"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x757b18f0"/></from>
      <to><interface-ref name="AdcResource" scoped="" ref="0x757f09a0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="Config" scoped="" ref="0x757af378"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x757ee638"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_1_5V" scoped="" ref="0x757b00e0"/></from>
      <to><interface-ref name="RefVolt_1_5V" scoped="" ref="0x757ed598"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_2_5V" scoped="" ref="0x757b07b8"/></from>
      <to><interface-ref name="RefVolt_2_5V" scoped="" ref="0x757edc70"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOnTimer" scoped="" ref="0x757e8468"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x757921c8"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x757921c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x75e67618"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffTimer" scoped="" ref="0x757e6888"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7578f0c0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7578f0c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x75e67618"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x757e3c40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7578ceb0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7578ceb0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x75e67618"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x757e92d0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x758549f0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <from><interface-ref name="switchOff" scoped="" ref="0x757ae940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x74d12070"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x74d4dbd8"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7576c5d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x74d4dbd8"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7576be18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x74d15738"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x74d15738"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x757f3ea0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7576b260"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x74d15dd0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x74d15dd0"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x758df2a8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x75771970"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x75724010"/></to>
    </wire>
    <wire loc="32:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x75762100"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7576c5d8"/></to>
    </wire>
    <wire loc="33:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x75708ec0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7576be18"/></to>
    </wire>
    <wire loc="35:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x757237d8"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x75766780"/></to>
    </wire>
    <wire loc="38:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x75764280"/></from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7576b260"/></to>
    </wire>
    <wire loc="39:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x75762b48"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x75727690"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x75727690"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x74d086b8"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="bufferDone" scoped="" ref="0x7574a4d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamDone" scoped="" ref="0x75752448"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamFail" scoped="" ref="0x7574fc88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x75727238"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x74d0c810"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x74d0c810"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x74cfc1c8"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x74d043b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x74d0cc68"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x74d0cc68"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x74cfc640"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x74d06180"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x75ed0cc8"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x74cfa010"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x74d004f8"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x74d004f8"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x765b38e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x74cfac08"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x74cfe170"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x74cfe170"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x765b0890"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x74cf96b0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x74cfeba8"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x74cfeba8"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x765af698"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x74d13690"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x758dd010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x74d13b68"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x758dd900"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x757f09a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x758e2740"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x74cd4978"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x74d12070"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x757ee638"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x74cd4010"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumidityMetadata" scoped="" ref="0x75627ba8"/></from>
      <to><interface-ref name="HumidityMetadata" scoped="" ref="0x74cce9b8"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0x75627010"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x74cceda0"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TemperatureMetadata" scoped="" ref="0x75628c10"/></from>
      <to><interface-ref name="TemperatureMetadata" scoped="" ref="0x74ccfa08"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x74ccd950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x756c8bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Temp" scoped="" ref="0x74ccb728"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x756c56c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumResource" scoped="" ref="0x74ccb050"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x756c8bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Hum" scoped="" ref="0x74cca278"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x756c56c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="SensirionSht11" scoped="" ref="0x756c56c8"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7567e4d8"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x756c8bf0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x75673010"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x75673010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x756542e8"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7567d050"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0x75673778"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x75673778"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x75671c50"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0x7567d9c8"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0x75672210"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x75672210"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7566e438"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7567c358"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0x75672c98"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x75672c98"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x75658f28"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7567c9c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x75630dc0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x75630dc0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x75e67618"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x75679ba8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x761c4e28"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="readSensor" scoped="" ref="0x75678cc8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="signalStatusDone" scoped="" ref="0x75678890"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x756542e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x74c7d7a0"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x756705f0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x76527d88"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7566edb0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x76525010"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7566a6d0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x76524178"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="PWR" scoped="" ref="0x756639c8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7566bcc0"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x756623e8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x75671c50"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x75662de0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7566e438"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x756656f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x75666c70"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x75666c70"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x75e67618"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x75657530"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x763d38c0"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x75651ca0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x75665010"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x75650cc0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x75653510"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x75653510"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x74c7c998"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x75650628"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x75654e30"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x75654e30"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x74c7c300"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x75661c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x75654a28"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x74c7dee0"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x74c7ce58"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x756539c0"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x74c7b290"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x74c7e600"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x74c7a510"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x74c5f230"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x75651ca0"/></to>
    </wire>
    <wire loc="81:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x74c5f7e8"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x75650310"/></to>
    </wire>
    <wire loc="83:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x74c5fb00"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x75650628"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x74c5e230"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x75650cc0"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x74c5e668"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x74c5eaa0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x755e73a8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x755de2c8"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x75623470"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7561e1e8"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x75623e30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7561e928"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x756215b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7561dee8"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x756228c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7561ec50"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x755e7010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x755e4f10"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x755e1e80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x75621ae8"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x755eb430"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x755e6288"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x755ebae8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x755e7c68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x755e1978"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x75423810"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x755e6288"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x75566988"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x755e7c68"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x755665c8"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7552b138"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x755e1978"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x755d87b8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x755e1e80"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7552a150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x755e1e80"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x75524260"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x755e1e80"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7552b620"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x755d7bd8"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7552baf8"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x755d9a80"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x755d4f10"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x75528668"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x755d6500"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x75527330"/></to>
    </wire>
    <wire loc="17:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x75527330"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7542ee98"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7551e9a0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x755277b0"/></to>
    </wire>
    <wire loc="13:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x755277b0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x75430e68"/></to>
    </wire>
    <wire loc="332:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x755a2be8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x755c3b28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x755a3400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x755a0880"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7552ad68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x75529270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x75509098"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7542f6f0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7542f6f0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x75500238"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x75430e68"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x75502648"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7542fcc8"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7542b3c0"/></to>
    </wire>
    <wire loc="19:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7542b750"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x75430398"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x75430398"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x75503470"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x75430a50"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x74c11030"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x74c11030"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x754505e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x754ff6d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7542fcc8"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x74c0e4a8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x75503eb8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x75500bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x74c12950"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x74c12950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x75451af8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x754ffe98"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x74c0e090"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x74c0e090"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x754513a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x75503eb8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x754fcb20"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x75500238"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x754bf930"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x75502648"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x754bf010"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x75503470"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x754fc3c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x754be770"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x754ff6d0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x754be010"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x75500bf0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x754bb3e8"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x754ffe98"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x754bead8"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x754b6a88"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x754b6a88"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x754ae438"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x754bb930"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7545e010"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7545e010"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7657d118"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x754baa40"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x761c4e28"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x754b1348"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x754abd70"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x754b65e0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x754b1f28"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x754aa358"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x764eca00"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x754a94b8"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x764ebbc0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x754a8678"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x764ead80"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x754a7838"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x764e6170"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x754a69f8"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x764e7010"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x74c11860"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x754b6a88"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x74c11448"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x75450a68"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x75450a68"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7544a978"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7544f238"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x74c0e4a8"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x754505e0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7544be98"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7544be98"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x74bd53a8"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x754513a8"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7544fea8"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x75451af8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7544b758"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7544b758"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x74bd6c10"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7544a978"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x74bd5e48"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7544d720"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x754b1348"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7544ae28"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7544f238"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7544de90"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7544a978"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x75447c60"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7544a2e0"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7544a2e0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x74bd57b0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x75447550"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x754b65e0"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x74bd3338"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7544ae28"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x74bd3760"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x74bd7aa8"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x74bd2970"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x74bb8248"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x75447550"/></to>
    </wire>
    <wire loc="82:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x74bb8640"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x75447948"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x74bb8958"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x75447c60"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x74bb7010"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x75446310"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="DemoP" loc="4:DemoP.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="DisseminationC" loc="46:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationC.nc">
      <documentation loc="35:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationC.nc">
        <short>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol.</short>
        <long>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol. StdControl controls all of the trickle&#10; timers used for all of the keys. &#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP" loc="47:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <documentation loc="35:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
        <short>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.</short>
        <long>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.&#10;&#10; TODO: Hook DisseminationProbe up to the serial instead of the radio.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineImplP" loc="45:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <documentation loc="33:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
        <short>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.</short>
        <long>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC" loc="47(DisseminationEngineP.DisseminationSendC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC" loc="3(DisseminationEngineP.DisseminationSendC.SenderC):../../../tos/system/LplAMSenderC.nc">
      <instance number="0">
        <component-ref qname="LplAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC" loc="47(DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
        <long>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b740"/>
            <typename><typedef-ref name="TMicro" ref="0x7688b920"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b740"/>
            <typename><typedef-ref name="TMicro" ref="0x7688b920"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
          <value cst="I:15">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DefaultLplC" loc="41:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <documentation loc="86:../../../tos/chips/cc2420/lpl/DefaultLpl.h">
        <short>&#10; The minimum number of samples that must be taken in CC2420DutyCycleP&#10; that show the channel is not clear before a detection event is issued&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="DefaultLplP" loc="47:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DefaultLpl.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Tony O'Donovan&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PowerCycleC" loc="39:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
        <short>&#10; Use this component to duty cycle the radio.</short>
        <long>&#10; Use this component to duty cycle the radio. When a message is heard, &#10; disable DutyCycling.&#10;&#10; @author David Moss dmm@rincon.com&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PowerCycleP" loc="56:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DefaultLpl.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Tony O'Donovan&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PowerCycleC.RadioPowerStateC" loc="65(PowerCycleC.RadioPowerStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PowerCycleC.SplitControlStateC" loc="65(PowerCycleC.SplitControlStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PowerCycleC.OnTimerC" loc="44(PowerCycleC.OnTimerC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PowerCycleC.CheckTimerC" loc="44(PowerCycleC.CheckTimerC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DefaultLplC.SendStateC" loc="65(DefaultLplC.SendStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DefaultLplC.OffTimerC" loc="44(DefaultLplC.OffTimerC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DefaultLplC.SendDoneTimerC" loc="44(DefaultLplC.SendDoneTimerC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SystemLowPowerListeningC" loc="1:../../../tos/system/SystemLowPowerListeningC.nc">
      <configuration/>
    </component>
    <component qname="SystemLowPowerListeningP" loc="3:../../../tos/system/SystemLowPowerListeningP.nc">
      <module/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP" loc="1(DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP):../../../tos/system/LplAMSenderP.nc">
      <instance number="0">
        <component-ref qname="LplAMSenderP"/>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationReceiveC" loc="43(DisseminationEngineP.DisseminationReceiveC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC" loc="47(DisseminationEngineP.DisseminationProbeSendC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC" loc="3(DisseminationEngineP.DisseminationProbeSendC.SenderC):../../../tos/system/LplAMSenderC.nc">
      <instance number="1">
        <component-ref qname="LplAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC" loc="47(DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP" loc="1(DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP):../../../tos/system/LplAMSenderP.nc">
      <instance number="1">
        <component-ref qname="LplAMSenderP"/>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeReceiveC" loc="43(DisseminationEngineP.DisseminationProbeReceiveC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:../../../tos/system/NoLedsC.nc">
      <documentation loc="35:../../../tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DemoAppC.Object32C" loc="49(DemoAppC.Object32C):/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <documentation loc="35:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorC"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.Object32C.DisseminatorP" loc="45(DemoAppC.Object32C.DisseminatorP):/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <documentation loc="33:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008-02-16 01:31:50 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7686a828"/></type-var>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP" loc="44:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationTimerP.nc">
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC" loc="51(DisseminationTimerP.TrickleTimerMilliC):/home/pi/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerMilliC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP" loc="51(DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP):/home/pi/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerImplP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC" loc="44(DisseminationTimerP.TrickleTimerMilliC.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.PendingVector):../../../tos/system/BitVectorC.nc">
      <documentation loc="34:../../../tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.ChangeVector):../../../tos/system/BitVectorC.nc">
      <documentation loc="34:../../../tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CollectionC" loc="45:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <documentation loc="34:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP" loc="77:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <documentation loc="66:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP.Forwarder" loc="107(CtpP.Forwarder):/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <instance number="0">
        <component-ref qname="CtpForwardingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.MessagePoolP" loc="41(CtpP.MessagePoolP):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
            <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.MessagePoolP.PoolP" loc="53(CtpP.MessagePoolP.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x75afb198"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.QEntryPoolP" loc="41(CtpP.QEntryPoolP):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x75bd02f8"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x75bd05a8"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.QEntryPoolP.PoolP" loc="53(CtpP.QEntryPoolP.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x75afb198"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SendQueueP" loc="42(CtpP.SendQueueP):../../../tos/system/QueueC.nc">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x75bd02f8"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x75bd05a8"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:13">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SentCacheP" loc="38(CtpP.SentCacheP):/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <documentation loc="32:/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SentCacheP.CacheP" loc="43(CtpP.SentCacheP.CacheP):/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <documentation loc="32:/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RoutingBeaconTimer" loc="44(CtpP.RoutingBeaconTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.RouteUpdateTimer" loc="44(CtpP.RouteUpdateTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkEstimatorP" loc="42:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <module/>
    </component>
    <component qname="CtpP.AMSenderC" loc="47(CtpP.AMSenderC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC" loc="3(CtpP.AMSenderC.SenderC):../../../tos/system/LplAMSenderC.nc">
      <instance number="2">
        <component-ref qname="LplAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC.DirectAMSenderC" loc="47(CtpP.AMSenderC.SenderC.DirectAMSenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC.DirectAMSenderC.AMQueueEntryP" loc="43(CtpP.AMSenderC.SenderC.DirectAMSenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC.LplAMSenderP" loc="1(CtpP.AMSenderC.SenderC.LplAMSenderP):../../../tos/system/LplAMSenderP.nc">
      <instance number="2">
        <component-ref qname="LplAMSenderP"/>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.AMReceiverC" loc="43(CtpP.AMReceiverC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSnooperC" loc="44(CtpP.AMSnooperC):../../../tos/system/AMSnooperC.nc">
      <documentation loc="33:../../../tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSnooperC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.Router" loc="107(CtpP.Router):/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <documentation loc="38:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CtpRoutingEngineP"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:128">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512000">
            <type-int cname="long" size="I:4" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RetxmitTimer" loc="44(CtpP.RetxmitTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl" loc="47(CtpP.SendControl):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC" loc="3(CtpP.SendControl.SenderC):../../../tos/system/LplAMSenderC.nc">
      <instance number="3">
        <component-ref qname="LplAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC.DirectAMSenderC" loc="47(CtpP.SendControl.SenderC.DirectAMSenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC.DirectAMSenderC.AMQueueEntryP" loc="43(CtpP.SendControl.SenderC.DirectAMSenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SendControl.SenderC.LplAMSenderP" loc="1(CtpP.SendControl.SenderC.LplAMSenderP):../../../tos/system/LplAMSenderP.nc">
      <instance number="3">
        <component-ref qname="LplAMSenderP"/>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.ReceiveControl" loc="43(CtpP.ReceiveControl):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.CollectionSenderC" loc="43(DemoAppC.CollectionSenderC):/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
      <documentation loc="32:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionSenderC"/>
        <arguments>
          <value cst="I:238">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.CollectionSenderC.CollectionSenderP" loc="34(DemoAppC.CollectionSenderC.CollectionSenderP):/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <instance number="0">
        <component-ref qname="CollectionSenderP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x768fd2a8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.CollectionSenderC.CollectionSenderP.CollectionIdP" loc="45(DemoAppC.CollectionSenderC.CollectionSenderP.CollectionIdP):/home/pi/tinyos-main/tos/lib/net/CollectionIdP.nc">
      <documentation loc="35:/home/pi/tinyos-main/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionIdP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x768fd2a8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DemoAppC.InternalTempC" loc="44(DemoAppC.InternalTempC):../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
      <documentation loc="32:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
        <short>&#10; Msp430InternalTemperatureC is the temperature sensor available on&#10; the msp430-based platforms.</short>
        <long>&#10; Msp430InternalTemperatureC is the temperature sensor available on&#10; the msp430-based platforms.&#10;&#10; To convert from ADC counts to temperature, convert to voltage by&#10; dividing by 4096 and multiplying by Vref (1.5V). Then subtract&#10; 0.986 from voltage and divide by 0.00355 to get degrees C.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:10 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InternalTemperatureC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.InternalTempC.AdcReadClientC" loc="47(DemoAppC.InternalTempC.AdcReadClientC):../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AdcP" loc="36:../../../tos/chips/msp430/adc12/AdcP.nc" safe="">
      <module/>
    </component>
    <component qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient" loc="43(DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P" loc="37:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <configuration/>
    </component>
    <component qname="Msp430Adc12ImplP" loc="37:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc" safe="">
      <module/>
    </component>
    <component qname="HplAdc12P" loc="45:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter" loc="83(Msp430Adc12P.Arbiter):../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <documentation loc="62:../../../tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleRoundRobinArbiterC"/>
        <arguments>
          <value cst="S:Msp430Adc12C.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Queue" loc="42(Msp430Adc12P.Arbiter.Queue):../../../tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:../../../tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Arbiter" loc="49(Msp430Adc12P.Arbiter.Arbiter):../../../tos/system/SimpleArbiterP.nc">
      <documentation loc="30:../../../tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP" loc="50:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
        <short> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter.</short>
        <long> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter. It checks whether the client's&#10; adc configuration requires the internal reference voltage generator of the&#10; MSP430 to be enabled during the conversion by inspecting the client's&#10; configuration data (using the &#60;code>AdcConfigure&#60;/code> interface). If so it&#10; makes sure that Resource.granted() is held back until the reference voltage&#10; is stable. Clients SHOULD NOT wire to &#60;code>Msp430RefVoltArbiterP&#60;/code> but&#10; to the Resource interface provided by&#10; &#60;code>Msp430Adc12ClientAutoRVGC&#60;/code>.&#10; &#10; @author Jan Hauer&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltGeneratorP" loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterImplP" loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOnDelayTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffDelayTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffSettleTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="DemoAppC.InternalTempC.AdcReadStreamClientC" loc="47(DemoAppC.InternalTempC.AdcReadStreamClientC):../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadStreamClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP" loc="19:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <documentation loc="10:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
        <short>&#10; Support component for AdcReadStreamClientC.</short>
        <long>&#10; Support component for AdcReadStreamClientC.&#10;&#10; @author David Gay&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AdcStreamP" loc="46:../../../tos/chips/msp430/adc12/AdcStreamP.nc" safe="">
      <documentation loc="39:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
        <short>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).</short>
        <long>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm" loc="41(WireAdcStreamP.Alarm):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom" loc="41(WireAdcStreamP.Alarm.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer" loc="37(WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm" loc="43(WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm.Transform" loc="51(WireAdcStreamP.Alarm.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.ArbitrateReadStream" loc="23(WireAdcStreamP.ArbitrateReadStream):../../../tos/system/ArbitratedReadStreamC.nc">
      <documentation loc="10:../../../tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadStreamC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient" loc="43(DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430InternalTemperatureP" loc="34:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureP.nc">
      <module/>
    </component>
    <component qname="DemoAppC.TempC" loc="45(DemoAppC.TempC):../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.TempC.SensirionSht11ReaderP" loc="45(DemoAppC.TempC.SensirionSht11ReaderP):../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <instance number="0">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C" loc="43:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
        <short>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform.</short>
        <long>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform. This component provides the SensirionSht11&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht11C.SensirionSht11LogicP" loc="53(HalSensirionSht11C.SensirionSht11LogicP):../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <documentation loc="35:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C" loc="43:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
        <short>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them.</short>
        <long>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them. You&#10; really shouldn't be wiring to this, unless you're writing a new&#10; Sensirion SHT11 driver.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.6 $ $Date: 2007-02-04 19:56:29 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.DATAM" loc="42(HplSensirionSht11C.DATAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SCKM" loc="42(HplSensirionSht11C.SCKM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.PWRM" loc="42(HplSensirionSht11C.PWRM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11P" loc="42:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <documentation loc="34:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
        <short>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.</short>
        <long>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.TimerMilliC" loc="44(HplSensirionSht11C.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.InterruptDATAC" loc="43(HplSensirionSht11C.InterruptDATAC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter" loc="89(HplSensirionSht11C.Arbiter):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht11.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Queue" loc="42(HplSensirionSht11C.Arbiter.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Arbiter" loc="52(HplSensirionSht11C.Arbiter.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC" loc="67(HplSensirionSht11C.SplitControlPowerManagerC):../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager" loc="58(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):../../../tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C.TimerMilliC" loc="44(HalSensirionSht11C.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="3">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:../../../tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DemoAppC.TimerMilliC" loc="44(DemoAppC.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x76800d78" loc="40:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x767fd010" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x767fd258" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x767fd470" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x767fd688" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x767fd898" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x767fdac0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x767fdce8" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x767fc010" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x767dc668" loc="40:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x767dc8c8" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x76720308" loc="47:../../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LplAMSenderC" loc="3:../../../tos/system/LplAMSenderC.nc" abstract="">
      <parameters>
        <constant name="AMId" ref="0x7671d880" loc="3:../../../tos/system/LplAMSenderC.nc">
          <component-ref qname="LplAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7670b408" loc="47:../../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x76707f28" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x766f66e8" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x765a1d40" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x765a1d40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7657cc40" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7657cc40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7657fec0" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7657fec0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7656f368" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7656f368"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7656f5d0" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7656f5d0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7656fa48" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7656fa48"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7656fcb0" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7656e150" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7656e150"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x76586a48" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x76586a48"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x76586eb0" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x76586eb0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7655b168" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7655b168"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7655b5e0" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7655b5e0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7655b848" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x764d57b8" loc="40:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x764d59e8" loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x764d5c18" loc="42:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x764d5e48" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x764d4068" loc="44:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7617a4e8" loc="89:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x76174948" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x76162640" loc="52:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x760237d0" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x760237d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x76023c08" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x76023c08"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x75f1f580" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x75f1f580"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x75eba058" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x75eba058"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x75ea1b18" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x75ea1b18"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x75ea1cf8" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LplAMSenderP" loc="1:../../../tos/system/LplAMSenderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x75c99dd8" loc="43:../../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorC" loc="49:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorC.nc" abstract="">
      <documentation loc="35:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7686a828" loc="49:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7686a828"/></type-var>
        </typedef>
        <constant name="key" ref="0x7686aa18" loc="49:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorP" loc="45:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorP.nc" abstract="">
      <documentation loc="33:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008-02-16 01:31:50 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x75c7b3e8" loc="45:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
          <component-ref qname="DisseminatorP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75c7b3e8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TrickleTimerMilliC" loc="51:/home/pi/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x75c5d978" loc="51:/home/pi/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x75c5db88" loc="52:/home/pi/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x75c5dd68" loc="53:/home/pi/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x75c59010" loc="54:/home/pi/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TrickleTimerImplP" loc="51:/home/pi/tinyos-main/tos/lib/net/TrickleTimerImplP.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x75c58528" loc="51:/home/pi/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x75c58738" loc="52:/home/pi/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x75c58918" loc="53:/home/pi/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x75c58b20" loc="54:/home/pi/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
        </constant>
        <constant name="scale" ref="0x75c58d28" loc="55:/home/pi/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BitVectorC" loc="44:../../../tos/system/BitVectorC.nc" abstract="">
      <documentation loc="34:../../../tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="max_bits" ref="0x75c1d7d8" loc="44:../../../tos/system/BitVectorC.nc">
          <component-ref qname="BitVectorC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CtpForwardingEngineP" loc="107:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:../../../tos/system/PoolC.nc" abstract="">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x75afb198" loc="41:../../../tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x75afb198"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x75afb3b8" loc="41:../../../tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:../../../tos/system/PoolP.nc" abstract="">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x75af9700" loc="53:../../../tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x75af9700"/></type-var>
        </typedef>
        <constant name="size" ref="0x75af98f0" loc="53:../../../tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:../../../tos/system/QueueC.nc" abstract="">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x75ae2378" loc="42:../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x75ae2378"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x75ae25a0" loc="42:../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="LruCtpMsgCacheC" loc="38:/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc" abstract="">
      <documentation loc="32:/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="CACHE_SIZE" ref="0x75ad0c10" loc="38:/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
          <component-ref qname="LruCtpMsgCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LruCtpMsgCacheP" loc="43:/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc" abstract="">
      <documentation loc="32:/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x75acb710" loc="43:/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
          <component-ref qname="LruCtpMsgCacheP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSnooperC" loc="44:../../../tos/system/AMSnooperC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x75a1d010" loc="44:../../../tos/system/AMSnooperC.nc">
          <component-ref qname="AMSnooperC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CtpRoutingEngineP" loc="107:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc" abstract="">
      <documentation loc="38:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="routingTableSize" ref="0x75a12130" loc="107:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
        </constant>
        <constant name="minInterval" ref="0x75a12370" loc="107:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </constant>
        <constant name="maxInterval" ref="0x75a125b0" loc="107:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CollectionSenderC" loc="43:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc" abstract="">
      <documentation loc="32:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x75953700" loc="43:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
          <component-ref qname="CollectionSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x768fd2a8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionSenderP" loc="34:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc" abstract="">
      <parameters>
        <constant name="collectid" ref="0x7594d270" loc="35:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x768fd2a8"/></typename>
          </type-int>
        </constant>
        <constant name="clientid" ref="0x7594d488" loc="35:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionIdP" loc="45:/home/pi/tinyos-main/tos/lib/net/CollectionIdP.nc" abstract="">
      <documentation loc="35:/home/pi/tinyos-main/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x7594cf18" loc="45:/home/pi/tinyos-main/tos/lib/net/CollectionIdP.nc">
          <component-ref qname="CollectionIdP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x768fd2a8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InternalTemperatureC" loc="44:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
        <short>&#10; Msp430InternalTemperatureC is the temperature sensor available on&#10; the msp430-based platforms.</short>
        <long>&#10; Msp430InternalTemperatureC is the temperature sensor available on&#10; the msp430-based platforms.&#10;&#10; To convert from ADC counts to temperature, convert to voltage by&#10; dividing by 4096 and multiplying by Vref (1.5V). Then subtract&#10; 0.986 from voltage and divide by 0.00355 to get degrees C.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:10 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="47:../../../tos/chips/msp430/adc12/AdcReadClientC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Adc12ClientAutoRVGC" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleRoundRobinArbiterC" loc="83:../../../tos/system/SimpleRoundRobinArbiterC.nc" abstract="">
      <documentation loc="62:../../../tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x758314c0" loc="83:../../../tos/system/SimpleRoundRobinArbiterC.nc">
          <component-ref qname="SimpleRoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:../../../tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7582b010" loc="42:../../../tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:../../../tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Adc12ConfAlertC" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadStreamClientC" loc="47:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc" abstract="">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadStreamC" loc="23:../../../tos/system/ArbitratedReadStreamC.nc" abstract="">
      <documentation loc="10:../../../tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="nClients" ref="0x757222f0" loc="23:../../../tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
        </constant>
        <typedef name="val_t" ref="0x757224c8" loc="23:../../../tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x757224c8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11C" loc="45:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11ReaderP" loc="45:../../../tos/chips/sht11/SensirionSht11ReaderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11LogicP" loc="53:../../../tos/chips/sht11/SensirionSht11LogicP.nc" abstract="">
      <documentation loc="35:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:../../../tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:../../../tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:../../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="RootControl" ref="0x768e86d0" loc="14:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x768e86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x768e88a8"/>
        <function-ref name="setRoot" scoped="" ref="0x768e8988"/>
        <function-ref name="unsetRoot" scoped="" ref="0x768e8a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionPacket" ref="0x768a2178" loc="21:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionPacket" scoped="" ref="0x768a2178"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x768a23d0"/>
        <function-ref name="setOrigin" scoped="" ref="0x768a24b0"/>
        <function-ref name="setType" scoped="" ref="0x768a2590"/>
        <function-ref name="getOrigin" scoped="" ref="0x768a2670"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x768a2750"/>
        <function-ref name="getType" scoped="" ref="0x768a2830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x768f8a48" loc="6:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x768f8a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x768f8c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Update" ref="0x768ef070" loc="11:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Update" scoped="" ref="0x768ef070"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x768ef698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x768a9e68" loc="19:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x768a9e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x768af050"/>
        <function-ref name="payloadLength" scoped="" ref="0x768af130"/>
        <function-ref name="getPayload" scoped="" ref="0x768af210"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x768af2f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x768af3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7689bc90" loc="25:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7689bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7689be68"/>
        <function-ref name="stopDone" scoped="" ref="0x7689c010"/>
        <function-ref name="start" scoped="" ref="0x7689c0f0"/>
        <function-ref name="stop" scoped="" ref="0x7689c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationControl" ref="0x768f3e70" loc="8:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisseminationControl" scoped="" ref="0x768f3e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x768f5070"/>
        <function-ref name="stop" scoped="" ref="0x768f5150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x768e5de0" loc="16:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x768e5de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x768ea010"/>
        <function-ref name="stopDone" scoped="" ref="0x768ea0f0"/>
        <function-ref name="start" scoped="" ref="0x768ea1d0"/>
        <function-ref name="stop" scoped="" ref="0x768ea2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x768b0d18" loc="17:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x768b0d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x768b0ef0"/>
        <function-ref name="getPayload" scoped="" ref="0x768e9010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x768e90f0"/>
        <function-ref name="cancel" scoped="" ref="0x768e91d0"/>
        <function-ref name="sendDone" scoped="" ref="0x768e92b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpInfo" ref="0x7689de68" loc="22:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpInfo" scoped="" ref="0x7689de68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x768ad050"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x768ad130"/>
        <function-ref name="numNeighbors" scoped="" ref="0x768ad210"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x768ad2f0"/>
        <function-ref name="getEtx" scoped="" ref="0x768ad3d0"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x768ad4b0"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x768ad590"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x768ad670"/>
        <function-ref name="getParent" scoped="" ref="0x768ad750"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x768ad830"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x768ad910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationPeriod" ref="0x768f40f0" loc="10:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisseminationPeriod" scoped="" ref="0x768f40f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x768f4c50"/>
        <function-ref name="get" scoped="" ref="0x768f4738"/>
        <function-ref name="set" scoped="" ref="0x768f49b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacket" ref="0x7689c410" loc="26:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacket" scoped="" ref="0x7689c410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7689c5e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7689c6c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7689c7a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7689c888"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7689c968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x768f53c8" loc="9:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoutingControl" scoped="" ref="0x768f53c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x768f55a0"/>
        <function-ref name="stop" scoped="" ref="0x768f5680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x768aeec0" loc="18:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x768aeec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x768e40c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpCongestion" ref="0x7689b750" loc="23:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpCongestion" scoped="" ref="0x7689b750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7689b928"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7689ba08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialReceive" ref="0x7689a420" loc="28:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialReceive" scoped="" ref="0x7689a420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7689a5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IntTemp" ref="0x768ecec0" loc="12:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IntTemp" scoped="" ref="0x768ecec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x768ee500"/>
        <function-ref name="readDone" scoped="" ref="0x768ee758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7688d9e0" loc="30:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7688d9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7688dbb8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7688dc98"/>
        <function-ref name="led1On" scoped="" ref="0x7688dd78"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7688de58"/>
        <function-ref name="led2Toggle" scoped="" ref="0x76899010"/>
        <function-ref name="get" scoped="" ref="0x768990f0"/>
        <function-ref name="led1Off" scoped="" ref="0x768991d0"/>
        <function-ref name="led2Off" scoped="" ref="0x76899550"/>
        <function-ref name="set" scoped="" ref="0x768992b0"/>
        <function-ref name="led0On" scoped="" ref="0x76899390"/>
        <function-ref name="led2On" scoped="" ref="0x76899470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Temp" ref="0x768eebb8" loc="13:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temp" scoped="" ref="0x768eebb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x768ed1f0"/>
        <function-ref name="readDone" scoped="" ref="0x768ed448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendSerialPacket" ref="0x768837e8" loc="41:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendSerialPacket" scoped="" ref="0x768837e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x768839c0"/>
        <function-ref name="runTask" scoped="" ref="0x76883aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialAMSend" ref="0x76894bb0" loc="27:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialAMSend" scoped="" ref="0x76894bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x76894d88"/>
        <function-ref name="getPayload" scoped="" ref="0x76894e68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7689a010"/>
        <function-ref name="cancel" scoped="" ref="0x7689a0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7689a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x76885210" loc="31:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x76885210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7688cd58"/>
        <function-ref name="fired" scoped="" ref="0x7688c010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7688c718"/>
        <function-ref name="isOneShot" scoped="" ref="0x7688c4c0"/>
        <function-ref name="getdt" scoped="" ref="0x76884268"/>
        <function-ref name="gett0" scoped="" ref="0x76884010"/>
        <function-ref name="isRunning" scoped="" ref="0x7688c268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x76885838"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7688ca38"/>
        <function-ref name="startOneShot" scoped="" ref="0x76885ab8"/>
        <function-ref name="stop" scoped="" ref="0x76885d38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x76869c28" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x76869c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x76869e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x76869010" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x76869010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x768691e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x76868480" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x76868480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x76868658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x76863668" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x76863668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x76863840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x76868e40" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x76868e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x76863050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x76863288" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x76863288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x76863460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x76863a48" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x76863a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x76863c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x76865460" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x76865460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x76865638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x76864338" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x76864338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x76864510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7684a2a0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7684a2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7684aa98"/>
        <function-ref name="initTimerB" scoped="" ref="0x7684a558"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7684a638"/>
        <function-ref name="initTimerA" scoped="" ref="0x7684a718"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7684a478"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7684a7f8"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7684a8d8"/>
        <function-ref name="initClocks" scoped="" ref="0x7684a9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x76864b88" loc="39:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x76864b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x76864d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x768415b0" loc="46:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x768415b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x76841da8"/>
        <function-ref name="initTimerB" scoped="" ref="0x76841868"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x76841948"/>
        <function-ref name="initTimerA" scoped="" ref="0x76841a28"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x76841788"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x76841b08"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x76841be8"/>
        <function-ref name="initClocks" scoped="" ref="0x76841cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x76840010" loc="47:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x76840010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x768401e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x768411e0" loc="45:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x768411e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x768413b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7681c628" loc="42:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7681c628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7681c800"/>
        <function-ref name="getControl" scoped="" ref="0x7681c8e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7681c9c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7681caa0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7681cb80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7681cc60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7681cd40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7681ce20"/>
        <function-ref name="setControl" scoped="" ref="0x7681cf00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7680e548" loc="51:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7680e548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7680e720"/>
        <function-ref name="getControl" scoped="" ref="0x7680e800"/>
        <function-ref name="enableEvents" scoped="" ref="0x7680e8e0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7680e9c0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7680eaa0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7680eb80"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7680ec60"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7680ed40"/>
        <function-ref name="setControl" scoped="" ref="0x7680ee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x768145f8" loc="47:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x768145f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768147d0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x768148b0"/>
        <function-ref name="captured" scoped="" ref="0x76814990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76814a70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76814b50"/>
        <function-ref name="setEdge" scoped="" ref="0x76814c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x76804930" loc="68:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x76804930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76804b08"/>
        <function-ref name="setSynchronous" scoped="" ref="0x76804be8"/>
        <function-ref name="captured" scoped="" ref="0x76804cc8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76804da8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76804e88"/>
        <function-ref name="setEdge" scoped="" ref="0x76802010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x768175f8" loc="44:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x768175f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768177d0"/>
        <function-ref name="setEvent" scoped="" ref="0x768178b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x76817990"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x76817a70"/>
        <function-ref name="fired" scoped="" ref="0x76817b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x76808e68" loc="61:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x76808e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76807050"/>
        <function-ref name="setEvent" scoped="" ref="0x76807130"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x76807210"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x768072f0"/>
        <function-ref name="fired" scoped="" ref="0x768073d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x76801438" loc="71:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x76801438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76801610"/>
        <function-ref name="setSynchronous" scoped="" ref="0x768016f0"/>
        <function-ref name="captured" scoped="" ref="0x768017d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x768018b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76801990"/>
        <function-ref name="setEdge" scoped="" ref="0x76801a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7680b468" loc="55:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7680b468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7680b640"/>
        <function-ref name="getControl" scoped="" ref="0x7680b720"/>
        <function-ref name="enableEvents" scoped="" ref="0x7680b800"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7680b8e0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7680b9c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7680baa0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7680bb80"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7680bc60"/>
        <function-ref name="setControl" scoped="" ref="0x7680bd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7681ae68" loc="40:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7681ae68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x76822050"/>
        <function-ref name="getControl" scoped="" ref="0x76822130"/>
        <function-ref name="enableEvents" scoped="" ref="0x76822210"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x768222f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x768223d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x768224b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x76822590"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x76822670"/>
        <function-ref name="setControl" scoped="" ref="0x76822750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x76805788" loc="66:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x76805788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76805960"/>
        <function-ref name="setSynchronous" scoped="" ref="0x76805a40"/>
        <function-ref name="captured" scoped="" ref="0x76805b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76805c00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76805ce0"/>
        <function-ref name="setEdge" scoped="" ref="0x76805dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x76809e98" loc="59:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x76809e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768080c0"/>
        <function-ref name="setEvent" scoped="" ref="0x768081a0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x76808280"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x76808360"/>
        <function-ref name="fired" scoped="" ref="0x76808440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7680d0e0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7680d0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7680d338"/>
        <function-ref name="getControl" scoped="" ref="0x7680d418"/>
        <function-ref name="enableEvents" scoped="" ref="0x7680d4f8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7680d5d8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7680d6b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7680d798"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7680d878"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7680d958"/>
        <function-ref name="setControl" scoped="" ref="0x7680da38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x76814e98" loc="48:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x76814e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768130c0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x768131a0"/>
        <function-ref name="captured" scoped="" ref="0x76813280"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76813360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76813440"/>
        <function-ref name="setEdge" scoped="" ref="0x76813520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x76802278" loc="69:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x76802278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76802450"/>
        <function-ref name="setSynchronous" scoped="" ref="0x76802530"/>
        <function-ref name="captured" scoped="" ref="0x76802610"/>
        <function-ref name="clearOverflow" scoped="" ref="0x768026f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x768027d0"/>
        <function-ref name="setEdge" scoped="" ref="0x768028b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7680dcd0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7680dcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7680dea8"/>
        <function-ref name="getControl" scoped="" ref="0x7680c010"/>
        <function-ref name="enableEvents" scoped="" ref="0x7680c0f0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7680c1d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7680c2b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7680c390"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7680c470"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7680c550"/>
        <function-ref name="setControl" scoped="" ref="0x7680c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x76817db8" loc="45:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x76817db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76816010"/>
        <function-ref name="setEvent" scoped="" ref="0x768160f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x768161d0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x768162b0"/>
        <function-ref name="fired" scoped="" ref="0x76816390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7681d1f8" loc="39:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7681d1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7681d3d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7681d4b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7681d590"/>
        <function-ref name="get" scoped="" ref="0x7681d670"/>
        <function-ref name="disableEvents" scoped="" ref="0x7681d750"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7681d830"/>
        <function-ref name="getMode" scoped="" ref="0x7681d910"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7681d9f0"/>
        <function-ref name="overflow" scoped="" ref="0x7681dad0"/>
        <function-ref name="setMode" scoped="" ref="0x7681dbb0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7681dc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x76807638" loc="62:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x76807638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76807810"/>
        <function-ref name="setEvent" scoped="" ref="0x768078f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x768079d0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x76807ab0"/>
        <function-ref name="fired" scoped="" ref="0x76807b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x768229e8" loc="41:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x768229e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x76822bc0"/>
        <function-ref name="getControl" scoped="" ref="0x76822ca0"/>
        <function-ref name="enableEvents" scoped="" ref="0x76822d80"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x76822e60"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7681c010"/>
        <function-ref name="disableEvents" scoped="" ref="0x7681c0f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7681c1d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7681c2b0"/>
        <function-ref name="setControl" scoped="" ref="0x7681c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7680a010" loc="56:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7680a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7680a1e8"/>
        <function-ref name="getControl" scoped="" ref="0x7680a2c8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7680a3a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7680a488"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7680a568"/>
        <function-ref name="disableEvents" scoped="" ref="0x7680a648"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7680a728"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7680a808"/>
        <function-ref name="setControl" scoped="" ref="0x7680a8e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7680fca8" loc="46:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7680fca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7680fe80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x76814010"/>
        <function-ref name="captured" scoped="" ref="0x768140f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x768141d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x768142b0"/>
        <function-ref name="setEdge" scoped="" ref="0x76814390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x76804090" loc="67:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x76804090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76804268"/>
        <function-ref name="setSynchronous" scoped="" ref="0x76804348"/>
        <function-ref name="captured" scoped="" ref="0x76804428"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76804508"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x768045e8"/>
        <function-ref name="setEdge" scoped="" ref="0x768046c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x76815d58" loc="43:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x76815d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76817010"/>
        <function-ref name="setEvent" scoped="" ref="0x768170f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x768171d0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x768172b0"/>
        <function-ref name="fired" scoped="" ref="0x76817390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x768086a8" loc="60:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x768086a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76808880"/>
        <function-ref name="setEvent" scoped="" ref="0x76808960"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x76808a40"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x76808b20"/>
        <function-ref name="fired" scoped="" ref="0x76808c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x76802b18" loc="70:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x76802b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76802cf0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x76802dd0"/>
        <function-ref name="captured" scoped="" ref="0x76802eb0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76801010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x768010f0"/>
        <function-ref name="setEdge" scoped="" ref="0x768011d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7680c8c8" loc="54:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7680c8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7680caa0"/>
        <function-ref name="getControl" scoped="" ref="0x7680cb80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7680cc60"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7680cd40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7680ce20"/>
        <function-ref name="disableEvents" scoped="" ref="0x7680cf00"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7680b010"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7680b0f0"/>
        <function-ref name="setControl" scoped="" ref="0x7680b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x76813750" loc="50:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x76813750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76813928"/>
        <function-ref name="setClockSource" scoped="" ref="0x76813a08"/>
        <function-ref name="enableEvents" scoped="" ref="0x76813ae8"/>
        <function-ref name="get" scoped="" ref="0x76813bc8"/>
        <function-ref name="disableEvents" scoped="" ref="0x76813ca8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76813d88"/>
        <function-ref name="getMode" scoped="" ref="0x76813e68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7680e010"/>
        <function-ref name="overflow" scoped="" ref="0x7680e0f0"/>
        <function-ref name="setMode" scoped="" ref="0x7680e1d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7680e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x76807df8" loc="63:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x76807df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76806010"/>
        <function-ref name="setEvent" scoped="" ref="0x768060f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x768061d0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x768062b0"/>
        <function-ref name="fired" scoped="" ref="0x76806390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x76806eb8" loc="65:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x76806eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768050c0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x768051a0"/>
        <function-ref name="captured" scoped="" ref="0x76805280"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76805360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76805440"/>
        <function-ref name="setEdge" scoped="" ref="0x76805520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x768065f8" loc="64:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x768065f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768068d0"/>
        <function-ref name="setEvent" scoped="" ref="0x768069b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x76806a90"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x76806b70"/>
        <function-ref name="fired" scoped="" ref="0x76806c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x768096d8" loc="58:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x768096d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768098b0"/>
        <function-ref name="setEvent" scoped="" ref="0x76809990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x76809a70"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x76809b50"/>
        <function-ref name="fired" scoped="" ref="0x76809c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7680ab80" loc="57:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7680ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7680ad58"/>
        <function-ref name="getControl" scoped="" ref="0x7680ae38"/>
        <function-ref name="enableEvents" scoped="" ref="0x7680af18"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x76809010"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x768090f0"/>
        <function-ref name="disableEvents" scoped="" ref="0x768091d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x768092b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x76809390"/>
        <function-ref name="setControl" scoped="" ref="0x76809470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x767e1728" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x767e1728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x767e1900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x767e13d0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x767e13d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x767e15a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x767e1a80" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x767e1a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x767e1c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x767e1068" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x767e1068"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x767e1250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x767fe3a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x767fe3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x767fe578"/>
        <function-ref name="setClockSource" scoped="" ref="0x767fe658"/>
        <function-ref name="enableEvents" scoped="" ref="0x767fe738"/>
        <function-ref name="get" scoped="" ref="0x767fe818"/>
        <function-ref name="disableEvents" scoped="" ref="0x767fe8f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x767fe9d8"/>
        <function-ref name="getMode" scoped="" ref="0x767feab8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x767feb98"/>
        <function-ref name="overflow" scoped="" ref="0x767fec78"/>
        <function-ref name="setMode" scoped="" ref="0x767fed58"/>
        <function-ref name="setInputDivider" scoped="" ref="0x767fee38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x767dd1d0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x767dd1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x767dd3a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x767dee50" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x767dee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x767dd050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x767dd528" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x767dd528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x767dd700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x767deae8" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x767deae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x767decd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x767dfd58" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x767dfd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x767de010"/>
        <function-ref name="setClockSource" scoped="" ref="0x767de0f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x767de1d0"/>
        <function-ref name="get" scoped="" ref="0x767de2b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x767de390"/>
        <function-ref name="clearOverflow" scoped="" ref="0x767de470"/>
        <function-ref name="getMode" scoped="" ref="0x767de550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x767de630"/>
        <function-ref name="overflow" scoped="" ref="0x767de710"/>
        <function-ref name="setMode" scoped="" ref="0x767de7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x767de8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x767b2430" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x767b2430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x767b2608"/>
        <function-ref name="setSynchronous" scoped="" ref="0x767b26e8"/>
        <function-ref name="captured" scoped="" ref="0x767b27c8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x767b28a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x767b2988"/>
        <function-ref name="setEdge" scoped="" ref="0x767b2a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x767da2c8" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x767da2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x767da4a0"/>
        <function-ref name="getControl" scoped="" ref="0x767da580"/>
        <function-ref name="enableEvents" scoped="" ref="0x767da660"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x767da740"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x767da820"/>
        <function-ref name="disableEvents" scoped="" ref="0x767da900"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x767da9e0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x767daac0"/>
        <function-ref name="setControl" scoped="" ref="0x767daba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x767b1890" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x767b1890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x767b1a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x767dad20" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x767dad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x767daef8"/>
        <function-ref name="setEvent" scoped="" ref="0x767b2010"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x767b20f0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x767b21d0"/>
        <function-ref name="fired" scoped="" ref="0x767b22b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x767b2be8" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x767b2be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x767b2dc0"/>
        <function-ref name="setClockSource" scoped="" ref="0x767b2ea0"/>
        <function-ref name="enableEvents" scoped="" ref="0x767b1010"/>
        <function-ref name="get" scoped="" ref="0x767b10f0"/>
        <function-ref name="disableEvents" scoped="" ref="0x767b11d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x767b12b0"/>
        <function-ref name="getMode" scoped="" ref="0x767b1390"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x767b1470"/>
        <function-ref name="overflow" scoped="" ref="0x767b1550"/>
        <function-ref name="setMode" scoped="" ref="0x767b1630"/>
        <function-ref name="setInputDivider" scoped="" ref="0x767b1710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x767ad350" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x767ad350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x767ad528"/>
        <function-ref name="setSynchronous" scoped="" ref="0x767ad608"/>
        <function-ref name="captured" scoped="" ref="0x767ad6e8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x767ad7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x767ad8a8"/>
        <function-ref name="setEdge" scoped="" ref="0x767ad988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x767af140" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x767af140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x767af318"/>
        <function-ref name="getControl" scoped="" ref="0x767af3f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x767af4d8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x767af5b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x767af698"/>
        <function-ref name="disableEvents" scoped="" ref="0x767af778"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x767af858"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x767af938"/>
        <function-ref name="setControl" scoped="" ref="0x767afa18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x767ac7b0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x767ac7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x767ac988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x767afb98" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x767afb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x767afd70"/>
        <function-ref name="setEvent" scoped="" ref="0x767afe50"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x767ad010"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x767ad0f0"/>
        <function-ref name="fired" scoped="" ref="0x767ad1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x767adb08" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x767adb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x767adce0"/>
        <function-ref name="setClockSource" scoped="" ref="0x767addc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x767adea0"/>
        <function-ref name="get" scoped="" ref="0x767ac010"/>
        <function-ref name="disableEvents" scoped="" ref="0x767ac0f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x767ac1d0"/>
        <function-ref name="getMode" scoped="" ref="0x767ac2b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x767ac390"/>
        <function-ref name="overflow" scoped="" ref="0x767ac470"/>
        <function-ref name="setMode" scoped="" ref="0x767ac550"/>
        <function-ref name="setInputDivider" scoped="" ref="0x767ac630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x767a9198" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x767a9198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x767a9370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x767a9450"/>
        <function-ref name="captured" scoped="" ref="0x767a9530"/>
        <function-ref name="clearOverflow" scoped="" ref="0x767a9610"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x767a96f0"/>
        <function-ref name="setEdge" scoped="" ref="0x767a97d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x767aa050" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x767aa050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x767aa228"/>
        <function-ref name="getControl" scoped="" ref="0x767aa308"/>
        <function-ref name="enableEvents" scoped="" ref="0x767aa3e8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x767aa4c8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x767aa5a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x767aa688"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x767aa768"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x767aa848"/>
        <function-ref name="setControl" scoped="" ref="0x767aa928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x767a85f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x767a85f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x767a87c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x767aaaa8" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x767aaaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x767aac80"/>
        <function-ref name="setEvent" scoped="" ref="0x767aad60"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x767aae40"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x767aaf20"/>
        <function-ref name="fired" scoped="" ref="0x767a9018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x767a9950" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x767a9950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x767a9b28"/>
        <function-ref name="setClockSource" scoped="" ref="0x767a9c08"/>
        <function-ref name="enableEvents" scoped="" ref="0x767a9ce8"/>
        <function-ref name="get" scoped="" ref="0x767a9dc8"/>
        <function-ref name="disableEvents" scoped="" ref="0x767a9ea8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x767a8010"/>
        <function-ref name="getMode" scoped="" ref="0x767a80f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x767a81d0"/>
        <function-ref name="overflow" scoped="" ref="0x767a82b0"/>
        <function-ref name="setMode" scoped="" ref="0x767a8390"/>
        <function-ref name="setInputDivider" scoped="" ref="0x767a8470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x767a5010" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x767a5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x767a51e8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x767a52c8"/>
        <function-ref name="captured" scoped="" ref="0x767a53a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x767a5488"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x767a5568"/>
        <function-ref name="setEdge" scoped="" ref="0x767a5648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x767a7e78" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x767a7e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x767a6070"/>
        <function-ref name="getControl" scoped="" ref="0x767a6150"/>
        <function-ref name="enableEvents" scoped="" ref="0x767a6230"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x767a6310"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x767a63f0"/>
        <function-ref name="disableEvents" scoped="" ref="0x767a64d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x767a65b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x767a6690"/>
        <function-ref name="setControl" scoped="" ref="0x767a6770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x767a4430" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x767a4430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x767a4608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x767a68f0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x767a68f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x767a6ac8"/>
        <function-ref name="setEvent" scoped="" ref="0x767a6ba8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x767a6c88"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x767a6d68"/>
        <function-ref name="fired" scoped="" ref="0x767a6e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x767a57c8" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x767a57c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x767a59a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x767a5a80"/>
        <function-ref name="enableEvents" scoped="" ref="0x767a5b60"/>
        <function-ref name="get" scoped="" ref="0x767a5c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x767a5d20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x767a5e00"/>
        <function-ref name="getMode" scoped="" ref="0x767a5ee0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x767a4010"/>
        <function-ref name="overflow" scoped="" ref="0x767a40f0"/>
        <function-ref name="setMode" scoped="" ref="0x767a41d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x767a42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x767a2e88" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x767a2e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x767a0070"/>
        <function-ref name="setSynchronous" scoped="" ref="0x767a0150"/>
        <function-ref name="captured" scoped="" ref="0x767a0230"/>
        <function-ref name="clearOverflow" scoped="" ref="0x767a0310"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x767a03f0"/>
        <function-ref name="setEdge" scoped="" ref="0x767a04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x767a3cb8" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x767a3cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x767a3e90"/>
        <function-ref name="getControl" scoped="" ref="0x767a2010"/>
        <function-ref name="enableEvents" scoped="" ref="0x767a20f0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x767a21d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x767a22b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x767a2390"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x767a2470"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x767a2550"/>
        <function-ref name="setControl" scoped="" ref="0x767a2630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7679f278" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7679f278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7679f450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x767a27b0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x767a27b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x767a2988"/>
        <function-ref name="setEvent" scoped="" ref="0x767a2a68"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x767a2b48"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x767a2c28"/>
        <function-ref name="fired" scoped="" ref="0x767a2d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x767a0650" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x767a0650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x767a0828"/>
        <function-ref name="setClockSource" scoped="" ref="0x767a0908"/>
        <function-ref name="enableEvents" scoped="" ref="0x767a09e8"/>
        <function-ref name="get" scoped="" ref="0x767a0ac8"/>
        <function-ref name="disableEvents" scoped="" ref="0x767a0ba8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x767a0c88"/>
        <function-ref name="getMode" scoped="" ref="0x767a0d68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x767a0e48"/>
        <function-ref name="overflow" scoped="" ref="0x767a0f28"/>
        <function-ref name="setMode" scoped="" ref="0x7679f018"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7679f0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7679dcc8" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7679dcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7679dea0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7679c010"/>
        <function-ref name="captured" scoped="" ref="0x7679c0f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7679c1d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7679c2b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7679c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7679eb00" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7679eb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7679ecd8"/>
        <function-ref name="getControl" scoped="" ref="0x7679edb8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7679ee98"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7679d010"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7679d0f0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7679d1d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7679d2b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7679d390"/>
        <function-ref name="setControl" scoped="" ref="0x7679d470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7679b190" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7679b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7679b368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7679d5f0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7679d5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7679d7c8"/>
        <function-ref name="setEvent" scoped="" ref="0x7679d8a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7679d988"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7679da68"/>
        <function-ref name="fired" scoped="" ref="0x7679db48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7679c510" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7679c510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7679c6e8"/>
        <function-ref name="setClockSource" scoped="" ref="0x7679c7c8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7679c8a8"/>
        <function-ref name="get" scoped="" ref="0x7679c988"/>
        <function-ref name="disableEvents" scoped="" ref="0x7679ca68"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7679cb48"/>
        <function-ref name="getMode" scoped="" ref="0x7679cc28"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7679cd08"/>
        <function-ref name="overflow" scoped="" ref="0x7679cde8"/>
        <function-ref name="setMode" scoped="" ref="0x7679cec8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7679b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x76799be8" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x76799be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76799dc0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x76799ea0"/>
        <function-ref name="captured" scoped="" ref="0x76798010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x767980f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x767981d0"/>
        <function-ref name="setEdge" scoped="" ref="0x767982b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7679aa20" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7679aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7679abf8"/>
        <function-ref name="getControl" scoped="" ref="0x7679acd8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7679adb8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7679ae98"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x76799010"/>
        <function-ref name="disableEvents" scoped="" ref="0x767990f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x767991d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x767992b0"/>
        <function-ref name="setControl" scoped="" ref="0x76799390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x76797080" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x76797080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x76797258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x76799510" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x76799510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x767996e8"/>
        <function-ref name="setEvent" scoped="" ref="0x767997c8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x767998a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x76799988"/>
        <function-ref name="fired" scoped="" ref="0x76799a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x76798430" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x76798430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76798608"/>
        <function-ref name="setClockSource" scoped="" ref="0x767986e8"/>
        <function-ref name="enableEvents" scoped="" ref="0x767987c8"/>
        <function-ref name="get" scoped="" ref="0x767988a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x76798988"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76798a68"/>
        <function-ref name="getMode" scoped="" ref="0x76798b48"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76798c28"/>
        <function-ref name="overflow" scoped="" ref="0x76798d08"/>
        <function-ref name="setMode" scoped="" ref="0x76798de8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x76798ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x76795b08" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x76795b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76795ce0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x76795dc0"/>
        <function-ref name="captured" scoped="" ref="0x76795ea0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76794010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x767940f0"/>
        <function-ref name="setEdge" scoped="" ref="0x767941d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x767968f8" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x767968f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x76796ad0"/>
        <function-ref name="getControl" scoped="" ref="0x76796bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x76796c90"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x76796d70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x76796e50"/>
        <function-ref name="disableEvents" scoped="" ref="0x76795010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x767950f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x767951d0"/>
        <function-ref name="setControl" scoped="" ref="0x767952b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x76793010" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x76793010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x767931e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x76795430" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x76795430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76795608"/>
        <function-ref name="setEvent" scoped="" ref="0x767956e8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x767957c8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x767958a8"/>
        <function-ref name="fired" scoped="" ref="0x76795988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x76794350" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x76794350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76794528"/>
        <function-ref name="setClockSource" scoped="" ref="0x76794608"/>
        <function-ref name="enableEvents" scoped="" ref="0x767946e8"/>
        <function-ref name="get" scoped="" ref="0x767947c8"/>
        <function-ref name="disableEvents" scoped="" ref="0x767948a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76794988"/>
        <function-ref name="getMode" scoped="" ref="0x76794a68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76794b48"/>
        <function-ref name="overflow" scoped="" ref="0x76794c28"/>
        <function-ref name="setMode" scoped="" ref="0x76794d08"/>
        <function-ref name="setInputDivider" scoped="" ref="0x76794de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x76790b08" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x76790b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76790ce0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x76790dc0"/>
        <function-ref name="captured" scoped="" ref="0x76790ea0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7678f010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7678f0f0"/>
        <function-ref name="setEdge" scoped="" ref="0x7678f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x767918f8" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x767918f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x76791ad0"/>
        <function-ref name="getControl" scoped="" ref="0x76791bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x76791c90"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x76791d70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x76791e50"/>
        <function-ref name="disableEvents" scoped="" ref="0x76790010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x767900f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x767901d0"/>
        <function-ref name="setControl" scoped="" ref="0x767902b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7678e010" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7678e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7678e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x76790430" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x76790430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76790608"/>
        <function-ref name="setEvent" scoped="" ref="0x767906e8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x767907c8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x767908a8"/>
        <function-ref name="fired" scoped="" ref="0x76790988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7678f350" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7678f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7678f528"/>
        <function-ref name="setClockSource" scoped="" ref="0x7678f608"/>
        <function-ref name="enableEvents" scoped="" ref="0x7678f6e8"/>
        <function-ref name="get" scoped="" ref="0x7678f7c8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7678f8a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7678f988"/>
        <function-ref name="getMode" scoped="" ref="0x7678fa68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7678fb48"/>
        <function-ref name="overflow" scoped="" ref="0x7678fc28"/>
        <function-ref name="setMode" scoped="" ref="0x7678fd08"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7678fde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7678cb08" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7678cb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7678cce0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7678cdc0"/>
        <function-ref name="captured" scoped="" ref="0x7678cea0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7678b010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7678b0f0"/>
        <function-ref name="setEdge" scoped="" ref="0x7678b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7678d8f8" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7678d8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7678dad0"/>
        <function-ref name="getControl" scoped="" ref="0x7678dbb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7678dc90"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7678dd70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7678de50"/>
        <function-ref name="disableEvents" scoped="" ref="0x7678c010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7678c0f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7678c1d0"/>
        <function-ref name="setControl" scoped="" ref="0x7678c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7678a010" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7678a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7678a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7678c430" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7678c430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7678c608"/>
        <function-ref name="setEvent" scoped="" ref="0x7678c6e8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7678c7c8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7678c8a8"/>
        <function-ref name="fired" scoped="" ref="0x7678c988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7678b350" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7678b350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7678b528"/>
        <function-ref name="setClockSource" scoped="" ref="0x7678b608"/>
        <function-ref name="enableEvents" scoped="" ref="0x7678b6e8"/>
        <function-ref name="get" scoped="" ref="0x7678b7c8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7678b8a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7678b988"/>
        <function-ref name="getMode" scoped="" ref="0x7678ba68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7678bb48"/>
        <function-ref name="overflow" scoped="" ref="0x7678bc28"/>
        <function-ref name="setMode" scoped="" ref="0x7678bd08"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7678bde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x76786300" loc="7:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x76786300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x767864d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x76789558" loc="4:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x76789558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x76789730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x767899e0" loc="5:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x767899e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x76789bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x76789e68" loc="6:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x76789e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x76786050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x769108a8" loc="55:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x769108a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x76910a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x76ba2928" loc="51:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x76ba2928"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x76ba2b00"/>
        <function-ref name="irq_postamble" scoped="" ref="0x76ba2be0"/>
        <function-ref name="sleep" scoped="" ref="0x76ba2cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x769117b0" loc="52:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x769117b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x76911988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x76851818" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x76851818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x767690f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x76851ad0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x76851bb0"/>
        <function-ref name="initTimerA" scoped="" ref="0x76851c90"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x768519f0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x76851d70"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x76851e50"/>
        <function-ref name="initClocks" scoped="" ref="0x76769010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x76850648" loc="60:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x76850648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x76850820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x76867840" loc="57:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x76867840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x76867a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x76850240" loc="59:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x76850240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x76850418"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x76867bd8" loc="58:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x76867bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x76867db0"/>
        <function-ref name="taskLoop" scoped="" ref="0x76867e90"/>
        <function-ref name="runNextTask" scoped="" ref="0x76850010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x76b99470" loc="48:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x76b99470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x76b99648"/>
        <function-ref name="runTask" scoped="" ref="0x76b99728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x76ba1a78" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x76ba1a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x76ba1c50"/>
        <function-ref name="taskLoop" scoped="" ref="0x76ba1d30"/>
        <function-ref name="runNextTask" scoped="" ref="0x76ba1e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x76926670" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x76926670"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x76926848"/>
        <function-ref name="runTask" scoped="" ref="0x76926928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x76923b08" loc="57:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x76923b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x76923ce0"/>
        <function-ref name="irq_postamble" scoped="" ref="0x76923dc0"/>
        <function-ref name="sleep" scoped="" ref="0x76923ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x76927da0" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x76927da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x76926010"/>
        <function-ref name="taskLoop" scoped="" ref="0x769260f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x769261d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7675d430" loc="47:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationC.nc">
      <component-ref qname="DisseminationC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7675d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7675d608"/>
        <function-ref name="stop" scoped="" ref="0x7675d6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x767513d8" loc="52:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TrickleTimer" scoped="" ref="0x767513d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x767515b0"/>
        <function-ref name="incrementCounter" scoped="" ref="0x76751690"/>
        <function-ref name="reset" scoped="" ref="0x76751770"/>
        <function-ref name="start" scoped="" ref="0x76751850"/>
        <function-ref name="stop" scoped="" ref="0x76751930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x76758010" loc="51:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisseminationCache" scoped="" ref="0x76758010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x767582c8"/>
        <function-ref name="stop" scoped="" ref="0x76758648"/>
        <function-ref name="newData" scoped="" ref="0x767583a8"/>
        <function-ref name="start" scoped="" ref="0x76758488"/>
        <function-ref name="requestSeqno" scoped="" ref="0x76758568"/>
        <function-ref name="requestData" scoped="" ref="0x767581e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x76759010" loc="48:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x76759010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x767591e8"/>
        <function-ref name="stop" scoped="" ref="0x767592c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x76751ea8" loc="53:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisseminatorControl" scoped="" ref="0x76751ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x767540c0"/>
        <function-ref name="stop" scoped="" ref="0x767541a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeReceive" ref="0x7674cec0" loc="57:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ProbeReceive" scoped="" ref="0x7674cec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7674b0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeAMSend" ref="0x7674c740" loc="56:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ProbeAMSend" scoped="" ref="0x7674c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7674c918"/>
        <function-ref name="getPayload" scoped="" ref="0x7674c9f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7674cad8"/>
        <function-ref name="cancel" scoped="" ref="0x7674cbb8"/>
        <function-ref name="sendDone" scoped="" ref="0x7674cc98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7674dc60" loc="53:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7674dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7674de38"/>
        <function-ref name="getPayload" scoped="" ref="0x7674df18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7674c010"/>
        <function-ref name="cancel" scoped="" ref="0x7674c0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7674c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x7674fd40" loc="50:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TrickleTimer" scoped="" ref="0x7674fd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7674ff18"/>
        <function-ref name="incrementCounter" scoped="" ref="0x7674d010"/>
        <function-ref name="reset" scoped="" ref="0x7674d0f0"/>
        <function-ref name="start" scoped="" ref="0x7674d1d0"/>
        <function-ref name="stop" scoped="" ref="0x7674d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x7674f250" loc="49:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisseminationCache" scoped="" ref="0x7674f250"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x7674f508"/>
        <function-ref name="stop" scoped="" ref="0x7674f888"/>
        <function-ref name="newData" scoped="" ref="0x7674f5e8"/>
        <function-ref name="start" scoped="" ref="0x7674f6c8"/>
        <function-ref name="requestSeqno" scoped="" ref="0x7674f7a8"/>
        <function-ref name="requestData" scoped="" ref="0x7674f428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7674c358" loc="54:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7674c358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7674c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7674b230" loc="59:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7674b230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7674b408"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7674b4e8"/>
        <function-ref name="led1On" scoped="" ref="0x7674b5c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7674b6a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7674b788"/>
        <function-ref name="get" scoped="" ref="0x7674b868"/>
        <function-ref name="led1Off" scoped="" ref="0x7674b948"/>
        <function-ref name="led2Off" scoped="" ref="0x7674bcc8"/>
        <function-ref name="set" scoped="" ref="0x7674ba28"/>
        <function-ref name="led0On" scoped="" ref="0x7674bb08"/>
        <function-ref name="led2On" scoped="" ref="0x7674bbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x76754a38" loc="46:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x76754a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x76754c10"/>
        <function-ref name="stop" scoped="" ref="0x76754cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x7674d828" loc="51:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisseminatorControl" scoped="" ref="0x7674d828"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7674da00"/>
        <function-ref name="stop" scoped="" ref="0x7674dae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x76750bb8" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x76750bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x76750d90"/>
        <function-ref name="getPayload" scoped="" ref="0x76750e70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x76721010"/>
        <function-ref name="cancel" scoped="" ref="0x767210f0"/>
        <function-ref name="sendDone" scoped="" ref="0x767211d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x76721310" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x76721310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x767214e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x767215c8"/>
        <function-ref name="getPayload" scoped="" ref="0x767216a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x76721788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x76721868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x767219a8" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x767219a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x76721b80"/>
        <function-ref name="source" scoped="" ref="0x76721c60"/>
        <function-ref name="address" scoped="" ref="0x76721d40"/>
        <function-ref name="destination" scoped="" ref="0x76721e20"/>
        <function-ref name="setSource" scoped="" ref="0x76721f00"/>
        <function-ref name="setDestination" scoped="" ref="0x75c9a010"/>
        <function-ref name="type" scoped="" ref="0x75c9a0f0"/>
        <function-ref name="setType" scoped="" ref="0x75c9a1d0"/>
        <function-ref name="isForMe" scoped="" ref="0x75c9a2b0"/>
        <function-ref name="setGroup" scoped="" ref="0x75c9a390"/>
        <function-ref name="localGroup" scoped="" ref="0x75c9a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x75c9a5d0" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x75c9a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x75c9a7a8"/>
        <function-ref name="noAck" scoped="" ref="0x75c9a888"/>
        <function-ref name="wasAcked" scoped="" ref="0x75c9a968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x753365d0" loc="6:../../../tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x753365d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x753367a8"/>
        <function-ref name="getPayload" scoped="" ref="0x75336888"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75336968"/>
        <function-ref name="cancel" scoped="" ref="0x75336a48"/>
        <function-ref name="sendDone" scoped="" ref="0x75336b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x75336c68" loc="7:../../../tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x75336c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75336e40"/>
        <function-ref name="payloadLength" scoped="" ref="0x75336f20"/>
        <function-ref name="getPayload" scoped="" ref="0x75334018"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x753340f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x753341d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x75334318" loc="8:../../../tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x75334318"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x753344f0"/>
        <function-ref name="source" scoped="" ref="0x753345d0"/>
        <function-ref name="address" scoped="" ref="0x753346b0"/>
        <function-ref name="destination" scoped="" ref="0x75334790"/>
        <function-ref name="setSource" scoped="" ref="0x75334870"/>
        <function-ref name="setDestination" scoped="" ref="0x75334950"/>
        <function-ref name="type" scoped="" ref="0x75334a30"/>
        <function-ref name="setType" scoped="" ref="0x75334b10"/>
        <function-ref name="isForMe" scoped="" ref="0x75334bf0"/>
        <function-ref name="setGroup" scoped="" ref="0x75334cd0"/>
        <function-ref name="localGroup" scoped="" ref="0x75334db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x75334f10" loc="9:../../../tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x75334f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x75333108"/>
        <function-ref name="noAck" scoped="" ref="0x753331e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x753332c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7532e070" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7532e070"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7532e248"/>
        <function-ref name="getPayload" scoped="" ref="0x7532e328"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7532e408"/>
        <function-ref name="cancel" scoped="" ref="0x7532e4e8"/>
        <function-ref name="sendDone" scoped="" ref="0x7532e5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7532e708" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7532e708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7532e8e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7532e9c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7532eaa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7532eb80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7532ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7532eda0" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7532eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7532d010"/>
        <function-ref name="source" scoped="" ref="0x7532d0f0"/>
        <function-ref name="address" scoped="" ref="0x7532d1d0"/>
        <function-ref name="destination" scoped="" ref="0x7532d2b0"/>
        <function-ref name="setSource" scoped="" ref="0x7532d390"/>
        <function-ref name="setDestination" scoped="" ref="0x7532d470"/>
        <function-ref name="type" scoped="" ref="0x7532d550"/>
        <function-ref name="setType" scoped="" ref="0x7532d630"/>
        <function-ref name="isForMe" scoped="" ref="0x7532d710"/>
        <function-ref name="setGroup" scoped="" ref="0x7532d7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7532d8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7532da30" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7532da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7532dc08"/>
        <function-ref name="noAck" scoped="" ref="0x7532dce8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7532ddc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x75323328" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x75323328"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75323500"/>
        <function-ref name="getPayload" scoped="" ref="0x753235e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x753236c0"/>
        <function-ref name="cancel" scoped="" ref="0x753237a0"/>
        <function-ref name="sendDone" scoped="" ref="0x75323880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x753239f0" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x753239f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75323bc8"/>
        <function-ref name="getPayload" scoped="" ref="0x75323ca8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75323d88"/>
        <function-ref name="cancel" scoped="" ref="0x75323e68"/>
        <function-ref name="sendDone" scoped="" ref="0x75322010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x75322150" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x75322150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x75322328"/>
        <function-ref name="source" scoped="" ref="0x75322408"/>
        <function-ref name="address" scoped="" ref="0x753224e8"/>
        <function-ref name="destination" scoped="" ref="0x753225c8"/>
        <function-ref name="setSource" scoped="" ref="0x753226a8"/>
        <function-ref name="setDestination" scoped="" ref="0x75322788"/>
        <function-ref name="type" scoped="" ref="0x75322868"/>
        <function-ref name="setType" scoped="" ref="0x75322948"/>
        <function-ref name="isForMe" scoped="" ref="0x75322a28"/>
        <function-ref name="setGroup" scoped="" ref="0x75322b08"/>
        <function-ref name="localGroup" scoped="" ref="0x75322be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x766f8220" loc="43:../../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x766f8220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x766f83f8"/>
        <function-ref name="getPayload" scoped="" ref="0x766f84d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x766f85b8"/>
        <function-ref name="cancel" scoped="" ref="0x766f8698"/>
        <function-ref name="sendDone" scoped="" ref="0x766f8778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x766f4f18" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x766f4f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x766cc118"/>
        <function-ref name="getPayload" scoped="" ref="0x766cc1f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x766cc2d8"/>
        <function-ref name="cancel" scoped="" ref="0x766cc3b8"/>
        <function-ref name="sendDone" scoped="" ref="0x766cc498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x766f47a8" loc="46:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x766f47a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x766f4990"/>
        <function-ref name="getPayload" scoped="" ref="0x766f4a70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x766f4b50"/>
        <function-ref name="cancel" scoped="" ref="0x766f4c30"/>
        <function-ref name="sendDone" scoped="" ref="0x766f4d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x766cb230" loc="50:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x766cb230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x766cb408"/>
        <function-ref name="payloadLength" scoped="" ref="0x766cb4e8"/>
        <function-ref name="getPayload" scoped="" ref="0x766cb5c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x766cb6a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x766cb788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x766cb908" loc="169:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x766cb908"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x766cbae0"/>
        <function-ref name="runTask" scoped="" ref="0x766cbbc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x766cbd40" loc="126:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x766cbd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x766cbf18"/>
        <function-ref name="runTask" scoped="" ref="0x766ca010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x766cc5d8" loc="49:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x766cc5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x766cc7b0"/>
        <function-ref name="source" scoped="" ref="0x766cc890"/>
        <function-ref name="address" scoped="" ref="0x766cc970"/>
        <function-ref name="destination" scoped="" ref="0x766cca50"/>
        <function-ref name="setSource" scoped="" ref="0x766ccb30"/>
        <function-ref name="setDestination" scoped="" ref="0x766ccc10"/>
        <function-ref name="type" scoped="" ref="0x766cccf0"/>
        <function-ref name="setType" scoped="" ref="0x766ccdd0"/>
        <function-ref name="isForMe" scoped="" ref="0x766cceb0"/>
        <function-ref name="setGroup" scoped="" ref="0x766cb010"/>
        <function-ref name="localGroup" scoped="" ref="0x766cb0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x766c71c8" loc="61:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x766c71c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x766c73a0"/>
        <function-ref name="stopDone" scoped="" ref="0x766c7480"/>
        <function-ref name="start" scoped="" ref="0x766c7560"/>
        <function-ref name="stop" scoped="" ref="0x766c7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x766c7aa0" loc="63:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x766c7aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x766c7c78"/>
        <function-ref name="getPayload" scoped="" ref="0x766c7d58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x766c7e38"/>
        <function-ref name="cancel" scoped="" ref="0x766c7f18"/>
        <function-ref name="sendDone" scoped="" ref="0x766c6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x766c6b10" loc="65:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x766c6b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x766c6ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x766c6e68" loc="67:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x766c6e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x766c5050"/>
        <function-ref name="payloadLength" scoped="" ref="0x766c5130"/>
        <function-ref name="getPayload" scoped="" ref="0x766c5210"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x766c52f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x766c53d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x766bec70" loc="70:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x766bec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x766c27a8"/>
        <function-ref name="clear" scoped="" ref="0x766c2b60"/>
        <function-ref name="isValid" scoped="" ref="0x766c23f0"/>
        <function-ref name="set" scoped="" ref="0x766c2f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x766b44f8" loc="72:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x766b44f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x766b46d0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x766b47b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x766b4890"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x766b4970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x766c6478" loc="64:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x766c6478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x766c6650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x766c3238" loc="69:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x766c3238"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x766c3410"/>
        <function-ref name="noAck" scoped="" ref="0x766c34f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x766c35d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x766c5568" loc="68:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x766c5568"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x766c5740"/>
        <function-ref name="source" scoped="" ref="0x766c5820"/>
        <function-ref name="address" scoped="" ref="0x766c5900"/>
        <function-ref name="destination" scoped="" ref="0x766c59e0"/>
        <function-ref name="setSource" scoped="" ref="0x766c5ac0"/>
        <function-ref name="setDestination" scoped="" ref="0x766c5ba0"/>
        <function-ref name="type" scoped="" ref="0x766c5c80"/>
        <function-ref name="setType" scoped="" ref="0x766c5d60"/>
        <function-ref name="isForMe" scoped="" ref="0x766c5e40"/>
        <function-ref name="setGroup" scoped="" ref="0x766c5f20"/>
        <function-ref name="localGroup" scoped="" ref="0x766c3018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x766c1670" loc="71:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x766c1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x766bb1a0"/>
        <function-ref name="clear" scoped="" ref="0x766bb558"/>
        <function-ref name="isValid" scoped="" ref="0x766c1dc0"/>
        <function-ref name="set" scoped="" ref="0x766bb910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x766ad310" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x766ad310"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x766ad4e8"/>
        <function-ref name="stopDone" scoped="" ref="0x766ad5c8"/>
        <function-ref name="start" scoped="" ref="0x766ad6a8"/>
        <function-ref name="stop" scoped="" ref="0x766ad788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7669dda8" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7669dda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x766a7010"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x766a70f0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x766a71d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x766a72b0"/>
        <function-ref name="setCca" scoped="" ref="0x766a7390"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x766a7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x76696ab8" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x76696ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x76696d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x766aac78" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x766aac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x766aae50"/>
        <function-ref name="payloadLength" scoped="" ref="0x766a9010"/>
        <function-ref name="getPayload" scoped="" ref="0x766a90f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x766a91d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x766a92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x766adbe8" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x766adbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x766addc0"/>
        <function-ref name="getPayload" scoped="" ref="0x766adea0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x766ac010"/>
        <function-ref name="cancel" scoped="" ref="0x766ac0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x766ac1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x766accd0" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x766accd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x766acea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x766a3570" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x766a3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x766a3748"/>
        <function-ref name="setNetwork" scoped="" ref="0x766a3828"/>
        <function-ref name="getRssi" scoped="" ref="0x766a3908"/>
        <function-ref name="getNetwork" scoped="" ref="0x766a39e8"/>
        <function-ref name="getPower" scoped="" ref="0x766a3ac8"/>
        <function-ref name="getLqi" scoped="" ref="0x766a3ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x766a7660" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x766a7660"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x766a7838"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x766a7918"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x766a79f8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x766a7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x766ac638" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x766ac638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x766ac810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x766a3dc8" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x766a3dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x766a8010"/>
        <function-ref name="noAck" scoped="" ref="0x766a80f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x766a81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x766a2010" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x766a2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x766a21e8"/>
        <function-ref name="setRetries" scoped="" ref="0x766a22c8"/>
        <function-ref name="getRetries" scoped="" ref="0x766a23a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x766a2488"/>
        <function-ref name="wasDelivered" scoped="" ref="0x766a2568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x766aa060" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x766aa060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x766aa238"/>
        <function-ref name="source" scoped="" ref="0x766aa318"/>
        <function-ref name="address" scoped="" ref="0x766aa3f8"/>
        <function-ref name="destination" scoped="" ref="0x766aa4d8"/>
        <function-ref name="setSource" scoped="" ref="0x766aa5b8"/>
        <function-ref name="setDestination" scoped="" ref="0x766aa698"/>
        <function-ref name="type" scoped="" ref="0x766aa778"/>
        <function-ref name="setType" scoped="" ref="0x766aa858"/>
        <function-ref name="isForMe" scoped="" ref="0x766aa938"/>
        <function-ref name="setGroup" scoped="" ref="0x766aaa18"/>
        <function-ref name="localGroup" scoped="" ref="0x766aaaf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x766a0230" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x766a0230"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x766a0408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7669ccd0" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7669ccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7669cea8"/>
        <function-ref name="stopDone" scoped="" ref="0x76693010"/>
        <function-ref name="start" scoped="" ref="0x766930f0"/>
        <function-ref name="stop" scoped="" ref="0x766931d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7668da60" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7668da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7668dc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7668c498" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7668c498"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7668c670"/>
        <function-ref name="setRetries" scoped="" ref="0x7668c750"/>
        <function-ref name="getRetries" scoped="" ref="0x7668c830"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7668c910"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7668c9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7668ec08" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7668ec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7668ede0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7668eec0"/>
        <function-ref name="getRssi" scoped="" ref="0x7668d010"/>
        <function-ref name="getNetwork" scoped="" ref="0x7668d0f0"/>
        <function-ref name="getPower" scoped="" ref="0x7668d1d0"/>
        <function-ref name="getLqi" scoped="" ref="0x7668d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7668e0e8" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7668e0e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7668e2c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7668e3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7668e480"/>
        <function-ref name="cancel" scoped="" ref="0x7668e560"/>
        <function-ref name="sendDone" scoped="" ref="0x7668e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7668de28" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7668de28"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7668c050"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7668c130"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7668c210"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7668c2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x766915a8" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x766915a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x76691780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7668d4d0" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7668d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7668d6a8"/>
        <function-ref name="noAck" scoped="" ref="0x7668d788"/>
        <function-ref name="wasAcked" scoped="" ref="0x7668d868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7668f6c8" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7668f6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7668f8a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7668f980"/>
        <function-ref name="request" scoped="" ref="0x7668fa60"/>
        <function-ref name="granted" scoped="" ref="0x7668fb40"/>
        <function-ref name="isOwner" scoped="" ref="0x7668fc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7668fe08" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7668fe08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x76691010"/>
        <function-ref name="getPayload" scoped="" ref="0x766910f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x766911d0"/>
        <function-ref name="cancel" scoped="" ref="0x766912b0"/>
        <function-ref name="sendDone" scoped="" ref="0x76691390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x76691988" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x76691988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76691b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x76691c40"/>
        <function-ref name="getPayload" scoped="" ref="0x76691d20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x76691e00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x76691ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7668e870" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7668e870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7668ea48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x76689200" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x76689200"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x766893d8"/>
        <function-ref name="stopDone" scoped="" ref="0x766894b8"/>
        <function-ref name="start" scoped="" ref="0x76689598"/>
        <function-ref name="stop" scoped="" ref="0x76689678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x766882d0" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x766882d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x766884a8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x76688588"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x76688668"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x76688748"/>
        <function-ref name="setCca" scoped="" ref="0x76688828"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x76688908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x76689808" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x76689808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x766899e0"/>
        <function-ref name="getPayload" scoped="" ref="0x76689ac0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x76689ba0"/>
        <function-ref name="cancel" scoped="" ref="0x76689c80"/>
        <function-ref name="sendDone" scoped="" ref="0x76689d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x76689f08" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x76689f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x766880f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x76685250" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x76685250"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x76685428"/>
        <function-ref name="stopDone" scoped="" ref="0x76685508"/>
        <function-ref name="start" scoped="" ref="0x766855e8"/>
        <function-ref name="stop" scoped="" ref="0x766856c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x76684010" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x76684010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x766841e8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x766842c8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x766843a8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x76684488"/>
        <function-ref name="setCca" scoped="" ref="0x76684568"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x76684648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x76681278" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x76681278"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x76681450"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x76681530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x76681610"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x766816f0"/>
        <function-ref name="setCca" scoped="" ref="0x766817d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x766818b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7667d810" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7667d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7667d9e8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7667dac8"/>
        <function-ref name="getRssi" scoped="" ref="0x7667dba8"/>
        <function-ref name="getNetwork" scoped="" ref="0x7667dc88"/>
        <function-ref name="getPower" scoped="" ref="0x7667dd68"/>
        <function-ref name="getLqi" scoped="" ref="0x7667de48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7667a9f0" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7667a9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7667abc8"/>
        <function-ref name="cancel" scoped="" ref="0x7667aca8"/>
        <function-ref name="modify" scoped="" ref="0x7667ad88"/>
        <function-ref name="sendDone" scoped="" ref="0x7667ae68"/>
        <function-ref name="resend" scoped="" ref="0x76681010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x76685858" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x76685858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x76685a30"/>
        <function-ref name="getPayload" scoped="" ref="0x76685b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x76685bf0"/>
        <function-ref name="cancel" scoped="" ref="0x76685cd0"/>
        <function-ref name="sendDone" scoped="" ref="0x76685db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x766776e0" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x766776e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x766778b8"/>
        <function-ref name="rand32" scoped="" ref="0x76677998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x76682420" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x76682420"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x766825f8"/>
        <function-ref name="stop" scoped="" ref="0x766826d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x76676010" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x76676010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x766761e8"/>
        <function-ref name="getHeader" scoped="" ref="0x766762c8"/>
        <function-ref name="getMetadata" scoped="" ref="0x766763a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7667e9c0" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7667e9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7667eb98"/>
        <function-ref name="rfOff" scoped="" ref="0x7667ec78"/>
        <function-ref name="rxOn" scoped="" ref="0x7667ed58"/>
        <function-ref name="startVReg" scoped="" ref="0x7667ee38"/>
        <function-ref name="stopVReg" scoped="" ref="0x7667ef18"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x76682010"/>
        <function-ref name="stopOscillator" scoped="" ref="0x766820f0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x766821d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x76677b28" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x76677b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x76677d00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x76677de0"/>
        <function-ref name="led1On" scoped="" ref="0x76677ec0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7667d010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7667d0f0"/>
        <function-ref name="get" scoped="" ref="0x7667d1d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7667d2b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7667d630"/>
        <function-ref name="set" scoped="" ref="0x7667d390"/>
        <function-ref name="led0On" scoped="" ref="0x7667d470"/>
        <function-ref name="led2On" scoped="" ref="0x7667d550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x76684800" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x76684800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x766849d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x76684ab8"/>
        <function-ref name="request" scoped="" ref="0x76684b98"/>
        <function-ref name="granted" scoped="" ref="0x76684c78"/>
        <function-ref name="isOwner" scoped="" ref="0x76684d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x76670838" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x76670838"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x76670a90"/>
        <function-ref name="toIdle" scoped="" ref="0x76670b70"/>
        <function-ref name="isState" scoped="" ref="0x76670c50"/>
        <function-ref name="isIdle" scoped="" ref="0x76670d30"/>
        <function-ref name="requestState" scoped="" ref="0x76670e10"/>
        <function-ref name="forceState" scoped="" ref="0x76670ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7666ea00" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7666ea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7666ebd8"/>
        <function-ref name="runTask" scoped="" ref="0x7666ecb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7666e1f0" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7666e1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7666e3c8"/>
        <function-ref name="runTask" scoped="" ref="0x7666e4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x76672998" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x76672998"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x76672b70"/>
        <function-ref name="runTask" scoped="" ref="0x76672c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7663adf8" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7663adf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x76641010"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x766410f0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x766411d0"/>
        <function-ref name="syncDone" scoped="" ref="0x766412b0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x76641390"/>
        <function-ref name="setShortAddr" scoped="" ref="0x76641470"/>
        <function-ref name="setChannel" scoped="" ref="0x76641550"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x76641630"/>
        <function-ref name="setPanAddr" scoped="" ref="0x76641710"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x766417f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x766418d0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x766419b0"/>
        <function-ref name="sync" scoped="" ref="0x76641a90"/>
        <function-ref name="getChannel" scoped="" ref="0x76641bf0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x76641cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x766409d0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x766409d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76639010"/>
        <function-ref name="readDone" scoped="" ref="0x76639268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x76641ea0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x76641ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x766400c0"/>
        <function-ref name="rfOff" scoped="" ref="0x766401a0"/>
        <function-ref name="rxOn" scoped="" ref="0x76640280"/>
        <function-ref name="startVReg" scoped="" ref="0x76640360"/>
        <function-ref name="stopVReg" scoped="" ref="0x76640440"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x76640520"/>
        <function-ref name="stopOscillator" scoped="" ref="0x76640600"/>
        <function-ref name="startVRegDone" scoped="" ref="0x766406e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x76645ba8" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x76645ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x76645d80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x76645e60"/>
        <function-ref name="request" scoped="" ref="0x76642010"/>
        <function-ref name="granted" scoped="" ref="0x766420f0"/>
        <function-ref name="isOwner" scoped="" ref="0x766421d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x76636900" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x76636900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x76636ad8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x76636bb8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x76636c98"/>
        <function-ref name="syncDone" scoped="" ref="0x76636d78"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x76636e58"/>
        <function-ref name="setShortAddr" scoped="" ref="0x76635010"/>
        <function-ref name="setChannel" scoped="" ref="0x766350f0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x766351d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x766352b0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x76635390"/>
        <function-ref name="getExtAddr" scoped="" ref="0x76635470"/>
        <function-ref name="getShortAddr" scoped="" ref="0x76635550"/>
        <function-ref name="sync" scoped="" ref="0x76635630"/>
        <function-ref name="getChannel" scoped="" ref="0x76635790"/>
        <function-ref name="getPanAddr" scoped="" ref="0x76635870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7661c010" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7661c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7661c1e8"/>
        <function-ref name="write" scoped="" ref="0x7661c2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x766329a8" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x766329a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x76632b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x766311c8" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x766311c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7662f690"/>
        <function-ref name="fired" scoped="" ref="0x76631e30"/>
        <function-ref name="startAt" scoped="" ref="0x7662f350"/>
        <function-ref name="isRunning" scoped="" ref="0x7662f0d8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7662f908"/>
        <function-ref name="start" scoped="" ref="0x76631918"/>
        <function-ref name="stop" scoped="" ref="0x76631bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x766245c0" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x766245c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76624798"/>
        <function-ref name="write" scoped="" ref="0x76624878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7662a840" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7662a840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7662aa18"/>
        <function-ref name="isInput" scoped="" ref="0x7662aaf8"/>
        <function-ref name="toggle" scoped="" ref="0x7662abd8"/>
        <function-ref name="isOutput" scoped="" ref="0x7662acb8"/>
        <function-ref name="get" scoped="" ref="0x7662ad98"/>
        <function-ref name="makeOutput" scoped="" ref="0x7662ae78"/>
        <function-ref name="set" scoped="" ref="0x76629010"/>
        <function-ref name="clr" scoped="" ref="0x766290f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x766335a0" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x766335a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76633bc8"/>
        <function-ref name="readDone" scoped="" ref="0x76633e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x76610328" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x76610328"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x76610500"/>
        <function-ref name="runTask" scoped="" ref="0x766105e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7661c508" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7661c508"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7661c6e0"/>
        <function-ref name="write" scoped="" ref="0x7661c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7661ca10" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7661ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7661cbe8"/>
        <function-ref name="write" scoped="" ref="0x7661ccc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7661bb68" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7661bb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7661bd40"/>
        <function-ref name="write" scoped="" ref="0x7661be20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7661f350" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7661f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7661f528"/>
        <function-ref name="changed" scoped="" ref="0x7661f608"/>
        <function-ref name="amGroup" scoped="" ref="0x7661f6e8"/>
        <function-ref name="setAddress" scoped="" ref="0x7661f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x76626d80" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x76626d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7662a010"/>
        <function-ref name="isInput" scoped="" ref="0x7662a0f0"/>
        <function-ref name="toggle" scoped="" ref="0x7662a1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7662a2b0"/>
        <function-ref name="get" scoped="" ref="0x7662a390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7662a470"/>
        <function-ref name="set" scoped="" ref="0x7662a550"/>
        <function-ref name="clr" scoped="" ref="0x7662a630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x76618158" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x76618158"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76618430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x76629300" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x76629300"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766294d8"/>
        <function-ref name="isInput" scoped="" ref="0x766295b8"/>
        <function-ref name="toggle" scoped="" ref="0x76629698"/>
        <function-ref name="isOutput" scoped="" ref="0x76629778"/>
        <function-ref name="get" scoped="" ref="0x76629858"/>
        <function-ref name="makeOutput" scoped="" ref="0x76629938"/>
        <function-ref name="set" scoped="" ref="0x76629a18"/>
        <function-ref name="clr" scoped="" ref="0x76629af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x76639d70" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x76639d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x76636010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x76624ae0" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x76624ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76624cb8"/>
        <function-ref name="write" scoped="" ref="0x76624d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x76618678" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x76618678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76618850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x76618a98" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x76618a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x76618c70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x76618d50"/>
        <function-ref name="request" scoped="" ref="0x76618e30"/>
        <function-ref name="granted" scoped="" ref="0x76618f10"/>
        <function-ref name="isOwner" scoped="" ref="0x76617010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x76617a18" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x76617a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x76617bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x76617cd0"/>
        <function-ref name="request" scoped="" ref="0x76617db0"/>
        <function-ref name="granted" scoped="" ref="0x76617e90"/>
        <function-ref name="isOwner" scoped="" ref="0x76616010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x76635a40" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x76635a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x76635c18"/>
        <function-ref name="rfOff" scoped="" ref="0x76635cf8"/>
        <function-ref name="rxOn" scoped="" ref="0x76635dd8"/>
        <function-ref name="startVReg" scoped="" ref="0x76635eb8"/>
        <function-ref name="stopVReg" scoped="" ref="0x76633010"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x766330f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x766331d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x766332b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x766240a0" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x766240a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76624278"/>
        <function-ref name="write" scoped="" ref="0x76624358"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7661b660" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7661b660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7661b838"/>
        <function-ref name="write" scoped="" ref="0x7661b918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x766198b8" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x766198b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76619a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x766161a0" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x766161a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x76616378"/>
        <function-ref name="led0Toggle" scoped="" ref="0x76616458"/>
        <function-ref name="led1On" scoped="" ref="0x76616538"/>
        <function-ref name="led1Toggle" scoped="" ref="0x76616618"/>
        <function-ref name="led2Toggle" scoped="" ref="0x766166f8"/>
        <function-ref name="get" scoped="" ref="0x766167d8"/>
        <function-ref name="led1Off" scoped="" ref="0x766168b8"/>
        <function-ref name="led2Off" scoped="" ref="0x76616c38"/>
        <function-ref name="set" scoped="" ref="0x76616998"/>
        <function-ref name="led0On" scoped="" ref="0x76616a78"/>
        <function-ref name="led2On" scoped="" ref="0x76616b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x76611b20" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x76611b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x76611cf8"/>
        <function-ref name="runTask" scoped="" ref="0x76611dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x766361c8" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x766361c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x766363a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x76636480"/>
        <function-ref name="request" scoped="" ref="0x76636560"/>
        <function-ref name="granted" scoped="" ref="0x76636640"/>
        <function-ref name="isOwner" scoped="" ref="0x76636720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7661dee8" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7661dee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x766250e0"/>
        <function-ref name="write" scoped="" ref="0x766251c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7661d998" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7661d998"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7661dbf0"/>
        <function-ref name="write" scoped="" ref="0x7661dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x766223e0" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x766223e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x766225b8"/>
        <function-ref name="disable" scoped="" ref="0x76622698"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x76622778"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x76622858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x76617268" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x76617268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x76617440"/>
        <function-ref name="immediateRequest" scoped="" ref="0x76617520"/>
        <function-ref name="request" scoped="" ref="0x76617600"/>
        <function-ref name="granted" scoped="" ref="0x766176e0"/>
        <function-ref name="isOwner" scoped="" ref="0x766177c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x76619cd0" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x76619cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76619ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x765cc4b0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x765cc4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x765cc688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x765cca78" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x765cca78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x765c7010"/>
        <function-ref name="fired" scoped="" ref="0x765c9718"/>
        <function-ref name="startAt" scoped="" ref="0x765c9c08"/>
        <function-ref name="isRunning" scoped="" ref="0x765c9990"/>
        <function-ref name="getAlarm" scoped="" ref="0x765c7288"/>
        <function-ref name="start" scoped="" ref="0x765c9200"/>
        <function-ref name="stop" scoped="" ref="0x765c94a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x765c6808" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x765c6808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x765c69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x765c6c80" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x765c6c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7653b150"/>
        <function-ref name="fired" scoped="" ref="0x765c5908"/>
        <function-ref name="startAt" scoped="" ref="0x765c5df8"/>
        <function-ref name="isRunning" scoped="" ref="0x765c5b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7653b3c8"/>
        <function-ref name="start" scoped="" ref="0x765c53f0"/>
        <function-ref name="stop" scoped="" ref="0x765c5690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x752eb010" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x752eb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x752e94e0"/>
        <function-ref name="fired" scoped="" ref="0x752ebc78"/>
        <function-ref name="startAt" scoped="" ref="0x752e91a0"/>
        <function-ref name="isRunning" scoped="" ref="0x752ebef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x752e9758"/>
        <function-ref name="start" scoped="" ref="0x752eb760"/>
        <function-ref name="stop" scoped="" ref="0x752eba00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x752ecb98" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x752ecb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x752ecd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x752e70e8" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x752e70e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x752e65c8"/>
        <function-ref name="fired" scoped="" ref="0x752e7d50"/>
        <function-ref name="startAt" scoped="" ref="0x752e6288"/>
        <function-ref name="isRunning" scoped="" ref="0x752e6010"/>
        <function-ref name="getAlarm" scoped="" ref="0x752e6840"/>
        <function-ref name="start" scoped="" ref="0x752e7838"/>
        <function-ref name="stop" scoped="" ref="0x752e7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x752e8c68" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x752e8c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x752e8e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x752da170" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x752da170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x752da348"/>
        <function-ref name="setEvent" scoped="" ref="0x752da428"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x752da508"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x752da5e8"/>
        <function-ref name="fired" scoped="" ref="0x752da6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x752dca90" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x752dca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x752dcc68"/>
        <function-ref name="setClockSource" scoped="" ref="0x752dcd48"/>
        <function-ref name="enableEvents" scoped="" ref="0x752dce28"/>
        <function-ref name="get" scoped="" ref="0x752dcf08"/>
        <function-ref name="disableEvents" scoped="" ref="0x752db010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x752db0f0"/>
        <function-ref name="getMode" scoped="" ref="0x752db1d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x752db2b0"/>
        <function-ref name="overflow" scoped="" ref="0x752db390"/>
        <function-ref name="setMode" scoped="" ref="0x752db470"/>
        <function-ref name="setInputDivider" scoped="" ref="0x752db550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x752db6b0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x752db6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x752db888"/>
        <function-ref name="getControl" scoped="" ref="0x752db968"/>
        <function-ref name="enableEvents" scoped="" ref="0x752dba48"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x752dbb28"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x752dbc08"/>
        <function-ref name="disableEvents" scoped="" ref="0x752dbce8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x752dbdc8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x752dbea8"/>
        <function-ref name="setControl" scoped="" ref="0x752da010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x765af698" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x765af698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x765af870"/>
        <function-ref name="setEvent" scoped="" ref="0x765af950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x765afa30"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x765afb10"/>
        <function-ref name="fired" scoped="" ref="0x765afbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x765b38e8" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x765b38e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x765b3ac0"/>
        <function-ref name="setClockSource" scoped="" ref="0x765b3ba0"/>
        <function-ref name="enableEvents" scoped="" ref="0x765b3c80"/>
        <function-ref name="get" scoped="" ref="0x765b3d60"/>
        <function-ref name="disableEvents" scoped="" ref="0x765b3e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x765b3f20"/>
        <function-ref name="getMode" scoped="" ref="0x765b0018"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x765b00f8"/>
        <function-ref name="overflow" scoped="" ref="0x765b01d8"/>
        <function-ref name="setMode" scoped="" ref="0x765b02b8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x765b0398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x765b0890" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x765b0890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x765b0a68"/>
        <function-ref name="getControl" scoped="" ref="0x765b0b48"/>
        <function-ref name="enableEvents" scoped="" ref="0x765b0c28"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x765b0d08"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x765b0de8"/>
        <function-ref name="disableEvents" scoped="" ref="0x765b0ec8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x765af010"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x765af0f0"/>
        <function-ref name="setControl" scoped="" ref="0x765af1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x752d5ba8" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x752d5ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x752d5d80"/>
        <function-ref name="setEvent" scoped="" ref="0x752d5e60"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x752d4010"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x752d40f0"/>
        <function-ref name="fired" scoped="" ref="0x752d41d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x752d64b8" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x752d64b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x752d6690"/>
        <function-ref name="setClockSource" scoped="" ref="0x752d6770"/>
        <function-ref name="enableEvents" scoped="" ref="0x752d6850"/>
        <function-ref name="get" scoped="" ref="0x752d6930"/>
        <function-ref name="disableEvents" scoped="" ref="0x752d6a10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x752d6af0"/>
        <function-ref name="getMode" scoped="" ref="0x752d6bd0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x752d6cb0"/>
        <function-ref name="overflow" scoped="" ref="0x752d6d90"/>
        <function-ref name="setMode" scoped="" ref="0x752d6e70"/>
        <function-ref name="setInputDivider" scoped="" ref="0x752d5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x752d9aa0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x752d9aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x752d6010"/>
        <function-ref name="fired" scoped="" ref="0x752d7718"/>
        <function-ref name="startAt" scoped="" ref="0x752d7c08"/>
        <function-ref name="isRunning" scoped="" ref="0x752d7990"/>
        <function-ref name="getAlarm" scoped="" ref="0x752d6288"/>
        <function-ref name="start" scoped="" ref="0x752d7200"/>
        <function-ref name="stop" scoped="" ref="0x752d74a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x752d9628" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x752d9628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x752d9800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x752d5170" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x752d5170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x752d5348"/>
        <function-ref name="getControl" scoped="" ref="0x752d5428"/>
        <function-ref name="enableEvents" scoped="" ref="0x752d5508"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x752d55e8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x752d56c8"/>
        <function-ref name="disableEvents" scoped="" ref="0x752d57a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x752d5888"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x752d5968"/>
        <function-ref name="setControl" scoped="" ref="0x752d5a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x765805a8" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x765805a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x76580cf8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76583288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76583010"/>
        <function-ref name="overflow" scoped="" ref="0x76583500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7657d118" loc="43:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7657d118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7657d868"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7657dd58"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7657dae0"/>
        <function-ref name="overflow" scoped="" ref="0x7657c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x76573ca0" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x76573ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76573e78"/>
        <function-ref name="setClockSource" scoped="" ref="0x76572010"/>
        <function-ref name="enableEvents" scoped="" ref="0x765720f0"/>
        <function-ref name="get" scoped="" ref="0x765721d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x765722b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76572390"/>
        <function-ref name="getMode" scoped="" ref="0x76572470"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76572550"/>
        <function-ref name="overflow" scoped="" ref="0x76572630"/>
        <function-ref name="setMode" scoped="" ref="0x76572710"/>
        <function-ref name="setInputDivider" scoped="" ref="0x765727f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7657bae8" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7657bae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x76573308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x765737f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76573580"/>
        <function-ref name="overflow" scoped="" ref="0x76573a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x76560b40" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x76560b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7655f308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7655f7f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7655f580"/>
        <function-ref name="overflow" scoped="" ref="0x7655fa70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7657e908" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7657e908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x76560068"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76560558"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x765602e0"/>
        <function-ref name="overflow" scoped="" ref="0x765607d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x752e4b48" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x752e4b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x752e2068"/>
        <function-ref name="fired" scoped="" ref="0x752e3820"/>
        <function-ref name="startAt" scoped="" ref="0x752e3d10"/>
        <function-ref name="isRunning" scoped="" ref="0x752e3a98"/>
        <function-ref name="getAlarm" scoped="" ref="0x752e22e0"/>
        <function-ref name="start" scoped="" ref="0x752e3308"/>
        <function-ref name="stop" scoped="" ref="0x752e35a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x752e1870" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x752e1870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x752e0d58"/>
        <function-ref name="fired" scoped="" ref="0x752e0528"/>
        <function-ref name="startAt" scoped="" ref="0x752e0a18"/>
        <function-ref name="isRunning" scoped="" ref="0x752e07a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x752de010"/>
        <function-ref name="start" scoped="" ref="0x752e0010"/>
        <function-ref name="stop" scoped="" ref="0x752e02b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x752e2630" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x752e2630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x752e2d80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x752e1288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x752e1010"/>
        <function-ref name="overflow" scoped="" ref="0x752e1500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x765384c0" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x765384c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76538698"/>
        <function-ref name="isInput" scoped="" ref="0x76538778"/>
        <function-ref name="toggle" scoped="" ref="0x76538858"/>
        <function-ref name="isOutput" scoped="" ref="0x76538938"/>
        <function-ref name="get" scoped="" ref="0x76538a18"/>
        <function-ref name="makeOutput" scoped="" ref="0x76538af8"/>
        <function-ref name="set" scoped="" ref="0x76538bd8"/>
        <function-ref name="clr" scoped="" ref="0x76538cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x76538ed0" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x76538ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765370c0"/>
        <function-ref name="isInput" scoped="" ref="0x765371a0"/>
        <function-ref name="toggle" scoped="" ref="0x76537280"/>
        <function-ref name="isOutput" scoped="" ref="0x76537360"/>
        <function-ref name="get" scoped="" ref="0x76537440"/>
        <function-ref name="makeOutput" scoped="" ref="0x76537520"/>
        <function-ref name="set" scoped="" ref="0x76537600"/>
        <function-ref name="clr" scoped="" ref="0x765376e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x765378f0" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x765378f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76537ac8"/>
        <function-ref name="isInput" scoped="" ref="0x76537ba8"/>
        <function-ref name="toggle" scoped="" ref="0x76537c88"/>
        <function-ref name="isOutput" scoped="" ref="0x76537d68"/>
        <function-ref name="get" scoped="" ref="0x76537e48"/>
        <function-ref name="makeOutput" scoped="" ref="0x76537f28"/>
        <function-ref name="set" scoped="" ref="0x76536018"/>
        <function-ref name="clr" scoped="" ref="0x765360f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x76539a08" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x76539a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76539be0"/>
        <function-ref name="isInput" scoped="" ref="0x76539cc0"/>
        <function-ref name="toggle" scoped="" ref="0x76539da0"/>
        <function-ref name="isOutput" scoped="" ref="0x76539e80"/>
        <function-ref name="get" scoped="" ref="0x76538010"/>
        <function-ref name="makeOutput" scoped="" ref="0x765380f0"/>
        <function-ref name="set" scoped="" ref="0x765381d0"/>
        <function-ref name="clr" scoped="" ref="0x765382b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x76536d00" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x76536d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76536ed8"/>
        <function-ref name="isInput" scoped="" ref="0x76534010"/>
        <function-ref name="toggle" scoped="" ref="0x765340f0"/>
        <function-ref name="isOutput" scoped="" ref="0x765341d0"/>
        <function-ref name="get" scoped="" ref="0x765342b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76534390"/>
        <function-ref name="set" scoped="" ref="0x76534470"/>
        <function-ref name="clr" scoped="" ref="0x76534550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x76539010" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x76539010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765391e8"/>
        <function-ref name="isInput" scoped="" ref="0x765392c8"/>
        <function-ref name="toggle" scoped="" ref="0x765393a8"/>
        <function-ref name="isOutput" scoped="" ref="0x76539488"/>
        <function-ref name="get" scoped="" ref="0x76539568"/>
        <function-ref name="makeOutput" scoped="" ref="0x76539648"/>
        <function-ref name="set" scoped="" ref="0x76539728"/>
        <function-ref name="clr" scoped="" ref="0x76539808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x765362f8" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x765362f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765364d0"/>
        <function-ref name="isInput" scoped="" ref="0x765365b0"/>
        <function-ref name="toggle" scoped="" ref="0x76536690"/>
        <function-ref name="isOutput" scoped="" ref="0x76536770"/>
        <function-ref name="get" scoped="" ref="0x76536850"/>
        <function-ref name="makeOutput" scoped="" ref="0x76536930"/>
        <function-ref name="set" scoped="" ref="0x76536a10"/>
        <function-ref name="clr" scoped="" ref="0x76536af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x76528bc8" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x76528bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76528da0"/>
        <function-ref name="isInput" scoped="" ref="0x76528e80"/>
        <function-ref name="setResistor" scoped="" ref="0x76527010"/>
        <function-ref name="toggle" scoped="" ref="0x765270f0"/>
        <function-ref name="isOutput" scoped="" ref="0x765271d0"/>
        <function-ref name="getResistor" scoped="" ref="0x765272b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76527390"/>
        <function-ref name="get" scoped="" ref="0x76527470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76527550"/>
        <function-ref name="getRaw" scoped="" ref="0x76527630"/>
        <function-ref name="set" scoped="" ref="0x76527710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765277f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765278d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76527a30"/>
        <function-ref name="clr" scoped="" ref="0x76527b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7651dd88" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7651dd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7651c010"/>
        <function-ref name="isInput" scoped="" ref="0x7651c0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7651c1d0"/>
        <function-ref name="toggle" scoped="" ref="0x7651c2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7651c390"/>
        <function-ref name="getResistor" scoped="" ref="0x7651c470"/>
        <function-ref name="makeOutput" scoped="" ref="0x7651c550"/>
        <function-ref name="get" scoped="" ref="0x7651c630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7651c710"/>
        <function-ref name="getRaw" scoped="" ref="0x7651c7f0"/>
        <function-ref name="set" scoped="" ref="0x7651c8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7651c9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7651ca90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7651cbf0"/>
        <function-ref name="clr" scoped="" ref="0x7651ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x764f4f28" loc="145:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x764f4f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764f3110"/>
        <function-ref name="isInput" scoped="" ref="0x764f31f0"/>
        <function-ref name="setResistor" scoped="" ref="0x764f32d0"/>
        <function-ref name="toggle" scoped="" ref="0x764f33b0"/>
        <function-ref name="isOutput" scoped="" ref="0x764f3490"/>
        <function-ref name="getResistor" scoped="" ref="0x764f3570"/>
        <function-ref name="makeOutput" scoped="" ref="0x764f3650"/>
        <function-ref name="get" scoped="" ref="0x764f3730"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764f3810"/>
        <function-ref name="getRaw" scoped="" ref="0x764f38f0"/>
        <function-ref name="set" scoped="" ref="0x764f39d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764f3ab0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764f3b90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764f3cf0"/>
        <function-ref name="clr" scoped="" ref="0x764f3dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x764dfc98" loc="165:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x764dfc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764dfe70"/>
        <function-ref name="isInput" scoped="" ref="0x764de010"/>
        <function-ref name="setResistor" scoped="" ref="0x764de0f0"/>
        <function-ref name="toggle" scoped="" ref="0x764de1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x764de2b0"/>
        <function-ref name="getResistor" scoped="" ref="0x764de390"/>
        <function-ref name="makeOutput" scoped="" ref="0x764de470"/>
        <function-ref name="get" scoped="" ref="0x764de550"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764de630"/>
        <function-ref name="getRaw" scoped="" ref="0x764de710"/>
        <function-ref name="set" scoped="" ref="0x764de7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764de8d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764de9b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764deb10"/>
        <function-ref name="clr" scoped="" ref="0x764debf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x764f2068" loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x764f2068"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764f2240"/>
        <function-ref name="isInput" scoped="" ref="0x764f2320"/>
        <function-ref name="setResistor" scoped="" ref="0x764f2400"/>
        <function-ref name="toggle" scoped="" ref="0x764f24e0"/>
        <function-ref name="isOutput" scoped="" ref="0x764f25c0"/>
        <function-ref name="getResistor" scoped="" ref="0x764f26a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x764f2780"/>
        <function-ref name="get" scoped="" ref="0x764f2860"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764f2940"/>
        <function-ref name="getRaw" scoped="" ref="0x764f2a20"/>
        <function-ref name="set" scoped="" ref="0x764f2b00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764f2be0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764f2cc0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764f2e20"/>
        <function-ref name="clr" scoped="" ref="0x764f2f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7651a178" loc="71:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7651a178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7651a350"/>
        <function-ref name="isInput" scoped="" ref="0x7651a430"/>
        <function-ref name="setResistor" scoped="" ref="0x7651a510"/>
        <function-ref name="toggle" scoped="" ref="0x7651a5f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7651a6d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7651a7b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7651a890"/>
        <function-ref name="get" scoped="" ref="0x7651a970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7651aa50"/>
        <function-ref name="getRaw" scoped="" ref="0x7651ab30"/>
        <function-ref name="set" scoped="" ref="0x7651ac10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7651acf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7651add0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76519010"/>
        <function-ref name="clr" scoped="" ref="0x765190f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7650e3e8" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7650e3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7650e5c0"/>
        <function-ref name="isInput" scoped="" ref="0x7650e6a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7650e780"/>
        <function-ref name="toggle" scoped="" ref="0x7650e860"/>
        <function-ref name="isOutput" scoped="" ref="0x7650e940"/>
        <function-ref name="getResistor" scoped="" ref="0x7650ea20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7650eb00"/>
        <function-ref name="get" scoped="" ref="0x7650ebe0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7650ecc0"/>
        <function-ref name="getRaw" scoped="" ref="0x7650eda0"/>
        <function-ref name="set" scoped="" ref="0x7650ee80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7650d010"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7650d0f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7650d250"/>
        <function-ref name="clr" scoped="" ref="0x7650d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x765034c8" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x765034c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765036a0"/>
        <function-ref name="isInput" scoped="" ref="0x76503780"/>
        <function-ref name="setResistor" scoped="" ref="0x76503860"/>
        <function-ref name="toggle" scoped="" ref="0x76503940"/>
        <function-ref name="isOutput" scoped="" ref="0x76503a20"/>
        <function-ref name="getResistor" scoped="" ref="0x76503b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x76503be0"/>
        <function-ref name="get" scoped="" ref="0x76503cc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76503da0"/>
        <function-ref name="getRaw" scoped="" ref="0x76503e80"/>
        <function-ref name="set" scoped="" ref="0x76502010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765020f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765021d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76502330"/>
        <function-ref name="clr" scoped="" ref="0x76502410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x764fa368" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x764fa368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764fa540"/>
        <function-ref name="isInput" scoped="" ref="0x764fa620"/>
        <function-ref name="setResistor" scoped="" ref="0x764fa700"/>
        <function-ref name="toggle" scoped="" ref="0x764fa7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x764fa8c0"/>
        <function-ref name="getResistor" scoped="" ref="0x764fa9a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x764faa80"/>
        <function-ref name="get" scoped="" ref="0x764fab60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764fac40"/>
        <function-ref name="getRaw" scoped="" ref="0x764fad20"/>
        <function-ref name="set" scoped="" ref="0x764fae00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764faee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764f9010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764f9170"/>
        <function-ref name="clr" scoped="" ref="0x764f9250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x764ef4c0" loc="149:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x764ef4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764ef698"/>
        <function-ref name="isInput" scoped="" ref="0x764ef778"/>
        <function-ref name="setResistor" scoped="" ref="0x764ef858"/>
        <function-ref name="toggle" scoped="" ref="0x764ef938"/>
        <function-ref name="isOutput" scoped="" ref="0x764efa18"/>
        <function-ref name="getResistor" scoped="" ref="0x764efaf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x764efbd8"/>
        <function-ref name="get" scoped="" ref="0x764efcb8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764efd98"/>
        <function-ref name="getRaw" scoped="" ref="0x764efe78"/>
        <function-ref name="set" scoped="" ref="0x764ee010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764ee0f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764ee1d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764ee330"/>
        <function-ref name="clr" scoped="" ref="0x764ee410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x764e5280" loc="159:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x764e5280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764e5458"/>
        <function-ref name="isInput" scoped="" ref="0x764e5538"/>
        <function-ref name="setResistor" scoped="" ref="0x764e5618"/>
        <function-ref name="toggle" scoped="" ref="0x764e56f8"/>
        <function-ref name="isOutput" scoped="" ref="0x764e57d8"/>
        <function-ref name="getResistor" scoped="" ref="0x764e58b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x764e5998"/>
        <function-ref name="get" scoped="" ref="0x764e5a78"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764e5b58"/>
        <function-ref name="getRaw" scoped="" ref="0x764e5c38"/>
        <function-ref name="set" scoped="" ref="0x764e5d18"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764e5df8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764e5ed8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764e4090"/>
        <function-ref name="clr" scoped="" ref="0x764e4170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x764da288" loc="171:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x764da288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764da460"/>
        <function-ref name="isInput" scoped="" ref="0x764da540"/>
        <function-ref name="setResistor" scoped="" ref="0x764da620"/>
        <function-ref name="toggle" scoped="" ref="0x764da700"/>
        <function-ref name="isOutput" scoped="" ref="0x764da7e0"/>
        <function-ref name="getResistor" scoped="" ref="0x764da8c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x764da9a0"/>
        <function-ref name="get" scoped="" ref="0x764daa80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764dab60"/>
        <function-ref name="getRaw" scoped="" ref="0x764dac40"/>
        <function-ref name="set" scoped="" ref="0x764dad20"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764dae00"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764daee0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764d9090"/>
        <function-ref name="clr" scoped="" ref="0x764d9170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x76524178" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x76524178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76524350"/>
        <function-ref name="isInput" scoped="" ref="0x76524430"/>
        <function-ref name="setResistor" scoped="" ref="0x76524510"/>
        <function-ref name="toggle" scoped="" ref="0x765245f0"/>
        <function-ref name="isOutput" scoped="" ref="0x765246d0"/>
        <function-ref name="getResistor" scoped="" ref="0x765247b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76524890"/>
        <function-ref name="get" scoped="" ref="0x76524970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76524a50"/>
        <function-ref name="getRaw" scoped="" ref="0x76524b30"/>
        <function-ref name="set" scoped="" ref="0x76524c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76524cf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76524dd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76523010"/>
        <function-ref name="clr" scoped="" ref="0x765230f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x764ee680" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x764ee680"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764ee858"/>
        <function-ref name="isInput" scoped="" ref="0x764ee938"/>
        <function-ref name="setResistor" scoped="" ref="0x764eea18"/>
        <function-ref name="toggle" scoped="" ref="0x764eeaf8"/>
        <function-ref name="isOutput" scoped="" ref="0x764eebd8"/>
        <function-ref name="getResistor" scoped="" ref="0x764eecb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x764eed98"/>
        <function-ref name="get" scoped="" ref="0x764eee78"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764ed010"/>
        <function-ref name="getRaw" scoped="" ref="0x764ed0f0"/>
        <function-ref name="set" scoped="" ref="0x764ed1d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764ed2b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764ed390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764ed4f0"/>
        <function-ref name="clr" scoped="" ref="0x764ed5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x765224c8" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x765224c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765226a0"/>
        <function-ref name="isInput" scoped="" ref="0x76522780"/>
        <function-ref name="setResistor" scoped="" ref="0x76522860"/>
        <function-ref name="toggle" scoped="" ref="0x76522940"/>
        <function-ref name="isOutput" scoped="" ref="0x76522a20"/>
        <function-ref name="getResistor" scoped="" ref="0x76522b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x76522be0"/>
        <function-ref name="get" scoped="" ref="0x76522cc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76522da0"/>
        <function-ref name="getRaw" scoped="" ref="0x76522e80"/>
        <function-ref name="set" scoped="" ref="0x76521010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765210f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765211d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76521330"/>
        <function-ref name="clr" scoped="" ref="0x76521410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x76517688" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x76517688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76517860"/>
        <function-ref name="isInput" scoped="" ref="0x76517940"/>
        <function-ref name="setResistor" scoped="" ref="0x76517a20"/>
        <function-ref name="toggle" scoped="" ref="0x76517b00"/>
        <function-ref name="isOutput" scoped="" ref="0x76517be0"/>
        <function-ref name="getResistor" scoped="" ref="0x76517cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76517da0"/>
        <function-ref name="get" scoped="" ref="0x76517e80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76516010"/>
        <function-ref name="getRaw" scoped="" ref="0x765160f0"/>
        <function-ref name="set" scoped="" ref="0x765161d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765162b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76516390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765164f0"/>
        <function-ref name="clr" scoped="" ref="0x765165d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7650b928" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7650b928"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7650bb00"/>
        <function-ref name="isInput" scoped="" ref="0x7650bbe0"/>
        <function-ref name="setResistor" scoped="" ref="0x7650bcc0"/>
        <function-ref name="toggle" scoped="" ref="0x7650bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7650be80"/>
        <function-ref name="getResistor" scoped="" ref="0x7650a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7650a0f0"/>
        <function-ref name="get" scoped="" ref="0x7650a1d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7650a2b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7650a390"/>
        <function-ref name="set" scoped="" ref="0x7650a470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7650a550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7650a630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7650a790"/>
        <function-ref name="clr" scoped="" ref="0x7650a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x76500a08" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x76500a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76500be0"/>
        <function-ref name="isInput" scoped="" ref="0x76500cc0"/>
        <function-ref name="setResistor" scoped="" ref="0x76500da0"/>
        <function-ref name="toggle" scoped="" ref="0x76500e80"/>
        <function-ref name="isOutput" scoped="" ref="0x764ff010"/>
        <function-ref name="getResistor" scoped="" ref="0x764ff0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x764ff1d0"/>
        <function-ref name="get" scoped="" ref="0x764ff2b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764ff390"/>
        <function-ref name="getRaw" scoped="" ref="0x764ff470"/>
        <function-ref name="set" scoped="" ref="0x764ff550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764ff630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764ff710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764ff870"/>
        <function-ref name="clr" scoped="" ref="0x764ff950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x764f7848" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x764f7848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764f7a20"/>
        <function-ref name="isInput" scoped="" ref="0x764f7b00"/>
        <function-ref name="setResistor" scoped="" ref="0x764f7be0"/>
        <function-ref name="toggle" scoped="" ref="0x764f7cc0"/>
        <function-ref name="isOutput" scoped="" ref="0x764f7da0"/>
        <function-ref name="getResistor" scoped="" ref="0x764f7e80"/>
        <function-ref name="makeOutput" scoped="" ref="0x764f6010"/>
        <function-ref name="get" scoped="" ref="0x764f60f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764f61d0"/>
        <function-ref name="getRaw" scoped="" ref="0x764f62b0"/>
        <function-ref name="set" scoped="" ref="0x764f6390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764f6470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764f6550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764f66b0"/>
        <function-ref name="clr" scoped="" ref="0x764f6790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x76530848" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x76530848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76530a20"/>
        <function-ref name="isInput" scoped="" ref="0x76530b00"/>
        <function-ref name="setResistor" scoped="" ref="0x76530be0"/>
        <function-ref name="toggle" scoped="" ref="0x76530cc0"/>
        <function-ref name="isOutput" scoped="" ref="0x76530da0"/>
        <function-ref name="getResistor" scoped="" ref="0x76530e80"/>
        <function-ref name="makeOutput" scoped="" ref="0x76529010"/>
        <function-ref name="get" scoped="" ref="0x765290f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765291d0"/>
        <function-ref name="getRaw" scoped="" ref="0x765292b0"/>
        <function-ref name="set" scoped="" ref="0x76529390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76529470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76529550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765296b0"/>
        <function-ref name="clr" scoped="" ref="0x76529790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7651fa08" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7651fa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7651fc60"/>
        <function-ref name="isInput" scoped="" ref="0x7651fd40"/>
        <function-ref name="setResistor" scoped="" ref="0x7651fe20"/>
        <function-ref name="toggle" scoped="" ref="0x7651ff00"/>
        <function-ref name="isOutput" scoped="" ref="0x7651e010"/>
        <function-ref name="getResistor" scoped="" ref="0x7651e0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7651e1d0"/>
        <function-ref name="get" scoped="" ref="0x7651e2b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7651e390"/>
        <function-ref name="getRaw" scoped="" ref="0x7651e470"/>
        <function-ref name="set" scoped="" ref="0x7651e550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7651e630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7651e710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7651e870"/>
        <function-ref name="clr" scoped="" ref="0x7651e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x76514bc8" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x76514bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76514da0"/>
        <function-ref name="isInput" scoped="" ref="0x76514e80"/>
        <function-ref name="setResistor" scoped="" ref="0x76513010"/>
        <function-ref name="toggle" scoped="" ref="0x765130f0"/>
        <function-ref name="isOutput" scoped="" ref="0x765131d0"/>
        <function-ref name="getResistor" scoped="" ref="0x765132b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76513390"/>
        <function-ref name="get" scoped="" ref="0x76513470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76513550"/>
        <function-ref name="getRaw" scoped="" ref="0x76513630"/>
        <function-ref name="set" scoped="" ref="0x76513710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765137f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765138d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76513a30"/>
        <function-ref name="clr" scoped="" ref="0x76513b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x764f5d80" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x764f5d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764f4010"/>
        <function-ref name="isInput" scoped="" ref="0x764f40f0"/>
        <function-ref name="setResistor" scoped="" ref="0x764f41d0"/>
        <function-ref name="toggle" scoped="" ref="0x764f42b0"/>
        <function-ref name="isOutput" scoped="" ref="0x764f4390"/>
        <function-ref name="getResistor" scoped="" ref="0x764f4470"/>
        <function-ref name="makeOutput" scoped="" ref="0x764f4550"/>
        <function-ref name="get" scoped="" ref="0x764f4630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764f4710"/>
        <function-ref name="getRaw" scoped="" ref="0x764f47f0"/>
        <function-ref name="set" scoped="" ref="0x764f48d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764f49b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764f4a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764f4bf0"/>
        <function-ref name="clr" scoped="" ref="0x764f4cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x764e2758" loc="162:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x764e2758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764e2930"/>
        <function-ref name="isInput" scoped="" ref="0x764e2a10"/>
        <function-ref name="setResistor" scoped="" ref="0x764e2af0"/>
        <function-ref name="toggle" scoped="" ref="0x764e2bd0"/>
        <function-ref name="isOutput" scoped="" ref="0x764e2cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x764e2d90"/>
        <function-ref name="makeOutput" scoped="" ref="0x764e2e70"/>
        <function-ref name="get" scoped="" ref="0x764e1010"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764e10f0"/>
        <function-ref name="getRaw" scoped="" ref="0x764e11d0"/>
        <function-ref name="set" scoped="" ref="0x764e12b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764e1390"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764e1470"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764e15d0"/>
        <function-ref name="clr" scoped="" ref="0x764e16b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x764db168" loc="169:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x764db168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764db340"/>
        <function-ref name="isInput" scoped="" ref="0x764db420"/>
        <function-ref name="setResistor" scoped="" ref="0x764db500"/>
        <function-ref name="toggle" scoped="" ref="0x764db5e0"/>
        <function-ref name="isOutput" scoped="" ref="0x764db6c0"/>
        <function-ref name="getResistor" scoped="" ref="0x764db7a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x764db880"/>
        <function-ref name="get" scoped="" ref="0x764db960"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764dba40"/>
        <function-ref name="getRaw" scoped="" ref="0x764dbb20"/>
        <function-ref name="set" scoped="" ref="0x764dbc00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764dbce0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764dbdc0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764dbf20"/>
        <function-ref name="clr" scoped="" ref="0x764da018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x764ead80" loc="155:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x764ead80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764e9010"/>
        <function-ref name="isInput" scoped="" ref="0x764e90f0"/>
        <function-ref name="setResistor" scoped="" ref="0x764e91d0"/>
        <function-ref name="toggle" scoped="" ref="0x764e92b0"/>
        <function-ref name="isOutput" scoped="" ref="0x764e9390"/>
        <function-ref name="getResistor" scoped="" ref="0x764e9470"/>
        <function-ref name="makeOutput" scoped="" ref="0x764e9550"/>
        <function-ref name="get" scoped="" ref="0x764e9630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764e9710"/>
        <function-ref name="getRaw" scoped="" ref="0x764e97f0"/>
        <function-ref name="set" scoped="" ref="0x764e98d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764e99b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764e9a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764e9bf0"/>
        <function-ref name="clr" scoped="" ref="0x764e9cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x76510010" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x76510010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765102e8"/>
        <function-ref name="isInput" scoped="" ref="0x765103c8"/>
        <function-ref name="setResistor" scoped="" ref="0x765104a8"/>
        <function-ref name="toggle" scoped="" ref="0x76510588"/>
        <function-ref name="isOutput" scoped="" ref="0x76510668"/>
        <function-ref name="getResistor" scoped="" ref="0x76510748"/>
        <function-ref name="makeOutput" scoped="" ref="0x76510828"/>
        <function-ref name="get" scoped="" ref="0x76510908"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765109e8"/>
        <function-ref name="getRaw" scoped="" ref="0x76510ac8"/>
        <function-ref name="set" scoped="" ref="0x76510ba8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76510c88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76510d68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76510ec8"/>
        <function-ref name="clr" scoped="" ref="0x7650f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x76505178" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x76505178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76505350"/>
        <function-ref name="isInput" scoped="" ref="0x76505430"/>
        <function-ref name="setResistor" scoped="" ref="0x76505510"/>
        <function-ref name="toggle" scoped="" ref="0x765055f0"/>
        <function-ref name="isOutput" scoped="" ref="0x765056d0"/>
        <function-ref name="getResistor" scoped="" ref="0x765057b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76505890"/>
        <function-ref name="get" scoped="" ref="0x76505970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76505a50"/>
        <function-ref name="getRaw" scoped="" ref="0x76505b30"/>
        <function-ref name="set" scoped="" ref="0x76505c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76505cf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76505dd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76504010"/>
        <function-ref name="clr" scoped="" ref="0x765040f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x764fc010" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x764fc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764fc1e8"/>
        <function-ref name="isInput" scoped="" ref="0x764fc2c8"/>
        <function-ref name="setResistor" scoped="" ref="0x764fc3a8"/>
        <function-ref name="toggle" scoped="" ref="0x764fc488"/>
        <function-ref name="isOutput" scoped="" ref="0x764fc568"/>
        <function-ref name="getResistor" scoped="" ref="0x764fc648"/>
        <function-ref name="makeOutput" scoped="" ref="0x764fc728"/>
        <function-ref name="get" scoped="" ref="0x764fc808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764fc8e8"/>
        <function-ref name="getRaw" scoped="" ref="0x764fc9c8"/>
        <function-ref name="set" scoped="" ref="0x764fcaa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764fcb88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764fcc68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764fcdc8"/>
        <function-ref name="clr" scoped="" ref="0x764fcea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x764e1918" loc="163:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x764e1918"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764e1af0"/>
        <function-ref name="isInput" scoped="" ref="0x764e1bd0"/>
        <function-ref name="setResistor" scoped="" ref="0x764e1cb0"/>
        <function-ref name="toggle" scoped="" ref="0x764e1d90"/>
        <function-ref name="isOutput" scoped="" ref="0x764e1e70"/>
        <function-ref name="getResistor" scoped="" ref="0x764e0010"/>
        <function-ref name="makeOutput" scoped="" ref="0x764e00f0"/>
        <function-ref name="get" scoped="" ref="0x764e01d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764e02b0"/>
        <function-ref name="getRaw" scoped="" ref="0x764e0390"/>
        <function-ref name="set" scoped="" ref="0x764e0470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764e0550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764e0630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764e0790"/>
        <function-ref name="clr" scoped="" ref="0x764e0870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x764ed838" loc="152:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x764ed838"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764eda10"/>
        <function-ref name="isInput" scoped="" ref="0x764edaf0"/>
        <function-ref name="setResistor" scoped="" ref="0x764edbd0"/>
        <function-ref name="toggle" scoped="" ref="0x764edcb0"/>
        <function-ref name="isOutput" scoped="" ref="0x764edd90"/>
        <function-ref name="getResistor" scoped="" ref="0x764ede70"/>
        <function-ref name="makeOutput" scoped="" ref="0x764ec010"/>
        <function-ref name="get" scoped="" ref="0x764ec0f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764ec1d0"/>
        <function-ref name="getRaw" scoped="" ref="0x764ec2b0"/>
        <function-ref name="set" scoped="" ref="0x764ec390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764ec470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764ec550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764ec6b0"/>
        <function-ref name="clr" scoped="" ref="0x764ec790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x76527d88" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x76527d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76526010"/>
        <function-ref name="isInput" scoped="" ref="0x765260f0"/>
        <function-ref name="setResistor" scoped="" ref="0x765261d0"/>
        <function-ref name="toggle" scoped="" ref="0x765262b0"/>
        <function-ref name="isOutput" scoped="" ref="0x76526390"/>
        <function-ref name="getResistor" scoped="" ref="0x76526470"/>
        <function-ref name="makeOutput" scoped="" ref="0x76526550"/>
        <function-ref name="get" scoped="" ref="0x76526630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76526710"/>
        <function-ref name="getRaw" scoped="" ref="0x765267f0"/>
        <function-ref name="set" scoped="" ref="0x765268d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765269b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76526a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76526bf0"/>
        <function-ref name="clr" scoped="" ref="0x76526cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7651b010" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7651b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7651b1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7651b2c8"/>
        <function-ref name="setResistor" scoped="" ref="0x7651b3a8"/>
        <function-ref name="toggle" scoped="" ref="0x7651b488"/>
        <function-ref name="isOutput" scoped="" ref="0x7651b568"/>
        <function-ref name="getResistor" scoped="" ref="0x7651b648"/>
        <function-ref name="makeOutput" scoped="" ref="0x7651b728"/>
        <function-ref name="get" scoped="" ref="0x7651b808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7651b8e8"/>
        <function-ref name="getRaw" scoped="" ref="0x7651b9c8"/>
        <function-ref name="set" scoped="" ref="0x7651baa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7651bb88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7651bc68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7651bdc8"/>
        <function-ref name="clr" scoped="" ref="0x7651bea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x764ffbc8" loc="104:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x764ffbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764ffda0"/>
        <function-ref name="isInput" scoped="" ref="0x764ffe80"/>
        <function-ref name="setResistor" scoped="" ref="0x764fe010"/>
        <function-ref name="toggle" scoped="" ref="0x764fe0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x764fe1d0"/>
        <function-ref name="getResistor" scoped="" ref="0x764fe2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x764fe390"/>
        <function-ref name="get" scoped="" ref="0x764fe470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764fe550"/>
        <function-ref name="getRaw" scoped="" ref="0x764fe630"/>
        <function-ref name="set" scoped="" ref="0x764fe710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764fe7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764fe8d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764fea30"/>
        <function-ref name="clr" scoped="" ref="0x764feb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x76519368" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x76519368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76519540"/>
        <function-ref name="isInput" scoped="" ref="0x76519620"/>
        <function-ref name="setResistor" scoped="" ref="0x76519700"/>
        <function-ref name="toggle" scoped="" ref="0x765197e0"/>
        <function-ref name="isOutput" scoped="" ref="0x765198c0"/>
        <function-ref name="getResistor" scoped="" ref="0x765199a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76519a80"/>
        <function-ref name="get" scoped="" ref="0x76519b60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76519c40"/>
        <function-ref name="getRaw" scoped="" ref="0x76519d20"/>
        <function-ref name="set" scoped="" ref="0x76519e00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76519ee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76518010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76518170"/>
        <function-ref name="clr" scoped="" ref="0x76518250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7650d5a8" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7650d5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7650d780"/>
        <function-ref name="isInput" scoped="" ref="0x7650d860"/>
        <function-ref name="setResistor" scoped="" ref="0x7650d940"/>
        <function-ref name="toggle" scoped="" ref="0x7650da20"/>
        <function-ref name="isOutput" scoped="" ref="0x7650db00"/>
        <function-ref name="getResistor" scoped="" ref="0x7650dbe0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7650dcc0"/>
        <function-ref name="get" scoped="" ref="0x7650dda0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7650de80"/>
        <function-ref name="getRaw" scoped="" ref="0x7650c010"/>
        <function-ref name="set" scoped="" ref="0x7650c0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7650c1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7650c2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7650c410"/>
        <function-ref name="clr" scoped="" ref="0x7650c4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x76502688" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x76502688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76502860"/>
        <function-ref name="isInput" scoped="" ref="0x76502940"/>
        <function-ref name="setResistor" scoped="" ref="0x76502a20"/>
        <function-ref name="toggle" scoped="" ref="0x76502b00"/>
        <function-ref name="isOutput" scoped="" ref="0x76502be0"/>
        <function-ref name="getResistor" scoped="" ref="0x76502cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76502da0"/>
        <function-ref name="get" scoped="" ref="0x76502e80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76501010"/>
        <function-ref name="getRaw" scoped="" ref="0x765010f0"/>
        <function-ref name="set" scoped="" ref="0x765011d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765012b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76501390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765014f0"/>
        <function-ref name="clr" scoped="" ref="0x765015d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x764f94c8" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x764f94c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764f96a0"/>
        <function-ref name="isInput" scoped="" ref="0x764f9780"/>
        <function-ref name="setResistor" scoped="" ref="0x764f9860"/>
        <function-ref name="toggle" scoped="" ref="0x764f9940"/>
        <function-ref name="isOutput" scoped="" ref="0x764f9a20"/>
        <function-ref name="getResistor" scoped="" ref="0x764f9b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x764f9be0"/>
        <function-ref name="get" scoped="" ref="0x764f9cc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764f9da0"/>
        <function-ref name="getRaw" scoped="" ref="0x764f9e80"/>
        <function-ref name="set" scoped="" ref="0x764f8010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764f80f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764f81d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764f8330"/>
        <function-ref name="clr" scoped="" ref="0x764f8410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x764ebbc0" loc="154:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x764ebbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764ebd98"/>
        <function-ref name="isInput" scoped="" ref="0x764ebe78"/>
        <function-ref name="setResistor" scoped="" ref="0x764ea010"/>
        <function-ref name="toggle" scoped="" ref="0x764ea0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x764ea1d0"/>
        <function-ref name="getResistor" scoped="" ref="0x764ea2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x764ea390"/>
        <function-ref name="get" scoped="" ref="0x764ea470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764ea550"/>
        <function-ref name="getRaw" scoped="" ref="0x764ea630"/>
        <function-ref name="set" scoped="" ref="0x764ea710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764ea7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764ea8d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764eaa30"/>
        <function-ref name="clr" scoped="" ref="0x764eab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7652a558" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7652a558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7652a730"/>
        <function-ref name="isInput" scoped="" ref="0x7652a810"/>
        <function-ref name="setResistor" scoped="" ref="0x7652a8f0"/>
        <function-ref name="toggle" scoped="" ref="0x7652a9d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7652aab0"/>
        <function-ref name="getResistor" scoped="" ref="0x7652ab90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7652ac70"/>
        <function-ref name="get" scoped="" ref="0x7652ad50"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7652ae30"/>
        <function-ref name="getRaw" scoped="" ref="0x7652af10"/>
        <function-ref name="set" scoped="" ref="0x76531010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765310f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765311d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76531330"/>
        <function-ref name="clr" scoped="" ref="0x76531410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x76521688" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x76521688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76521860"/>
        <function-ref name="isInput" scoped="" ref="0x76521940"/>
        <function-ref name="setResistor" scoped="" ref="0x76521a20"/>
        <function-ref name="toggle" scoped="" ref="0x76521b00"/>
        <function-ref name="isOutput" scoped="" ref="0x76521be0"/>
        <function-ref name="getResistor" scoped="" ref="0x76521cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76521da0"/>
        <function-ref name="get" scoped="" ref="0x76521e80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76520010"/>
        <function-ref name="getRaw" scoped="" ref="0x765200f0"/>
        <function-ref name="set" scoped="" ref="0x765201d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765202b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76520390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765204f0"/>
        <function-ref name="clr" scoped="" ref="0x765205d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x76516848" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x76516848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76516a20"/>
        <function-ref name="isInput" scoped="" ref="0x76516b00"/>
        <function-ref name="setResistor" scoped="" ref="0x76516be0"/>
        <function-ref name="toggle" scoped="" ref="0x76516cc0"/>
        <function-ref name="isOutput" scoped="" ref="0x76516da0"/>
        <function-ref name="getResistor" scoped="" ref="0x76516e80"/>
        <function-ref name="makeOutput" scoped="" ref="0x76515010"/>
        <function-ref name="get" scoped="" ref="0x765150f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765151d0"/>
        <function-ref name="getRaw" scoped="" ref="0x765152b0"/>
        <function-ref name="set" scoped="" ref="0x76515390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76515470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76515550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765156b0"/>
        <function-ref name="clr" scoped="" ref="0x76515790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7650aae8" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7650aae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7650acc0"/>
        <function-ref name="isInput" scoped="" ref="0x7650ada0"/>
        <function-ref name="setResistor" scoped="" ref="0x7650ae80"/>
        <function-ref name="toggle" scoped="" ref="0x76509010"/>
        <function-ref name="isOutput" scoped="" ref="0x765090f0"/>
        <function-ref name="getResistor" scoped="" ref="0x765091d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x765092b0"/>
        <function-ref name="get" scoped="" ref="0x76509390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76509470"/>
        <function-ref name="getRaw" scoped="" ref="0x76509550"/>
        <function-ref name="set" scoped="" ref="0x76509630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76509710"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765097f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76509950"/>
        <function-ref name="clr" scoped="" ref="0x76509a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x764e7010" loc="156:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x764e7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764e71e8"/>
        <function-ref name="isInput" scoped="" ref="0x764e72c8"/>
        <function-ref name="setResistor" scoped="" ref="0x764e73a8"/>
        <function-ref name="toggle" scoped="" ref="0x764e7488"/>
        <function-ref name="isOutput" scoped="" ref="0x764e7568"/>
        <function-ref name="getResistor" scoped="" ref="0x764e7648"/>
        <function-ref name="makeOutput" scoped="" ref="0x764e7728"/>
        <function-ref name="get" scoped="" ref="0x764e7808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764e78e8"/>
        <function-ref name="getRaw" scoped="" ref="0x764e79c8"/>
        <function-ref name="set" scoped="" ref="0x764e7aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764e7b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764e7c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764e7dc8"/>
        <function-ref name="clr" scoped="" ref="0x764e7ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x764e43d8" loc="160:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x764e43d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764e45b0"/>
        <function-ref name="isInput" scoped="" ref="0x764e4690"/>
        <function-ref name="setResistor" scoped="" ref="0x764e4770"/>
        <function-ref name="toggle" scoped="" ref="0x764e4850"/>
        <function-ref name="isOutput" scoped="" ref="0x764e4930"/>
        <function-ref name="getResistor" scoped="" ref="0x764e4a10"/>
        <function-ref name="makeOutput" scoped="" ref="0x764e4af0"/>
        <function-ref name="get" scoped="" ref="0x764e4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764e4cb0"/>
        <function-ref name="getRaw" scoped="" ref="0x764e4d90"/>
        <function-ref name="set" scoped="" ref="0x764e4e70"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764e3010"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764e30f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764e3250"/>
        <function-ref name="clr" scoped="" ref="0x764e3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x764dee58" loc="166:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x764dee58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764dd050"/>
        <function-ref name="isInput" scoped="" ref="0x764dd130"/>
        <function-ref name="setResistor" scoped="" ref="0x764dd210"/>
        <function-ref name="toggle" scoped="" ref="0x764dd2f0"/>
        <function-ref name="isOutput" scoped="" ref="0x764dd3d0"/>
        <function-ref name="getResistor" scoped="" ref="0x764dd4b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x764dd590"/>
        <function-ref name="get" scoped="" ref="0x764dd670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764dd750"/>
        <function-ref name="getRaw" scoped="" ref="0x764dd830"/>
        <function-ref name="set" scoped="" ref="0x764dd910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764dd9f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764ddad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764ddc30"/>
        <function-ref name="clr" scoped="" ref="0x764ddd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x76508e68" loc="93:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x76508e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76507050"/>
        <function-ref name="isInput" scoped="" ref="0x76507130"/>
        <function-ref name="setResistor" scoped="" ref="0x76507210"/>
        <function-ref name="toggle" scoped="" ref="0x765072f0"/>
        <function-ref name="isOutput" scoped="" ref="0x765073d0"/>
        <function-ref name="getResistor" scoped="" ref="0x765074b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76507590"/>
        <function-ref name="get" scoped="" ref="0x76507670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76507750"/>
        <function-ref name="getRaw" scoped="" ref="0x76507830"/>
        <function-ref name="set" scoped="" ref="0x76507910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765079f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76507ad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76507c30"/>
        <function-ref name="clr" scoped="" ref="0x76507d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x764e6170" loc="157:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x764e6170"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764e6348"/>
        <function-ref name="isInput" scoped="" ref="0x764e6428"/>
        <function-ref name="setResistor" scoped="" ref="0x764e6508"/>
        <function-ref name="toggle" scoped="" ref="0x764e65e8"/>
        <function-ref name="isOutput" scoped="" ref="0x764e66c8"/>
        <function-ref name="getResistor" scoped="" ref="0x764e67a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x764e6888"/>
        <function-ref name="get" scoped="" ref="0x764e6968"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764e6a48"/>
        <function-ref name="getRaw" scoped="" ref="0x764e6b28"/>
        <function-ref name="set" scoped="" ref="0x764e6c08"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764e6ce8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764e6dc8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764e6f28"/>
        <function-ref name="clr" scoped="" ref="0x764e5018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x76529a08" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x76529a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76529be0"/>
        <function-ref name="isInput" scoped="" ref="0x76529cc0"/>
        <function-ref name="setResistor" scoped="" ref="0x76529da0"/>
        <function-ref name="toggle" scoped="" ref="0x76529e80"/>
        <function-ref name="isOutput" scoped="" ref="0x76528010"/>
        <function-ref name="getResistor" scoped="" ref="0x765280f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x765281d0"/>
        <function-ref name="get" scoped="" ref="0x765282b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76528390"/>
        <function-ref name="getRaw" scoped="" ref="0x76528470"/>
        <function-ref name="set" scoped="" ref="0x76528550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76528630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76528710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76528870"/>
        <function-ref name="clr" scoped="" ref="0x76528950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7651ebc8" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7651ebc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7651eda0"/>
        <function-ref name="isInput" scoped="" ref="0x7651ee80"/>
        <function-ref name="setResistor" scoped="" ref="0x7651d010"/>
        <function-ref name="toggle" scoped="" ref="0x7651d0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7651d1d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7651d2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7651d390"/>
        <function-ref name="get" scoped="" ref="0x7651d470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7651d550"/>
        <function-ref name="getRaw" scoped="" ref="0x7651d630"/>
        <function-ref name="set" scoped="" ref="0x7651d710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7651d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7651d8d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7651da30"/>
        <function-ref name="clr" scoped="" ref="0x7651db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x76513d88" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x76513d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76512010"/>
        <function-ref name="isInput" scoped="" ref="0x765120f0"/>
        <function-ref name="setResistor" scoped="" ref="0x765121d0"/>
        <function-ref name="toggle" scoped="" ref="0x765122b0"/>
        <function-ref name="isOutput" scoped="" ref="0x76512390"/>
        <function-ref name="getResistor" scoped="" ref="0x76512470"/>
        <function-ref name="makeOutput" scoped="" ref="0x76512550"/>
        <function-ref name="get" scoped="" ref="0x76512630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76512710"/>
        <function-ref name="getRaw" scoped="" ref="0x765127f0"/>
        <function-ref name="set" scoped="" ref="0x765128d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765129b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76512a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76512bf0"/>
        <function-ref name="clr" scoped="" ref="0x76512cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x764eca00" loc="153:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x764eca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764ecbd8"/>
        <function-ref name="isInput" scoped="" ref="0x764eccb8"/>
        <function-ref name="setResistor" scoped="" ref="0x764ecd98"/>
        <function-ref name="toggle" scoped="" ref="0x764ece78"/>
        <function-ref name="isOutput" scoped="" ref="0x764eb010"/>
        <function-ref name="getResistor" scoped="" ref="0x764eb0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x764eb1d0"/>
        <function-ref name="get" scoped="" ref="0x764eb2b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764eb390"/>
        <function-ref name="getRaw" scoped="" ref="0x764eb470"/>
        <function-ref name="set" scoped="" ref="0x764eb550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764eb630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764eb710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764eb870"/>
        <function-ref name="clr" scoped="" ref="0x764eb950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x764e0ad8" loc="164:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x764e0ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764e0cb0"/>
        <function-ref name="isInput" scoped="" ref="0x764e0d90"/>
        <function-ref name="setResistor" scoped="" ref="0x764e0e70"/>
        <function-ref name="toggle" scoped="" ref="0x764df010"/>
        <function-ref name="isOutput" scoped="" ref="0x764df0f0"/>
        <function-ref name="getResistor" scoped="" ref="0x764df1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x764df2b0"/>
        <function-ref name="get" scoped="" ref="0x764df390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764df470"/>
        <function-ref name="getRaw" scoped="" ref="0x764df550"/>
        <function-ref name="set" scoped="" ref="0x764df630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764df710"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764df7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764df950"/>
        <function-ref name="clr" scoped="" ref="0x764dfa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7650f288" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7650f288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7650f460"/>
        <function-ref name="isInput" scoped="" ref="0x7650f540"/>
        <function-ref name="setResistor" scoped="" ref="0x7650f620"/>
        <function-ref name="toggle" scoped="" ref="0x7650f700"/>
        <function-ref name="isOutput" scoped="" ref="0x7650f7e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7650f8c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7650f9a0"/>
        <function-ref name="get" scoped="" ref="0x7650fa80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7650fb60"/>
        <function-ref name="getRaw" scoped="" ref="0x7650fc40"/>
        <function-ref name="set" scoped="" ref="0x7650fd20"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7650fe00"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7650fee0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7650e090"/>
        <function-ref name="clr" scoped="" ref="0x7650e170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x76504368" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x76504368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76504540"/>
        <function-ref name="isInput" scoped="" ref="0x76504620"/>
        <function-ref name="setResistor" scoped="" ref="0x76504700"/>
        <function-ref name="toggle" scoped="" ref="0x765047e0"/>
        <function-ref name="isOutput" scoped="" ref="0x765048c0"/>
        <function-ref name="getResistor" scoped="" ref="0x765049a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76504a80"/>
        <function-ref name="get" scoped="" ref="0x76504b60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76504c40"/>
        <function-ref name="getRaw" scoped="" ref="0x76504d20"/>
        <function-ref name="set" scoped="" ref="0x76504e00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76504ee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76503010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76503170"/>
        <function-ref name="clr" scoped="" ref="0x76503250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x764fb178" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x764fb178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764fb350"/>
        <function-ref name="isInput" scoped="" ref="0x764fb430"/>
        <function-ref name="setResistor" scoped="" ref="0x764fb510"/>
        <function-ref name="toggle" scoped="" ref="0x764fb5f0"/>
        <function-ref name="isOutput" scoped="" ref="0x764fb6d0"/>
        <function-ref name="getResistor" scoped="" ref="0x764fb7b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x764fb890"/>
        <function-ref name="get" scoped="" ref="0x764fb970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764fba50"/>
        <function-ref name="getRaw" scoped="" ref="0x764fbb30"/>
        <function-ref name="set" scoped="" ref="0x764fbc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764fbcf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764fbdd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764fa010"/>
        <function-ref name="clr" scoped="" ref="0x764fa0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x76525010" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x76525010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765251e8"/>
        <function-ref name="isInput" scoped="" ref="0x765252c8"/>
        <function-ref name="setResistor" scoped="" ref="0x765253a8"/>
        <function-ref name="toggle" scoped="" ref="0x76525488"/>
        <function-ref name="isOutput" scoped="" ref="0x76525568"/>
        <function-ref name="getResistor" scoped="" ref="0x76525648"/>
        <function-ref name="makeOutput" scoped="" ref="0x76525728"/>
        <function-ref name="get" scoped="" ref="0x76525808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765258e8"/>
        <function-ref name="getRaw" scoped="" ref="0x765259c8"/>
        <function-ref name="set" scoped="" ref="0x76525aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76525b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76525c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76525dc8"/>
        <function-ref name="clr" scoped="" ref="0x76525ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x764fed88" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x764fed88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764fd010"/>
        <function-ref name="isInput" scoped="" ref="0x764fd0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x764fd1d0"/>
        <function-ref name="toggle" scoped="" ref="0x764fd2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x764fd390"/>
        <function-ref name="getResistor" scoped="" ref="0x764fd470"/>
        <function-ref name="makeOutput" scoped="" ref="0x764fd550"/>
        <function-ref name="get" scoped="" ref="0x764fd630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764fd710"/>
        <function-ref name="getRaw" scoped="" ref="0x764fd7f0"/>
        <function-ref name="set" scoped="" ref="0x764fd8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764fd9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764fda90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764fdbf0"/>
        <function-ref name="clr" scoped="" ref="0x764fdcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x76523368" loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x76523368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76523540"/>
        <function-ref name="isInput" scoped="" ref="0x76523620"/>
        <function-ref name="setResistor" scoped="" ref="0x76523700"/>
        <function-ref name="toggle" scoped="" ref="0x765237e0"/>
        <function-ref name="isOutput" scoped="" ref="0x765238c0"/>
        <function-ref name="getResistor" scoped="" ref="0x765239a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76523a80"/>
        <function-ref name="get" scoped="" ref="0x76523b60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76523c40"/>
        <function-ref name="getRaw" scoped="" ref="0x76523d20"/>
        <function-ref name="set" scoped="" ref="0x76523e00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76523ee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76522010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76522170"/>
        <function-ref name="clr" scoped="" ref="0x76522250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x765184c8" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x765184c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765186a0"/>
        <function-ref name="isInput" scoped="" ref="0x76518780"/>
        <function-ref name="setResistor" scoped="" ref="0x76518860"/>
        <function-ref name="toggle" scoped="" ref="0x76518940"/>
        <function-ref name="isOutput" scoped="" ref="0x76518a20"/>
        <function-ref name="getResistor" scoped="" ref="0x76518b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x76518be0"/>
        <function-ref name="get" scoped="" ref="0x76518cc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76518da0"/>
        <function-ref name="getRaw" scoped="" ref="0x76518e80"/>
        <function-ref name="set" scoped="" ref="0x76517010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765170f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765171d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76517330"/>
        <function-ref name="clr" scoped="" ref="0x76517410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7650c768" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7650c768"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7650c940"/>
        <function-ref name="isInput" scoped="" ref="0x7650ca20"/>
        <function-ref name="setResistor" scoped="" ref="0x7650cb00"/>
        <function-ref name="toggle" scoped="" ref="0x7650cbe0"/>
        <function-ref name="isOutput" scoped="" ref="0x7650ccc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7650cda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7650ce80"/>
        <function-ref name="get" scoped="" ref="0x7650b010"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7650b0f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7650b1d0"/>
        <function-ref name="set" scoped="" ref="0x7650b2b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7650b390"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7650b470"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7650b5d0"/>
        <function-ref name="clr" scoped="" ref="0x7650b6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x76501848" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x76501848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76501a20"/>
        <function-ref name="isInput" scoped="" ref="0x76501b00"/>
        <function-ref name="setResistor" scoped="" ref="0x76501be0"/>
        <function-ref name="toggle" scoped="" ref="0x76501cc0"/>
        <function-ref name="isOutput" scoped="" ref="0x76501da0"/>
        <function-ref name="getResistor" scoped="" ref="0x76501e80"/>
        <function-ref name="makeOutput" scoped="" ref="0x76500010"/>
        <function-ref name="get" scoped="" ref="0x765000f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765001d0"/>
        <function-ref name="getRaw" scoped="" ref="0x765002b0"/>
        <function-ref name="set" scoped="" ref="0x76500390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76500470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76500550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765006b0"/>
        <function-ref name="clr" scoped="" ref="0x76500790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x764f8688" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x764f8688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764f8860"/>
        <function-ref name="isInput" scoped="" ref="0x764f8940"/>
        <function-ref name="setResistor" scoped="" ref="0x764f8a20"/>
        <function-ref name="toggle" scoped="" ref="0x764f8b00"/>
        <function-ref name="isOutput" scoped="" ref="0x764f8be0"/>
        <function-ref name="getResistor" scoped="" ref="0x764f8cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x764f8da0"/>
        <function-ref name="get" scoped="" ref="0x764f8e80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764f7010"/>
        <function-ref name="getRaw" scoped="" ref="0x764f70f0"/>
        <function-ref name="set" scoped="" ref="0x764f71d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764f72b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764f7390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764f74f0"/>
        <function-ref name="clr" scoped="" ref="0x764f75d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x76531688" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x76531688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76531860"/>
        <function-ref name="isInput" scoped="" ref="0x76531940"/>
        <function-ref name="setResistor" scoped="" ref="0x76531a20"/>
        <function-ref name="toggle" scoped="" ref="0x76531b00"/>
        <function-ref name="isOutput" scoped="" ref="0x76531be0"/>
        <function-ref name="getResistor" scoped="" ref="0x76531cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76531da0"/>
        <function-ref name="get" scoped="" ref="0x76531e80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76530010"/>
        <function-ref name="getRaw" scoped="" ref="0x765300f0"/>
        <function-ref name="set" scoped="" ref="0x765301d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765302b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76530390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x765304f0"/>
        <function-ref name="clr" scoped="" ref="0x765305d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x76520848" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x76520848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76520a20"/>
        <function-ref name="isInput" scoped="" ref="0x76520b00"/>
        <function-ref name="setResistor" scoped="" ref="0x76520be0"/>
        <function-ref name="toggle" scoped="" ref="0x76520cc0"/>
        <function-ref name="isOutput" scoped="" ref="0x76520da0"/>
        <function-ref name="getResistor" scoped="" ref="0x76520e80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7651f010"/>
        <function-ref name="get" scoped="" ref="0x7651f0f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7651f1d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7651f2b0"/>
        <function-ref name="set" scoped="" ref="0x7651f390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7651f470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7651f550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7651f6b0"/>
        <function-ref name="clr" scoped="" ref="0x7651f790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x76515a08" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x76515a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76515be0"/>
        <function-ref name="isInput" scoped="" ref="0x76515cc0"/>
        <function-ref name="setResistor" scoped="" ref="0x76515da0"/>
        <function-ref name="toggle" scoped="" ref="0x76515e80"/>
        <function-ref name="isOutput" scoped="" ref="0x76514010"/>
        <function-ref name="getResistor" scoped="" ref="0x765140f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x765141d0"/>
        <function-ref name="get" scoped="" ref="0x765142b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76514390"/>
        <function-ref name="getRaw" scoped="" ref="0x76514470"/>
        <function-ref name="set" scoped="" ref="0x76514550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76514630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76514710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76514870"/>
        <function-ref name="clr" scoped="" ref="0x76514950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x76509ca8" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x76509ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76509e80"/>
        <function-ref name="isInput" scoped="" ref="0x76508010"/>
        <function-ref name="setResistor" scoped="" ref="0x765080f0"/>
        <function-ref name="toggle" scoped="" ref="0x765081d0"/>
        <function-ref name="isOutput" scoped="" ref="0x765082b0"/>
        <function-ref name="getResistor" scoped="" ref="0x76508390"/>
        <function-ref name="makeOutput" scoped="" ref="0x76508470"/>
        <function-ref name="get" scoped="" ref="0x76508550"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76508630"/>
        <function-ref name="getRaw" scoped="" ref="0x76508710"/>
        <function-ref name="set" scoped="" ref="0x765087f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x765088d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x765089b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76508b10"/>
        <function-ref name="clr" scoped="" ref="0x76508bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x764f0348" loc="148:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x764f0348"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764f0520"/>
        <function-ref name="isInput" scoped="" ref="0x764f0600"/>
        <function-ref name="setResistor" scoped="" ref="0x764f06e0"/>
        <function-ref name="toggle" scoped="" ref="0x764f07c0"/>
        <function-ref name="isOutput" scoped="" ref="0x764f08a0"/>
        <function-ref name="getResistor" scoped="" ref="0x764f0980"/>
        <function-ref name="makeOutput" scoped="" ref="0x764f0a60"/>
        <function-ref name="get" scoped="" ref="0x764f0b40"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764f0c20"/>
        <function-ref name="getRaw" scoped="" ref="0x764f0d00"/>
        <function-ref name="set" scoped="" ref="0x764f0de0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764f0ec0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764ef010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764ef170"/>
        <function-ref name="clr" scoped="" ref="0x764ef250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x764e3598" loc="161:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x764e3598"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764e3770"/>
        <function-ref name="isInput" scoped="" ref="0x764e3850"/>
        <function-ref name="setResistor" scoped="" ref="0x764e3930"/>
        <function-ref name="toggle" scoped="" ref="0x764e3a10"/>
        <function-ref name="isOutput" scoped="" ref="0x764e3af0"/>
        <function-ref name="getResistor" scoped="" ref="0x764e3bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x764e3cb0"/>
        <function-ref name="get" scoped="" ref="0x764e3d90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764e3e70"/>
        <function-ref name="getRaw" scoped="" ref="0x764e2010"/>
        <function-ref name="set" scoped="" ref="0x764e20f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764e21d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764e22b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764e2410"/>
        <function-ref name="clr" scoped="" ref="0x764e24f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x764f11a0" loc="147:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x764f11a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764f1378"/>
        <function-ref name="isInput" scoped="" ref="0x764f1458"/>
        <function-ref name="setResistor" scoped="" ref="0x764f1538"/>
        <function-ref name="toggle" scoped="" ref="0x764f1618"/>
        <function-ref name="isOutput" scoped="" ref="0x764f16f8"/>
        <function-ref name="getResistor" scoped="" ref="0x764f17d8"/>
        <function-ref name="makeOutput" scoped="" ref="0x764f18b8"/>
        <function-ref name="get" scoped="" ref="0x764f1998"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764f1a78"/>
        <function-ref name="getRaw" scoped="" ref="0x764f1b58"/>
        <function-ref name="set" scoped="" ref="0x764f1c38"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764f1d18"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764f1df8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764f0010"/>
        <function-ref name="clr" scoped="" ref="0x764f00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x76506010" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x76506010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x765061e8"/>
        <function-ref name="isInput" scoped="" ref="0x765062c8"/>
        <function-ref name="setResistor" scoped="" ref="0x765063a8"/>
        <function-ref name="toggle" scoped="" ref="0x76506488"/>
        <function-ref name="isOutput" scoped="" ref="0x76506568"/>
        <function-ref name="getResistor" scoped="" ref="0x76506648"/>
        <function-ref name="makeOutput" scoped="" ref="0x76506728"/>
        <function-ref name="get" scoped="" ref="0x76506808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x765068e8"/>
        <function-ref name="getRaw" scoped="" ref="0x765069c8"/>
        <function-ref name="set" scoped="" ref="0x76506aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76506b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76506c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76506dc8"/>
        <function-ref name="clr" scoped="" ref="0x76506ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x764dc010" loc="168:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x764dc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764dc1e8"/>
        <function-ref name="isInput" scoped="" ref="0x764dc2c8"/>
        <function-ref name="setResistor" scoped="" ref="0x764dc3a8"/>
        <function-ref name="toggle" scoped="" ref="0x764dc488"/>
        <function-ref name="isOutput" scoped="" ref="0x764dc568"/>
        <function-ref name="getResistor" scoped="" ref="0x764dc648"/>
        <function-ref name="makeOutput" scoped="" ref="0x764dc728"/>
        <function-ref name="get" scoped="" ref="0x764dc808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764dc8e8"/>
        <function-ref name="getRaw" scoped="" ref="0x764dc9c8"/>
        <function-ref name="set" scoped="" ref="0x764dcaa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764dcb88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764dcc68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764dcdc8"/>
        <function-ref name="clr" scoped="" ref="0x764dcea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x764d93e8" loc="172:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x764d93e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764d95c0"/>
        <function-ref name="isInput" scoped="" ref="0x764d96a0"/>
        <function-ref name="setResistor" scoped="" ref="0x764d9780"/>
        <function-ref name="toggle" scoped="" ref="0x764d9860"/>
        <function-ref name="isOutput" scoped="" ref="0x764d9940"/>
        <function-ref name="getResistor" scoped="" ref="0x764d9a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x764d9b00"/>
        <function-ref name="get" scoped="" ref="0x764d9be0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764d9cc0"/>
        <function-ref name="getRaw" scoped="" ref="0x764d9da0"/>
        <function-ref name="set" scoped="" ref="0x764d9e80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764d8010"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764d80f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764d8250"/>
        <function-ref name="clr" scoped="" ref="0x764d8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x764f6a28" loc="143:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x764f6a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764f6e00"/>
        <function-ref name="isInput" scoped="" ref="0x764f6ee0"/>
        <function-ref name="setResistor" scoped="" ref="0x764f5010"/>
        <function-ref name="toggle" scoped="" ref="0x764f50f0"/>
        <function-ref name="isOutput" scoped="" ref="0x764f51d0"/>
        <function-ref name="getResistor" scoped="" ref="0x764f52b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x764f5390"/>
        <function-ref name="get" scoped="" ref="0x764f5470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764f5550"/>
        <function-ref name="getRaw" scoped="" ref="0x764f5630"/>
        <function-ref name="set" scoped="" ref="0x764f5710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764f57f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764f58d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764f5a30"/>
        <function-ref name="clr" scoped="" ref="0x764f5b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764d63a8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764d63a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764d6580"/>
        <function-ref name="isInput" scoped="" ref="0x764d6660"/>
        <function-ref name="setResistor" scoped="" ref="0x764d6740"/>
        <function-ref name="toggle" scoped="" ref="0x764d6820"/>
        <function-ref name="isOutput" scoped="" ref="0x764d6900"/>
        <function-ref name="getResistor" scoped="" ref="0x764d69e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x764d6ac0"/>
        <function-ref name="get" scoped="" ref="0x764d6ba0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764d6c80"/>
        <function-ref name="getRaw" scoped="" ref="0x764d6d60"/>
        <function-ref name="set" scoped="" ref="0x764d6e40"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764d6f20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764bf018"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764bf178"/>
        <function-ref name="clr" scoped="" ref="0x764bf258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764beaa0" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764beaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764bec78"/>
        <function-ref name="isInput" scoped="" ref="0x764bed58"/>
        <function-ref name="setResistor" scoped="" ref="0x764bee38"/>
        <function-ref name="toggle" scoped="" ref="0x764bef18"/>
        <function-ref name="isOutput" scoped="" ref="0x764bd010"/>
        <function-ref name="getResistor" scoped="" ref="0x764bd0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x764bd1d0"/>
        <function-ref name="get" scoped="" ref="0x764bd2b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764bd390"/>
        <function-ref name="getRaw" scoped="" ref="0x764bd470"/>
        <function-ref name="set" scoped="" ref="0x764bd550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764bd630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764bd710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764bd870"/>
        <function-ref name="clr" scoped="" ref="0x764bd950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764bb220" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764bb220"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764bb3f8"/>
        <function-ref name="isInput" scoped="" ref="0x764bb4d8"/>
        <function-ref name="setResistor" scoped="" ref="0x764bb5b8"/>
        <function-ref name="toggle" scoped="" ref="0x764bb698"/>
        <function-ref name="isOutput" scoped="" ref="0x764bb778"/>
        <function-ref name="getResistor" scoped="" ref="0x764bb858"/>
        <function-ref name="makeOutput" scoped="" ref="0x764bb938"/>
        <function-ref name="get" scoped="" ref="0x764bba18"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764bbaf8"/>
        <function-ref name="getRaw" scoped="" ref="0x764bbbd8"/>
        <function-ref name="set" scoped="" ref="0x764bbcb8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764bbd98"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764bbe78"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764ba010"/>
        <function-ref name="clr" scoped="" ref="0x764ba0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764b9948" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764b9948"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764b9b20"/>
        <function-ref name="isInput" scoped="" ref="0x764b9c00"/>
        <function-ref name="setResistor" scoped="" ref="0x764b9ce0"/>
        <function-ref name="toggle" scoped="" ref="0x764b9dc0"/>
        <function-ref name="isOutput" scoped="" ref="0x764b9ea0"/>
        <function-ref name="getResistor" scoped="" ref="0x764b8010"/>
        <function-ref name="makeOutput" scoped="" ref="0x764b80f0"/>
        <function-ref name="get" scoped="" ref="0x764b81d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764b82b0"/>
        <function-ref name="getRaw" scoped="" ref="0x764b8390"/>
        <function-ref name="set" scoped="" ref="0x764b8470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764b8550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764b8630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764b8790"/>
        <function-ref name="clr" scoped="" ref="0x764b8870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764b6148" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764b6148"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764b6320"/>
        <function-ref name="isInput" scoped="" ref="0x764b6400"/>
        <function-ref name="setResistor" scoped="" ref="0x764b64e0"/>
        <function-ref name="toggle" scoped="" ref="0x764b65c0"/>
        <function-ref name="isOutput" scoped="" ref="0x764b66a0"/>
        <function-ref name="getResistor" scoped="" ref="0x764b6780"/>
        <function-ref name="makeOutput" scoped="" ref="0x764b6860"/>
        <function-ref name="get" scoped="" ref="0x764b6940"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764b6a20"/>
        <function-ref name="getRaw" scoped="" ref="0x764b6b00"/>
        <function-ref name="set" scoped="" ref="0x764b6be0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764b6cc0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764b6da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764b6f00"/>
        <function-ref name="clr" scoped="" ref="0x764b5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764b48a0" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764b48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764b4a78"/>
        <function-ref name="isInput" scoped="" ref="0x764b4b58"/>
        <function-ref name="setResistor" scoped="" ref="0x764b4c38"/>
        <function-ref name="toggle" scoped="" ref="0x764b4d18"/>
        <function-ref name="isOutput" scoped="" ref="0x764b4df8"/>
        <function-ref name="getResistor" scoped="" ref="0x764b4ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x764b3010"/>
        <function-ref name="get" scoped="" ref="0x764b30f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764b31d0"/>
        <function-ref name="getRaw" scoped="" ref="0x764b32b0"/>
        <function-ref name="set" scoped="" ref="0x764b3390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764b3470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764b3550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764b36b0"/>
        <function-ref name="clr" scoped="" ref="0x764b3790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764b1030" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764b1030"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764b1208"/>
        <function-ref name="isInput" scoped="" ref="0x764b12e8"/>
        <function-ref name="setResistor" scoped="" ref="0x764b13c8"/>
        <function-ref name="toggle" scoped="" ref="0x764b14a8"/>
        <function-ref name="isOutput" scoped="" ref="0x764b1588"/>
        <function-ref name="getResistor" scoped="" ref="0x764b1668"/>
        <function-ref name="makeOutput" scoped="" ref="0x764b1748"/>
        <function-ref name="get" scoped="" ref="0x764b1828"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764b1908"/>
        <function-ref name="getRaw" scoped="" ref="0x764b19e8"/>
        <function-ref name="set" scoped="" ref="0x764b1ac8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764b1ba8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764b1c88"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764b1de8"/>
        <function-ref name="clr" scoped="" ref="0x764b1ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764af730" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764af730"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764af908"/>
        <function-ref name="isInput" scoped="" ref="0x764af9e8"/>
        <function-ref name="setResistor" scoped="" ref="0x764afac8"/>
        <function-ref name="toggle" scoped="" ref="0x764afba8"/>
        <function-ref name="isOutput" scoped="" ref="0x764afc88"/>
        <function-ref name="getResistor" scoped="" ref="0x764afd68"/>
        <function-ref name="makeOutput" scoped="" ref="0x764afe48"/>
        <function-ref name="get" scoped="" ref="0x764aff28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764ae018"/>
        <function-ref name="getRaw" scoped="" ref="0x764ae0f8"/>
        <function-ref name="set" scoped="" ref="0x764ae1d8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764ae2b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764ae398"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764ae4f8"/>
        <function-ref name="clr" scoped="" ref="0x764ae5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764ade50" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764ade50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764ac050"/>
        <function-ref name="isInput" scoped="" ref="0x764ac130"/>
        <function-ref name="setResistor" scoped="" ref="0x764ac210"/>
        <function-ref name="toggle" scoped="" ref="0x764ac2f0"/>
        <function-ref name="isOutput" scoped="" ref="0x764ac3d0"/>
        <function-ref name="getResistor" scoped="" ref="0x764ac4b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x764ac590"/>
        <function-ref name="get" scoped="" ref="0x764ac670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764ac750"/>
        <function-ref name="getRaw" scoped="" ref="0x764ac830"/>
        <function-ref name="set" scoped="" ref="0x764ac910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764ac9f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764acad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764acc30"/>
        <function-ref name="clr" scoped="" ref="0x764acd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764aa5f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764aa5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764aa7d0"/>
        <function-ref name="isInput" scoped="" ref="0x764aa8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x764aa990"/>
        <function-ref name="toggle" scoped="" ref="0x764aaa70"/>
        <function-ref name="isOutput" scoped="" ref="0x764aab50"/>
        <function-ref name="getResistor" scoped="" ref="0x764aac30"/>
        <function-ref name="makeOutput" scoped="" ref="0x764aad10"/>
        <function-ref name="get" scoped="" ref="0x764aadf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764aaed0"/>
        <function-ref name="getRaw" scoped="" ref="0x764a8010"/>
        <function-ref name="set" scoped="" ref="0x764a80f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764a81d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764a82b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764a8410"/>
        <function-ref name="clr" scoped="" ref="0x764a84f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764a7d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764a7d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764a6010"/>
        <function-ref name="isInput" scoped="" ref="0x764a60f0"/>
        <function-ref name="setResistor" scoped="" ref="0x764a61d0"/>
        <function-ref name="toggle" scoped="" ref="0x764a62b0"/>
        <function-ref name="isOutput" scoped="" ref="0x764a6390"/>
        <function-ref name="getResistor" scoped="" ref="0x764a6470"/>
        <function-ref name="makeOutput" scoped="" ref="0x764a6550"/>
        <function-ref name="get" scoped="" ref="0x764a6630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764a6710"/>
        <function-ref name="getRaw" scoped="" ref="0x764a67f0"/>
        <function-ref name="set" scoped="" ref="0x764a68d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764a69b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764a6a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764a6bf0"/>
        <function-ref name="clr" scoped="" ref="0x764a6cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764a45f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764a45f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764a47d0"/>
        <function-ref name="isInput" scoped="" ref="0x764a48b0"/>
        <function-ref name="setResistor" scoped="" ref="0x764a4990"/>
        <function-ref name="toggle" scoped="" ref="0x764a4a70"/>
        <function-ref name="isOutput" scoped="" ref="0x764a4b50"/>
        <function-ref name="getResistor" scoped="" ref="0x764a4c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x764a4d10"/>
        <function-ref name="get" scoped="" ref="0x764a4df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764a4ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x764a3010"/>
        <function-ref name="set" scoped="" ref="0x764a30f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764a31d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764a32b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764a3410"/>
        <function-ref name="clr" scoped="" ref="0x764a34f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764a2de8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764a2de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764a1010"/>
        <function-ref name="isInput" scoped="" ref="0x764a10f0"/>
        <function-ref name="setResistor" scoped="" ref="0x764a11d0"/>
        <function-ref name="toggle" scoped="" ref="0x764a12b0"/>
        <function-ref name="isOutput" scoped="" ref="0x764a1390"/>
        <function-ref name="getResistor" scoped="" ref="0x764a1470"/>
        <function-ref name="makeOutput" scoped="" ref="0x764a1550"/>
        <function-ref name="get" scoped="" ref="0x764a1630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x764a1710"/>
        <function-ref name="getRaw" scoped="" ref="0x764a17f0"/>
        <function-ref name="set" scoped="" ref="0x764a18d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764a19b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764a1a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x764a1bf0"/>
        <function-ref name="clr" scoped="" ref="0x764a1cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7649f5f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7649f5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7649f7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7649f8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7649f990"/>
        <function-ref name="toggle" scoped="" ref="0x7649fa70"/>
        <function-ref name="isOutput" scoped="" ref="0x7649fb50"/>
        <function-ref name="getResistor" scoped="" ref="0x7649fc30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7649fd10"/>
        <function-ref name="get" scoped="" ref="0x7649fdf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7649fed0"/>
        <function-ref name="getRaw" scoped="" ref="0x7649e010"/>
        <function-ref name="set" scoped="" ref="0x7649e0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7649e1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7649e2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7649e410"/>
        <function-ref name="clr" scoped="" ref="0x7649e4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7649dd68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7649dd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7649c010"/>
        <function-ref name="isInput" scoped="" ref="0x7649c0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7649c1d0"/>
        <function-ref name="toggle" scoped="" ref="0x7649c2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7649c390"/>
        <function-ref name="getResistor" scoped="" ref="0x7649c470"/>
        <function-ref name="makeOutput" scoped="" ref="0x7649c550"/>
        <function-ref name="get" scoped="" ref="0x7649c630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7649c710"/>
        <function-ref name="getRaw" scoped="" ref="0x7649c7f0"/>
        <function-ref name="set" scoped="" ref="0x7649c8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7649c9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7649ca90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7649cbf0"/>
        <function-ref name="clr" scoped="" ref="0x7649ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7649a5f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7649a5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7649a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7649a8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7649a990"/>
        <function-ref name="toggle" scoped="" ref="0x7649aa70"/>
        <function-ref name="isOutput" scoped="" ref="0x7649ab50"/>
        <function-ref name="getResistor" scoped="" ref="0x7649ac30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7649ad10"/>
        <function-ref name="get" scoped="" ref="0x7649adf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7649aed0"/>
        <function-ref name="getRaw" scoped="" ref="0x76499010"/>
        <function-ref name="set" scoped="" ref="0x764990f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764991d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764992b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76499410"/>
        <function-ref name="clr" scoped="" ref="0x764994f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x76498d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x76498d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76497010"/>
        <function-ref name="isInput" scoped="" ref="0x764970f0"/>
        <function-ref name="setResistor" scoped="" ref="0x764971d0"/>
        <function-ref name="toggle" scoped="" ref="0x764972b0"/>
        <function-ref name="isOutput" scoped="" ref="0x76497390"/>
        <function-ref name="getResistor" scoped="" ref="0x76497470"/>
        <function-ref name="makeOutput" scoped="" ref="0x76497550"/>
        <function-ref name="get" scoped="" ref="0x76497630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76497710"/>
        <function-ref name="getRaw" scoped="" ref="0x764977f0"/>
        <function-ref name="set" scoped="" ref="0x764978d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764979b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76497a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76497bf0"/>
        <function-ref name="clr" scoped="" ref="0x76497cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764955f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764955f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764957d0"/>
        <function-ref name="isInput" scoped="" ref="0x764958b0"/>
        <function-ref name="setResistor" scoped="" ref="0x76495990"/>
        <function-ref name="toggle" scoped="" ref="0x76495a70"/>
        <function-ref name="isOutput" scoped="" ref="0x76495b50"/>
        <function-ref name="getResistor" scoped="" ref="0x76495c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x76495d10"/>
        <function-ref name="get" scoped="" ref="0x76495df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76495ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x76494010"/>
        <function-ref name="set" scoped="" ref="0x764940f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764941d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764942b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76494410"/>
        <function-ref name="clr" scoped="" ref="0x764944f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x76493d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x76493d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76492010"/>
        <function-ref name="isInput" scoped="" ref="0x764920f0"/>
        <function-ref name="setResistor" scoped="" ref="0x764921d0"/>
        <function-ref name="toggle" scoped="" ref="0x764922b0"/>
        <function-ref name="isOutput" scoped="" ref="0x76492390"/>
        <function-ref name="getResistor" scoped="" ref="0x76492470"/>
        <function-ref name="makeOutput" scoped="" ref="0x76492550"/>
        <function-ref name="get" scoped="" ref="0x76492630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76492710"/>
        <function-ref name="getRaw" scoped="" ref="0x764927f0"/>
        <function-ref name="set" scoped="" ref="0x764928d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764929b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76492a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76492bf0"/>
        <function-ref name="clr" scoped="" ref="0x76492cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764905f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764905f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764907d0"/>
        <function-ref name="isInput" scoped="" ref="0x764908b0"/>
        <function-ref name="setResistor" scoped="" ref="0x76490990"/>
        <function-ref name="toggle" scoped="" ref="0x76490a70"/>
        <function-ref name="isOutput" scoped="" ref="0x76490b50"/>
        <function-ref name="getResistor" scoped="" ref="0x76490c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x76490d10"/>
        <function-ref name="get" scoped="" ref="0x76490df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76490ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x7648f010"/>
        <function-ref name="set" scoped="" ref="0x7648f0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7648f1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7648f2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7648f410"/>
        <function-ref name="clr" scoped="" ref="0x7648f4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7648ed68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7648ed68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7648d010"/>
        <function-ref name="isInput" scoped="" ref="0x7648d0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7648d1d0"/>
        <function-ref name="toggle" scoped="" ref="0x7648d2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7648d390"/>
        <function-ref name="getResistor" scoped="" ref="0x7648d470"/>
        <function-ref name="makeOutput" scoped="" ref="0x7648d550"/>
        <function-ref name="get" scoped="" ref="0x7648d630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7648d710"/>
        <function-ref name="getRaw" scoped="" ref="0x7648d7f0"/>
        <function-ref name="set" scoped="" ref="0x7648d8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7648d9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7648da90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7648dbf0"/>
        <function-ref name="clr" scoped="" ref="0x7648dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7648b5f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7648b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7648b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7648b8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7648b990"/>
        <function-ref name="toggle" scoped="" ref="0x7648ba70"/>
        <function-ref name="isOutput" scoped="" ref="0x7648bb50"/>
        <function-ref name="getResistor" scoped="" ref="0x7648bc30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7648bd10"/>
        <function-ref name="get" scoped="" ref="0x7648bdf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7648bed0"/>
        <function-ref name="getRaw" scoped="" ref="0x76489010"/>
        <function-ref name="set" scoped="" ref="0x764890f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764891d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764892b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76489410"/>
        <function-ref name="clr" scoped="" ref="0x764894f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x76488d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x76488d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76487010"/>
        <function-ref name="isInput" scoped="" ref="0x764870f0"/>
        <function-ref name="setResistor" scoped="" ref="0x764871d0"/>
        <function-ref name="toggle" scoped="" ref="0x764872b0"/>
        <function-ref name="isOutput" scoped="" ref="0x76487390"/>
        <function-ref name="getResistor" scoped="" ref="0x76487470"/>
        <function-ref name="makeOutput" scoped="" ref="0x76487550"/>
        <function-ref name="get" scoped="" ref="0x76487630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76487710"/>
        <function-ref name="getRaw" scoped="" ref="0x764877f0"/>
        <function-ref name="set" scoped="" ref="0x764878d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764879b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76487a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76487bf0"/>
        <function-ref name="clr" scoped="" ref="0x76487cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764855f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764855f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764857d0"/>
        <function-ref name="isInput" scoped="" ref="0x764858b0"/>
        <function-ref name="setResistor" scoped="" ref="0x76485990"/>
        <function-ref name="toggle" scoped="" ref="0x76485a70"/>
        <function-ref name="isOutput" scoped="" ref="0x76485b50"/>
        <function-ref name="getResistor" scoped="" ref="0x76485c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x76485d10"/>
        <function-ref name="get" scoped="" ref="0x76485df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76485ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x76484010"/>
        <function-ref name="set" scoped="" ref="0x764840f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764841d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764842b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76484410"/>
        <function-ref name="clr" scoped="" ref="0x764844f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x76483e68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x76483e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76482050"/>
        <function-ref name="isInput" scoped="" ref="0x76482130"/>
        <function-ref name="setResistor" scoped="" ref="0x76482210"/>
        <function-ref name="toggle" scoped="" ref="0x764822f0"/>
        <function-ref name="isOutput" scoped="" ref="0x764823d0"/>
        <function-ref name="getResistor" scoped="" ref="0x764824b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76482590"/>
        <function-ref name="get" scoped="" ref="0x76482670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76482750"/>
        <function-ref name="getRaw" scoped="" ref="0x76482830"/>
        <function-ref name="set" scoped="" ref="0x76482910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764829f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76482ad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76482c30"/>
        <function-ref name="clr" scoped="" ref="0x76482d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764805f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764805f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764807d0"/>
        <function-ref name="isInput" scoped="" ref="0x764808b0"/>
        <function-ref name="setResistor" scoped="" ref="0x76480990"/>
        <function-ref name="toggle" scoped="" ref="0x76480a70"/>
        <function-ref name="isOutput" scoped="" ref="0x76480b50"/>
        <function-ref name="getResistor" scoped="" ref="0x76480c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x76480d10"/>
        <function-ref name="get" scoped="" ref="0x76480df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76480ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x7647f010"/>
        <function-ref name="set" scoped="" ref="0x7647f0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7647f1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7647f2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7647f410"/>
        <function-ref name="clr" scoped="" ref="0x7647f4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7647ed68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7647ed68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7647d010"/>
        <function-ref name="isInput" scoped="" ref="0x7647d0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7647d1d0"/>
        <function-ref name="toggle" scoped="" ref="0x7647d2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7647d390"/>
        <function-ref name="getResistor" scoped="" ref="0x7647d470"/>
        <function-ref name="makeOutput" scoped="" ref="0x7647d550"/>
        <function-ref name="get" scoped="" ref="0x7647d630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7647d710"/>
        <function-ref name="getRaw" scoped="" ref="0x7647d7f0"/>
        <function-ref name="set" scoped="" ref="0x7647d8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7647d9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7647da90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7647dbf0"/>
        <function-ref name="clr" scoped="" ref="0x7647dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7647b5f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7647b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7647b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7647b8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7647b990"/>
        <function-ref name="toggle" scoped="" ref="0x7647ba70"/>
        <function-ref name="isOutput" scoped="" ref="0x7647bb50"/>
        <function-ref name="getResistor" scoped="" ref="0x7647bc30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7647bd10"/>
        <function-ref name="get" scoped="" ref="0x7647bdf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7647bed0"/>
        <function-ref name="getRaw" scoped="" ref="0x7647a010"/>
        <function-ref name="set" scoped="" ref="0x7647a0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7647a1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7647a2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7647a410"/>
        <function-ref name="clr" scoped="" ref="0x7647a4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x76479d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x76479d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76478010"/>
        <function-ref name="isInput" scoped="" ref="0x764780f0"/>
        <function-ref name="setResistor" scoped="" ref="0x764781d0"/>
        <function-ref name="toggle" scoped="" ref="0x764782b0"/>
        <function-ref name="isOutput" scoped="" ref="0x76478390"/>
        <function-ref name="getResistor" scoped="" ref="0x76478470"/>
        <function-ref name="makeOutput" scoped="" ref="0x76478550"/>
        <function-ref name="get" scoped="" ref="0x76478630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76478710"/>
        <function-ref name="getRaw" scoped="" ref="0x764787f0"/>
        <function-ref name="set" scoped="" ref="0x764788d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764789b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76478a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76478bf0"/>
        <function-ref name="clr" scoped="" ref="0x76478cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764765f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764765f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764767d0"/>
        <function-ref name="isInput" scoped="" ref="0x764768b0"/>
        <function-ref name="setResistor" scoped="" ref="0x76476990"/>
        <function-ref name="toggle" scoped="" ref="0x76476a70"/>
        <function-ref name="isOutput" scoped="" ref="0x76476b50"/>
        <function-ref name="getResistor" scoped="" ref="0x76476c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x76476d10"/>
        <function-ref name="get" scoped="" ref="0x76476df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76476ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x76475010"/>
        <function-ref name="set" scoped="" ref="0x764750f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764751d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764752b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76475410"/>
        <function-ref name="clr" scoped="" ref="0x764754f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x76474d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x76474d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76473010"/>
        <function-ref name="isInput" scoped="" ref="0x764730f0"/>
        <function-ref name="setResistor" scoped="" ref="0x764731d0"/>
        <function-ref name="toggle" scoped="" ref="0x764732b0"/>
        <function-ref name="isOutput" scoped="" ref="0x76473390"/>
        <function-ref name="getResistor" scoped="" ref="0x76473470"/>
        <function-ref name="makeOutput" scoped="" ref="0x76473550"/>
        <function-ref name="get" scoped="" ref="0x76473630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76473710"/>
        <function-ref name="getRaw" scoped="" ref="0x764737f0"/>
        <function-ref name="set" scoped="" ref="0x764738d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764739b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76473a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76473bf0"/>
        <function-ref name="clr" scoped="" ref="0x76473cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764715f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764715f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764717d0"/>
        <function-ref name="isInput" scoped="" ref="0x764718b0"/>
        <function-ref name="setResistor" scoped="" ref="0x76471990"/>
        <function-ref name="toggle" scoped="" ref="0x76471a70"/>
        <function-ref name="isOutput" scoped="" ref="0x76471b50"/>
        <function-ref name="getResistor" scoped="" ref="0x76471c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x76471d10"/>
        <function-ref name="get" scoped="" ref="0x76471df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76471ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x76470010"/>
        <function-ref name="set" scoped="" ref="0x764700f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764701d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764702b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76470410"/>
        <function-ref name="clr" scoped="" ref="0x764704f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7646fd68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7646fd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7646e010"/>
        <function-ref name="isInput" scoped="" ref="0x7646e0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7646e1d0"/>
        <function-ref name="toggle" scoped="" ref="0x7646e2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7646e390"/>
        <function-ref name="getResistor" scoped="" ref="0x7646e470"/>
        <function-ref name="makeOutput" scoped="" ref="0x7646e550"/>
        <function-ref name="get" scoped="" ref="0x7646e630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7646e710"/>
        <function-ref name="getRaw" scoped="" ref="0x7646e7f0"/>
        <function-ref name="set" scoped="" ref="0x7646e8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7646e9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7646ea90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7646ebf0"/>
        <function-ref name="clr" scoped="" ref="0x7646ecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7646c5f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7646c5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7646c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7646c8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7646c990"/>
        <function-ref name="toggle" scoped="" ref="0x7646ca70"/>
        <function-ref name="isOutput" scoped="" ref="0x7646cb50"/>
        <function-ref name="getResistor" scoped="" ref="0x7646cc30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7646cd10"/>
        <function-ref name="get" scoped="" ref="0x7646cdf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7646ced0"/>
        <function-ref name="getRaw" scoped="" ref="0x7646a010"/>
        <function-ref name="set" scoped="" ref="0x7646a0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7646a1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7646a2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7646a410"/>
        <function-ref name="clr" scoped="" ref="0x7646a4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x76469d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x76469d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76468010"/>
        <function-ref name="isInput" scoped="" ref="0x764680f0"/>
        <function-ref name="setResistor" scoped="" ref="0x764681d0"/>
        <function-ref name="toggle" scoped="" ref="0x764682b0"/>
        <function-ref name="isOutput" scoped="" ref="0x76468390"/>
        <function-ref name="getResistor" scoped="" ref="0x76468470"/>
        <function-ref name="makeOutput" scoped="" ref="0x76468550"/>
        <function-ref name="get" scoped="" ref="0x76468630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76468710"/>
        <function-ref name="getRaw" scoped="" ref="0x764687f0"/>
        <function-ref name="set" scoped="" ref="0x764688d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764689b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76468a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76468bf0"/>
        <function-ref name="clr" scoped="" ref="0x76468cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764665f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764665f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764667d0"/>
        <function-ref name="isInput" scoped="" ref="0x764668b0"/>
        <function-ref name="setResistor" scoped="" ref="0x76466990"/>
        <function-ref name="toggle" scoped="" ref="0x76466a70"/>
        <function-ref name="isOutput" scoped="" ref="0x76466b50"/>
        <function-ref name="getResistor" scoped="" ref="0x76466c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x76466d10"/>
        <function-ref name="get" scoped="" ref="0x76466df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76466ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x76465010"/>
        <function-ref name="set" scoped="" ref="0x764650f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764651d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764652b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76465410"/>
        <function-ref name="clr" scoped="" ref="0x764654f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x76464d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x76464d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76463010"/>
        <function-ref name="isInput" scoped="" ref="0x764630f0"/>
        <function-ref name="setResistor" scoped="" ref="0x764631d0"/>
        <function-ref name="toggle" scoped="" ref="0x764632b0"/>
        <function-ref name="isOutput" scoped="" ref="0x76463390"/>
        <function-ref name="getResistor" scoped="" ref="0x76463470"/>
        <function-ref name="makeOutput" scoped="" ref="0x76463550"/>
        <function-ref name="get" scoped="" ref="0x76463630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76463710"/>
        <function-ref name="getRaw" scoped="" ref="0x764637f0"/>
        <function-ref name="set" scoped="" ref="0x764638d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764639b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76463a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76463bf0"/>
        <function-ref name="clr" scoped="" ref="0x76463cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764615f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764615f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764617d0"/>
        <function-ref name="isInput" scoped="" ref="0x764618b0"/>
        <function-ref name="setResistor" scoped="" ref="0x76461990"/>
        <function-ref name="toggle" scoped="" ref="0x76461a70"/>
        <function-ref name="isOutput" scoped="" ref="0x76461b50"/>
        <function-ref name="getResistor" scoped="" ref="0x76461c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x76461d10"/>
        <function-ref name="get" scoped="" ref="0x76461df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76461ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x76460010"/>
        <function-ref name="set" scoped="" ref="0x764600f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764601d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764602b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76460410"/>
        <function-ref name="clr" scoped="" ref="0x764604f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7645fd68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7645fd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7645e010"/>
        <function-ref name="isInput" scoped="" ref="0x7645e0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7645e1d0"/>
        <function-ref name="toggle" scoped="" ref="0x7645e2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7645e390"/>
        <function-ref name="getResistor" scoped="" ref="0x7645e470"/>
        <function-ref name="makeOutput" scoped="" ref="0x7645e550"/>
        <function-ref name="get" scoped="" ref="0x7645e630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7645e710"/>
        <function-ref name="getRaw" scoped="" ref="0x7645e7f0"/>
        <function-ref name="set" scoped="" ref="0x7645e8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7645e9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7645ea90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7645ebf0"/>
        <function-ref name="clr" scoped="" ref="0x7645ecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7645c5f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7645c5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7645c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7645c8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7645c990"/>
        <function-ref name="toggle" scoped="" ref="0x7645ca70"/>
        <function-ref name="isOutput" scoped="" ref="0x7645cb50"/>
        <function-ref name="getResistor" scoped="" ref="0x7645cc30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7645cd10"/>
        <function-ref name="get" scoped="" ref="0x7645cdf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7645ced0"/>
        <function-ref name="getRaw" scoped="" ref="0x7645b010"/>
        <function-ref name="set" scoped="" ref="0x7645b0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7645b1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7645b2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7645b410"/>
        <function-ref name="clr" scoped="" ref="0x7645b4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7645ad68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7645ad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76459010"/>
        <function-ref name="isInput" scoped="" ref="0x764590f0"/>
        <function-ref name="setResistor" scoped="" ref="0x764591d0"/>
        <function-ref name="toggle" scoped="" ref="0x764592b0"/>
        <function-ref name="isOutput" scoped="" ref="0x76459390"/>
        <function-ref name="getResistor" scoped="" ref="0x76459470"/>
        <function-ref name="makeOutput" scoped="" ref="0x76459550"/>
        <function-ref name="get" scoped="" ref="0x76459630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76459710"/>
        <function-ref name="getRaw" scoped="" ref="0x764597f0"/>
        <function-ref name="set" scoped="" ref="0x764598d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764599b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76459a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76459bf0"/>
        <function-ref name="clr" scoped="" ref="0x76459cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764575f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764575f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764577d0"/>
        <function-ref name="isInput" scoped="" ref="0x764578b0"/>
        <function-ref name="setResistor" scoped="" ref="0x76457990"/>
        <function-ref name="toggle" scoped="" ref="0x76457a70"/>
        <function-ref name="isOutput" scoped="" ref="0x76457b50"/>
        <function-ref name="getResistor" scoped="" ref="0x76457c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x76457d10"/>
        <function-ref name="get" scoped="" ref="0x76457df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76457ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x76456010"/>
        <function-ref name="set" scoped="" ref="0x764560f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764561d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764562b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76456410"/>
        <function-ref name="clr" scoped="" ref="0x764564f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x76455d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x76455d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76454010"/>
        <function-ref name="isInput" scoped="" ref="0x764540f0"/>
        <function-ref name="setResistor" scoped="" ref="0x764541d0"/>
        <function-ref name="toggle" scoped="" ref="0x764542b0"/>
        <function-ref name="isOutput" scoped="" ref="0x76454390"/>
        <function-ref name="getResistor" scoped="" ref="0x76454470"/>
        <function-ref name="makeOutput" scoped="" ref="0x76454550"/>
        <function-ref name="get" scoped="" ref="0x76454630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76454710"/>
        <function-ref name="getRaw" scoped="" ref="0x764547f0"/>
        <function-ref name="set" scoped="" ref="0x764548d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764549b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76454a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76454bf0"/>
        <function-ref name="clr" scoped="" ref="0x76454cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764525f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764525f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764527d0"/>
        <function-ref name="isInput" scoped="" ref="0x764528b0"/>
        <function-ref name="setResistor" scoped="" ref="0x76452990"/>
        <function-ref name="toggle" scoped="" ref="0x76452a70"/>
        <function-ref name="isOutput" scoped="" ref="0x76452b50"/>
        <function-ref name="getResistor" scoped="" ref="0x76452c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x76452d10"/>
        <function-ref name="get" scoped="" ref="0x76452df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76452ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x76451010"/>
        <function-ref name="set" scoped="" ref="0x764510f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764511d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764512b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76451410"/>
        <function-ref name="clr" scoped="" ref="0x764514f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x76450d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x76450d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7644f010"/>
        <function-ref name="isInput" scoped="" ref="0x7644f0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7644f1d0"/>
        <function-ref name="toggle" scoped="" ref="0x7644f2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7644f390"/>
        <function-ref name="getResistor" scoped="" ref="0x7644f470"/>
        <function-ref name="makeOutput" scoped="" ref="0x7644f550"/>
        <function-ref name="get" scoped="" ref="0x7644f630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7644f710"/>
        <function-ref name="getRaw" scoped="" ref="0x7644f7f0"/>
        <function-ref name="set" scoped="" ref="0x7644f8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7644f9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7644fa90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7644fbf0"/>
        <function-ref name="clr" scoped="" ref="0x7644fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7644d5f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7644d5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7644d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7644d8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7644d990"/>
        <function-ref name="toggle" scoped="" ref="0x7644da70"/>
        <function-ref name="isOutput" scoped="" ref="0x7644db50"/>
        <function-ref name="getResistor" scoped="" ref="0x7644dc30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7644dd10"/>
        <function-ref name="get" scoped="" ref="0x7644ddf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7644ded0"/>
        <function-ref name="getRaw" scoped="" ref="0x7644b010"/>
        <function-ref name="set" scoped="" ref="0x7644b0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7644b1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7644b2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7644b410"/>
        <function-ref name="clr" scoped="" ref="0x7644b4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7644ad68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7644ad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76449010"/>
        <function-ref name="isInput" scoped="" ref="0x764490f0"/>
        <function-ref name="setResistor" scoped="" ref="0x764491d0"/>
        <function-ref name="toggle" scoped="" ref="0x764492b0"/>
        <function-ref name="isOutput" scoped="" ref="0x76449390"/>
        <function-ref name="getResistor" scoped="" ref="0x76449470"/>
        <function-ref name="makeOutput" scoped="" ref="0x76449550"/>
        <function-ref name="get" scoped="" ref="0x76449630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76449710"/>
        <function-ref name="getRaw" scoped="" ref="0x764497f0"/>
        <function-ref name="set" scoped="" ref="0x764498d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764499b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76449a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76449bf0"/>
        <function-ref name="clr" scoped="" ref="0x76449cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x764475f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x764475f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764477d0"/>
        <function-ref name="isInput" scoped="" ref="0x764478b0"/>
        <function-ref name="setResistor" scoped="" ref="0x76447990"/>
        <function-ref name="toggle" scoped="" ref="0x76447a70"/>
        <function-ref name="isOutput" scoped="" ref="0x76447b50"/>
        <function-ref name="getResistor" scoped="" ref="0x76447c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x76447d10"/>
        <function-ref name="get" scoped="" ref="0x76447df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76447ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x76446010"/>
        <function-ref name="set" scoped="" ref="0x764460f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764461d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764462b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76446410"/>
        <function-ref name="clr" scoped="" ref="0x764464f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x76412c48" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x76412c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76412e20"/>
        <function-ref name="isInput" scoped="" ref="0x76412f00"/>
        <function-ref name="setResistor" scoped="" ref="0x76411010"/>
        <function-ref name="toggle" scoped="" ref="0x764110f0"/>
        <function-ref name="isOutput" scoped="" ref="0x764111d0"/>
        <function-ref name="getResistor" scoped="" ref="0x764112b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76411390"/>
        <function-ref name="get" scoped="" ref="0x76411470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76411550"/>
        <function-ref name="getRaw" scoped="" ref="0x76411630"/>
        <function-ref name="set" scoped="" ref="0x76411710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764117f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764118d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76411a30"/>
        <function-ref name="clr" scoped="" ref="0x76411b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x764122d0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x764122d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x764124a8"/>
        <function-ref name="isInput" scoped="" ref="0x76412588"/>
        <function-ref name="toggle" scoped="" ref="0x76412668"/>
        <function-ref name="isOutput" scoped="" ref="0x76412748"/>
        <function-ref name="get" scoped="" ref="0x76412828"/>
        <function-ref name="makeOutput" scoped="" ref="0x76412908"/>
        <function-ref name="set" scoped="" ref="0x764129e8"/>
        <function-ref name="clr" scoped="" ref="0x76412ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x76406430" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x76406430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76406608"/>
        <function-ref name="isInput" scoped="" ref="0x764066e8"/>
        <function-ref name="setResistor" scoped="" ref="0x764067c8"/>
        <function-ref name="toggle" scoped="" ref="0x764068a8"/>
        <function-ref name="isOutput" scoped="" ref="0x76406988"/>
        <function-ref name="getResistor" scoped="" ref="0x76406a68"/>
        <function-ref name="makeOutput" scoped="" ref="0x76406b48"/>
        <function-ref name="get" scoped="" ref="0x76406c28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76406d08"/>
        <function-ref name="getRaw" scoped="" ref="0x76406de8"/>
        <function-ref name="set" scoped="" ref="0x76406ec8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76405010"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764050f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76405250"/>
        <function-ref name="clr" scoped="" ref="0x76405330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x76407a58" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x76407a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76407c30"/>
        <function-ref name="isInput" scoped="" ref="0x76407d10"/>
        <function-ref name="toggle" scoped="" ref="0x76407df0"/>
        <function-ref name="isOutput" scoped="" ref="0x76407ed0"/>
        <function-ref name="get" scoped="" ref="0x76406010"/>
        <function-ref name="makeOutput" scoped="" ref="0x764060f0"/>
        <function-ref name="set" scoped="" ref="0x764061d0"/>
        <function-ref name="clr" scoped="" ref="0x764062b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x76404c18" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x76404c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76404df0"/>
        <function-ref name="isInput" scoped="" ref="0x76404ed0"/>
        <function-ref name="setResistor" scoped="" ref="0x76403010"/>
        <function-ref name="toggle" scoped="" ref="0x764030f0"/>
        <function-ref name="isOutput" scoped="" ref="0x764031d0"/>
        <function-ref name="getResistor" scoped="" ref="0x764032b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76403390"/>
        <function-ref name="get" scoped="" ref="0x76403470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76403550"/>
        <function-ref name="getRaw" scoped="" ref="0x76403630"/>
        <function-ref name="set" scoped="" ref="0x76403710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x764037f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764038d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76403a30"/>
        <function-ref name="clr" scoped="" ref="0x76403b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x764042a0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x764042a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76404478"/>
        <function-ref name="isInput" scoped="" ref="0x76404558"/>
        <function-ref name="toggle" scoped="" ref="0x76404638"/>
        <function-ref name="isOutput" scoped="" ref="0x76404718"/>
        <function-ref name="get" scoped="" ref="0x764047f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x764048d8"/>
        <function-ref name="set" scoped="" ref="0x764049b8"/>
        <function-ref name="clr" scoped="" ref="0x76404a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x76401430" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x76401430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76401608"/>
        <function-ref name="isInput" scoped="" ref="0x764016e8"/>
        <function-ref name="setResistor" scoped="" ref="0x764017c8"/>
        <function-ref name="toggle" scoped="" ref="0x764018a8"/>
        <function-ref name="isOutput" scoped="" ref="0x76401988"/>
        <function-ref name="getResistor" scoped="" ref="0x76401a68"/>
        <function-ref name="makeOutput" scoped="" ref="0x76401b48"/>
        <function-ref name="get" scoped="" ref="0x76401c28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76401d08"/>
        <function-ref name="getRaw" scoped="" ref="0x76401de8"/>
        <function-ref name="set" scoped="" ref="0x76401ec8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76400010"/>
        <function-ref name="isIOFunc" scoped="" ref="0x764000f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76400250"/>
        <function-ref name="clr" scoped="" ref="0x76400330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x76402a68" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x76402a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76402c40"/>
        <function-ref name="isInput" scoped="" ref="0x76402d20"/>
        <function-ref name="toggle" scoped="" ref="0x76402e00"/>
        <function-ref name="isOutput" scoped="" ref="0x76402ee0"/>
        <function-ref name="get" scoped="" ref="0x76401010"/>
        <function-ref name="makeOutput" scoped="" ref="0x764010f0"/>
        <function-ref name="set" scoped="" ref="0x764011d0"/>
        <function-ref name="clr" scoped="" ref="0x764012b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x763ffc18" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x763ffc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x763ffdf0"/>
        <function-ref name="isInput" scoped="" ref="0x763ffed0"/>
        <function-ref name="setResistor" scoped="" ref="0x763fe010"/>
        <function-ref name="toggle" scoped="" ref="0x763fe0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x763fe1d0"/>
        <function-ref name="getResistor" scoped="" ref="0x763fe2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x763fe390"/>
        <function-ref name="get" scoped="" ref="0x763fe470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x763fe550"/>
        <function-ref name="getRaw" scoped="" ref="0x763fe630"/>
        <function-ref name="set" scoped="" ref="0x763fe710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x763fe7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x763fe8d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x763fea30"/>
        <function-ref name="clr" scoped="" ref="0x763feb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x763ff2a0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x763ff2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x763ff478"/>
        <function-ref name="isInput" scoped="" ref="0x763ff558"/>
        <function-ref name="toggle" scoped="" ref="0x763ff638"/>
        <function-ref name="isOutput" scoped="" ref="0x763ff718"/>
        <function-ref name="get" scoped="" ref="0x763ff7f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x763ff8d8"/>
        <function-ref name="set" scoped="" ref="0x763ff9b8"/>
        <function-ref name="clr" scoped="" ref="0x763ffa98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x763fc430" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x763fc430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x763fc608"/>
        <function-ref name="isInput" scoped="" ref="0x763fc6e8"/>
        <function-ref name="setResistor" scoped="" ref="0x763fc7c8"/>
        <function-ref name="toggle" scoped="" ref="0x763fc8a8"/>
        <function-ref name="isOutput" scoped="" ref="0x763fc988"/>
        <function-ref name="getResistor" scoped="" ref="0x763fca68"/>
        <function-ref name="makeOutput" scoped="" ref="0x763fcb48"/>
        <function-ref name="get" scoped="" ref="0x763fcc28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x763fcd08"/>
        <function-ref name="getRaw" scoped="" ref="0x763fcde8"/>
        <function-ref name="set" scoped="" ref="0x763fcec8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x763fb010"/>
        <function-ref name="isIOFunc" scoped="" ref="0x763fb0f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x763fb250"/>
        <function-ref name="clr" scoped="" ref="0x763fb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x763fda58" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x763fda58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x763fdc30"/>
        <function-ref name="isInput" scoped="" ref="0x763fdd10"/>
        <function-ref name="toggle" scoped="" ref="0x763fddf0"/>
        <function-ref name="isOutput" scoped="" ref="0x763fded0"/>
        <function-ref name="get" scoped="" ref="0x763fc010"/>
        <function-ref name="makeOutput" scoped="" ref="0x763fc0f0"/>
        <function-ref name="set" scoped="" ref="0x763fc1d0"/>
        <function-ref name="clr" scoped="" ref="0x763fc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x763fac18" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x763fac18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x763fadf0"/>
        <function-ref name="isInput" scoped="" ref="0x763faed0"/>
        <function-ref name="setResistor" scoped="" ref="0x763f8010"/>
        <function-ref name="toggle" scoped="" ref="0x763f80f0"/>
        <function-ref name="isOutput" scoped="" ref="0x763f81d0"/>
        <function-ref name="getResistor" scoped="" ref="0x763f82b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x763f8390"/>
        <function-ref name="get" scoped="" ref="0x763f8470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x763f8550"/>
        <function-ref name="getRaw" scoped="" ref="0x763f8630"/>
        <function-ref name="set" scoped="" ref="0x763f8710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x763f87f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x763f88d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x763f8a30"/>
        <function-ref name="clr" scoped="" ref="0x763f8b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x763fa2a0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x763fa2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x763fa478"/>
        <function-ref name="isInput" scoped="" ref="0x763fa558"/>
        <function-ref name="toggle" scoped="" ref="0x763fa638"/>
        <function-ref name="isOutput" scoped="" ref="0x763fa718"/>
        <function-ref name="get" scoped="" ref="0x763fa7f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x763fa8d8"/>
        <function-ref name="set" scoped="" ref="0x763fa9b8"/>
        <function-ref name="clr" scoped="" ref="0x763faa98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x763e97f0" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x763e97f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x763e99c8"/>
        <function-ref name="disable" scoped="" ref="0x763e9aa8"/>
        <function-ref name="captured" scoped="" ref="0x763e9b88"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x763e9c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x763e9ef0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x763e9ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x763eb0e0"/>
        <function-ref name="disable" scoped="" ref="0x763eb1c0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x763eb2a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x763eb380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x763eb618" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x763eb618"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x763eb7f0"/>
        <function-ref name="disable" scoped="" ref="0x763eb8d0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x763eb9b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x763eba90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x763e7a48" loc="42:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x763e7a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x763e7c20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x763e7d00"/>
        <function-ref name="captured" scoped="" ref="0x763e7de0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x763e7ec0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x763dc010"/>
        <function-ref name="setEdge" scoped="" ref="0x763dc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x763e89f0" loc="40:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x763e89f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x763e8bc8"/>
        <function-ref name="disable" scoped="" ref="0x763e8ca8"/>
        <function-ref name="captured" scoped="" ref="0x763e8d88"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x763e8e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x763e7010" loc="41:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x763e7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x763e71e8"/>
        <function-ref name="getControl" scoped="" ref="0x763e72c8"/>
        <function-ref name="enableEvents" scoped="" ref="0x763e73a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x763e7488"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x763e7568"/>
        <function-ref name="disableEvents" scoped="" ref="0x763e7648"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x763e7728"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x763e7808"/>
        <function-ref name="setControl" scoped="" ref="0x763e78e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x763dc270" loc="43:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x763dc270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x763dc448"/>
        <function-ref name="isInput" scoped="" ref="0x763dc528"/>
        <function-ref name="setResistor" scoped="" ref="0x763dc608"/>
        <function-ref name="toggle" scoped="" ref="0x763dc6e8"/>
        <function-ref name="isOutput" scoped="" ref="0x763dc7c8"/>
        <function-ref name="getResistor" scoped="" ref="0x763dc8a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x763dc988"/>
        <function-ref name="get" scoped="" ref="0x763dca68"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x763dcb48"/>
        <function-ref name="getRaw" scoped="" ref="0x763dcc28"/>
        <function-ref name="set" scoped="" ref="0x763dcd08"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x763dcde8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x763dcec8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x763db090"/>
        <function-ref name="clr" scoped="" ref="0x763db170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x763d3010" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x763d3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763d31e8"/>
        <function-ref name="fired" scoped="" ref="0x763d32c8"/>
        <function-ref name="disable" scoped="" ref="0x763d33a8"/>
        <function-ref name="edge" scoped="" ref="0x763d3488"/>
        <function-ref name="enable" scoped="" ref="0x763d3568"/>
        <function-ref name="getValue" scoped="" ref="0x763d3648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x763cd8e0" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x763cd8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763cdab8"/>
        <function-ref name="fired" scoped="" ref="0x763cdb98"/>
        <function-ref name="disable" scoped="" ref="0x763cdc78"/>
        <function-ref name="edge" scoped="" ref="0x763cdd58"/>
        <function-ref name="enable" scoped="" ref="0x763cde38"/>
        <function-ref name="getValue" scoped="" ref="0x763cdf18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x763d2a38" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x763d2a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763d2c10"/>
        <function-ref name="fired" scoped="" ref="0x763d2cf0"/>
        <function-ref name="disable" scoped="" ref="0x763d2dd0"/>
        <function-ref name="edge" scoped="" ref="0x763d2eb0"/>
        <function-ref name="enable" scoped="" ref="0x763d0010"/>
        <function-ref name="getValue" scoped="" ref="0x763d00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x763d0c18" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x763d0c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763d0df0"/>
        <function-ref name="fired" scoped="" ref="0x763d0ed0"/>
        <function-ref name="disable" scoped="" ref="0x763cf010"/>
        <function-ref name="edge" scoped="" ref="0x763cf0f0"/>
        <function-ref name="enable" scoped="" ref="0x763cf1d0"/>
        <function-ref name="getValue" scoped="" ref="0x763cf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x763d7dd8" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x763d7dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763d6010"/>
        <function-ref name="fired" scoped="" ref="0x763d60f0"/>
        <function-ref name="disable" scoped="" ref="0x763d61d0"/>
        <function-ref name="edge" scoped="" ref="0x763d62b0"/>
        <function-ref name="enable" scoped="" ref="0x763d6390"/>
        <function-ref name="getValue" scoped="" ref="0x763d6470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x763ce6e8" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x763ce6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763ce940"/>
        <function-ref name="fired" scoped="" ref="0x763cea20"/>
        <function-ref name="disable" scoped="" ref="0x763ceb00"/>
        <function-ref name="edge" scoped="" ref="0x763cebe0"/>
        <function-ref name="enable" scoped="" ref="0x763cecc0"/>
        <function-ref name="getValue" scoped="" ref="0x763ceda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x763d38c0" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x763d38c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763d3a98"/>
        <function-ref name="fired" scoped="" ref="0x763d3b78"/>
        <function-ref name="disable" scoped="" ref="0x763d3c58"/>
        <function-ref name="edge" scoped="" ref="0x763d3d38"/>
        <function-ref name="enable" scoped="" ref="0x763d3e18"/>
        <function-ref name="getValue" scoped="" ref="0x763d3ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x763cc1a8" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x763cc1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763cc380"/>
        <function-ref name="fired" scoped="" ref="0x763cc460"/>
        <function-ref name="disable" scoped="" ref="0x763cc540"/>
        <function-ref name="edge" scoped="" ref="0x763cc620"/>
        <function-ref name="enable" scoped="" ref="0x763cc700"/>
        <function-ref name="getValue" scoped="" ref="0x763cc7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x763d4c58" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x763d4c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763d4e30"/>
        <function-ref name="fired" scoped="" ref="0x763d4f10"/>
        <function-ref name="disable" scoped="" ref="0x763d7010"/>
        <function-ref name="edge" scoped="" ref="0x763d70f0"/>
        <function-ref name="enable" scoped="" ref="0x763d71d0"/>
        <function-ref name="getValue" scoped="" ref="0x763d72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x763cf528" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x763cf528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763cf700"/>
        <function-ref name="fired" scoped="" ref="0x763cf7e0"/>
        <function-ref name="disable" scoped="" ref="0x763cf8c0"/>
        <function-ref name="edge" scoped="" ref="0x763cf9a0"/>
        <function-ref name="enable" scoped="" ref="0x763cfa80"/>
        <function-ref name="getValue" scoped="" ref="0x763cfb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x763d66e8" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x763d66e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763d68c0"/>
        <function-ref name="fired" scoped="" ref="0x763d69a0"/>
        <function-ref name="disable" scoped="" ref="0x763d6a80"/>
        <function-ref name="edge" scoped="" ref="0x763d6b60"/>
        <function-ref name="enable" scoped="" ref="0x763d6c40"/>
        <function-ref name="getValue" scoped="" ref="0x763d6d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x763cd030" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x763cd030"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763cd208"/>
        <function-ref name="fired" scoped="" ref="0x763cd2e8"/>
        <function-ref name="disable" scoped="" ref="0x763cd3c8"/>
        <function-ref name="edge" scoped="" ref="0x763cd4a8"/>
        <function-ref name="enable" scoped="" ref="0x763cd588"/>
        <function-ref name="getValue" scoped="" ref="0x763cd668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x763d2188" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x763d2188"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763d2360"/>
        <function-ref name="fired" scoped="" ref="0x763d2440"/>
        <function-ref name="disable" scoped="" ref="0x763d2520"/>
        <function-ref name="edge" scoped="" ref="0x763d2600"/>
        <function-ref name="enable" scoped="" ref="0x763d26e0"/>
        <function-ref name="getValue" scoped="" ref="0x763d27c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x763d0368" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x763d0368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763d0540"/>
        <function-ref name="fired" scoped="" ref="0x763d0620"/>
        <function-ref name="disable" scoped="" ref="0x763d0700"/>
        <function-ref name="edge" scoped="" ref="0x763d07e0"/>
        <function-ref name="enable" scoped="" ref="0x763d08c0"/>
        <function-ref name="getValue" scoped="" ref="0x763d09a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x763d7528" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x763d7528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763d7700"/>
        <function-ref name="fired" scoped="" ref="0x763d77e0"/>
        <function-ref name="disable" scoped="" ref="0x763d78c0"/>
        <function-ref name="edge" scoped="" ref="0x763d79a0"/>
        <function-ref name="enable" scoped="" ref="0x763d7a80"/>
        <function-ref name="getValue" scoped="" ref="0x763d7b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x763cfdd8" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x763cfdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763ce010"/>
        <function-ref name="fired" scoped="" ref="0x763ce0f0"/>
        <function-ref name="disable" scoped="" ref="0x763ce1d0"/>
        <function-ref name="edge" scoped="" ref="0x763ce2b0"/>
        <function-ref name="enable" scoped="" ref="0x763ce390"/>
        <function-ref name="getValue" scoped="" ref="0x763ce470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x763c7608" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x763c7608"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763c77e0"/>
        <function-ref name="fired" scoped="" ref="0x763c78c0"/>
        <function-ref name="disable" scoped="" ref="0x763c79a0"/>
        <function-ref name="edge" scoped="" ref="0x763c7a80"/>
        <function-ref name="enable" scoped="" ref="0x763c7b60"/>
        <function-ref name="getValue" scoped="" ref="0x763c7c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x763c1010" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x763c1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763c11e8"/>
        <function-ref name="fired" scoped="" ref="0x763c12c8"/>
        <function-ref name="disable" scoped="" ref="0x763c13a8"/>
        <function-ref name="edge" scoped="" ref="0x763c1488"/>
        <function-ref name="enable" scoped="" ref="0x763c1568"/>
        <function-ref name="getValue" scoped="" ref="0x763c1648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x763c5070" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x763c5070"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763c5248"/>
        <function-ref name="fired" scoped="" ref="0x763c5328"/>
        <function-ref name="disable" scoped="" ref="0x763c5408"/>
        <function-ref name="edge" scoped="" ref="0x763c54e8"/>
        <function-ref name="enable" scoped="" ref="0x763c55c8"/>
        <function-ref name="getValue" scoped="" ref="0x763c56a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x763c4288" loc="50:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x763c4288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763c4460"/>
        <function-ref name="fired" scoped="" ref="0x763c4540"/>
        <function-ref name="disable" scoped="" ref="0x763c4620"/>
        <function-ref name="edge" scoped="" ref="0x763c4700"/>
        <function-ref name="enable" scoped="" ref="0x763c47e0"/>
        <function-ref name="getValue" scoped="" ref="0x763c48c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x763c8448" loc="41:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x763c8448"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763c8620"/>
        <function-ref name="fired" scoped="" ref="0x763c8700"/>
        <function-ref name="disable" scoped="" ref="0x763c87e0"/>
        <function-ref name="edge" scoped="" ref="0x763c88c0"/>
        <function-ref name="enable" scoped="" ref="0x763c89a0"/>
        <function-ref name="getValue" scoped="" ref="0x763c8a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x763c3cf8" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x763c3cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763c2010"/>
        <function-ref name="fired" scoped="" ref="0x763c20f0"/>
        <function-ref name="disable" scoped="" ref="0x763c21d0"/>
        <function-ref name="edge" scoped="" ref="0x763c22b0"/>
        <function-ref name="enable" scoped="" ref="0x763c2390"/>
        <function-ref name="getValue" scoped="" ref="0x763c2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x763c7eb8" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x763c7eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763c60c0"/>
        <function-ref name="fired" scoped="" ref="0x763c61a0"/>
        <function-ref name="disable" scoped="" ref="0x763c6280"/>
        <function-ref name="edge" scoped="" ref="0x763c6360"/>
        <function-ref name="enable" scoped="" ref="0x763c6440"/>
        <function-ref name="getValue" scoped="" ref="0x763c6520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x763c18c0" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x763c18c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763c1a98"/>
        <function-ref name="fired" scoped="" ref="0x763c1b78"/>
        <function-ref name="disable" scoped="" ref="0x763c1c58"/>
        <function-ref name="edge" scoped="" ref="0x763c1d38"/>
        <function-ref name="enable" scoped="" ref="0x763c1e18"/>
        <function-ref name="getValue" scoped="" ref="0x763c1ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x763c9288" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x763c9288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763c9460"/>
        <function-ref name="fired" scoped="" ref="0x763c9540"/>
        <function-ref name="disable" scoped="" ref="0x763c9620"/>
        <function-ref name="edge" scoped="" ref="0x763c9700"/>
        <function-ref name="enable" scoped="" ref="0x763c97e0"/>
        <function-ref name="getValue" scoped="" ref="0x763c98c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x763c4b38" loc="51:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x763c4b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763c4d10"/>
        <function-ref name="fired" scoped="" ref="0x763c4df0"/>
        <function-ref name="disable" scoped="" ref="0x763c4ed0"/>
        <function-ref name="edge" scoped="" ref="0x763c3010"/>
        <function-ref name="enable" scoped="" ref="0x763c30f0"/>
        <function-ref name="getValue" scoped="" ref="0x763c31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x763c8cf8" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x763c8cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763c8ed0"/>
        <function-ref name="fired" scoped="" ref="0x763c7010"/>
        <function-ref name="disable" scoped="" ref="0x763c70f0"/>
        <function-ref name="edge" scoped="" ref="0x763c71d0"/>
        <function-ref name="enable" scoped="" ref="0x763c72b0"/>
        <function-ref name="getValue" scoped="" ref="0x763c7390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x763c26e8" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x763c26e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763c28c0"/>
        <function-ref name="fired" scoped="" ref="0x763c29a0"/>
        <function-ref name="disable" scoped="" ref="0x763c2a80"/>
        <function-ref name="edge" scoped="" ref="0x763c2b60"/>
        <function-ref name="enable" scoped="" ref="0x763c2c40"/>
        <function-ref name="getValue" scoped="" ref="0x763c2d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x763c6798" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x763c6798"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763c6970"/>
        <function-ref name="fired" scoped="" ref="0x763c6a50"/>
        <function-ref name="disable" scoped="" ref="0x763c6b30"/>
        <function-ref name="edge" scoped="" ref="0x763c6c10"/>
        <function-ref name="enable" scoped="" ref="0x763c6cf0"/>
        <function-ref name="getValue" scoped="" ref="0x763c6dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x763c5920" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x763c5920"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763c5af8"/>
        <function-ref name="fired" scoped="" ref="0x763c5bd8"/>
        <function-ref name="disable" scoped="" ref="0x763c5cb8"/>
        <function-ref name="edge" scoped="" ref="0x763c5d98"/>
        <function-ref name="enable" scoped="" ref="0x763c5e78"/>
        <function-ref name="getValue" scoped="" ref="0x763c4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x763c9b38" loc="40:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x763c9b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763c9d10"/>
        <function-ref name="fired" scoped="" ref="0x763c9df0"/>
        <function-ref name="disable" scoped="" ref="0x763c9ed0"/>
        <function-ref name="edge" scoped="" ref="0x763c8010"/>
        <function-ref name="enable" scoped="" ref="0x763c80f0"/>
        <function-ref name="getValue" scoped="" ref="0x763c81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x763c3448" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x763c3448"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x763c3620"/>
        <function-ref name="fired" scoped="" ref="0x763c3700"/>
        <function-ref name="disable" scoped="" ref="0x763c37e0"/>
        <function-ref name="edge" scoped="" ref="0x763c38c0"/>
        <function-ref name="enable" scoped="" ref="0x763c39a0"/>
        <function-ref name="getValue" scoped="" ref="0x763c3a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7634c190" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7634c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7634c368"/>
        <function-ref name="fired" scoped="" ref="0x7634c448"/>
        <function-ref name="disable" scoped="" ref="0x7634c528"/>
        <function-ref name="edge" scoped="" ref="0x7634c608"/>
        <function-ref name="enable" scoped="" ref="0x7634c6e8"/>
        <function-ref name="getValue" scoped="" ref="0x7634c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x76343ad0" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x76343ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x76343ca8"/>
        <function-ref name="disable" scoped="" ref="0x76343d88"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x76343e68"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7634c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7634bb38" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7634bb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7634bd10"/>
        <function-ref name="fired" scoped="" ref="0x7634bdf0"/>
        <function-ref name="disable" scoped="" ref="0x7634bed0"/>
        <function-ref name="edge" scoped="" ref="0x76342010"/>
        <function-ref name="enable" scoped="" ref="0x763420f0"/>
        <function-ref name="getValue" scoped="" ref="0x763421d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7634b540" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7634b540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7634b718"/>
        <function-ref name="disable" scoped="" ref="0x7634b7f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7634b8d8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7634b9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x760acbd8" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x760acbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760aceb0"/>
        <function-ref name="write" scoped="" ref="0x760ab010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x760b1190" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x760b1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x760b1368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x760ad270" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x760ad270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760ad448"/>
        <function-ref name="write" scoped="" ref="0x760ad528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x760aba00" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x760aba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760abbd8"/>
        <function-ref name="write" scoped="" ref="0x760abcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x760a62b0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x760a62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760a6488"/>
        <function-ref name="write" scoped="" ref="0x760a6568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x760abe38" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x760abe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760aa050"/>
        <function-ref name="write" scoped="" ref="0x760aa130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x760a0b20" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x760a0b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760a0cf8"/>
        <function-ref name="write" scoped="" ref="0x760a0dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x760a1a00" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x760a1a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760a1bd8"/>
        <function-ref name="write" scoped="" ref="0x760a1cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x760b1b98" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x760b1b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x760b1d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x760a4190" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x760a4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760a4368"/>
        <function-ref name="write" scoped="" ref="0x760a4448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x760a1190" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x760a1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760a1368"/>
        <function-ref name="write" scoped="" ref="0x760a1448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x760adae0" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x760adae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760adcb8"/>
        <function-ref name="write" scoped="" ref="0x760add98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x760ac368" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x760ac368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760ac540"/>
        <function-ref name="write" scoped="" ref="0x760ac620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x760a75c8" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x760a75c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760a77a0"/>
        <function-ref name="write" scoped="" ref="0x760a7880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x760a9880" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x760a9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760a9a58"/>
        <function-ref name="write" scoped="" ref="0x760a9b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x760aa2b0" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x760aa2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760aa488"/>
        <function-ref name="write" scoped="" ref="0x760aa568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x760b2530" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x760b2530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x760b2708"/>
        <function-ref name="abortRelease" scoped="" ref="0x760b27e8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x760b28c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x760b0910" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x760b0910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x760b0ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x760b0c68" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x760b0c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x760b0ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x760a4c00" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x760a4c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760a4dd8"/>
        <function-ref name="write" scoped="" ref="0x760a4eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x760af080" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x760af080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x760af258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x760a15c8" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x760a15c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760a17a0"/>
        <function-ref name="write" scoped="" ref="0x760a1880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x760b0260" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x760b0260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x760b0438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x760a5cb8" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x760a5cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760a5e90"/>
        <function-ref name="write" scoped="" ref="0x760a4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x760adf18" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x760adf18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760ac108"/>
        <function-ref name="write" scoped="" ref="0x760ac1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x760ad6a8" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x760ad6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760ad880"/>
        <function-ref name="write" scoped="" ref="0x760ad960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x760b2da0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x760b2da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x760b1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x760a5448" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x760a5448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760a5620"/>
        <function-ref name="write" scoped="" ref="0x760a5700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x760a66e8" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x760a66e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760a68c0"/>
        <function-ref name="write" scoped="" ref="0x760a69a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x760a5880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x760a5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760a5a58"/>
        <function-ref name="write" scoped="" ref="0x760a5b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x760a06e8" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x760a06e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760a08c0"/>
        <function-ref name="write" scoped="" ref="0x760a09a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x760a1e38" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x760a1e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760a0050"/>
        <function-ref name="write" scoped="" ref="0x760a0130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x760a9cb8" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x760a9cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760a9e90"/>
        <function-ref name="write" scoped="" ref="0x760a7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x760a6b20" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x760a6b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760a6cf8"/>
        <function-ref name="write" scoped="" ref="0x760a6dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x760a3cf8" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x760a3cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760a3ed0"/>
        <function-ref name="write" scoped="" ref="0x760a1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x760aab20" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x760aab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760aacf8"/>
        <function-ref name="write" scoped="" ref="0x760aadd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7609f010" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7609f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7609f1e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7609f2c8"/>
        <function-ref name="write" scoped="" ref="0x7609f3a8"/>
        <function-ref name="beginRead" scoped="" ref="0x7609f488"/>
        <function-ref name="readDone" scoped="" ref="0x7609f568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x760b2a48" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x760b2a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x760b2c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x760afde0" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x760afde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760ad010"/>
        <function-ref name="write" scoped="" ref="0x760ad0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x760ac7a0" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x760ac7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760ac978"/>
        <function-ref name="write" scoped="" ref="0x760aca58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x760a7a00" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x760a7a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760a7bd8"/>
        <function-ref name="write" scoped="" ref="0x760a7cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x760aa6e8" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x760aa6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760aa8c0"/>
        <function-ref name="write" scoped="" ref="0x760aa9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x760a7e38" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x760a7e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760a6050"/>
        <function-ref name="write" scoped="" ref="0x760a6130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x760ab190" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x760ab190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760ab368"/>
        <function-ref name="write" scoped="" ref="0x760ab448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x760b14e8" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x760b14e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x760b16c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x760ab5c8" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x760ab5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760ab7a0"/>
        <function-ref name="write" scoped="" ref="0x760ab880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x760b3e28" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x760b3e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x760b2050"/>
        <function-ref name="immediateRequest" scoped="" ref="0x760b2130"/>
        <function-ref name="request" scoped="" ref="0x760b2210"/>
        <function-ref name="granted" scoped="" ref="0x760b22f0"/>
        <function-ref name="isOwner" scoped="" ref="0x760b23d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x760af3d8" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x760af3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x760af5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x760afa88" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x760afa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x760afc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x760a38c0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x760a38c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760a3a98"/>
        <function-ref name="write" scoped="" ref="0x760a3b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x760a3488" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x760a3488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760a3660"/>
        <function-ref name="write" scoped="" ref="0x760a3740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x760b05b8" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x760b05b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x760b0790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x760a3050" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x760a3050"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760a3228"/>
        <function-ref name="write" scoped="" ref="0x760a3308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x760a02b0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x760a02b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760a0488"/>
        <function-ref name="write" scoped="" ref="0x760a0568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x760a7190" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x760a7190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760a7368"/>
        <function-ref name="write" scoped="" ref="0x760a7448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x760a5010" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x760a5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760a51e8"/>
        <function-ref name="write" scoped="" ref="0x760a52c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x760b1840" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x760b1840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x760b1a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x760b1ef0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x760b1ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x760b00e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x760a9010" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x760a9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760a91e8"/>
        <function-ref name="write" scoped="" ref="0x760a92c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x760af730" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x760af730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x760af908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x760a9448" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x760a9448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760a9620"/>
        <function-ref name="write" scoped="" ref="0x760a9700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x760a45c8" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x760a45c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760a49a0"/>
        <function-ref name="write" scoped="" ref="0x760a4a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7609f6e8" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7609f6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7609f8c0"/>
        <function-ref name="writeDone" scoped="" ref="0x7609f9a0"/>
        <function-ref name="write" scoped="" ref="0x7609fa80"/>
        <function-ref name="beginRead" scoped="" ref="0x7609fb60"/>
        <function-ref name="readDone" scoped="" ref="0x7609fc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7631d8a0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7631d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7631da78"/>
        <function-ref name="writeDone" scoped="" ref="0x7631db58"/>
        <function-ref name="write" scoped="" ref="0x7631dc38"/>
        <function-ref name="beginRead" scoped="" ref="0x7631dd18"/>
        <function-ref name="readDone" scoped="" ref="0x7631ddf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7631d010" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7631d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7631d1e8"/>
        <function-ref name="abortRelease" scoped="" ref="0x7631d2c8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7631d3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7631b300" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7631b300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7631b4d8"/>
        <function-ref name="write" scoped="" ref="0x7631b5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7631bac8" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7631bac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7631bca0"/>
        <function-ref name="write" scoped="" ref="0x7631bd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x76325890" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x76325890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x76325a68"/>
        <function-ref name="immediateRequest" scoped="" ref="0x76325b48"/>
        <function-ref name="request" scoped="" ref="0x76325c28"/>
        <function-ref name="granted" scoped="" ref="0x76325d08"/>
        <function-ref name="isOwner" scoped="" ref="0x76325de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7631a2c8" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7631a2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7631a4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7630b378" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7630b378"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7630b550"/>
        <function-ref name="sendDone" scoped="" ref="0x7630b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x76316100" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x76316100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x763162d8"/>
        <function-ref name="writeDone" scoped="" ref="0x763163b8"/>
        <function-ref name="write" scoped="" ref="0x76316498"/>
        <function-ref name="beginRead" scoped="" ref="0x76316578"/>
        <function-ref name="readDone" scoped="" ref="0x76316658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7631ae38" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7631ae38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x76317050"/>
        <function-ref name="abortRelease" scoped="" ref="0x76317130"/>
        <function-ref name="attemptRelease" scoped="" ref="0x76317210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x76313ec8" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x76313ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x763120c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7630b848" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7630b848"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7630ba20"/>
        <function-ref name="toIdle" scoped="" ref="0x7630bb00"/>
        <function-ref name="isState" scoped="" ref="0x7630bbe0"/>
        <function-ref name="isIdle" scoped="" ref="0x7630bcc0"/>
        <function-ref name="requestState" scoped="" ref="0x7630bda0"/>
        <function-ref name="forceState" scoped="" ref="0x7630be80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x76315ee8" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x76315ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x763130e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x763131c0"/>
        <function-ref name="request" scoped="" ref="0x763132a0"/>
        <function-ref name="granted" scoped="" ref="0x76313380"/>
        <function-ref name="isOwner" scoped="" ref="0x76313460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x76316b28" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x76316b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76316d00"/>
        <function-ref name="write" scoped="" ref="0x76316de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x763152f0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x763152f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x763154c8"/>
        <function-ref name="write" scoped="" ref="0x763155a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x76311010" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x76311010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x763111e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x763112c8"/>
        <function-ref name="led1On" scoped="" ref="0x763113a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x76311488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x76311568"/>
        <function-ref name="get" scoped="" ref="0x76311648"/>
        <function-ref name="led1Off" scoped="" ref="0x76311728"/>
        <function-ref name="led2Off" scoped="" ref="0x76311aa8"/>
        <function-ref name="set" scoped="" ref="0x76311808"/>
        <function-ref name="led0On" scoped="" ref="0x763118e8"/>
        <function-ref name="led2On" scoped="" ref="0x763119c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x76317688" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x76317688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x76317860"/>
        <function-ref name="immediateRequest" scoped="" ref="0x76317940"/>
        <function-ref name="request" scoped="" ref="0x76317a20"/>
        <function-ref name="granted" scoped="" ref="0x76317b00"/>
        <function-ref name="isOwner" scoped="" ref="0x76317be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7630ddd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7630ddd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7630a010"/>
        <function-ref name="runTask" scoped="" ref="0x7630a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x76315aa8" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x76315aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76315c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x762d7d08" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x762d7d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x762d7ee0"/>
        <function-ref name="toIdle" scoped="" ref="0x762d6010"/>
        <function-ref name="isState" scoped="" ref="0x762d60f0"/>
        <function-ref name="isIdle" scoped="" ref="0x762d61d0"/>
        <function-ref name="requestState" scoped="" ref="0x762d62b0"/>
        <function-ref name="forceState" scoped="" ref="0x762d6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x762d5d98" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x762d5d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x762d2010"/>
        <function-ref name="toIdle" scoped="" ref="0x762d20f0"/>
        <function-ref name="isState" scoped="" ref="0x762d21d0"/>
        <function-ref name="isIdle" scoped="" ref="0x762d22b0"/>
        <function-ref name="requestState" scoped="" ref="0x762d2390"/>
        <function-ref name="forceState" scoped="" ref="0x762d2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x762d2e48" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x762d2e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x762cf050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x762cf4a8" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x762cf4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x762cf680"/>
        <function-ref name="toIdle" scoped="" ref="0x762cf760"/>
        <function-ref name="isState" scoped="" ref="0x762cf840"/>
        <function-ref name="isIdle" scoped="" ref="0x762cf920"/>
        <function-ref name="requestState" scoped="" ref="0x762cfa00"/>
        <function-ref name="forceState" scoped="" ref="0x762cfae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x762d4828" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x762d4828"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x762d4a00"/>
        <function-ref name="sendDone" scoped="" ref="0x762d4ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x762d44f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x762d44f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x762d46c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x760c7db0" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x760c7db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x762d4010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x762d40f0"/>
        <function-ref name="request" scoped="" ref="0x762d41d0"/>
        <function-ref name="granted" scoped="" ref="0x762d42b0"/>
        <function-ref name="isOwner" scoped="" ref="0x762d4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7509da70" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7509da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7509dc48"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7509dd28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7509b7a8" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7509b7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7509b980"/>
        <function-ref name="sendDone" scoped="" ref="0x7509ba60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7509bbc0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7509bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7509bd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7509de88" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7509de88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7509b070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7509d3b8" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7509d3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7509d590"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7509d670"/>
        <function-ref name="request" scoped="" ref="0x7509d750"/>
        <function-ref name="granted" scoped="" ref="0x7509d830"/>
        <function-ref name="isOwner" scoped="" ref="0x7509d910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7509b1d0" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7509b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7509b3a8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7509b488"/>
        <function-ref name="splitRead" scoped="" ref="0x7509b568"/>
        <function-ref name="write" scoped="" ref="0x7509b648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x762836e0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x762836e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x762838b8"/>
        <function-ref name="configure" scoped="" ref="0x76283998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x76285820" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x76285820"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x762859f8"/>
        <function-ref name="sendDone" scoped="" ref="0x76285ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x76284a78" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x76284a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x76284c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x76283b40" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x76283b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x76283d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x76284028" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x76284028"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x76284200"/>
        <function-ref name="immediateRequest" scoped="" ref="0x762842e0"/>
        <function-ref name="request" scoped="" ref="0x762843c0"/>
        <function-ref name="granted" scoped="" ref="0x762844a0"/>
        <function-ref name="isOwner" scoped="" ref="0x76284580"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7628cd48" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7628cd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7628cf20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x76286018"/>
        <function-ref name="request" scoped="" ref="0x762860f8"/>
        <function-ref name="granted" scoped="" ref="0x762861d8"/>
        <function-ref name="isOwner" scoped="" ref="0x762862b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x76283ee8" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x76283ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x762850e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x762851c0"/>
        <function-ref name="splitRead" scoped="" ref="0x762852a0"/>
        <function-ref name="write" scoped="" ref="0x76285380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x76282d50" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x76282d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x76282f28"/>
        <function-ref name="txDone" scoped="" ref="0x76281018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7623e3c8" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7623e3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7623e5b0"/>
        <function-ref name="configure" scoped="" ref="0x7623e690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7623d208" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7623d208"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7623d3f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7623d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7623de48" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7623de48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7623b050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7623e7f0" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7623e7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7623e9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7623b1d0" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7623b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7623b3a8"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7623b488"/>
        <function-ref name="setUctl" scoped="" ref="0x7623b568"/>
        <function-ref name="enableUart" scoped="" ref="0x7623b648"/>
        <function-ref name="setUrctl" scoped="" ref="0x7623b728"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7623b808"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7623b8e8"/>
        <function-ref name="getUtctl" scoped="" ref="0x7623b9c8"/>
        <function-ref name="getUrctl" scoped="" ref="0x7623baa8"/>
        <function-ref name="resetUsart" scoped="" ref="0x7623bb88"/>
        <function-ref name="getUmctl" scoped="" ref="0x7623bc68"/>
        <function-ref name="disableIntr" scoped="" ref="0x7623bd48"/>
        <function-ref name="setUtctl" scoped="" ref="0x7623be28"/>
        <function-ref name="getUbr" scoped="" ref="0x7623a010"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7623a0f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7623a1d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7623a2b0"/>
        <function-ref name="isUart" scoped="" ref="0x7623a390"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7623a470"/>
        <function-ref name="isSpi" scoped="" ref="0x7623a550"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7623a630"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7623a710"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7623a7f0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7623a8d0"/>
        <function-ref name="getMode" scoped="" ref="0x7623a9b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7623ab90"/>
        <function-ref name="clrIntr" scoped="" ref="0x7623ac70"/>
        <function-ref name="setUbr" scoped="" ref="0x7623ad50"/>
        <function-ref name="tx" scoped="" ref="0x7623ae30"/>
        <function-ref name="getUctl" scoped="" ref="0x7623af10"/>
        <function-ref name="disableUart" scoped="" ref="0x76239010"/>
        <function-ref name="enableSpi" scoped="" ref="0x762390f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x762391d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x762392b0"/>
        <function-ref name="rx" scoped="" ref="0x76239390"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x76239470"/>
        <function-ref name="isUartTx" scoped="" ref="0x76239550"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x76239630"/>
        <function-ref name="disableSpi" scoped="" ref="0x76239710"/>
        <function-ref name="disableUartTx" scoped="" ref="0x762397f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x76239d88" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x76239d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x76238010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x762380f0"/>
        <function-ref name="led1On" scoped="" ref="0x762381d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x762382b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x76238390"/>
        <function-ref name="get" scoped="" ref="0x76238470"/>
        <function-ref name="led1Off" scoped="" ref="0x76238550"/>
        <function-ref name="led2On" scoped="" ref="0x762388d0"/>
        <function-ref name="set" scoped="" ref="0x76238710"/>
        <function-ref name="led2Off" scoped="" ref="0x76238630"/>
        <function-ref name="led0On" scoped="" ref="0x762387f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7623d6e8" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7623d6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7623d8d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7623d9b0"/>
        <function-ref name="request" scoped="" ref="0x7623da90"/>
        <function-ref name="granted" scoped="" ref="0x7623db70"/>
        <function-ref name="isOwner" scoped="" ref="0x7623dc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7627dbc8" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7627dbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7627ddb0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7627de90"/>
        <function-ref name="request" scoped="" ref="0x7623e010"/>
        <function-ref name="granted" scoped="" ref="0x7623e0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7623e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7623eb28" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7623eb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7623ed00"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7623ede0"/>
        <function-ref name="splitRead" scoped="" ref="0x7623eec0"/>
        <function-ref name="write" scoped="" ref="0x7623d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x76239970" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x76239970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x76239b48"/>
        <function-ref name="txDone" scoped="" ref="0x76239c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x76238a50" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x76238a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x76238c28"/>
        <function-ref name="runTask" scoped="" ref="0x76238d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7622d3d0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7622d3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7622d5a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x762307a8" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x762307a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x76230980"/>
        <function-ref name="txDone" scoped="" ref="0x76230a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x76235ee8" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x76235ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x762320e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x762321c0"/>
        <function-ref name="setUctl" scoped="" ref="0x762322a0"/>
        <function-ref name="enableUart" scoped="" ref="0x76232380"/>
        <function-ref name="setUrctl" scoped="" ref="0x76232460"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x76232540"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x76232620"/>
        <function-ref name="getUtctl" scoped="" ref="0x76232700"/>
        <function-ref name="getUrctl" scoped="" ref="0x762327e0"/>
        <function-ref name="resetUsart" scoped="" ref="0x762328c0"/>
        <function-ref name="getUmctl" scoped="" ref="0x762329a0"/>
        <function-ref name="disableIntr" scoped="" ref="0x76232a80"/>
        <function-ref name="setUtctl" scoped="" ref="0x76232b60"/>
        <function-ref name="getUbr" scoped="" ref="0x76232cc0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x76232da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x76232e80"/>
        <function-ref name="isUartRx" scoped="" ref="0x76231010"/>
        <function-ref name="isUart" scoped="" ref="0x762310f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x762311d0"/>
        <function-ref name="isSpi" scoped="" ref="0x762312b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x76231390"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x76231470"/>
        <function-ref name="disableUartRx" scoped="" ref="0x76231550"/>
        <function-ref name="enableIntr" scoped="" ref="0x76231630"/>
        <function-ref name="getMode" scoped="" ref="0x76231710"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x762318f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x762319d0"/>
        <function-ref name="setUbr" scoped="" ref="0x76231ab0"/>
        <function-ref name="tx" scoped="" ref="0x76231b90"/>
        <function-ref name="getUctl" scoped="" ref="0x76231c70"/>
        <function-ref name="disableUart" scoped="" ref="0x76231d50"/>
        <function-ref name="enableSpi" scoped="" ref="0x76231e30"/>
        <function-ref name="setModeUart" scoped="" ref="0x76231f10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x76230010"/>
        <function-ref name="rx" scoped="" ref="0x762300f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x762301d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x762302b0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x76230390"/>
        <function-ref name="disableSpi" scoped="" ref="0x76230470"/>
        <function-ref name="disableUartTx" scoped="" ref="0x76230550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7620d168" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7620d168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7620d340"/>
        <function-ref name="isInput" scoped="" ref="0x7620d420"/>
        <function-ref name="setResistor" scoped="" ref="0x7620d500"/>
        <function-ref name="toggle" scoped="" ref="0x7620d5e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7620d6c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7620d7a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7620d880"/>
        <function-ref name="get" scoped="" ref="0x7620d960"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7620da40"/>
        <function-ref name="getRaw" scoped="" ref="0x7620db20"/>
        <function-ref name="set" scoped="" ref="0x7620dc00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7620dce0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7620ddc0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7620df20"/>
        <function-ref name="clr" scoped="" ref="0x7620c018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7622aad0" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7622aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7622aca8"/>
        <function-ref name="txDone" scoped="" ref="0x7622ad88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7620c280" loc="83:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7620c280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7620c458"/>
        <function-ref name="isInput" scoped="" ref="0x7620c538"/>
        <function-ref name="setResistor" scoped="" ref="0x7620c618"/>
        <function-ref name="toggle" scoped="" ref="0x7620c6f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7620c7d8"/>
        <function-ref name="getResistor" scoped="" ref="0x7620c8b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7620c998"/>
        <function-ref name="get" scoped="" ref="0x7620ca78"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7620cb58"/>
        <function-ref name="getRaw" scoped="" ref="0x7620cc38"/>
        <function-ref name="set" scoped="" ref="0x7620cd18"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7620cdf8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7620ced8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7620a090"/>
        <function-ref name="clr" scoped="" ref="0x7620a170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7620a3d8" loc="84:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7620a3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7620a5b0"/>
        <function-ref name="isInput" scoped="" ref="0x7620a690"/>
        <function-ref name="setResistor" scoped="" ref="0x7620a770"/>
        <function-ref name="toggle" scoped="" ref="0x7620a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7620a930"/>
        <function-ref name="getResistor" scoped="" ref="0x7620aa10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7620aaf0"/>
        <function-ref name="get" scoped="" ref="0x7620abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7620acb0"/>
        <function-ref name="getRaw" scoped="" ref="0x7620ad90"/>
        <function-ref name="set" scoped="" ref="0x7620ae70"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76209010"/>
        <function-ref name="isIOFunc" scoped="" ref="0x762090f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76209250"/>
        <function-ref name="clr" scoped="" ref="0x76209330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7622c1a0" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7622c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7622c378"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7622c458"/>
        <function-ref name="setUctl" scoped="" ref="0x7622c538"/>
        <function-ref name="enableUart" scoped="" ref="0x7622c618"/>
        <function-ref name="setUrctl" scoped="" ref="0x7622c6f8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7622c7d8"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7622c8b8"/>
        <function-ref name="getUtctl" scoped="" ref="0x7622c998"/>
        <function-ref name="getUrctl" scoped="" ref="0x7622ca78"/>
        <function-ref name="resetUsart" scoped="" ref="0x7622cb58"/>
        <function-ref name="getUmctl" scoped="" ref="0x7622cc38"/>
        <function-ref name="disableIntr" scoped="" ref="0x7622cd18"/>
        <function-ref name="setUtctl" scoped="" ref="0x7622cdf8"/>
        <function-ref name="getUbr" scoped="" ref="0x7622b010"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7622b0f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7622b1d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7622b2b0"/>
        <function-ref name="isUart" scoped="" ref="0x7622b390"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7622b470"/>
        <function-ref name="isSpi" scoped="" ref="0x7622b550"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7622b630"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7622b710"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7622b7f0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7622b8d0"/>
        <function-ref name="getMode" scoped="" ref="0x7622b9b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7622bb90"/>
        <function-ref name="clrIntr" scoped="" ref="0x7622bc70"/>
        <function-ref name="setUbr" scoped="" ref="0x7622bd50"/>
        <function-ref name="tx" scoped="" ref="0x7622be30"/>
        <function-ref name="getUctl" scoped="" ref="0x7622bf10"/>
        <function-ref name="disableUart" scoped="" ref="0x7622a010"/>
        <function-ref name="enableSpi" scoped="" ref="0x7622a0f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7622a1d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7622a2b0"/>
        <function-ref name="rx" scoped="" ref="0x7622a390"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7622a470"/>
        <function-ref name="isUartTx" scoped="" ref="0x7622a550"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7622a630"/>
        <function-ref name="disableSpi" scoped="" ref="0x7622a710"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7622a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x76211380" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x76211380"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x76211558"/>
        <function-ref name="getStartByte" scoped="" ref="0x76211638"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x76211718"/>
        <function-ref name="setMasterMode" scoped="" ref="0x762117f8"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x762118d8"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x762119b8"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x76211a98"/>
        <function-ref name="getStopBit" scoped="" ref="0x76211b78"/>
        <function-ref name="setClockSource" scoped="" ref="0x76211c58"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x76211d38"/>
        <function-ref name="getData" scoped="" ref="0x76211e18"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x76211ef8"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x76228010"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x76228170"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x76228250"/>
        <function-ref name="getIV" scoped="" ref="0x76228330"/>
        <function-ref name="enableI2C" scoped="" ref="0x76228410"/>
        <function-ref name="setStartBit" scoped="" ref="0x762284f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x762285d0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x762286b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x76228790"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x76228870"/>
        <function-ref name="isI2C" scoped="" ref="0x76228950"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x76228a30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x76228b10"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x76228cf0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x76228dd0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x76228eb0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x76227010"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x762270f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x762271d0"/>
        <function-ref name="disableI2C" scoped="" ref="0x762272b0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x76227390"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x76227470"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x76227550"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x76227630"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x76227710"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x762277f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x762278d0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x762279b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x76227a90"/>
        <function-ref name="setWordMode" scoped="" ref="0x76227b70"/>
        <function-ref name="setData" scoped="" ref="0x76227c50"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x76227d30"/>
        <function-ref name="getClockSource" scoped="" ref="0x76227e10"/>
        <function-ref name="getWordMode" scoped="" ref="0x76227ef0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x76210010"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x762100f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x762101d0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x762104b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x76210590"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x76210670"/>
        <function-ref name="setStopBit" scoped="" ref="0x76210750"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x76210830"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x76210910"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x762109f0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x76210ad0"/>
        <function-ref name="setStartByte" scoped="" ref="0x76210bb0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x76210c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7620e030" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7620e030"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7620e208"/>
        <function-ref name="isInput" scoped="" ref="0x7620e2e8"/>
        <function-ref name="setResistor" scoped="" ref="0x7620e3c8"/>
        <function-ref name="toggle" scoped="" ref="0x7620e4a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7620e588"/>
        <function-ref name="getResistor" scoped="" ref="0x7620e668"/>
        <function-ref name="makeOutput" scoped="" ref="0x7620e748"/>
        <function-ref name="get" scoped="" ref="0x7620e828"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7620e908"/>
        <function-ref name="getRaw" scoped="" ref="0x7620e9e8"/>
        <function-ref name="set" scoped="" ref="0x7620eac8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7620eba8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7620ec88"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7620ede8"/>
        <function-ref name="clr" scoped="" ref="0x7620eec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x762290b8" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x762290b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x76229290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x76210ef8" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x76210ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7620f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7620f1c0"/>
        <function-ref name="setResistor" scoped="" ref="0x7620f2a0"/>
        <function-ref name="toggle" scoped="" ref="0x7620f380"/>
        <function-ref name="isOutput" scoped="" ref="0x7620f460"/>
        <function-ref name="getResistor" scoped="" ref="0x7620f540"/>
        <function-ref name="makeOutput" scoped="" ref="0x7620f620"/>
        <function-ref name="get" scoped="" ref="0x7620f700"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7620f7e0"/>
        <function-ref name="getRaw" scoped="" ref="0x7620f8c0"/>
        <function-ref name="set" scoped="" ref="0x7620f9a0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7620fa80"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7620fb60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7620fcc0"/>
        <function-ref name="clr" scoped="" ref="0x7620fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x761c4e28" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x761c4e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x761c1050"/>
        <function-ref name="led0Toggle" scoped="" ref="0x761c1130"/>
        <function-ref name="led1On" scoped="" ref="0x761c1210"/>
        <function-ref name="led1Toggle" scoped="" ref="0x761c12f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x761c13d0"/>
        <function-ref name="get" scoped="" ref="0x761c14b0"/>
        <function-ref name="led1Off" scoped="" ref="0x761c1590"/>
        <function-ref name="led2Off" scoped="" ref="0x761c1910"/>
        <function-ref name="set" scoped="" ref="0x761c1670"/>
        <function-ref name="led0On" scoped="" ref="0x761c1750"/>
        <function-ref name="led2On" scoped="" ref="0x761c1830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x761bd240" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x761bd240"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x761bd418"/>
        <function-ref name="isInput" scoped="" ref="0x761bd4f8"/>
        <function-ref name="toggle" scoped="" ref="0x761bd5d8"/>
        <function-ref name="isOutput" scoped="" ref="0x761bd6b8"/>
        <function-ref name="get" scoped="" ref="0x761bd798"/>
        <function-ref name="makeOutput" scoped="" ref="0x761bd878"/>
        <function-ref name="set" scoped="" ref="0x761bd958"/>
        <function-ref name="clr" scoped="" ref="0x761bda38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x761be1e0" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x761be1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x761be3b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x761bdc28" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x761bdc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x761bde00"/>
        <function-ref name="isInput" scoped="" ref="0x761bdee0"/>
        <function-ref name="toggle" scoped="" ref="0x761bc010"/>
        <function-ref name="isOutput" scoped="" ref="0x761bc0f0"/>
        <function-ref name="get" scoped="" ref="0x761bc1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x761bc2b0"/>
        <function-ref name="set" scoped="" ref="0x761bc390"/>
        <function-ref name="clr" scoped="" ref="0x761bc470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x761be528" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x761be528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x761be700"/>
        <function-ref name="led0Toggle" scoped="" ref="0x761be7e0"/>
        <function-ref name="led1On" scoped="" ref="0x761be8c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x761be9a0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x761bea80"/>
        <function-ref name="get" scoped="" ref="0x761beb60"/>
        <function-ref name="led1Off" scoped="" ref="0x761bec40"/>
        <function-ref name="led2Off" scoped="" ref="0x761bd010"/>
        <function-ref name="set" scoped="" ref="0x761bed20"/>
        <function-ref name="led0On" scoped="" ref="0x761bee00"/>
        <function-ref name="led2On" scoped="" ref="0x761beee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x761bc660" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x761bc660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x761bc838"/>
        <function-ref name="isInput" scoped="" ref="0x761bc918"/>
        <function-ref name="toggle" scoped="" ref="0x761bc9f8"/>
        <function-ref name="isOutput" scoped="" ref="0x761bcad8"/>
        <function-ref name="get" scoped="" ref="0x761bcbb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x761bcc98"/>
        <function-ref name="set" scoped="" ref="0x761bcd78"/>
        <function-ref name="clr" scoped="" ref="0x761bce58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x761ac110" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x761ac110"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x761ac2e8"/>
        <function-ref name="isInput" scoped="" ref="0x761ac3c8"/>
        <function-ref name="toggle" scoped="" ref="0x761ac4a8"/>
        <function-ref name="isOutput" scoped="" ref="0x761ac588"/>
        <function-ref name="get" scoped="" ref="0x761ac668"/>
        <function-ref name="makeOutput" scoped="" ref="0x761ac748"/>
        <function-ref name="set" scoped="" ref="0x761ac828"/>
        <function-ref name="clr" scoped="" ref="0x761ac908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x761acb18" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x761acb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x761accf0"/>
        <function-ref name="isInput" scoped="" ref="0x761acdd0"/>
        <function-ref name="toggle" scoped="" ref="0x761aceb0"/>
        <function-ref name="isOutput" scoped="" ref="0x761ab010"/>
        <function-ref name="get" scoped="" ref="0x761ab0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x761ab1d0"/>
        <function-ref name="set" scoped="" ref="0x761ab2b0"/>
        <function-ref name="clr" scoped="" ref="0x761ab390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x761abf28" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x761abf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x761aa110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x761ab5a0" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x761ab5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x761ab778"/>
        <function-ref name="isInput" scoped="" ref="0x761ab858"/>
        <function-ref name="toggle" scoped="" ref="0x761ab938"/>
        <function-ref name="isOutput" scoped="" ref="0x761aba18"/>
        <function-ref name="get" scoped="" ref="0x761abaf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x761abbd8"/>
        <function-ref name="set" scoped="" ref="0x761abcb8"/>
        <function-ref name="clr" scoped="" ref="0x761abd98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x761a95f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x761a95f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x761a97c8"/>
        <function-ref name="isInput" scoped="" ref="0x761a98a8"/>
        <function-ref name="setResistor" scoped="" ref="0x761a9988"/>
        <function-ref name="toggle" scoped="" ref="0x761a9a68"/>
        <function-ref name="isOutput" scoped="" ref="0x761a9b48"/>
        <function-ref name="getResistor" scoped="" ref="0x761a9c28"/>
        <function-ref name="makeOutput" scoped="" ref="0x761a9d08"/>
        <function-ref name="get" scoped="" ref="0x761a9de8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x761a9ec8"/>
        <function-ref name="getRaw" scoped="" ref="0x761a8010"/>
        <function-ref name="set" scoped="" ref="0x761a80f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x761a81d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x761a82b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x761a8410"/>
        <function-ref name="clr" scoped="" ref="0x761a84f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x761aac58" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x761aac58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x761aae30"/>
        <function-ref name="isInput" scoped="" ref="0x761aaf10"/>
        <function-ref name="toggle" scoped="" ref="0x761a9010"/>
        <function-ref name="isOutput" scoped="" ref="0x761a90f0"/>
        <function-ref name="get" scoped="" ref="0x761a91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x761a92b0"/>
        <function-ref name="set" scoped="" ref="0x761a9390"/>
        <function-ref name="clr" scoped="" ref="0x761a9470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x761a7db8" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x761a7db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x761a6010"/>
        <function-ref name="isInput" scoped="" ref="0x761a60f0"/>
        <function-ref name="setResistor" scoped="" ref="0x761a61d0"/>
        <function-ref name="toggle" scoped="" ref="0x761a62b0"/>
        <function-ref name="isOutput" scoped="" ref="0x761a6390"/>
        <function-ref name="getResistor" scoped="" ref="0x761a6470"/>
        <function-ref name="makeOutput" scoped="" ref="0x761a6550"/>
        <function-ref name="get" scoped="" ref="0x761a6630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x761a6710"/>
        <function-ref name="getRaw" scoped="" ref="0x761a67f0"/>
        <function-ref name="set" scoped="" ref="0x761a68d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x761a69b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x761a6a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x761a6bf0"/>
        <function-ref name="clr" scoped="" ref="0x761a6cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x761a7440" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x761a7440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x761a7618"/>
        <function-ref name="isInput" scoped="" ref="0x761a76f8"/>
        <function-ref name="toggle" scoped="" ref="0x761a77d8"/>
        <function-ref name="isOutput" scoped="" ref="0x761a78b8"/>
        <function-ref name="get" scoped="" ref="0x761a7998"/>
        <function-ref name="makeOutput" scoped="" ref="0x761a7a78"/>
        <function-ref name="set" scoped="" ref="0x761a7b58"/>
        <function-ref name="clr" scoped="" ref="0x761a7c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x761a46d0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x761a46d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x761a48a8"/>
        <function-ref name="isInput" scoped="" ref="0x761a4988"/>
        <function-ref name="setResistor" scoped="" ref="0x761a4a68"/>
        <function-ref name="toggle" scoped="" ref="0x761a4b48"/>
        <function-ref name="isOutput" scoped="" ref="0x761a4c28"/>
        <function-ref name="getResistor" scoped="" ref="0x761a4d08"/>
        <function-ref name="makeOutput" scoped="" ref="0x761a4de8"/>
        <function-ref name="get" scoped="" ref="0x761a4ec8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x761a3010"/>
        <function-ref name="getRaw" scoped="" ref="0x761a30f0"/>
        <function-ref name="set" scoped="" ref="0x761a31d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x761a32b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x761a3390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x761a34f0"/>
        <function-ref name="clr" scoped="" ref="0x761a35d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x761a5cd8" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x761a5cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x761a5eb0"/>
        <function-ref name="isInput" scoped="" ref="0x761a4010"/>
        <function-ref name="toggle" scoped="" ref="0x761a40f0"/>
        <function-ref name="isOutput" scoped="" ref="0x761a41d0"/>
        <function-ref name="get" scoped="" ref="0x761a42b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x761a4390"/>
        <function-ref name="set" scoped="" ref="0x761a4470"/>
        <function-ref name="clr" scoped="" ref="0x761a4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x75097898" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x75097898"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x75097a70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x75097b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x75094c88" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x75094c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x75094e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x75090b50" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x75090b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x75090d28"/>
        <function-ref name="configure" scoped="" ref="0x75090e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x75093010" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x75093010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x750931e8"/>
        <function-ref name="getStartByte" scoped="" ref="0x750932c8"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x750933a8"/>
        <function-ref name="setMasterMode" scoped="" ref="0x75093488"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x75093568"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x75093648"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x75093728"/>
        <function-ref name="getStopBit" scoped="" ref="0x75093808"/>
        <function-ref name="setClockSource" scoped="" ref="0x750938e8"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x750939c8"/>
        <function-ref name="getData" scoped="" ref="0x75093aa8"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x75093b88"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x75093c68"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x75093dc8"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x75093ea8"/>
        <function-ref name="getIV" scoped="" ref="0x75092010"/>
        <function-ref name="enableI2C" scoped="" ref="0x750920f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x750921d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x750922b0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x75092390"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x75092470"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x75092550"/>
        <function-ref name="isI2C" scoped="" ref="0x75092630"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x75092710"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x750927f0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x750929d0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x75092ab0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x75092b90"/>
        <function-ref name="disableNoAck" scoped="" ref="0x75092c70"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x75092d50"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x75092e30"/>
        <function-ref name="disableI2C" scoped="" ref="0x75092f10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x75091010"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x750910f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x750911d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x750912b0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x75091390"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x75091470"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x75091550"/>
        <function-ref name="setModeI2C" scoped="" ref="0x75091630"/>
        <function-ref name="getStartBit" scoped="" ref="0x75091710"/>
        <function-ref name="setWordMode" scoped="" ref="0x750917f0"/>
        <function-ref name="setData" scoped="" ref="0x750918d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x750919b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x75091a90"/>
        <function-ref name="getWordMode" scoped="" ref="0x75091b70"/>
        <function-ref name="setShiftClock" scoped="" ref="0x75091c50"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x75091d30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x75091e10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x75090210"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x750902f0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x750903d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x750904b0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x75090590"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x75090670"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x75090750"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x75090830"/>
        <function-ref name="setStartByte" scoped="" ref="0x75090910"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x750909f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x75094870" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x75094870"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x75094a48"/>
        <function-ref name="txDone" scoped="" ref="0x75094b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x750971e0" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x750971e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x750973b8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x75097498"/>
        <function-ref name="request" scoped="" ref="0x75097578"/>
        <function-ref name="granted" scoped="" ref="0x75097658"/>
        <function-ref name="isOwner" scoped="" ref="0x75097738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x75096170" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x75096170"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x75096348"/>
        <function-ref name="enableUartRx" scoped="" ref="0x75096428"/>
        <function-ref name="setUctl" scoped="" ref="0x75096508"/>
        <function-ref name="enableUart" scoped="" ref="0x750965e8"/>
        <function-ref name="setUrctl" scoped="" ref="0x750966c8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x750967a8"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x75096888"/>
        <function-ref name="getUtctl" scoped="" ref="0x75096968"/>
        <function-ref name="getUrctl" scoped="" ref="0x75096a48"/>
        <function-ref name="resetUsart" scoped="" ref="0x75096b28"/>
        <function-ref name="getUmctl" scoped="" ref="0x75096c08"/>
        <function-ref name="disableIntr" scoped="" ref="0x75096ce8"/>
        <function-ref name="setUtctl" scoped="" ref="0x75096dc8"/>
        <function-ref name="getUbr" scoped="" ref="0x75096f28"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x75095018"/>
        <function-ref name="setUmctl" scoped="" ref="0x750950f8"/>
        <function-ref name="isUartRx" scoped="" ref="0x750951d8"/>
        <function-ref name="isUart" scoped="" ref="0x750952b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x75095398"/>
        <function-ref name="isSpi" scoped="" ref="0x75095478"/>
        <function-ref name="enableUartTx" scoped="" ref="0x75095558"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x75095638"/>
        <function-ref name="disableUartRx" scoped="" ref="0x75095718"/>
        <function-ref name="enableIntr" scoped="" ref="0x750957f8"/>
        <function-ref name="getMode" scoped="" ref="0x750958d8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x75095ab8"/>
        <function-ref name="clrIntr" scoped="" ref="0x75095b98"/>
        <function-ref name="setUbr" scoped="" ref="0x75095c78"/>
        <function-ref name="tx" scoped="" ref="0x75095d58"/>
        <function-ref name="getUctl" scoped="" ref="0x75095e38"/>
        <function-ref name="disableUart" scoped="" ref="0x75095f18"/>
        <function-ref name="enableSpi" scoped="" ref="0x75094010"/>
        <function-ref name="setModeUart" scoped="" ref="0x750940f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x750941d0"/>
        <function-ref name="rx" scoped="" ref="0x750942b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x75094390"/>
        <function-ref name="isUartTx" scoped="" ref="0x75094470"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x75094550"/>
        <function-ref name="disableSpi" scoped="" ref="0x75094630"/>
        <function-ref name="disableUartTx" scoped="" ref="0x75094710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x75097cb0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x75097cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x75097e88"/>
        <function-ref name="userId" scoped="" ref="0x75096010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7618b320" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7618b320"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7618b4f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7618b5d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7618a010" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7618a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7618a1e8"/>
        <function-ref name="configure" scoped="" ref="0x7618a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x761909a0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x761909a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x76190b78"/>
        <function-ref name="txDone" scoped="" ref="0x76190c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7618d8a8" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7618d8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7618da80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7618db60"/>
        <function-ref name="request" scoped="" ref="0x7618dc40"/>
        <function-ref name="granted" scoped="" ref="0x7618dd20"/>
        <function-ref name="isOwner" scoped="" ref="0x7618de00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7618d238" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7618d238"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7618d410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7618b7a8" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7618b7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7618b980"/>
        <function-ref name="userId" scoped="" ref="0x7618ba60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x761889b0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x761889b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x76188b88"/>
        <function-ref name="userId" scoped="" ref="0x76188c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x761899b0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x761899b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x76189b98"/>
        <function-ref name="txDone" scoped="" ref="0x76189c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x76188678" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x76188678"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x76188850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x76189e90" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x76189e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x761880c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x76188240" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x76188240"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x76188418"/>
        <function-ref name="txDone" scoped="" ref="0x761884f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x76138010" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x76138010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x761381f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x761382d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x76137010" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x76137010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x761371f8"/>
        <function-ref name="configure" scoped="" ref="0x761372d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x76138418" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x76138418"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x761385f0"/>
        <function-ref name="requested" scoped="" ref="0x761386d0"/>
        <function-ref name="granted" scoped="" ref="0x761387b0"/>
        <function-ref name="isOwner" scoped="" ref="0x76138890"/>
        <function-ref name="immediateRequested" scoped="" ref="0x76138970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x761398a0" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x761398a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x76139a88"/>
        <function-ref name="immediateRequest" scoped="" ref="0x76139b68"/>
        <function-ref name="request" scoped="" ref="0x76139c48"/>
        <function-ref name="granted" scoped="" ref="0x76139d28"/>
        <function-ref name="isOwner" scoped="" ref="0x76139e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x76138ab0" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x76138ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x76138c88"/>
        <function-ref name="userId" scoped="" ref="0x76138d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75045120" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75045120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x750452f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x75045458" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x75045458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x75045630"/>
        <function-ref name="isEmpty" scoped="" ref="0x75045710"/>
        <function-ref name="isEnqueued" scoped="" ref="0x750457f0"/>
        <function-ref name="dequeue" scoped="" ref="0x750458d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x75044cf8" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x75044cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x75044ee0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x75043010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x75043ca8" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x75043ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x75043e90"/>
        <function-ref name="configure" scoped="" ref="0x75042010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x75042170" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x75042170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x75042348"/>
        <function-ref name="isEmpty" scoped="" ref="0x75042428"/>
        <function-ref name="isEnqueued" scoped="" ref="0x75042508"/>
        <function-ref name="dequeue" scoped="" ref="0x750425e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x75043150" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x75043150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x75043328"/>
        <function-ref name="requested" scoped="" ref="0x75043408"/>
        <function-ref name="granted" scoped="" ref="0x750434e8"/>
        <function-ref name="isOwner" scoped="" ref="0x750435c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x750436a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x75042728" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x75042728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x75042900"/>
        <function-ref name="led0Toggle" scoped="" ref="0x750429e0"/>
        <function-ref name="led1On" scoped="" ref="0x75042ac0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x75042ba0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x75042c80"/>
        <function-ref name="get" scoped="" ref="0x75042d60"/>
        <function-ref name="led1Off" scoped="" ref="0x75042e40"/>
        <function-ref name="led0On" scoped="" ref="0x750401d8"/>
        <function-ref name="set" scoped="" ref="0x75040018"/>
        <function-ref name="led2On" scoped="" ref="0x75042f20"/>
        <function-ref name="led2Off" scoped="" ref="0x750400f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x750445b8" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x750445b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x750447a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x75044880"/>
        <function-ref name="request" scoped="" ref="0x75044960"/>
        <function-ref name="granted" scoped="" ref="0x75044a40"/>
        <function-ref name="isOwner" scoped="" ref="0x75044b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x750437e8" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x750437e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x750439c0"/>
        <function-ref name="userId" scoped="" ref="0x75043aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x75040358" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x75040358"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75040530"/>
        <function-ref name="runTask" scoped="" ref="0x75040610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x76134ba8" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x76134ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x76134d80"/>
        <function-ref name="getStartByte" scoped="" ref="0x76134e60"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x76131010"/>
        <function-ref name="setMasterMode" scoped="" ref="0x761310f0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x761311d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x761312b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x76131390"/>
        <function-ref name="getStopBit" scoped="" ref="0x76131470"/>
        <function-ref name="setClockSource" scoped="" ref="0x76131550"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x76131630"/>
        <function-ref name="getData" scoped="" ref="0x76131710"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x761317f0"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x761318d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x76131a30"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x76131b10"/>
        <function-ref name="getIV" scoped="" ref="0x76131bf0"/>
        <function-ref name="enableI2C" scoped="" ref="0x76131cd0"/>
        <function-ref name="setStartBit" scoped="" ref="0x76131db0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x76131e90"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x76130010"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x761300f0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x761301d0"/>
        <function-ref name="isI2C" scoped="" ref="0x761302b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x76130390"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x76130470"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x76130650"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x76130730"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x76130810"/>
        <function-ref name="disableNoAck" scoped="" ref="0x761308f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x761309d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x76130ab0"/>
        <function-ref name="disableI2C" scoped="" ref="0x76130b90"/>
        <function-ref name="getShiftClock" scoped="" ref="0x76130c70"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x76130d50"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x76130e30"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x76130f10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7612f010"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7612f0f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7612f1d0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7612f2b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7612f390"/>
        <function-ref name="setWordMode" scoped="" ref="0x7612f470"/>
        <function-ref name="setData" scoped="" ref="0x7612f550"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7612f630"/>
        <function-ref name="getClockSource" scoped="" ref="0x7612f710"/>
        <function-ref name="getWordMode" scoped="" ref="0x7612f7f0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7612f8d0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7612f9b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7612fa90"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7612fd70"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7612fe50"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7612e010"/>
        <function-ref name="setStopBit" scoped="" ref="0x7612e0f0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7612e1d0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7612e2b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7612e390"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7612e470"/>
        <function-ref name="setStartByte" scoped="" ref="0x7612e550"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7612e630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x76128c58" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x76128c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x76128e30"/>
        <function-ref name="enableUartRx" scoped="" ref="0x76128f10"/>
        <function-ref name="setUctl" scoped="" ref="0x76127010"/>
        <function-ref name="enableUart" scoped="" ref="0x761270f0"/>
        <function-ref name="setUrctl" scoped="" ref="0x761271d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x761272b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x76127390"/>
        <function-ref name="getUtctl" scoped="" ref="0x76127470"/>
        <function-ref name="getUrctl" scoped="" ref="0x76127550"/>
        <function-ref name="resetUsart" scoped="" ref="0x76127630"/>
        <function-ref name="getUmctl" scoped="" ref="0x76127710"/>
        <function-ref name="disableIntr" scoped="" ref="0x761277f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x761278d0"/>
        <function-ref name="getUbr" scoped="" ref="0x76127a30"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x76127b10"/>
        <function-ref name="setUmctl" scoped="" ref="0x76127bf0"/>
        <function-ref name="isUartRx" scoped="" ref="0x76127cd0"/>
        <function-ref name="isUart" scoped="" ref="0x76127db0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x76127e90"/>
        <function-ref name="isSpi" scoped="" ref="0x76126010"/>
        <function-ref name="enableUartTx" scoped="" ref="0x761260f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x761261d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x761262b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x76126390"/>
        <function-ref name="getMode" scoped="" ref="0x76126470"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x76126650"/>
        <function-ref name="clrIntr" scoped="" ref="0x76126730"/>
        <function-ref name="setUbr" scoped="" ref="0x76126810"/>
        <function-ref name="tx" scoped="" ref="0x761268f0"/>
        <function-ref name="getUctl" scoped="" ref="0x761269d0"/>
        <function-ref name="disableUart" scoped="" ref="0x76126ab0"/>
        <function-ref name="enableSpi" scoped="" ref="0x76126b90"/>
        <function-ref name="setModeUart" scoped="" ref="0x76126c70"/>
        <function-ref name="setModeSpi" scoped="" ref="0x76126d50"/>
        <function-ref name="rx" scoped="" ref="0x76126e30"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x76126f10"/>
        <function-ref name="isUartTx" scoped="" ref="0x76125010"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x761250f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x761251d0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x761252b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x76124678" loc="43:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x76124678"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76124850"/>
        <function-ref name="isInput" scoped="" ref="0x76124930"/>
        <function-ref name="setResistor" scoped="" ref="0x76124a10"/>
        <function-ref name="toggle" scoped="" ref="0x76124af0"/>
        <function-ref name="isOutput" scoped="" ref="0x76124bd0"/>
        <function-ref name="getResistor" scoped="" ref="0x76124cb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76124d90"/>
        <function-ref name="get" scoped="" ref="0x76124e70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76123010"/>
        <function-ref name="getRaw" scoped="" ref="0x761230f0"/>
        <function-ref name="set" scoped="" ref="0x761231d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x761232b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76123390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x761234f0"/>
        <function-ref name="clr" scoped="" ref="0x761235d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7612b030" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7612b030"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7612b208"/>
        <function-ref name="getStartByte" scoped="" ref="0x7612b2e8"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7612b3c8"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7612b4a8"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7612b588"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7612b668"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7612b748"/>
        <function-ref name="getStopBit" scoped="" ref="0x7612b828"/>
        <function-ref name="setClockSource" scoped="" ref="0x7612b908"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7612b9e8"/>
        <function-ref name="getData" scoped="" ref="0x7612bac8"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7612bba8"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7612bc88"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7612bde8"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7612bec8"/>
        <function-ref name="getIV" scoped="" ref="0x7612a010"/>
        <function-ref name="enableI2C" scoped="" ref="0x7612a0f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7612a1d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7612a2b0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7612a390"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7612a470"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7612a550"/>
        <function-ref name="isI2C" scoped="" ref="0x7612a630"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7612a710"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7612a7f0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7612a9d0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7612aab0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7612ab90"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7612ac70"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7612ad50"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7612ae30"/>
        <function-ref name="disableI2C" scoped="" ref="0x7612af10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x76129010"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x761290f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x761291d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x761292b0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x76129390"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x76129470"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x76129550"/>
        <function-ref name="setModeI2C" scoped="" ref="0x76129630"/>
        <function-ref name="getStartBit" scoped="" ref="0x76129710"/>
        <function-ref name="setWordMode" scoped="" ref="0x761297f0"/>
        <function-ref name="setData" scoped="" ref="0x761298d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x761299b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x76129a90"/>
        <function-ref name="getWordMode" scoped="" ref="0x76129b70"/>
        <function-ref name="setShiftClock" scoped="" ref="0x76129c50"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x76129d30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x76129e10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x76128210"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x761282f0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x761283d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x761284b0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x76128590"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x76128670"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x76128750"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x76128830"/>
        <function-ref name="setStartByte" scoped="" ref="0x76128910"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x761289f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x76125518" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x76125518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x761256f0"/>
        <function-ref name="isInput" scoped="" ref="0x761257d0"/>
        <function-ref name="setResistor" scoped="" ref="0x761258b0"/>
        <function-ref name="toggle" scoped="" ref="0x76125990"/>
        <function-ref name="isOutput" scoped="" ref="0x76125a70"/>
        <function-ref name="getResistor" scoped="" ref="0x76125b50"/>
        <function-ref name="makeOutput" scoped="" ref="0x76125c30"/>
        <function-ref name="get" scoped="" ref="0x76125d10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76125df0"/>
        <function-ref name="getRaw" scoped="" ref="0x76125ed0"/>
        <function-ref name="set" scoped="" ref="0x76124010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x761240f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x761241d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76124330"/>
        <function-ref name="clr" scoped="" ref="0x76124410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x76092bd8" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x76092bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76092eb0"/>
        <function-ref name="write" scoped="" ref="0x76090010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x76097190" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x76097190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76097368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x76093270" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x76093270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76093448"/>
        <function-ref name="write" scoped="" ref="0x76093528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x76090a00" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x76090a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76090bd8"/>
        <function-ref name="write" scoped="" ref="0x76090cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7608c2b0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7608c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7608c488"/>
        <function-ref name="write" scoped="" ref="0x7608c568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x76090e38" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x76090e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7608f050"/>
        <function-ref name="write" scoped="" ref="0x7608f130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x76086b20" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x76086b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76086cf8"/>
        <function-ref name="write" scoped="" ref="0x76086dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x76087a00" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x76087a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76087bd8"/>
        <function-ref name="write" scoped="" ref="0x76087cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x76097b98" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x76097b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76097d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x76089190" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x76089190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76089368"/>
        <function-ref name="write" scoped="" ref="0x76089448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x76087190" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x76087190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76087368"/>
        <function-ref name="write" scoped="" ref="0x76087448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x76093ae0" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x76093ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76093cb8"/>
        <function-ref name="write" scoped="" ref="0x76093d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x76092368" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x76092368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76092540"/>
        <function-ref name="write" scoped="" ref="0x76092620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7608d5c8" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7608d5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7608d7a0"/>
        <function-ref name="write" scoped="" ref="0x7608d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7608e880" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7608e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7608ea58"/>
        <function-ref name="write" scoped="" ref="0x7608eb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7608f2b0" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7608f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7608f488"/>
        <function-ref name="write" scoped="" ref="0x7608f568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x76098550" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x76098550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x76098728"/>
        <function-ref name="abortRelease" scoped="" ref="0x76098808"/>
        <function-ref name="attemptRelease" scoped="" ref="0x760988e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x76095910" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x76095910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76095ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x76095c68" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x76095c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76095ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x76089c00" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x76089c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76089dd8"/>
        <function-ref name="write" scoped="" ref="0x76089eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x76094080" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x76094080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76094258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x760875c8" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x760875c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760877a0"/>
        <function-ref name="write" scoped="" ref="0x76087880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x76095260" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x76095260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76095438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7608acb8" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7608acb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7608ae90"/>
        <function-ref name="write" scoped="" ref="0x76089010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x76093f18" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x76093f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76092108"/>
        <function-ref name="write" scoped="" ref="0x760921e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x760936a8" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x760936a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76093880"/>
        <function-ref name="write" scoped="" ref="0x76093960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x76098dc0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x76098dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76097010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7608a448" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7608a448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7608a620"/>
        <function-ref name="write" scoped="" ref="0x7608a700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7608c6e8" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7608c6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7608c8c0"/>
        <function-ref name="write" scoped="" ref="0x7608c9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7608a880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7608a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7608aa58"/>
        <function-ref name="write" scoped="" ref="0x7608ab38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x760866e8" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x760866e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760868c0"/>
        <function-ref name="write" scoped="" ref="0x760869a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x76087e38" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x76087e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76086050"/>
        <function-ref name="write" scoped="" ref="0x76086130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7608ecb8" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7608ecb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7608ee90"/>
        <function-ref name="write" scoped="" ref="0x7608d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7608cb20" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7608cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7608ccf8"/>
        <function-ref name="write" scoped="" ref="0x7608cdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x76088cf8" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x76088cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76088ed0"/>
        <function-ref name="write" scoped="" ref="0x76087010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7608fb20" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7608fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7608fcf8"/>
        <function-ref name="write" scoped="" ref="0x7608fdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x76084010" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x76084010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x760841e8"/>
        <function-ref name="writeDone" scoped="" ref="0x760842c8"/>
        <function-ref name="write" scoped="" ref="0x760843a8"/>
        <function-ref name="beginRead" scoped="" ref="0x76084488"/>
        <function-ref name="readDone" scoped="" ref="0x76084568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x76098a68" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x76098a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76098c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x76094de0" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x76094de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76093010"/>
        <function-ref name="write" scoped="" ref="0x760930f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x760927a0" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x760927a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76092978"/>
        <function-ref name="write" scoped="" ref="0x76092a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7608da00" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7608da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7608dbd8"/>
        <function-ref name="write" scoped="" ref="0x7608dcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7608f6e8" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7608f6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7608f8c0"/>
        <function-ref name="write" scoped="" ref="0x7608f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7608de38" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7608de38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7608c050"/>
        <function-ref name="write" scoped="" ref="0x7608c130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x76090190" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x76090190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76090368"/>
        <function-ref name="write" scoped="" ref="0x76090448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x760974e8" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x760974e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x760976c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x760905c8" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x760905c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760907a0"/>
        <function-ref name="write" scoped="" ref="0x76090880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x76099e88" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x76099e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x76098070"/>
        <function-ref name="immediateRequest" scoped="" ref="0x76098150"/>
        <function-ref name="request" scoped="" ref="0x76098230"/>
        <function-ref name="granted" scoped="" ref="0x76098310"/>
        <function-ref name="isOwner" scoped="" ref="0x760983f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x760943d8" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x760943d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x760945b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x76094a88" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x76094a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76094c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x760888c0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x760888c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76088a98"/>
        <function-ref name="write" scoped="" ref="0x76088b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x76088488" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x76088488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76088660"/>
        <function-ref name="write" scoped="" ref="0x76088740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x760955b8" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x760955b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76095790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x76088050" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x76088050"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76088228"/>
        <function-ref name="write" scoped="" ref="0x76088308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x760862b0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x760862b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76086488"/>
        <function-ref name="write" scoped="" ref="0x76086568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7608d190" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7608d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7608d368"/>
        <function-ref name="write" scoped="" ref="0x7608d448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7608a010" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7608a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7608a1e8"/>
        <function-ref name="write" scoped="" ref="0x7608a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x76097840" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x76097840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76097a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x76097ef0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x76097ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x760950e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7608e010" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7608e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7608e1e8"/>
        <function-ref name="write" scoped="" ref="0x7608e2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x76094730" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x76094730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x76094908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7608e448" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7608e448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7608e620"/>
        <function-ref name="write" scoped="" ref="0x7608e700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x760895c8" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x760895c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760899a0"/>
        <function-ref name="write" scoped="" ref="0x76089a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x760846e8" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x760846e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x760848c0"/>
        <function-ref name="writeDone" scoped="" ref="0x760849a0"/>
        <function-ref name="write" scoped="" ref="0x76084a80"/>
        <function-ref name="beginRead" scoped="" ref="0x76084b60"/>
        <function-ref name="readDone" scoped="" ref="0x76084c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x76079880" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x76079880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76079b58"/>
        <function-ref name="write" scoped="" ref="0x76079c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7607fc28" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7607fc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7607fe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7607ce50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7607ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7607a050"/>
        <function-ref name="write" scoped="" ref="0x7607a130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x760786a8" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x760786a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76078880"/>
        <function-ref name="write" scoped="" ref="0x76078960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x76074e38" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x76074e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76073050"/>
        <function-ref name="write" scoped="" ref="0x76073130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x76078ae0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x76078ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76078cb8"/>
        <function-ref name="write" scoped="" ref="0x76078d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7606d6e8" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7606d6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7606d8c0"/>
        <function-ref name="write" scoped="" ref="0x7606d9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7606e5c8" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7606e5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7606e7a0"/>
        <function-ref name="write" scoped="" ref="0x7606e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7607e6c0" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7607e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7607e898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x76072cb8" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x76072cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76072e90"/>
        <function-ref name="write" scoped="" ref="0x76071010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7606fcf8" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7606fcf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7606fed0"/>
        <function-ref name="write" scoped="" ref="0x7606e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7607a6e8" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7607a6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7607a8c0"/>
        <function-ref name="write" scoped="" ref="0x7607a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x76079010" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x76079010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760791e8"/>
        <function-ref name="write" scoped="" ref="0x760792c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x76074190" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x76074190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76074368"/>
        <function-ref name="write" scoped="" ref="0x76074448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x76075468" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x76075468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76075640"/>
        <function-ref name="write" scoped="" ref="0x76075720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x76078f18" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x76078f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76077108"/>
        <function-ref name="write" scoped="" ref="0x760771e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7607f060" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7607f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7607f238"/>
        <function-ref name="abortRelease" scoped="" ref="0x7607f318"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7607f3f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7607d4e8" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7607d4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7607d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7607d840" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7607d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7607da98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x760717c8" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x760717c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760719a0"/>
        <function-ref name="write" scoped="" ref="0x76071a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7607dc18" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7607dc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7607ddf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7606e190" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7606e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7606e368"/>
        <function-ref name="write" scoped="" ref="0x7606e448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7607ed70" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7607ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7607d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x76072880" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x76072880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76072a58"/>
        <function-ref name="write" scoped="" ref="0x76072b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7607ab20" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7607ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7607acf8"/>
        <function-ref name="write" scoped="" ref="0x7607add8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7607a2b0" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7607a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7607a488"/>
        <function-ref name="write" scoped="" ref="0x7607a568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7607f8d0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7607f8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7607faa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x76072010" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x76072010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760721e8"/>
        <function-ref name="write" scoped="" ref="0x760722c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x760732b0" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x760732b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76073488"/>
        <function-ref name="write" scoped="" ref="0x76073568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x76072448" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x76072448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76072620"/>
        <function-ref name="write" scoped="" ref="0x76072700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7606d2b0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7606d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7606d488"/>
        <function-ref name="write" scoped="" ref="0x7606d568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7606ea00" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7606ea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7606ebd8"/>
        <function-ref name="write" scoped="" ref="0x7606ecb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x760758a0" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x760758a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76075a78"/>
        <function-ref name="write" scoped="" ref="0x76075b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x760736e8" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x760736e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760738c0"/>
        <function-ref name="write" scoped="" ref="0x760739a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7606f8c0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7606f8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7606fa98"/>
        <function-ref name="write" scoped="" ref="0x7606fb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x760777a0" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x760777a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76077978"/>
        <function-ref name="write" scoped="" ref="0x76077a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7606db20" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7606db20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7606dcf8"/>
        <function-ref name="writeDone" scoped="" ref="0x7606ddd8"/>
        <function-ref name="write" scoped="" ref="0x7606deb8"/>
        <function-ref name="beginRead" scoped="" ref="0x7606c010"/>
        <function-ref name="readDone" scoped="" ref="0x7606c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7607f578" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7607f578"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7607f750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7607ca18" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7607ca18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7607cbf0"/>
        <function-ref name="write" scoped="" ref="0x7607ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x76079448" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x76079448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76079620"/>
        <function-ref name="write" scoped="" ref="0x76079700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x760745c8" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x760745c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760747a0"/>
        <function-ref name="write" scoped="" ref="0x76074880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x76077368" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x76077368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76077540"/>
        <function-ref name="write" scoped="" ref="0x76077620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x76074a00" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x76074a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76074bd8"/>
        <function-ref name="write" scoped="" ref="0x76074cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x76079db8" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x76079db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76078010"/>
        <function-ref name="write" scoped="" ref="0x760780f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7607e010" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7607e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7607e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x76078270" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x76078270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76078448"/>
        <function-ref name="write" scoped="" ref="0x76078528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x76080980" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x76080980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x76080b58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x76080c38"/>
        <function-ref name="request" scoped="" ref="0x76080d18"/>
        <function-ref name="granted" scoped="" ref="0x76080df8"/>
        <function-ref name="isOwner" scoped="" ref="0x76080ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7607c010" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7607c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7607c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7607c6c0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7607c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7607c898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7606f488" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7606f488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7606f660"/>
        <function-ref name="write" scoped="" ref="0x7606f740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7606f050" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7606f050"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7606f228"/>
        <function-ref name="write" scoped="" ref="0x7606f308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7607d190" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7607d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7607d368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x76071c00" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x76071c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76071dd8"/>
        <function-ref name="write" scoped="" ref="0x76071eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7606ee38" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7606ee38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7606d050"/>
        <function-ref name="write" scoped="" ref="0x7606d130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x76075cd8" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x76075cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76075eb0"/>
        <function-ref name="write" scoped="" ref="0x76074010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x76073b20" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x76073b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76073cf8"/>
        <function-ref name="write" scoped="" ref="0x76073dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7607e368" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7607e368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7607e540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7607ea18" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7607ea18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7607ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x76077bd8" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x76077bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76077db0"/>
        <function-ref name="write" scoped="" ref="0x76077e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7607c368" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7607c368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7607c540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x76075030" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x76075030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76075208"/>
        <function-ref name="write" scoped="" ref="0x760752e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x76071190" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x76071190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76071568"/>
        <function-ref name="write" scoped="" ref="0x76071648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7606c270" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7606c270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7606c448"/>
        <function-ref name="writeDone" scoped="" ref="0x7606c528"/>
        <function-ref name="write" scoped="" ref="0x7606c608"/>
        <function-ref name="beginRead" scoped="" ref="0x7606c6e8"/>
        <function-ref name="readDone" scoped="" ref="0x7606c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x76068720" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x76068720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x760688f8"/>
        <function-ref name="changed" scoped="" ref="0x760689d8"/>
        <function-ref name="amGroup" scoped="" ref="0x76068ab8"/>
        <function-ref name="setAddress" scoped="" ref="0x76068b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x76067ae0" loc="13:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x76067ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x76067cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x760561d8" loc="5:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x760561d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x760563b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x76056db8" loc="8:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x76056db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x76055010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7604fb08" loc="8:../../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7604fb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7604fce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x760450e0" loc="14:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x760450e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x760452b8"/>
        <function-ref name="write" scoped="" ref="0x76045398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x760455e0" loc="15:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x760455e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x760457b8"/>
        <function-ref name="stop" scoped="" ref="0x76045898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7604a888" loc="11:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7604a888"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7604aa60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7603d010" loc="8:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7603d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7603d1e8"/>
        <function-ref name="write" scoped="" ref="0x7603d2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7603d4e8" loc="11:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7603d4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7603d6c0"/>
        <function-ref name="isInput" scoped="" ref="0x7603d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7603d880"/>
        <function-ref name="isOutput" scoped="" ref="0x7603d960"/>
        <function-ref name="get" scoped="" ref="0x7603da40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7603db20"/>
        <function-ref name="set" scoped="" ref="0x7603dc00"/>
        <function-ref name="clr" scoped="" ref="0x7603dce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x76036588" loc="15:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x76036588"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b740"/>
            <typename><typedef-ref name="TMicro" ref="0x7688b920"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x76036cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7603c4e8" loc="11:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7603c4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7603c6c0"/>
        <function-ref name="write" scoped="" ref="0x7603c7a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7603c9c0" loc="14:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7603c9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7603cb98"/>
        <function-ref name="isInput" scoped="" ref="0x7603cc78"/>
        <function-ref name="toggle" scoped="" ref="0x7603cd58"/>
        <function-ref name="isOutput" scoped="" ref="0x7603ce38"/>
        <function-ref name="get" scoped="" ref="0x7603cf18"/>
        <function-ref name="makeOutput" scoped="" ref="0x76039010"/>
        <function-ref name="set" scoped="" ref="0x760390f0"/>
        <function-ref name="clr" scoped="" ref="0x760391d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x760243e8" loc="41:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x760243e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b740"/>
            <typename><typedef-ref name="TMicro" ref="0x7688b920"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x76024b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x76019d60" loc="54:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x76019d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b740"/>
            <typename><typedef-ref name="TMicro" ref="0x7688b920"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x760224e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x76022860" loc="55:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x76022860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b740"/>
            <typename><typedef-ref name="TMicro" ref="0x7688b920"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x76021010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76021500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76021288"/>
        <function-ref name="overflow" scoped="" ref="0x76021778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x76015610" loc="46:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x76015610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b740"/>
            <typename><typedef-ref name="TMicro" ref="0x7688b920"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x76015d60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76014288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76014010"/>
        <function-ref name="overflow" scoped="" ref="0x76014500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x760124b8" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x760124b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76012690"/>
        <function-ref name="setClockSource" scoped="" ref="0x76012770"/>
        <function-ref name="enableEvents" scoped="" ref="0x76012850"/>
        <function-ref name="get" scoped="" ref="0x76012930"/>
        <function-ref name="disableEvents" scoped="" ref="0x76012a10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76012af0"/>
        <function-ref name="getMode" scoped="" ref="0x76012bd0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76012cb0"/>
        <function-ref name="overflow" scoped="" ref="0x76012d90"/>
        <function-ref name="setMode" scoped="" ref="0x76012e70"/>
        <function-ref name="setInputDivider" scoped="" ref="0x76011010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x76013388" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x76013388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b740"/>
            <typename><typedef-ref name="TMicro" ref="0x7688b920"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x76013ad8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76012010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76013d50"/>
        <function-ref name="overflow" scoped="" ref="0x76012288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7604cbe8" loc="3:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7604cbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7604cdc0"/>
        <function-ref name="isInput" scoped="" ref="0x7604cea0"/>
        <function-ref name="toggle" scoped="" ref="0x76010010"/>
        <function-ref name="isOutput" scoped="" ref="0x760100f0"/>
        <function-ref name="get" scoped="" ref="0x760101d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x760102b0"/>
        <function-ref name="set" scoped="" ref="0x76010390"/>
        <function-ref name="clr" scoped="" ref="0x76010470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7600f988" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7600f988"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7600fb60"/>
        <function-ref name="isInput" scoped="" ref="0x7600fc40"/>
        <function-ref name="setResistor" scoped="" ref="0x7600fd20"/>
        <function-ref name="toggle" scoped="" ref="0x7600fe00"/>
        <function-ref name="isOutput" scoped="" ref="0x7600fee0"/>
        <function-ref name="getResistor" scoped="" ref="0x7600e010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7600e0f0"/>
        <function-ref name="get" scoped="" ref="0x7600e1d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7600e2b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7600e390"/>
        <function-ref name="set" scoped="" ref="0x7600e470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7600e550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7600e630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7600e790"/>
        <function-ref name="clr" scoped="" ref="0x7600e870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7600f010" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7600f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7600f1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7600f2c8"/>
        <function-ref name="toggle" scoped="" ref="0x7600f3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7600f488"/>
        <function-ref name="get" scoped="" ref="0x7600f568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7600f648"/>
        <function-ref name="set" scoped="" ref="0x7600f728"/>
        <function-ref name="clr" scoped="" ref="0x7600f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7603abc8" loc="14:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7603abc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7603ada0"/>
        <function-ref name="stop" scoped="" ref="0x7603ae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x76006808" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x76006808"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x760069e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x76006ac0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x76006ba0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x76006c80"/>
        <function-ref name="setCca" scoped="" ref="0x76006d60"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x76006e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x760058d8" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x760058d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x76005ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x760060f0" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x760060f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x760062c8"/>
        <function-ref name="cancel" scoped="" ref="0x760063a8"/>
        <function-ref name="modify" scoped="" ref="0x76006488"/>
        <function-ref name="sendDone" scoped="" ref="0x76006568"/>
        <function-ref name="resend" scoped="" ref="0x76006648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x76009c00" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x76009c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x76009dd8"/>
        <function-ref name="stop" scoped="" ref="0x76009eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x76005d40" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x76005d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x76005f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x75ffc2d0" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x75ffc2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x75ffc4a8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x75ffc588"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x75ffc668"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x75ffc748"/>
        <function-ref name="setCca" scoped="" ref="0x75ffc828"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x75ffc908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x75ff8088" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x75ff8088"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x75ff8b90"/>
        <function-ref name="clear" scoped="" ref="0x75ff6010"/>
        <function-ref name="isValid" scoped="" ref="0x75ff87d8"/>
        <function-ref name="set" scoped="" ref="0x75ff63c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x75feccd0" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x75feccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75fecea8"/>
        <function-ref name="write" scoped="" ref="0x75fea010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x75fea220" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x75fea220"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75fea3f8"/>
        <function-ref name="write" scoped="" ref="0x75fea4d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x75ffcbc8" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x75ffcbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x75ffcda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x75fed4c8" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x75fed4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75fed6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x75ff5710" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x75ff5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x75ff58e8"/>
        <function-ref name="disable" scoped="" ref="0x75ff59c8"/>
        <function-ref name="captured" scoped="" ref="0x75ff5aa8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x75ff5b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x75ffb680" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x75ffb680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75ffab30"/>
        <function-ref name="fired" scoped="" ref="0x75ffa300"/>
        <function-ref name="startAt" scoped="" ref="0x75ffa7f0"/>
        <function-ref name="isRunning" scoped="" ref="0x75ffa578"/>
        <function-ref name="getAlarm" scoped="" ref="0x75ffada8"/>
        <function-ref name="start" scoped="" ref="0x75ffbdd0"/>
        <function-ref name="stop" scoped="" ref="0x75ffa088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x75ff90e0" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x75ff90e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x75ff92b8"/>
        <function-ref name="setNetwork" scoped="" ref="0x75ff9398"/>
        <function-ref name="getRssi" scoped="" ref="0x75ff9478"/>
        <function-ref name="getNetwork" scoped="" ref="0x75ff9558"/>
        <function-ref name="getPower" scoped="" ref="0x75ff9638"/>
        <function-ref name="getLqi" scoped="" ref="0x75ff9718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x75fee258" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x75fee258"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75fee430"/>
        <function-ref name="write" scoped="" ref="0x75fee510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x75fee760" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x75fee760"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75fee938"/>
        <function-ref name="write" scoped="" ref="0x75feea18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x75fe6978" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x75fe6978"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75fe6b50"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x75fe6c30"/>
        <function-ref name="sfd" scoped="" ref="0x75fe6d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x75ffeb28" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x75ffeb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75ffed00"/>
        <function-ref name="cancel" scoped="" ref="0x75ffede0"/>
        <function-ref name="modify" scoped="" ref="0x75ffeec0"/>
        <function-ref name="sendDone" scoped="" ref="0x75ffc010"/>
        <function-ref name="resend" scoped="" ref="0x75ffc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x75fef4a8" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x75fef4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x75fef680"/>
        <function-ref name="abortRelease" scoped="" ref="0x75fef760"/>
        <function-ref name="attemptRelease" scoped="" ref="0x75fef840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x75fed8f8" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x75fed8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75fedad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x75ff4830" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x75ff4830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x75ff4a08"/>
        <function-ref name="isInput" scoped="" ref="0x75ff4ae8"/>
        <function-ref name="toggle" scoped="" ref="0x75ff4bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x75ff4ca8"/>
        <function-ref name="get" scoped="" ref="0x75ff4d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x75ff4e68"/>
        <function-ref name="set" scoped="" ref="0x75ff0010"/>
        <function-ref name="clr" scoped="" ref="0x75ff00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75ffe290" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75ffe290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75ffe468"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x75ff9920" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x75ff9920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x75ff9af8"/>
        <function-ref name="getHeader" scoped="" ref="0x75ff9bd8"/>
        <function-ref name="getMetadata" scoped="" ref="0x75ff9cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x75ff5040" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x75ff5040"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75ff5218"/>
        <function-ref name="isSet" scoped="" ref="0x75ff52f8"/>
        <function-ref name="cancel" scoped="" ref="0x75ff53d8"/>
        <function-ref name="set" scoped="" ref="0x75ff54b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x75fedd38" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x75fedd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75fec050"/>
        <function-ref name="write" scoped="" ref="0x75fec130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x75ff0d30" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x75ff0d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x75ff0f08"/>
        <function-ref name="immediateRequest" scoped="" ref="0x75fef010"/>
        <function-ref name="request" scoped="" ref="0x75fef0f0"/>
        <function-ref name="granted" scoped="" ref="0x75fef1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x75fef2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x75ff5d88" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x75ff5d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x75ff4010"/>
        <function-ref name="isInput" scoped="" ref="0x75ff40f0"/>
        <function-ref name="toggle" scoped="" ref="0x75ff41d0"/>
        <function-ref name="isOutput" scoped="" ref="0x75ff42b0"/>
        <function-ref name="get" scoped="" ref="0x75ff4390"/>
        <function-ref name="makeOutput" scoped="" ref="0x75ff4470"/>
        <function-ref name="set" scoped="" ref="0x75ff4550"/>
        <function-ref name="clr" scoped="" ref="0x75ff4630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x75fea6e8" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x75fea6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75fea8c0"/>
        <function-ref name="write" scoped="" ref="0x75fea9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x75feabc8" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x75feabc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75feada0"/>
        <function-ref name="write" scoped="" ref="0x75feae80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x75feec48" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x75feec48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75feee20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x75ff02f0" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x75ff02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x75ff04c8"/>
        <function-ref name="isInput" scoped="" ref="0x75ff05a8"/>
        <function-ref name="toggle" scoped="" ref="0x75ff0688"/>
        <function-ref name="isOutput" scoped="" ref="0x75ff0768"/>
        <function-ref name="get" scoped="" ref="0x75ff0848"/>
        <function-ref name="makeOutput" scoped="" ref="0x75ff0928"/>
        <function-ref name="set" scoped="" ref="0x75ff0a08"/>
        <function-ref name="clr" scoped="" ref="0x75ff0ae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x75fe6ea0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x75fe6ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x75fe80c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x75fe81a0"/>
        <function-ref name="led1On" scoped="" ref="0x75fe8280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x75fe8360"/>
        <function-ref name="led2Toggle" scoped="" ref="0x75fe8440"/>
        <function-ref name="get" scoped="" ref="0x75fe8520"/>
        <function-ref name="led1Off" scoped="" ref="0x75fe8600"/>
        <function-ref name="led2Off" scoped="" ref="0x75fe8980"/>
        <function-ref name="set" scoped="" ref="0x75fe86e0"/>
        <function-ref name="led0On" scoped="" ref="0x75fe87c0"/>
        <function-ref name="led2On" scoped="" ref="0x75fe88a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x75fec7b0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x75fec7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75fec988"/>
        <function-ref name="write" scoped="" ref="0x75feca68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x75ffe630" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x75ffe630"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x75ffe808"/>
        <function-ref name="stop" scoped="" ref="0x75ffe8e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x75fefa68" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x75fefa68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x75fefc40"/>
        <function-ref name="writeDone" scoped="" ref="0x75fefd20"/>
        <function-ref name="write" scoped="" ref="0x75fefe00"/>
        <function-ref name="beginRead" scoped="" ref="0x75fefee0"/>
        <function-ref name="readDone" scoped="" ref="0x75fee010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x75fed098" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x75fed098"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75fed270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x75fec370" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x75fec370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75fec548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x75ffb0b8" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x75ffb0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x75ffb290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x75f8ebd8" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x75f8ebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f8eeb0"/>
        <function-ref name="write" scoped="" ref="0x75f8c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x75f93190" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x75f93190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75f93368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x75f8f270" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x75f8f270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f8f448"/>
        <function-ref name="write" scoped="" ref="0x75f8f528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x75f8ca00" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x75f8ca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f8cbd8"/>
        <function-ref name="write" scoped="" ref="0x75f8ccb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x75f882b0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x75f882b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f88488"/>
        <function-ref name="write" scoped="" ref="0x75f88568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x75f8ce38" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x75f8ce38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f8b050"/>
        <function-ref name="write" scoped="" ref="0x75f8b130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x75f82b20" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x75f82b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f82cf8"/>
        <function-ref name="write" scoped="" ref="0x75f82dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x75f83a00" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x75f83a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f83bd8"/>
        <function-ref name="write" scoped="" ref="0x75f83cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x75f93b98" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x75f93b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75f93d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x75f85190" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x75f85190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f85368"/>
        <function-ref name="write" scoped="" ref="0x75f85448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x75f83190" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x75f83190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f83368"/>
        <function-ref name="write" scoped="" ref="0x75f83448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x75f8fae0" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x75f8fae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f8fcb8"/>
        <function-ref name="write" scoped="" ref="0x75f8fd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x75f8e368" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x75f8e368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f8e540"/>
        <function-ref name="write" scoped="" ref="0x75f8e620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x75f895c8" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x75f895c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f897a0"/>
        <function-ref name="write" scoped="" ref="0x75f89880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x75f8a880" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x75f8a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f8aa58"/>
        <function-ref name="write" scoped="" ref="0x75f8ab38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x75f8b2b0" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x75f8b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f8b488"/>
        <function-ref name="write" scoped="" ref="0x75f8b568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x75f944f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x75f944f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x75f946c8"/>
        <function-ref name="abortRelease" scoped="" ref="0x75f947a8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x75f94888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x75f91910" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x75f91910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75f91ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x75f91c68" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x75f91c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75f91ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x75f85c00" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x75f85c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f85dd8"/>
        <function-ref name="write" scoped="" ref="0x75f85eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x75f90080" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x75f90080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75f90258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x75f835c8" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x75f835c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f837a0"/>
        <function-ref name="write" scoped="" ref="0x75f83880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x75f91260" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x75f91260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75f91438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x75f86cb8" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x75f86cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f86e90"/>
        <function-ref name="write" scoped="" ref="0x75f85010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x75f8ff18" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x75f8ff18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f8e108"/>
        <function-ref name="write" scoped="" ref="0x75f8e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x75f8f6a8" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x75f8f6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f8f880"/>
        <function-ref name="write" scoped="" ref="0x75f8f960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x75f94d60" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x75f94d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75f93010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x75f86448" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x75f86448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f86620"/>
        <function-ref name="write" scoped="" ref="0x75f86700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x75f886e8" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x75f886e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f888c0"/>
        <function-ref name="write" scoped="" ref="0x75f889a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x75f86880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x75f86880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f86a58"/>
        <function-ref name="write" scoped="" ref="0x75f86b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x75f826e8" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x75f826e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f828c0"/>
        <function-ref name="write" scoped="" ref="0x75f829a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x75f83e38" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x75f83e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f82050"/>
        <function-ref name="write" scoped="" ref="0x75f82130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x75f8acb8" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x75f8acb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f8ae90"/>
        <function-ref name="write" scoped="" ref="0x75f89010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x75f88b20" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x75f88b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f88cf8"/>
        <function-ref name="write" scoped="" ref="0x75f88dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x75f84cf8" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x75f84cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f84ed0"/>
        <function-ref name="write" scoped="" ref="0x75f83010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x75f8bb20" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x75f8bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f8bcf8"/>
        <function-ref name="write" scoped="" ref="0x75f8bdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x75f80010" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x75f80010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x75f801e8"/>
        <function-ref name="writeDone" scoped="" ref="0x75f802c8"/>
        <function-ref name="write" scoped="" ref="0x75f803a8"/>
        <function-ref name="beginRead" scoped="" ref="0x75f80488"/>
        <function-ref name="readDone" scoped="" ref="0x75f80568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x75f94a08" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x75f94a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75f94be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x75f90de0" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x75f90de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f8f010"/>
        <function-ref name="write" scoped="" ref="0x75f8f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x75f8e7a0" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x75f8e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f8e978"/>
        <function-ref name="write" scoped="" ref="0x75f8ea58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x75f89a00" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x75f89a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f89bd8"/>
        <function-ref name="write" scoped="" ref="0x75f89cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x75f8b6e8" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x75f8b6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f8b8c0"/>
        <function-ref name="write" scoped="" ref="0x75f8b9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x75f89e38" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x75f89e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f88050"/>
        <function-ref name="write" scoped="" ref="0x75f88130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x75f8c190" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x75f8c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f8c368"/>
        <function-ref name="write" scoped="" ref="0x75f8c448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x75f934e8" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x75f934e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75f936c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x75f8c5c8" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x75f8c5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f8c7a0"/>
        <function-ref name="write" scoped="" ref="0x75f8c880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x75f95d88" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x75f95d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x75f94010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x75f940f0"/>
        <function-ref name="request" scoped="" ref="0x75f941d0"/>
        <function-ref name="granted" scoped="" ref="0x75f942b0"/>
        <function-ref name="isOwner" scoped="" ref="0x75f94390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x75f903d8" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x75f903d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75f905b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x75f90a88" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x75f90a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75f90c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x75f848c0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x75f848c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f84a98"/>
        <function-ref name="write" scoped="" ref="0x75f84b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x75f84488" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x75f84488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f84660"/>
        <function-ref name="write" scoped="" ref="0x75f84740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x75f915b8" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x75f915b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75f91790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x75f84050" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x75f84050"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f84228"/>
        <function-ref name="write" scoped="" ref="0x75f84308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x75f822b0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x75f822b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f82488"/>
        <function-ref name="write" scoped="" ref="0x75f82568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x75f89190" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x75f89190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f89368"/>
        <function-ref name="write" scoped="" ref="0x75f89448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x75f86010" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x75f86010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f861e8"/>
        <function-ref name="write" scoped="" ref="0x75f862c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x75f93840" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x75f93840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75f93a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x75f93ef0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x75f93ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75f910e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x75f8a010" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x75f8a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f8a1e8"/>
        <function-ref name="write" scoped="" ref="0x75f8a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x75f90730" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x75f90730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75f90908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x75f8a448" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x75f8a448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f8a620"/>
        <function-ref name="write" scoped="" ref="0x75f8a700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x75f855c8" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x75f855c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f859a0"/>
        <function-ref name="write" scoped="" ref="0x75f85a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x75f806e8" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x75f806e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x75f808c0"/>
        <function-ref name="writeDone" scoped="" ref="0x75f809a0"/>
        <function-ref name="write" scoped="" ref="0x75f80a80"/>
        <function-ref name="beginRead" scoped="" ref="0x75f80b60"/>
        <function-ref name="readDone" scoped="" ref="0x75f80c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x75f77620" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x75f77620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75f777f8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x75f778d8"/>
        <function-ref name="sfd" scoped="" ref="0x75f779b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x75f77b60" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x75f77b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75f77d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x75f76010" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x75f76010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x75f761e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x75f77180" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x75f77180"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x75f77358"/>
        <function-ref name="stop" scoped="" ref="0x75f77438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x75f72cc8" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x75f72cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x75f72ea0"/>
        <function-ref name="isInput" scoped="" ref="0x75f71010"/>
        <function-ref name="toggle" scoped="" ref="0x75f710f0"/>
        <function-ref name="isOutput" scoped="" ref="0x75f711d0"/>
        <function-ref name="get" scoped="" ref="0x75f712b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x75f71390"/>
        <function-ref name="set" scoped="" ref="0x75f71470"/>
        <function-ref name="clr" scoped="" ref="0x75f71550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x75f6d010" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x75f6d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x75f6d1e8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x75f6d2c8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x75f6d3a8"/>
        <function-ref name="syncDone" scoped="" ref="0x75f6d488"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x75f6d568"/>
        <function-ref name="setShortAddr" scoped="" ref="0x75f6d648"/>
        <function-ref name="setChannel" scoped="" ref="0x75f6d728"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x75f6d808"/>
        <function-ref name="setPanAddr" scoped="" ref="0x75f6d8e8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x75f6d9c8"/>
        <function-ref name="getExtAddr" scoped="" ref="0x75f6daa8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x75f6db88"/>
        <function-ref name="sync" scoped="" ref="0x75f6dc68"/>
        <function-ref name="getChannel" scoped="" ref="0x75f6ddc8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x75f6dea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x75f60378" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x75f60378"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75f60550"/>
        <function-ref name="runTask" scoped="" ref="0x75f60630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x75f6c2b0" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x75f6c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x75f6cdb8"/>
        <function-ref name="clear" scoped="" ref="0x75f6a1a0"/>
        <function-ref name="isValid" scoped="" ref="0x75f6ca00"/>
        <function-ref name="set" scoped="" ref="0x75f6a558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x75f71768" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x75f71768"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x75f71940"/>
        <function-ref name="isInput" scoped="" ref="0x75f71a20"/>
        <function-ref name="toggle" scoped="" ref="0x75f71b00"/>
        <function-ref name="isOutput" scoped="" ref="0x75f71be0"/>
        <function-ref name="get" scoped="" ref="0x75f71cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x75f71da0"/>
        <function-ref name="set" scoped="" ref="0x75f71e80"/>
        <function-ref name="clr" scoped="" ref="0x75f70010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x75f69408" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x75f69408"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f695e0"/>
        <function-ref name="write" scoped="" ref="0x75f696c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x75f698d0" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x75f698d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f69aa8"/>
        <function-ref name="write" scoped="" ref="0x75f69b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x75f68318" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x75f68318"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f684f0"/>
        <function-ref name="write" scoped="" ref="0x75f685d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x75f6e1f0" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x75f6e1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x75f6e3c8"/>
        <function-ref name="setNetwork" scoped="" ref="0x75f6e4a8"/>
        <function-ref name="getRssi" scoped="" ref="0x75f6e588"/>
        <function-ref name="getNetwork" scoped="" ref="0x75f6e668"/>
        <function-ref name="getPower" scoped="" ref="0x75f6e748"/>
        <function-ref name="getLqi" scoped="" ref="0x75f6e828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x75f73500" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x75f73500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75f736d8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x75f737b8"/>
        <function-ref name="sfd" scoped="" ref="0x75f73898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x75f6f8b0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x75f6f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75f6fa88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x75f722c0" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x75f722c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x75f72498"/>
        <function-ref name="isInput" scoped="" ref="0x75f72578"/>
        <function-ref name="toggle" scoped="" ref="0x75f72658"/>
        <function-ref name="isOutput" scoped="" ref="0x75f72738"/>
        <function-ref name="get" scoped="" ref="0x75f72818"/>
        <function-ref name="makeOutput" scoped="" ref="0x75f728f8"/>
        <function-ref name="set" scoped="" ref="0x75f729d8"/>
        <function-ref name="clr" scoped="" ref="0x75f72ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x75f68818" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x75f68818"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f689f0"/>
        <function-ref name="write" scoped="" ref="0x75f68ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75f76c98" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75f76c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75f76e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x75f6ea30" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x75f6ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x75f6ec08"/>
        <function-ref name="getHeader" scoped="" ref="0x75f6ece8"/>
        <function-ref name="getMetadata" scoped="" ref="0x75f6edc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x75f73a40" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x75f73a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75f73c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x75f70968" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x75f70968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x75f70b40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x75f70c20"/>
        <function-ref name="request" scoped="" ref="0x75f70d00"/>
        <function-ref name="granted" scoped="" ref="0x75f70de0"/>
        <function-ref name="isOwner" scoped="" ref="0x75f70ec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x75f69d98" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x75f69d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f68010"/>
        <function-ref name="write" scoped="" ref="0x75f680f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x75f6f128" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x75f6f128"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x75f6f300"/>
        <function-ref name="writeDone" scoped="" ref="0x75f6f3e0"/>
        <function-ref name="write" scoped="" ref="0x75f6f4c0"/>
        <function-ref name="beginRead" scoped="" ref="0x75f6f5a0"/>
        <function-ref name="readDone" scoped="" ref="0x75f6f680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x75f68d00" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x75f68d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75f67010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x75f73ed8" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x75f73ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x75f720c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x75f671a0" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x75f671a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x75f67378"/>
        <function-ref name="led0Toggle" scoped="" ref="0x75f67458"/>
        <function-ref name="led1On" scoped="" ref="0x75f67538"/>
        <function-ref name="led1Toggle" scoped="" ref="0x75f67618"/>
        <function-ref name="led2Toggle" scoped="" ref="0x75f676f8"/>
        <function-ref name="get" scoped="" ref="0x75f677d8"/>
        <function-ref name="led1Off" scoped="" ref="0x75f678b8"/>
        <function-ref name="led2Off" scoped="" ref="0x75f67c38"/>
        <function-ref name="set" scoped="" ref="0x75f67998"/>
        <function-ref name="led0On" scoped="" ref="0x75f67a78"/>
        <function-ref name="led2On" scoped="" ref="0x75f67b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x75f6ae98" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x75f6ae98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75f690c0"/>
        <function-ref name="write" scoped="" ref="0x75f691a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x75f6aa58" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x75f6aa58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75f6ac30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x75f702a8" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x75f702a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x75f70480"/>
        <function-ref name="disable" scoped="" ref="0x75f70560"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x75f70640"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x75f70720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x75f6fce0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x75f6fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75f6e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x75f73060" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x75f73060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x75f73238"/>
        <function-ref name="stop" scoped="" ref="0x75f73318"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x75f27208" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x75f27208"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x75f273e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x75f2bdc8" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x75f2bdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x75f28010"/>
        <function-ref name="setNetwork" scoped="" ref="0x75f280f0"/>
        <function-ref name="getRssi" scoped="" ref="0x75f281d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x75f282b0"/>
        <function-ref name="getPower" scoped="" ref="0x75f28390"/>
        <function-ref name="getLqi" scoped="" ref="0x75f28470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x75f27860" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x75f27860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x75f263c8"/>
        <function-ref name="clear" scoped="" ref="0x75f26780"/>
        <function-ref name="isValid" scoped="" ref="0x75f26010"/>
        <function-ref name="set" scoped="" ref="0x75f26b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x75f28c60" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x75f28c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x75f28e38"/>
        <function-ref name="getHeader" scoped="" ref="0x75f28f18"/>
        <function-ref name="getMetadata" scoped="" ref="0x75f27010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x75f23a00" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x75f23a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75f23bd8"/>
        <function-ref name="isSet" scoped="" ref="0x75f23cb8"/>
        <function-ref name="cancel" scoped="" ref="0x75f23d98"/>
        <function-ref name="set" scoped="" ref="0x75f23e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x75f24288" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x75f24288"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x75f24d90"/>
        <function-ref name="clear" scoped="" ref="0x75f23178"/>
        <function-ref name="isValid" scoped="" ref="0x75f249d8"/>
        <function-ref name="set" scoped="" ref="0x75f23530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x75f286e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x75f286e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x75f288b8"/>
        <function-ref name="noAck" scoped="" ref="0x75f28998"/>
        <function-ref name="wasAcked" scoped="" ref="0x75f28a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x75f1ebc0" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x75f1ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x75f1ed98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x75f217e0" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x75f217e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x75f219b8"/>
        <function-ref name="setNetwork" scoped="" ref="0x75f21a98"/>
        <function-ref name="getRssi" scoped="" ref="0x75f21b78"/>
        <function-ref name="getNetwork" scoped="" ref="0x75f21c58"/>
        <function-ref name="getPower" scoped="" ref="0x75f21d38"/>
        <function-ref name="getLqi" scoped="" ref="0x75f21e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x75f19a28" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x75f19a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75f19c00"/>
        <function-ref name="payloadLength" scoped="" ref="0x75f19ce0"/>
        <function-ref name="getPayload" scoped="" ref="0x75f19dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75f19ea0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75f18010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x75f1d260" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x75f1d260"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x75f1dd68"/>
        <function-ref name="clear" scoped="" ref="0x75f1c158"/>
        <function-ref name="isValid" scoped="" ref="0x75f1d9b0"/>
        <function-ref name="set" scoped="" ref="0x75f1c510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x75f1e630" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x75f1e630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x75f1e808"/>
        <function-ref name="getHeader" scoped="" ref="0x75f1e8e8"/>
        <function-ref name="getMetadata" scoped="" ref="0x75f1e9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x75f19400" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x75f19400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75f195d8"/>
        <function-ref name="isSet" scoped="" ref="0x75f196b8"/>
        <function-ref name="cancel" scoped="" ref="0x75f19798"/>
        <function-ref name="set" scoped="" ref="0x75f19878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x75f17010" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x75f17010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75f17658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x75f17a68" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x75f17a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75f160d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x75f1cc50" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x75f1cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x75f1b7a8"/>
        <function-ref name="clear" scoped="" ref="0x75f1bb60"/>
        <function-ref name="isValid" scoped="" ref="0x75f1b3f0"/>
        <function-ref name="set" scoped="" ref="0x75f1bf18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x75f1e0b0" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x75f1e0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x75f1e288"/>
        <function-ref name="noAck" scoped="" ref="0x75f1e368"/>
        <function-ref name="wasAcked" scoped="" ref="0x75f1e448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x75ee76b8" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x75ee76b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75ee7d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x75ee60a0" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x75ee60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75ee67f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x75ee6ce0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x75ee6a68"/>
        <function-ref name="overflow" scoped="" ref="0x75edf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x75edc9a0" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x75edc9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75eda4c8"/>
        <function-ref name="fired" scoped="" ref="0x75edb768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75edbe70"/>
        <function-ref name="isOneShot" scoped="" ref="0x75edbc18"/>
        <function-ref name="getdt" scoped="" ref="0x75eda978"/>
        <function-ref name="gett0" scoped="" ref="0x75eda720"/>
        <function-ref name="isRunning" scoped="" ref="0x75edb9c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75edb010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75eda1a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x75edb290"/>
        <function-ref name="stop" scoped="" ref="0x75edb510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x75edacd8" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x75edacd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75ed8370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75edc1f0" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75edc1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75edc3c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x75ed7bb0" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x75ed7bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75ebd088"/>
        <function-ref name="fired" scoped="" ref="0x75ed6830"/>
        <function-ref name="startAt" scoped="" ref="0x75ed6d20"/>
        <function-ref name="isRunning" scoped="" ref="0x75ed6aa8"/>
        <function-ref name="getAlarm" scoped="" ref="0x75ebd300"/>
        <function-ref name="start" scoped="" ref="0x75ed6318"/>
        <function-ref name="stop" scoped="" ref="0x75ed65b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75ed7758" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75ed7758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75ed7930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x74fb7c30" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x74fb7c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x74fb40f8"/>
        <function-ref name="fired" scoped="" ref="0x74fb58b8"/>
        <function-ref name="startAt" scoped="" ref="0x74fb5da8"/>
        <function-ref name="isRunning" scoped="" ref="0x74fb5b30"/>
        <function-ref name="getAlarm" scoped="" ref="0x74fb4370"/>
        <function-ref name="start" scoped="" ref="0x74fb53a0"/>
        <function-ref name="stop" scoped="" ref="0x74fb5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x74fb77d8" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x74fb77d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x74fb79b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x74fa9ac8" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x74fa9ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x74fa9ca0"/>
        <function-ref name="setEvent" scoped="" ref="0x74fa9d80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x74fa9e60"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x74fa8010"/>
        <function-ref name="fired" scoped="" ref="0x74fa80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x74faa480" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x74faa480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x74faa658"/>
        <function-ref name="setClockSource" scoped="" ref="0x74faa738"/>
        <function-ref name="enableEvents" scoped="" ref="0x74faa818"/>
        <function-ref name="get" scoped="" ref="0x74faa8f8"/>
        <function-ref name="disableEvents" scoped="" ref="0x74faa9d8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x74faaab8"/>
        <function-ref name="getMode" scoped="" ref="0x74faab98"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x74faac78"/>
        <function-ref name="overflow" scoped="" ref="0x74faad58"/>
        <function-ref name="setMode" scoped="" ref="0x74faae38"/>
        <function-ref name="setInputDivider" scoped="" ref="0x74faaf18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x74fa9090" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x74fa9090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x74fa9268"/>
        <function-ref name="getControl" scoped="" ref="0x74fa9348"/>
        <function-ref name="enableEvents" scoped="" ref="0x74fa9428"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x74fa9508"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x74fa95e8"/>
        <function-ref name="disableEvents" scoped="" ref="0x74fa96c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x74fa97a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x74fa9888"/>
        <function-ref name="setControl" scoped="" ref="0x74fa9968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x74f934f0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x74f934f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x74f936c8"/>
        <function-ref name="setEvent" scoped="" ref="0x74f937a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x74f93888"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x74f93968"/>
        <function-ref name="fired" scoped="" ref="0x74f93a48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x74fa6e48" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x74fa6e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x74fa5050"/>
        <function-ref name="setClockSource" scoped="" ref="0x74fa5130"/>
        <function-ref name="enableEvents" scoped="" ref="0x74fa5210"/>
        <function-ref name="get" scoped="" ref="0x74fa52f0"/>
        <function-ref name="disableEvents" scoped="" ref="0x74fa53d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x74fa54b0"/>
        <function-ref name="getMode" scoped="" ref="0x74fa5590"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x74fa5670"/>
        <function-ref name="overflow" scoped="" ref="0x74fa5750"/>
        <function-ref name="setMode" scoped="" ref="0x74fa5830"/>
        <function-ref name="setInputDivider" scoped="" ref="0x74fa5910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x74fa74d8" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x74fa74d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x74fa69a0"/>
        <function-ref name="fired" scoped="" ref="0x74fa6170"/>
        <function-ref name="startAt" scoped="" ref="0x74fa6660"/>
        <function-ref name="isRunning" scoped="" ref="0x74fa63e8"/>
        <function-ref name="getAlarm" scoped="" ref="0x74fa6c18"/>
        <function-ref name="start" scoped="" ref="0x74fa7c28"/>
        <function-ref name="stop" scoped="" ref="0x74fa7ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x74fa7060" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x74fa7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x74fa7238"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x74fa5a70" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x74fa5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x74fa5c48"/>
        <function-ref name="getControl" scoped="" ref="0x74fa5d28"/>
        <function-ref name="enableEvents" scoped="" ref="0x74fa5e08"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x74fa5ee8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x74f93010"/>
        <function-ref name="disableEvents" scoped="" ref="0x74f930f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x74f931d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x74f932b0"/>
        <function-ref name="setControl" scoped="" ref="0x74f93390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x75ed0cc8" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x75ed0cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75ecd438"/>
        <function-ref name="clearOverflow" scoped="" ref="0x75ecd928"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x75ecd6b0"/>
        <function-ref name="overflow" scoped="" ref="0x75ecdba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x75ec9870" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x75ec9870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75ec7010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x75ec7500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x75ec7288"/>
        <function-ref name="overflow" scoped="" ref="0x75ec7778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x75eca5c0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x75eca5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75ecad10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x75ec9288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x75ec9010"/>
        <function-ref name="overflow" scoped="" ref="0x75ec9500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x74fb36b8" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x74fb36b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x74fb2b80"/>
        <function-ref name="fired" scoped="" ref="0x74fb2350"/>
        <function-ref name="startAt" scoped="" ref="0x74fb2840"/>
        <function-ref name="isRunning" scoped="" ref="0x74fb25c8"/>
        <function-ref name="getAlarm" scoped="" ref="0x74fb2df8"/>
        <function-ref name="start" scoped="" ref="0x74fb3e08"/>
        <function-ref name="stop" scoped="" ref="0x74fb20d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x74faf3b8" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x74faf3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x74fae878"/>
        <function-ref name="fired" scoped="" ref="0x74fae048"/>
        <function-ref name="startAt" scoped="" ref="0x74fae538"/>
        <function-ref name="isRunning" scoped="" ref="0x74fae2c0"/>
        <function-ref name="getAlarm" scoped="" ref="0x74faeaf0"/>
        <function-ref name="start" scoped="" ref="0x74fafb08"/>
        <function-ref name="stop" scoped="" ref="0x74fafda8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x74fb0180" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x74fb0180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x74fb08d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x74fb0dc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x74fb0b48"/>
        <function-ref name="overflow" scoped="" ref="0x74faf048"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x75ea24d8" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x75ea24d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75ea26b0"/>
        <function-ref name="runTask" scoped="" ref="0x75ea2790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x75ea4a48" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x75ea4a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75ea2010"/>
        <function-ref name="fired" scoped="" ref="0x75ea3718"/>
        <function-ref name="startAt" scoped="" ref="0x75ea3c08"/>
        <function-ref name="isRunning" scoped="" ref="0x75ea3990"/>
        <function-ref name="getAlarm" scoped="" ref="0x75ea2288"/>
        <function-ref name="start" scoped="" ref="0x75ea3200"/>
        <function-ref name="stop" scoped="" ref="0x75ea34a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x75ebb758" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x75ebb758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75ea4248"/>
        <function-ref name="fired" scoped="" ref="0x75ea64e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75ea6bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x75ea6998"/>
        <function-ref name="getdt" scoped="" ref="0x75ea46f8"/>
        <function-ref name="gett0" scoped="" ref="0x75ea44a0"/>
        <function-ref name="isRunning" scoped="" ref="0x75ea6740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75ebbd80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75ea6f10"/>
        <function-ref name="startOneShot" scoped="" ref="0x75ea6010"/>
        <function-ref name="stop" scoped="" ref="0x75ea6290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x75e73260" loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x75e73260"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75e73438"/>
        <function-ref name="runTask" scoped="" ref="0x75e73518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x75e76010" loc="49:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x75e76010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75e75b00"/>
        <function-ref name="fired" scoped="" ref="0x75e76d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75e754c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x75e75268"/>
        <function-ref name="getdt" scoped="" ref="0x75e73010"/>
        <function-ref name="gett0" scoped="" ref="0x75e75d58"/>
        <function-ref name="isRunning" scoped="" ref="0x75e75010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75e76638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75e757e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x75e768b8"/>
        <function-ref name="stop" scoped="" ref="0x75e76b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x75e9fbd0" loc="48:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x75e9fbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75e78790"/>
        <function-ref name="fired" scoped="" ref="0x75e9e9e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75e78130"/>
        <function-ref name="isOneShot" scoped="" ref="0x75e9eeb0"/>
        <function-ref name="getdt" scoped="" ref="0x75e78c60"/>
        <function-ref name="gett0" scoped="" ref="0x75e789f8"/>
        <function-ref name="isRunning" scoped="" ref="0x75e9ec48"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75e9e258"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75e78460"/>
        <function-ref name="startOneShot" scoped="" ref="0x75e9e4e8"/>
        <function-ref name="stop" scoped="" ref="0x75e9e778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x75e72730" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x75e72730"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75e72d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x75e710e8" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x75e710e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75e71838"/>
        <function-ref name="clearOverflow" scoped="" ref="0x75e71d28"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x75e71ab0"/>
        <function-ref name="overflow" scoped="" ref="0x75e70010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x75e6d4c8" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x75e6d4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75e62010"/>
        <function-ref name="fired" scoped="" ref="0x75e6c268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75e6c970"/>
        <function-ref name="isOneShot" scoped="" ref="0x75e6c718"/>
        <function-ref name="getdt" scoped="" ref="0x75e624c0"/>
        <function-ref name="gett0" scoped="" ref="0x75e62268"/>
        <function-ref name="isRunning" scoped="" ref="0x75e6c4c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75e6daf0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75e6cc90"/>
        <function-ref name="startOneShot" scoped="" ref="0x75e6dd70"/>
        <function-ref name="stop" scoped="" ref="0x75e6c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x75e67618" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x75e67618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75e64130"/>
        <function-ref name="fired" scoped="" ref="0x75e663c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75e66ad0"/>
        <function-ref name="isOneShot" scoped="" ref="0x75e66878"/>
        <function-ref name="getdt" scoped="" ref="0x75e645e0"/>
        <function-ref name="gett0" scoped="" ref="0x75e64388"/>
        <function-ref name="isRunning" scoped="" ref="0x75e66620"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75e67c40"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75e66df0"/>
        <function-ref name="startOneShot" scoped="" ref="0x75e67ec0"/>
        <function-ref name="stop" scoped="" ref="0x75e66170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x75e5ae38" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x75e5ae38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e59208"/>
        <function-ref name="write" scoped="" ref="0x75e592e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x75e5f3d8" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x75e5f3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75e5f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x75e5c4b8" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x75e5c4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e5c690"/>
        <function-ref name="write" scoped="" ref="0x75e5c770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x75e59cd8" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x75e59cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e59eb0"/>
        <function-ref name="write" scoped="" ref="0x75e58010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x75e545c8" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x75e545c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e547a0"/>
        <function-ref name="write" scoped="" ref="0x75e54880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x75e58190" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x75e58190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e58368"/>
        <function-ref name="write" scoped="" ref="0x75e58448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x75e4ee38" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x75e4ee38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e4d050"/>
        <function-ref name="write" scoped="" ref="0x75e4d130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x75e50cb8" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x75e50cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e50e90"/>
        <function-ref name="write" scoped="" ref="0x75e4e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x75e5fde0" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x75e5fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75e5e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x75e52448" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x75e52448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e52620"/>
        <function-ref name="write" scoped="" ref="0x75e52700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x75e50448" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x75e50448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e50620"/>
        <function-ref name="write" scoped="" ref="0x75e50700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x75e5cd28" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x75e5cd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e5cf00"/>
        <function-ref name="write" scoped="" ref="0x75e5a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x75e5a5c8" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x75e5a5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e5a7a0"/>
        <function-ref name="write" scoped="" ref="0x75e5a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x75e56880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x75e56880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e56a58"/>
        <function-ref name="write" scoped="" ref="0x75e56b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x75e57b20" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x75e57b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e57cf8"/>
        <function-ref name="write" scoped="" ref="0x75e57dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x75e585c8" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x75e585c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e587a0"/>
        <function-ref name="write" scoped="" ref="0x75e58880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x75e617f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x75e617f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x75e619c8"/>
        <function-ref name="abortRelease" scoped="" ref="0x75e61aa8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x75e61b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x75e5eb98" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x75e5eb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75e5ed70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x75e5eef0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x75e5eef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75e5d188"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x75e52eb8" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x75e52eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e510c0"/>
        <function-ref name="write" scoped="" ref="0x75e511a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x75e5d308" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x75e5d308"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75e5d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x75e50880" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x75e50880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e50a58"/>
        <function-ref name="write" scoped="" ref="0x75e50b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x75e5e4e8" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x75e5e4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75e5e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x75e52010" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x75e52010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e521e8"/>
        <function-ref name="write" scoped="" ref="0x75e522c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x75e5a190" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x75e5a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e5a368"/>
        <function-ref name="write" scoped="" ref="0x75e5a448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x75e5c8f0" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x75e5c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e5cac8"/>
        <function-ref name="write" scoped="" ref="0x75e5cba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x75e5f080" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x75e5f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75e5f258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x75e536e8" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x75e536e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e538c0"/>
        <function-ref name="write" scoped="" ref="0x75e539a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x75e54a00" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x75e54a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e54bd8"/>
        <function-ref name="write" scoped="" ref="0x75e54cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x75e53b20" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x75e53b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e53cf8"/>
        <function-ref name="write" scoped="" ref="0x75e53dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x75e4ea00" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x75e4ea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e4ebd8"/>
        <function-ref name="write" scoped="" ref="0x75e4ecb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x75e4e190" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x75e4e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e4e368"/>
        <function-ref name="write" scoped="" ref="0x75e4e448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x75e56010" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x75e56010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e561e8"/>
        <function-ref name="write" scoped="" ref="0x75e562c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x75e54e38" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x75e54e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e53050"/>
        <function-ref name="write" scoped="" ref="0x75e53130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x75e50010" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x75e50010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e501e8"/>
        <function-ref name="write" scoped="" ref="0x75e502c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x75e58e38" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x75e58e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e57050"/>
        <function-ref name="write" scoped="" ref="0x75e57130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x75e4d2b0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x75e4d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x75e4d488"/>
        <function-ref name="writeDone" scoped="" ref="0x75e4d568"/>
        <function-ref name="write" scoped="" ref="0x75e4d648"/>
        <function-ref name="beginRead" scoped="" ref="0x75e4d728"/>
        <function-ref name="readDone" scoped="" ref="0x75e4d808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x75e61d08" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x75e61d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75e61ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x75e5c080" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x75e5c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e5c258"/>
        <function-ref name="write" scoped="" ref="0x75e5c338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x75e5aa00" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x75e5aa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e5abd8"/>
        <function-ref name="write" scoped="" ref="0x75e5acb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x75e56cb8" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x75e56cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e56e90"/>
        <function-ref name="write" scoped="" ref="0x75e54010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x75e58a00" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x75e58a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e58bd8"/>
        <function-ref name="write" scoped="" ref="0x75e58cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x75e54190" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x75e54190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e54368"/>
        <function-ref name="write" scoped="" ref="0x75e54448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x75e59468" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x75e59468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e59640"/>
        <function-ref name="write" scoped="" ref="0x75e59720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x75e5f730" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x75e5f730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75e5f908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x75e598a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x75e598a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e59a78"/>
        <function-ref name="write" scoped="" ref="0x75e59b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x75e61138" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x75e61138"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x75e61310"/>
        <function-ref name="immediateRequest" scoped="" ref="0x75e613f0"/>
        <function-ref name="request" scoped="" ref="0x75e614d0"/>
        <function-ref name="granted" scoped="" ref="0x75e615b0"/>
        <function-ref name="isOwner" scoped="" ref="0x75e61690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x75e5d660" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x75e5d660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75e5d838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x75e5dd10" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x75e5dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75e5dee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x75e51b90" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x75e51b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e51d68"/>
        <function-ref name="write" scoped="" ref="0x75e51e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x75e51758" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x75e51758"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e51930"/>
        <function-ref name="write" scoped="" ref="0x75e51a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x75e5e840" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x75e5e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75e5ea18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x75e51320" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x75e51320"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e514f8"/>
        <function-ref name="write" scoped="" ref="0x75e515d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x75e4e5c8" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x75e4e5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e4e7a0"/>
        <function-ref name="write" scoped="" ref="0x75e4e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x75e56448" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x75e56448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e56620"/>
        <function-ref name="write" scoped="" ref="0x75e56700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x75e532b0" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x75e532b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e53488"/>
        <function-ref name="write" scoped="" ref="0x75e53568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x75e5fa88" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x75e5fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75e5fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x75e5e190" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x75e5e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75e5e368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x75e572b0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x75e572b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e57488"/>
        <function-ref name="write" scoped="" ref="0x75e57568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x75e5d9b8" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x75e5d9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x75e5db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x75e576e8" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x75e576e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e578c0"/>
        <function-ref name="write" scoped="" ref="0x75e579a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x75e52880" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x75e52880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75e52c58"/>
        <function-ref name="write" scoped="" ref="0x75e52d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x75e4d988" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x75e4d988"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x75e4db60"/>
        <function-ref name="writeDone" scoped="" ref="0x75e4dc40"/>
        <function-ref name="write" scoped="" ref="0x75e4dd20"/>
        <function-ref name="beginRead" scoped="" ref="0x75e4de00"/>
        <function-ref name="readDone" scoped="" ref="0x75e4dee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x75e34c40" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x75e34c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x75e34e18"/>
        <function-ref name="rand32" scoped="" ref="0x75e34ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x75e34380" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x75e34380"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75e349a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75e37060" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75e37060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75e37238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x75e316e0" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x75e316e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x75e318b8"/>
        <function-ref name="rand32" scoped="" ref="0x75e31998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x75e35dd0" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x75e35dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75e31448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75e358b0" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75e358b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75e35a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x75e39970" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x75e39970"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x75e39b48"/>
        <function-ref name="toIdle" scoped="" ref="0x75e39c28"/>
        <function-ref name="isState" scoped="" ref="0x75e39d08"/>
        <function-ref name="isIdle" scoped="" ref="0x75e39de8"/>
        <function-ref name="requestState" scoped="" ref="0x75e39ec8"/>
        <function-ref name="forceState" scoped="" ref="0x75e38010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x75e26010" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x75e26010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75e261e8"/>
        <function-ref name="getPayload" scoped="" ref="0x75e262c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75e263a8"/>
        <function-ref name="cancel" scoped="" ref="0x75e26488"/>
        <function-ref name="sendDone" scoped="" ref="0x75e26568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x75e297f0" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x75e297f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75e299c8"/>
        <function-ref name="getPayload" scoped="" ref="0x75e29aa8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75e29b88"/>
        <function-ref name="cancel" scoped="" ref="0x75e29c68"/>
        <function-ref name="sendDone" scoped="" ref="0x75e29d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x75e23960" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x75e23960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75e23b38"/>
        <function-ref name="getPayload" scoped="" ref="0x75e23c18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75e23cf8"/>
        <function-ref name="cancel" scoped="" ref="0x75e23dd8"/>
        <function-ref name="sendDone" scoped="" ref="0x75e23eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x75e26e90" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x75e26e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75e23080"/>
        <function-ref name="getPayload" scoped="" ref="0x75e23160"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75e23240"/>
        <function-ref name="cancel" scoped="" ref="0x75e23320"/>
        <function-ref name="sendDone" scoped="" ref="0x75e23400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x75e22818" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x75e22818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x75e229f0"/>
        <function-ref name="rand32" scoped="" ref="0x75e22ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75e23570" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75e23570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75e23748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x75e22cb8" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x75e22cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x75e22e90"/>
        <function-ref name="getHeader" scoped="" ref="0x75e21010"/>
        <function-ref name="getMetadata" scoped="" ref="0x75e210f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x75e22060" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x75e22060"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x75e22238"/>
        <function-ref name="toIdle" scoped="" ref="0x75e22318"/>
        <function-ref name="isState" scoped="" ref="0x75e223f8"/>
        <function-ref name="isIdle" scoped="" ref="0x75e224d8"/>
        <function-ref name="requestState" scoped="" ref="0x75e225b8"/>
        <function-ref name="forceState" scoped="" ref="0x75e22698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x75e25f10" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x75e25f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x75e24108"/>
        <function-ref name="toIdle" scoped="" ref="0x75e241e8"/>
        <function-ref name="isState" scoped="" ref="0x75e242c8"/>
        <function-ref name="isIdle" scoped="" ref="0x75e243a8"/>
        <function-ref name="requestState" scoped="" ref="0x75e24488"/>
        <function-ref name="forceState" scoped="" ref="0x75e24568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x75e27e78" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x75e27e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75e14070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x75e27628" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x75e27628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75e27800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x75e27a50" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x75e27a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75e27c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x75e116a8" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x75e116a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75e11880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75e11280" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75e11280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75e11458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x75e14af8" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x75e14af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75e14cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x75e11a68" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x75e11a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x75e11c40"/>
        <function-ref name="getHeader" scoped="" ref="0x75e11d20"/>
        <function-ref name="getMetadata" scoped="" ref="0x75e11e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x75e14f20" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x75e14f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75e11110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x75df7ea8" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x75df7ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75df60c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x75df6298" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x75df6298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75df6470"/>
        <function-ref name="getPayload" scoped="" ref="0x75df6550"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75df6630"/>
        <function-ref name="cancel" scoped="" ref="0x75df6710"/>
        <function-ref name="sendDone" scoped="" ref="0x75df67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x75df8090" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x75df8090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75df8268"/>
        <function-ref name="getPayload" scoped="" ref="0x75df8348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75df8428"/>
        <function-ref name="cancel" scoped="" ref="0x75df8508"/>
        <function-ref name="sendDone" scoped="" ref="0x75df85e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x75df8b40" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x75df8b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75df8d18"/>
        <function-ref name="getPayload" scoped="" ref="0x75df8df8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75df8ed8"/>
        <function-ref name="cancel" scoped="" ref="0x75df7010"/>
        <function-ref name="sendDone" scoped="" ref="0x75df70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x75df8770" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x75df8770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75df8948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x75df99a0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x75df99a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x75df9b78"/>
        <function-ref name="immediateRequest" scoped="" ref="0x75df9c58"/>
        <function-ref name="request" scoped="" ref="0x75df9d38"/>
        <function-ref name="granted" scoped="" ref="0x75df9e18"/>
        <function-ref name="isOwner" scoped="" ref="0x75df9ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x75df7320" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x75df7320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75df74f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x75df7700" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x75df7700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75df78d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x75df79b8"/>
        <function-ref name="getPayload" scoped="" ref="0x75df7a98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75df7b78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75df7c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x75defcb0" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x75defcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75defe88"/>
        <function-ref name="getPayload" scoped="" ref="0x75dee010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75dee0f0"/>
        <function-ref name="cancel" scoped="" ref="0x75dee1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x75dee2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x75dee4c0" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x75dee4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75dee698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x75dd35c0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x75dd35c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75dd3798"/>
        <function-ref name="runTask" scoped="" ref="0x75dd3878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x75dee858" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x75dee858"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x75deea30"/>
        <function-ref name="setNetwork" scoped="" ref="0x75deeb10"/>
        <function-ref name="getRssi" scoped="" ref="0x75deebf0"/>
        <function-ref name="getNetwork" scoped="" ref="0x75deecd0"/>
        <function-ref name="getPower" scoped="" ref="0x75deedb0"/>
        <function-ref name="getLqi" scoped="" ref="0x75deee90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x75df19b8" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x75df19b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75df1b90"/>
        <function-ref name="getPayload" scoped="" ref="0x75df1c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75df1d50"/>
        <function-ref name="cancel" scoped="" ref="0x75df1e30"/>
        <function-ref name="sendDone" scoped="" ref="0x75df1f10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x75ded6c0" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x75ded6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x75ded898"/>
        <function-ref name="isEmpty" scoped="" ref="0x75ded978"/>
        <function-ref name="isEnqueued" scoped="" ref="0x75deda58"/>
        <function-ref name="dequeue" scoped="" ref="0x75dedb38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x75ded108" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x75ded108"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x75ded2e0"/>
        <function-ref name="getHeader" scoped="" ref="0x75ded3c0"/>
        <function-ref name="getMetadata" scoped="" ref="0x75ded4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x75df15e8" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x75df15e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75df17c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x75df2720" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x75df2720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x75df28f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x75df29d8"/>
        <function-ref name="request" scoped="" ref="0x75df2ab8"/>
        <function-ref name="granted" scoped="" ref="0x75df2b98"/>
        <function-ref name="isOwner" scoped="" ref="0x75df2c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x75df2e60" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x75df2e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75df1050"/>
        <function-ref name="getPayload" scoped="" ref="0x75df1130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75df1210"/>
        <function-ref name="cancel" scoped="" ref="0x75df12f0"/>
        <function-ref name="sendDone" scoped="" ref="0x75df13d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x75def160" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x75def160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75def338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x75def540" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x75def540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75def718"/>
        <function-ref name="payloadLength" scoped="" ref="0x75def7f8"/>
        <function-ref name="getPayload" scoped="" ref="0x75def8d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75def9b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75defa98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75df3ed0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75df3ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75dc10c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x75dc1220" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x75dc1220"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x75dc13f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x75dc14d8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x75dc15b8"/>
        <function-ref name="dequeue" scoped="" ref="0x75dc1698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x75dba610" loc="46:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x75dba610"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x75dba7e8"/>
        <function-ref name="stopDone" scoped="" ref="0x75dba8c8"/>
        <function-ref name="start" scoped="" ref="0x75dba9a8"/>
        <function-ref name="stop" scoped="" ref="0x75dbaa88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x75db95a8" loc="51:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x75db95a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75db9780"/>
        <function-ref name="getPayload" scoped="" ref="0x75db9860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75db9940"/>
        <function-ref name="cancel" scoped="" ref="0x75db9a20"/>
        <function-ref name="sendDone" scoped="" ref="0x75db9b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x75db9d10" loc="52:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x75db9d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75db9ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x75dbbb18" loc="44:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x75dbbb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75dbbcf0"/>
        <function-ref name="getPayload" scoped="" ref="0x75dbbdd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75dbbeb0"/>
        <function-ref name="cancel" scoped="" ref="0x75dba010"/>
        <function-ref name="sendDone" scoped="" ref="0x75dba0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x75dbb530" loc="43:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x75dbb530"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x75dbb708"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x75dbb7e8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x75dbb8c8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x75dbb9a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x75dbac80" loc="47:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x75dbac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x75dbae58"/>
        <function-ref name="toIdle" scoped="" ref="0x75db9010"/>
        <function-ref name="isState" scoped="" ref="0x75db90f0"/>
        <function-ref name="isIdle" scoped="" ref="0x75db91d0"/>
        <function-ref name="requestState" scoped="" ref="0x75db92b0"/>
        <function-ref name="forceState" scoped="" ref="0x75db9390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x75db7168" loc="53:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x75db7168"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x75db7340"/>
        <function-ref name="stopDone" scoped="" ref="0x75db7420"/>
        <function-ref name="start" scoped="" ref="0x75db7500"/>
        <function-ref name="stop" scoped="" ref="0x75db75e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x75dba278" loc="45:../../../tos/chips/cc2420/lpl/DefaultLplC.nc">
      <component-ref qname="DefaultLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x75dba278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75dba450"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x75db2a18" loc="59:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x75db2a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75db2bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x75db32d8" loc="56:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x75db32d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75db34b0"/>
        <function-ref name="getPayload" scoped="" ref="0x75db3590"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75db3670"/>
        <function-ref name="cancel" scoped="" ref="0x75db3750"/>
        <function-ref name="sendDone" scoped="" ref="0x75db3830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x75d9f720" loc="109:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="send" scoped="" ref="0x75d9f720"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75d9f8f8"/>
        <function-ref name="runTask" scoped="" ref="0x75d9f9d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioBackoff" ref="0x75db21d0" loc="58:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x75db21d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x75db23a8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x75db2488"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x75db2568"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x75db2648"/>
        <function-ref name="setCca" scoped="" ref="0x75db2728"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x75db2808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x75d9d448" loc="71:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x75d9d448"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x75d9d620"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x75d9d700"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x75d9d7e0"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x75d9d8c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OffTimer" ref="0x75da8490" loc="67:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OffTimer" scoped="" ref="0x75da8490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75da5010"/>
        <function-ref name="fired" scoped="" ref="0x75da7268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75da7970"/>
        <function-ref name="isOneShot" scoped="" ref="0x75da7718"/>
        <function-ref name="getdt" scoped="" ref="0x75da54c0"/>
        <function-ref name="gett0" scoped="" ref="0x75da5268"/>
        <function-ref name="isRunning" scoped="" ref="0x75da74c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75da8ab8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75da7c90"/>
        <function-ref name="startOneShot" scoped="" ref="0x75da8d38"/>
        <function-ref name="stop" scoped="" ref="0x75da7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x75db47e8" loc="51:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x75db47e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75db49c0"/>
        <function-ref name="getPayload" scoped="" ref="0x75db4aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75db4b80"/>
        <function-ref name="cancel" scoped="" ref="0x75db4c60"/>
        <function-ref name="sendDone" scoped="" ref="0x75db4d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x75db4200" loc="50:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x75db4200"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x75db43d8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x75db44b8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x75db4598"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x75db4678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x75db08a0" loc="64:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x75db08a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x75db0af8"/>
        <function-ref name="toIdle" scoped="" ref="0x75db0bd8"/>
        <function-ref name="isState" scoped="" ref="0x75db0cb8"/>
        <function-ref name="isIdle" scoped="" ref="0x75db0d98"/>
        <function-ref name="requestState" scoped="" ref="0x75db0e78"/>
        <function-ref name="forceState" scoped="" ref="0x75daf010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x75da3a88" loc="69:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x75da3a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x75da3c60"/>
        <function-ref name="rand32" scoped="" ref="0x75da3d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resend" ref="0x75db3a60" loc="57:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resend" scoped="" ref="0x75db3a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75db3c38"/>
        <function-ref name="cancel" scoped="" ref="0x75db3d18"/>
        <function-ref name="modify" scoped="" ref="0x75db3df8"/>
        <function-ref name="sendDone" scoped="" ref="0x75db3ed8"/>
        <function-ref name="resend" scoped="" ref="0x75db2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75db7de8" loc="49:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75db7de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75db4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x75db2e38" loc="60:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x75db2e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x75db1050"/>
        <function-ref name="stopDone" scoped="" ref="0x75db1130"/>
        <function-ref name="start" scoped="" ref="0x75db1210"/>
        <function-ref name="stop" scoped="" ref="0x75db12f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x75db4ec8" loc="52:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x75db4ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75db30c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x75da9cc8" loc="62:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x75da9cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x75da9ea0"/>
        <function-ref name="getHeader" scoped="" ref="0x75db0010"/>
        <function-ref name="getMetadata" scoped="" ref="0x75db00f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPowerState" ref="0x75daf240" loc="65:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPowerState" scoped="" ref="0x75daf240"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x75daf418"/>
        <function-ref name="toIdle" scoped="" ref="0x75daf4f8"/>
        <function-ref name="isState" scoped="" ref="0x75daf5d8"/>
        <function-ref name="isIdle" scoped="" ref="0x75daf6b8"/>
        <function-ref name="requestState" scoped="" ref="0x75daf798"/>
        <function-ref name="forceState" scoped="" ref="0x75daf878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startRadio" ref="0x75d9c7a0" loc="111:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startRadio" scoped="" ref="0x75d9c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75d9c978"/>
        <function-ref name="runTask" scoped="" ref="0x75d9ca58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x75da3eb0" loc="70:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x75da3eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x75da10c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x75da11a0"/>
        <function-ref name="led1On" scoped="" ref="0x75da1280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x75da1360"/>
        <function-ref name="led2Toggle" scoped="" ref="0x75da1440"/>
        <function-ref name="get" scoped="" ref="0x75da1520"/>
        <function-ref name="led1Off" scoped="" ref="0x75da1600"/>
        <function-ref name="led2Off" scoped="" ref="0x75da1980"/>
        <function-ref name="set" scoped="" ref="0x75da16e0"/>
        <function-ref name="led0On" scoped="" ref="0x75da17c0"/>
        <function-ref name="led2On" scoped="" ref="0x75da18a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendDoneTimer" ref="0x75da5880" loc="68:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendDoneTimer" scoped="" ref="0x75da5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75da3388"/>
        <function-ref name="fired" scoped="" ref="0x75da4628"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75da4d30"/>
        <function-ref name="isOneShot" scoped="" ref="0x75da4ad8"/>
        <function-ref name="getdt" scoped="" ref="0x75da3838"/>
        <function-ref name="gett0" scoped="" ref="0x75da35e0"/>
        <function-ref name="isRunning" scoped="" ref="0x75da4880"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75da5ea8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75da3068"/>
        <function-ref name="startOneShot" scoped="" ref="0x75da4150"/>
        <function-ref name="stop" scoped="" ref="0x75da43d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x75db0310" loc="63:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x75db0310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x75db04e8"/>
        <function-ref name="noAck" scoped="" ref="0x75db05c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x75db06a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x75dafac0" loc="66:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x75dafac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x75dafc98"/>
        <function-ref name="toIdle" scoped="" ref="0x75dafd78"/>
        <function-ref name="isState" scoped="" ref="0x75dafe58"/>
        <function-ref name="isIdle" scoped="" ref="0x75da8010"/>
        <function-ref name="requestState" scoped="" ref="0x75da80f0"/>
        <function-ref name="forceState" scoped="" ref="0x75da81d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="resend" ref="0x75d9ff10" loc="110:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="resend" scoped="" ref="0x75d9ff10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75d9c108"/>
        <function-ref name="runTask" scoped="" ref="0x75d9c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerCycle" ref="0x75da9748" loc="61:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerCycle" scoped="" ref="0x75da9748"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerCycle"/>
      </instance>
      <interface-functions>
        <function-ref name="getSleepInterval" scoped="" ref="0x75da9920"/>
        <function-ref name="detected" scoped="" ref="0x75da9a00"/>
        <function-ref name="setSleepInterval" scoped="" ref="0x75da9ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopRadio" ref="0x75d9a010" loc="112:../../../tos/chips/cc2420/lpl/DefaultLplP.nc">
      <component-ref qname="DefaultLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopRadio" scoped="" ref="0x75d9a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75d9a1e8"/>
        <function-ref name="runTask" scoped="" ref="0x75d9a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x75d6a2b0" loc="42:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <component-ref qname="PowerCycleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x75d6a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x75d6a488"/>
        <function-ref name="stopDone" scoped="" ref="0x75d6a568"/>
        <function-ref name="start" scoped="" ref="0x75d6a648"/>
        <function-ref name="stop" scoped="" ref="0x75d6a728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPowerState" ref="0x75d69240" loc="44:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <component-ref qname="PowerCycleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPowerState" scoped="" ref="0x75d69240"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x75d69418"/>
        <function-ref name="toIdle" scoped="" ref="0x75d694f8"/>
        <function-ref name="isState" scoped="" ref="0x75d695d8"/>
        <function-ref name="isIdle" scoped="" ref="0x75d696b8"/>
        <function-ref name="requestState" scoped="" ref="0x75d69798"/>
        <function-ref name="forceState" scoped="" ref="0x75d69878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControlState" ref="0x75d6a970" loc="43:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <component-ref qname="PowerCycleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x75d6a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x75d6ab48"/>
        <function-ref name="toIdle" scoped="" ref="0x75d6ac28"/>
        <function-ref name="isState" scoped="" ref="0x75d6ad08"/>
        <function-ref name="isIdle" scoped="" ref="0x75d6ade8"/>
        <function-ref name="requestState" scoped="" ref="0x75d6aec8"/>
        <function-ref name="forceState" scoped="" ref="0x75d69010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PowerCycle" ref="0x75d6dcf0" loc="41:../../../tos/chips/cc2420/lpl/PowerCycleC.nc">
      <component-ref qname="PowerCycleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerCycle" scoped="" ref="0x75d6dcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerCycle"/>
      </instance>
      <interface-functions>
        <function-ref name="getSleepInterval" scoped="" ref="0x75d6dec8"/>
        <function-ref name="detected" scoped="" ref="0x75d6a010"/>
        <function-ref name="setSleepInterval" scoped="" ref="0x75d6a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x75d65490" loc="59:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x75d65490"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x75d65668"/>
        <function-ref name="stopDone" scoped="" ref="0x75d65748"/>
        <function-ref name="start" scoped="" ref="0x75d65828"/>
        <function-ref name="stop" scoped="" ref="0x75d65908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ByteIndicator" ref="0x75d5e030" loc="70:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x75d5e030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x75d5e208"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EnergyIndicator" ref="0x75d5fbb0" loc="69:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x75d5fbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x75d5fd88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x75d606a8" loc="67:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x75d606a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x75d60880"/>
        <function-ref name="toIdle" scoped="" ref="0x75d60960"/>
        <function-ref name="isState" scoped="" ref="0x75d60a40"/>
        <function-ref name="isIdle" scoped="" ref="0x75d60b20"/>
        <function-ref name="requestState" scoped="" ref="0x75d60c00"/>
        <function-ref name="forceState" scoped="" ref="0x75d60ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startRadio" ref="0x75d5c308" loc="96:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startRadio" scoped="" ref="0x75d5c308"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75d5c560"/>
        <function-ref name="runTask" scoped="" ref="0x75d5c640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x75d62ef8" loc="64:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x75d62ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x75d610e0"/>
        <function-ref name="stopDone" scoped="" ref="0x75d611c0"/>
        <function-ref name="start" scoped="" ref="0x75d612a0"/>
        <function-ref name="stop" scoped="" ref="0x75d61380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPowerState" ref="0x75d615b0" loc="65:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPowerState" scoped="" ref="0x75d615b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x75d61788"/>
        <function-ref name="toIdle" scoped="" ref="0x75d61868"/>
        <function-ref name="isState" scoped="" ref="0x75d61948"/>
        <function-ref name="isIdle" scoped="" ref="0x75d61a28"/>
        <function-ref name="requestState" scoped="" ref="0x75d61b08"/>
        <function-ref name="forceState" scoped="" ref="0x75d61be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketIndicator" ref="0x75d5e4a8" loc="71:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x75d5e4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x75d5e680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x75d60e50" loc="68:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x75d60e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x75d5f050"/>
        <function-ref name="led0Toggle" scoped="" ref="0x75d5f130"/>
        <function-ref name="led1On" scoped="" ref="0x75d5f210"/>
        <function-ref name="led1Toggle" scoped="" ref="0x75d5f2f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x75d5f3d0"/>
        <function-ref name="get" scoped="" ref="0x75d5f4b0"/>
        <function-ref name="led1Off" scoped="" ref="0x75d5f590"/>
        <function-ref name="led2Off" scoped="" ref="0x75d5f910"/>
        <function-ref name="set" scoped="" ref="0x75d5f670"/>
        <function-ref name="led0On" scoped="" ref="0x75d5f750"/>
        <function-ref name="led2On" scoped="" ref="0x75d5f830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="getCca" ref="0x75d5cb48" loc="97:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="getCca" scoped="" ref="0x75d5cb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75d5cd20"/>
        <function-ref name="runTask" scoped="" ref="0x75d5ce00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x75d61e30" loc="66:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x75d61e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x75d60050"/>
        <function-ref name="toIdle" scoped="" ref="0x75d60130"/>
        <function-ref name="isState" scoped="" ref="0x75d60210"/>
        <function-ref name="isIdle" scoped="" ref="0x75d602f0"/>
        <function-ref name="requestState" scoped="" ref="0x75d603d0"/>
        <function-ref name="forceState" scoped="" ref="0x75d604b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OnTimer" ref="0x75d65bf8" loc="63:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OnTimer" scoped="" ref="0x75d65bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75d62730"/>
        <function-ref name="fired" scoped="" ref="0x75d649b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75d620f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x75d64e60"/>
        <function-ref name="getdt" scoped="" ref="0x75d62be0"/>
        <function-ref name="gett0" scoped="" ref="0x75d62988"/>
        <function-ref name="isRunning" scoped="" ref="0x75d64c08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75d64258"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75d62410"/>
        <function-ref name="startOneShot" scoped="" ref="0x75d644d8"/>
        <function-ref name="stop" scoped="" ref="0x75d64758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PowerCycle" ref="0x75d69f20" loc="58:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerCycle" scoped="" ref="0x75d69f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerCycle"/>
      </instance>
      <interface-functions>
        <function-ref name="getSleepInterval" scoped="" ref="0x75d65110"/>
        <function-ref name="detected" scoped="" ref="0x75d651f0"/>
        <function-ref name="setSleepInterval" scoped="" ref="0x75d652d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopRadio" ref="0x75d5dad8" loc="95:../../../tos/chips/cc2420/lpl/PowerCycleP.nc">
      <component-ref qname="PowerCycleP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopRadio" scoped="" ref="0x75d5dad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75d5dcb0"/>
        <function-ref name="runTask" scoped="" ref="0x75d5dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x75d3e8e8" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="PowerCycleC.RadioPowerStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x75d3e8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x75d3eac0"/>
        <function-ref name="toIdle" scoped="" ref="0x75d3eba0"/>
        <function-ref name="isState" scoped="" ref="0x75d3ec80"/>
        <function-ref name="isIdle" scoped="" ref="0x75d3ed60"/>
        <function-ref name="requestState" scoped="" ref="0x75d3ee40"/>
        <function-ref name="forceState" scoped="" ref="0x75d3ef20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x75d3dad0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="PowerCycleC.SplitControlStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x75d3dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x75d3dca8"/>
        <function-ref name="toIdle" scoped="" ref="0x75d3dd88"/>
        <function-ref name="isState" scoped="" ref="0x75d3de68"/>
        <function-ref name="isIdle" scoped="" ref="0x75d3c010"/>
        <function-ref name="requestState" scoped="" ref="0x75d3c0f0"/>
        <function-ref name="forceState" scoped="" ref="0x75d3c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x75d3cdb8" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="PowerCycleC.OnTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x75d3cdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75d398a8"/>
        <function-ref name="fired" scoped="" ref="0x75d3bb48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75d39268"/>
        <function-ref name="isOneShot" scoped="" ref="0x75d39010"/>
        <function-ref name="getdt" scoped="" ref="0x75d39d58"/>
        <function-ref name="gett0" scoped="" ref="0x75d39b00"/>
        <function-ref name="isRunning" scoped="" ref="0x75d3bda0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75d3b3f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75d39588"/>
        <function-ref name="startOneShot" scoped="" ref="0x75d3b670"/>
        <function-ref name="stop" scoped="" ref="0x75d3b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x75d38c00" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="PowerCycleC.CheckTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x75d38c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75d36730"/>
        <function-ref name="fired" scoped="" ref="0x75d379b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75d360f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x75d37e60"/>
        <function-ref name="getdt" scoped="" ref="0x75d36be0"/>
        <function-ref name="gett0" scoped="" ref="0x75d36988"/>
        <function-ref name="isRunning" scoped="" ref="0x75d37c08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75d37258"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75d36410"/>
        <function-ref name="startOneShot" scoped="" ref="0x75d374d8"/>
        <function-ref name="stop" scoped="" ref="0x75d37758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x75d30b30" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DefaultLplC.SendStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x75d30b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x75d30d08"/>
        <function-ref name="toIdle" scoped="" ref="0x75d30de8"/>
        <function-ref name="isState" scoped="" ref="0x75d30ec8"/>
        <function-ref name="isIdle" scoped="" ref="0x75d2f010"/>
        <function-ref name="requestState" scoped="" ref="0x75d2f0f0"/>
        <function-ref name="forceState" scoped="" ref="0x75d2f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x75d2fdc0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="DefaultLplC.OffTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x75d2fdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75d2d8e0"/>
        <function-ref name="fired" scoped="" ref="0x75d2eb60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75d2d2a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x75d2d048"/>
        <function-ref name="getdt" scoped="" ref="0x75d2dd90"/>
        <function-ref name="gett0" scoped="" ref="0x75d2db38"/>
        <function-ref name="isRunning" scoped="" ref="0x75d2edb8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75d2e408"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75d2d5c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x75d2e688"/>
        <function-ref name="stop" scoped="" ref="0x75d2e908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x75d2bc20" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="DefaultLplC.SendDoneTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x75d2bc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75d29730"/>
        <function-ref name="fired" scoped="" ref="0x75d2a9b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75d290f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x75d2ae60"/>
        <function-ref name="getdt" scoped="" ref="0x75d29be0"/>
        <function-ref name="gett0" scoped="" ref="0x75d29988"/>
        <function-ref name="isRunning" scoped="" ref="0x75d2ac08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75d2a258"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75d29410"/>
        <function-ref name="startOneShot" scoped="" ref="0x75d2a4d8"/>
        <function-ref name="stop" scoped="" ref="0x75d2a758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SystemLowPowerListening" ref="0x75d28920" loc="3:../../../tos/system/SystemLowPowerListeningC.nc">
      <component-ref qname="SystemLowPowerListeningC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x75d28920"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x75d28af8"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x75d28bd8"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x75d28cb8"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x75d28d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SystemLowPowerListening" ref="0x75d25570" loc="5:../../../tos/system/SystemLowPowerListeningP.nc">
      <component-ref qname="SystemLowPowerListeningP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x75d25570"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x75d25748"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x75d25828"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x75d25908"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x75d259e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x75d164c8" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x75d164c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75d166a0"/>
        <function-ref name="getPayload" scoped="" ref="0x75d16780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75d16860"/>
        <function-ref name="cancel" scoped="" ref="0x75d16940"/>
        <function-ref name="sendDone" scoped="" ref="0x75d16a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x75d19610" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x75d19610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75d197e8"/>
        <function-ref name="getPayload" scoped="" ref="0x75d198c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75d199a8"/>
        <function-ref name="cancel" scoped="" ref="0x75d19a88"/>
        <function-ref name="sendDone" scoped="" ref="0x75d19b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x75d19d10" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x75d19d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x75d19ee8"/>
        <function-ref name="setRetries" scoped="" ref="0x75d16010"/>
        <function-ref name="getRetries" scoped="" ref="0x75d160f0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x75d161d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x75d162b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x75d13938" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x75d13938"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x75d13b10"/>
        <function-ref name="noAck" scoped="" ref="0x75d13bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x75d13cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x75d13180" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x75d13180"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x75d13358"/>
        <function-ref name="setRetries" scoped="" ref="0x75d13438"/>
        <function-ref name="getRetries" scoped="" ref="0x75d13518"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x75d135f8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x75d136d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x75d02220" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x75d02220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75d023f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x75d03a88" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x75d03a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75d03c60"/>
        <function-ref name="getPayload" scoped="" ref="0x75d03d40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75d03e20"/>
        <function-ref name="cancel" scoped="" ref="0x75d03f00"/>
        <function-ref name="sendDone" scoped="" ref="0x75d02010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x75d01390" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x75d01390"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x75d01568"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x75d01648"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x75d01728"/>
        <function-ref name="syncDone" scoped="" ref="0x75d01808"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x75d018e8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x75d019c8"/>
        <function-ref name="setChannel" scoped="" ref="0x75d01aa8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x75d01b88"/>
        <function-ref name="setPanAddr" scoped="" ref="0x75d01c68"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x75d01d48"/>
        <function-ref name="getExtAddr" scoped="" ref="0x75d01e28"/>
        <function-ref name="getShortAddr" scoped="" ref="0x75d01f08"/>
        <function-ref name="sync" scoped="" ref="0x75d00010"/>
        <function-ref name="getChannel" scoped="" ref="0x75d00170"/>
        <function-ref name="getPanAddr" scoped="" ref="0x75d00250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x75d03238" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x75d03238"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x75d03410"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x75d034f0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x75d035d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x75d036b0"/>
        <function-ref name="setCca" scoped="" ref="0x75d03790"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x75d03870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x75d05b88" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x75d05b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x75d05d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x75d00ba0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x75d00ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x75d00d78"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x75d00e58"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x75cff010"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x75cff0f0"/>
        <function-ref name="setCca" scoped="" ref="0x75cff1d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x75cff2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x75d05190" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x75d05190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75d05368"/>
        <function-ref name="payloadLength" scoped="" ref="0x75d05448"/>
        <function-ref name="getPayload" scoped="" ref="0x75d05528"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75d05608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75d056e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x75d07100" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x75d07100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75d072d8"/>
        <function-ref name="getPayload" scoped="" ref="0x75d073b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75d07498"/>
        <function-ref name="cancel" scoped="" ref="0x75d07578"/>
        <function-ref name="sendDone" scoped="" ref="0x75d07658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x75d06178" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x75d06178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75d06350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x75d025b8" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x75d025b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x75d02790"/>
        <function-ref name="setNetwork" scoped="" ref="0x75d02870"/>
        <function-ref name="getRssi" scoped="" ref="0x75d02950"/>
        <function-ref name="getNetwork" scoped="" ref="0x75d02a30"/>
        <function-ref name="getPower" scoped="" ref="0x75d02b10"/>
        <function-ref name="getLqi" scoped="" ref="0x75d02bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x75d00460" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x75d00460"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x75d006b8"/>
        <function-ref name="changed" scoped="" ref="0x75d00798"/>
        <function-ref name="amGroup" scoped="" ref="0x75d00878"/>
        <function-ref name="setAddress" scoped="" ref="0x75d00958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x75d02dd8" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x75d02dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x75d01010"/>
        <function-ref name="getHeader" scoped="" ref="0x75d010f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x75d011d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x75d07ac0" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x75d07ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75d07c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x75cffbb8" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x75cffbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x75cffd90"/>
        <function-ref name="led0Toggle" scoped="" ref="0x75cffe70"/>
        <function-ref name="led1On" scoped="" ref="0x75cfe010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x75cfe0f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x75cfe1d0"/>
        <function-ref name="get" scoped="" ref="0x75cfe2b0"/>
        <function-ref name="led1Off" scoped="" ref="0x75cfe390"/>
        <function-ref name="led2Off" scoped="" ref="0x75cfe710"/>
        <function-ref name="set" scoped="" ref="0x75cfe470"/>
        <function-ref name="led0On" scoped="" ref="0x75cfe550"/>
        <function-ref name="led2On" scoped="" ref="0x75cfe630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x75d064e8" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x75d064e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x75d066c0"/>
        <function-ref name="source" scoped="" ref="0x75d067a0"/>
        <function-ref name="address" scoped="" ref="0x75d06880"/>
        <function-ref name="destination" scoped="" ref="0x75d06960"/>
        <function-ref name="setSource" scoped="" ref="0x75d06a40"/>
        <function-ref name="setDestination" scoped="" ref="0x75d06b20"/>
        <function-ref name="type" scoped="" ref="0x75d06c00"/>
        <function-ref name="setType" scoped="" ref="0x75d06ce0"/>
        <function-ref name="isForMe" scoped="" ref="0x75d06dc0"/>
        <function-ref name="setGroup" scoped="" ref="0x75d06ea0"/>
        <function-ref name="localGroup" scoped="" ref="0x75d05010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x75cff4f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x75cff4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x75cff6c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x75cff7a8"/>
        <function-ref name="request" scoped="" ref="0x75cff888"/>
        <function-ref name="granted" scoped="" ref="0x75cff968"/>
        <function-ref name="isOwner" scoped="" ref="0x75cffa48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x7532b360" loc="5:../../../tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubAMSend" scoped="" ref="0x7532b360"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7532b538"/>
        <function-ref name="getPayload" scoped="" ref="0x7532b618"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7532b6f8"/>
        <function-ref name="cancel" scoped="" ref="0x7532b7d8"/>
        <function-ref name="sendDone" scoped="" ref="0x7532b8b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x75329010" loc="7:../../../tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x75329010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x753291e8"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x753292c8"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x753293a8"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x75329488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7532cc58" loc="3:../../../tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7532cc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7532ce30"/>
        <function-ref name="getPayload" scoped="" ref="0x7532cf10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7532b010"/>
        <function-ref name="cancel" scoped="" ref="0x7532b0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7532b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lpl" ref="0x7532ba18" loc="6:../../../tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Lpl" scoped="" ref="0x7532ba18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7532bbf0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7532bcd0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7532bdb0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7532be90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x75c978d8" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x75c978d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75c97ab0"/>
        <function-ref name="payloadLength" scoped="" ref="0x75c97b90"/>
        <function-ref name="getPayload" scoped="" ref="0x75c97c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75c97d50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75c97e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x75c975c0" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x75c975c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75c97798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x75c93010" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x75c93010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x75c931e8"/>
        <function-ref name="source" scoped="" ref="0x75c932c8"/>
        <function-ref name="address" scoped="" ref="0x75c933a8"/>
        <function-ref name="destination" scoped="" ref="0x75c93488"/>
        <function-ref name="setSource" scoped="" ref="0x75c93568"/>
        <function-ref name="setDestination" scoped="" ref="0x75c93648"/>
        <function-ref name="type" scoped="" ref="0x75c93728"/>
        <function-ref name="setType" scoped="" ref="0x75c93808"/>
        <function-ref name="isForMe" scoped="" ref="0x75c938e8"/>
        <function-ref name="setGroup" scoped="" ref="0x75c939c8"/>
        <function-ref name="localGroup" scoped="" ref="0x75c93aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x75c91070" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x75c91070"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75c91248"/>
        <function-ref name="getPayload" scoped="" ref="0x75c91328"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75c91408"/>
        <function-ref name="cancel" scoped="" ref="0x75c914e8"/>
        <function-ref name="sendDone" scoped="" ref="0x75c915c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x75c91708" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x75c91708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75c918e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x75c919c0"/>
        <function-ref name="getPayload" scoped="" ref="0x75c91aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75c91b80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75c91c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x75c91da0" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x75c91da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x75c90010"/>
        <function-ref name="source" scoped="" ref="0x75c900f0"/>
        <function-ref name="address" scoped="" ref="0x75c901d0"/>
        <function-ref name="destination" scoped="" ref="0x75c902b0"/>
        <function-ref name="setSource" scoped="" ref="0x75c90390"/>
        <function-ref name="setDestination" scoped="" ref="0x75c90470"/>
        <function-ref name="type" scoped="" ref="0x75c90550"/>
        <function-ref name="setType" scoped="" ref="0x75c90630"/>
        <function-ref name="isForMe" scoped="" ref="0x75c90710"/>
        <function-ref name="setGroup" scoped="" ref="0x75c907f0"/>
        <function-ref name="localGroup" scoped="" ref="0x75c908d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x75c90a30" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x75c90a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x75c90c08"/>
        <function-ref name="noAck" scoped="" ref="0x75c90ce8"/>
        <function-ref name="wasAcked" scoped="" ref="0x75c90dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x74f0d750" loc="6:../../../tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x74f0d750"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x74f0d928"/>
        <function-ref name="getPayload" scoped="" ref="0x74f0da08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x74f0dae8"/>
        <function-ref name="cancel" scoped="" ref="0x74f0dbc8"/>
        <function-ref name="sendDone" scoped="" ref="0x74f0dca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x74f0dde8" loc="7:../../../tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x74f0dde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x74f0c010"/>
        <function-ref name="payloadLength" scoped="" ref="0x74f0c0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x74f0c1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x74f0c2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x74f0c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x74f0c4d0" loc="8:../../../tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x74f0c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x74f0c6a8"/>
        <function-ref name="source" scoped="" ref="0x74f0c788"/>
        <function-ref name="address" scoped="" ref="0x74f0c868"/>
        <function-ref name="destination" scoped="" ref="0x74f0c948"/>
        <function-ref name="setSource" scoped="" ref="0x74f0ca28"/>
        <function-ref name="setDestination" scoped="" ref="0x74f0cb08"/>
        <function-ref name="type" scoped="" ref="0x74f0cbe8"/>
        <function-ref name="setType" scoped="" ref="0x74f0ccc8"/>
        <function-ref name="isForMe" scoped="" ref="0x74f0cda8"/>
        <function-ref name="setGroup" scoped="" ref="0x74f0ce88"/>
        <function-ref name="localGroup" scoped="" ref="0x74f0a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x74f0a170" loc="9:../../../tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x74f0a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x74f0a348"/>
        <function-ref name="noAck" scoped="" ref="0x74f0a428"/>
        <function-ref name="wasAcked" scoped="" ref="0x74f0a508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x74f052c8" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x74f052c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x74f054a0"/>
        <function-ref name="getPayload" scoped="" ref="0x74f05580"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x74f05660"/>
        <function-ref name="cancel" scoped="" ref="0x74f05740"/>
        <function-ref name="sendDone" scoped="" ref="0x74f05820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x74f05960" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x74f05960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x74f05b38"/>
        <function-ref name="payloadLength" scoped="" ref="0x74f05c18"/>
        <function-ref name="getPayload" scoped="" ref="0x74f05cf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x74f05dd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x74f05eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x74f04010" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x74f04010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x74f041e8"/>
        <function-ref name="source" scoped="" ref="0x74f042c8"/>
        <function-ref name="address" scoped="" ref="0x74f043a8"/>
        <function-ref name="destination" scoped="" ref="0x74f04488"/>
        <function-ref name="setSource" scoped="" ref="0x74f04568"/>
        <function-ref name="setDestination" scoped="" ref="0x74f04648"/>
        <function-ref name="type" scoped="" ref="0x74f04728"/>
        <function-ref name="setType" scoped="" ref="0x74f04808"/>
        <function-ref name="isForMe" scoped="" ref="0x74f048e8"/>
        <function-ref name="setGroup" scoped="" ref="0x74f049c8"/>
        <function-ref name="localGroup" scoped="" ref="0x74f04aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x74f04c08" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x74f04c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x74f04de0"/>
        <function-ref name="noAck" scoped="" ref="0x74f04ec0"/>
        <function-ref name="wasAcked" scoped="" ref="0x74f03010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x74efa420" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x74efa420"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x74efa5f8"/>
        <function-ref name="getPayload" scoped="" ref="0x74efa6d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x74efa7b8"/>
        <function-ref name="cancel" scoped="" ref="0x74efa898"/>
        <function-ref name="sendDone" scoped="" ref="0x74efa978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x74efaae8" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x74efaae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x74efacc0"/>
        <function-ref name="getPayload" scoped="" ref="0x74efada0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x74efae80"/>
        <function-ref name="cancel" scoped="" ref="0x74ef9010"/>
        <function-ref name="sendDone" scoped="" ref="0x74ef90f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x74ef9230" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x74ef9230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x74ef9408"/>
        <function-ref name="source" scoped="" ref="0x74ef94e8"/>
        <function-ref name="address" scoped="" ref="0x74ef95c8"/>
        <function-ref name="destination" scoped="" ref="0x74ef96a8"/>
        <function-ref name="setSource" scoped="" ref="0x74ef9788"/>
        <function-ref name="setDestination" scoped="" ref="0x74ef9868"/>
        <function-ref name="type" scoped="" ref="0x74ef9948"/>
        <function-ref name="setType" scoped="" ref="0x74ef9a28"/>
        <function-ref name="isForMe" scoped="" ref="0x74ef9b08"/>
        <function-ref name="setGroup" scoped="" ref="0x74ef9be8"/>
        <function-ref name="localGroup" scoped="" ref="0x74ef9cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x74f02580" loc="5:../../../tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubAMSend" scoped="" ref="0x74f02580"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x74f02758"/>
        <function-ref name="getPayload" scoped="" ref="0x74f02838"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x74f02918"/>
        <function-ref name="cancel" scoped="" ref="0x74f029f8"/>
        <function-ref name="sendDone" scoped="" ref="0x74f02ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x74f00230" loc="7:../../../tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x74f00230"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x74f00408"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x74f004e8"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x74f005c8"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x74f006a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x74f03e88" loc="3:../../../tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x74f03e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x74f02070"/>
        <function-ref name="getPayload" scoped="" ref="0x74f02150"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x74f02230"/>
        <function-ref name="cancel" scoped="" ref="0x74f02310"/>
        <function-ref name="sendDone" scoped="" ref="0x74f023f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lpl" ref="0x74f02c38" loc="6:../../../tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Lpl" scoped="" ref="0x74f02c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x74f02e10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x74f02ef0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x74f00010"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x74f000f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x75c8e8d8" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x75c8e8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75c8eab0"/>
        <function-ref name="payloadLength" scoped="" ref="0x75c8eb90"/>
        <function-ref name="getPayload" scoped="" ref="0x75c8ec70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75c8ed50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75c8ee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x75c8e5c0" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x75c8e5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75c8e798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x75c8d010" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x75c8d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x75c8d1e8"/>
        <function-ref name="source" scoped="" ref="0x75c8d2c8"/>
        <function-ref name="address" scoped="" ref="0x75c8d3a8"/>
        <function-ref name="destination" scoped="" ref="0x75c8d488"/>
        <function-ref name="setSource" scoped="" ref="0x75c8d568"/>
        <function-ref name="setDestination" scoped="" ref="0x75c8d648"/>
        <function-ref name="type" scoped="" ref="0x75c8d728"/>
        <function-ref name="setType" scoped="" ref="0x75c8d808"/>
        <function-ref name="isForMe" scoped="" ref="0x75c8d8e8"/>
        <function-ref name="setGroup" scoped="" ref="0x75c8d9c8"/>
        <function-ref name="localGroup" scoped="" ref="0x75c8daa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75c8cb88" loc="46:../../../tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75c8cb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75c8cd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x75c8cef0" loc="47:../../../tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x75c8cef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x75c890e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x75c891c0"/>
        <function-ref name="led1On" scoped="" ref="0x75c892a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x75c89380"/>
        <function-ref name="led2Toggle" scoped="" ref="0x75c89460"/>
        <function-ref name="get" scoped="" ref="0x75c89540"/>
        <function-ref name="led1Off" scoped="" ref="0x75c89620"/>
        <function-ref name="led2Off" scoped="" ref="0x75c899a0"/>
        <function-ref name="set" scoped="" ref="0x75c89700"/>
        <function-ref name="led0On" scoped="" ref="0x75c897e0"/>
        <function-ref name="led2On" scoped="" ref="0x75c898c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x75c5ee30" loc="51:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="DemoAppC.Object32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisseminationUpdate" scoped="" ref="0x75c5ee30"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x75c04468"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x75c5e010" loc="50:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="DemoAppC.Object32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisseminationValue" scoped="" ref="0x75c5e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x75c5eb70"/>
        <function-ref name="get" scoped="" ref="0x75c5e658"/>
        <function-ref name="set" scoped="" ref="0x75c5e8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="changedTask" ref="0x74ee26d0" loc="62:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DemoAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="changedTask" scoped="" ref="0x74ee26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x74ee28a8"/>
        <function-ref name="runTask" scoped="" ref="0x74ee2988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationCache" ref="0x74ee3280" loc="50:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DemoAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisseminationCache" scoped="" ref="0x74ee3280"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-functions>
        <function-ref name="requestData" scoped="" ref="0x74ee3538"/>
        <function-ref name="storeData" scoped="" ref="0x74ee38b8"/>
        <function-ref name="newData" scoped="" ref="0x74ee3618"/>
        <function-ref name="start" scoped="" ref="0x74ee36f8"/>
        <function-ref name="requestSeqno" scoped="" ref="0x74ee37d8"/>
        <function-ref name="stop" scoped="" ref="0x74ee3458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x74ee58d0" loc="49:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DemoAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisseminationUpdate" scoped="" ref="0x74ee58d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x74ee5ef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x74ee3a18" loc="52:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DemoAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x74ee3a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x74ee3bf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x74ee3cd0"/>
        <function-ref name="led1On" scoped="" ref="0x74ee3db0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x74ee3e90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x74ee2010"/>
        <function-ref name="get" scoped="" ref="0x74ee20f0"/>
        <function-ref name="led1Off" scoped="" ref="0x74ee21d0"/>
        <function-ref name="led0On" scoped="" ref="0x74ee2550"/>
        <function-ref name="set" scoped="" ref="0x74ee2390"/>
        <function-ref name="led2On" scoped="" ref="0x74ee22b0"/>
        <function-ref name="led2Off" scoped="" ref="0x74ee2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x74ee6a80" loc="48:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DemoAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DisseminationValue" scoped="" ref="0x74ee6a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x74ee5610"/>
        <function-ref name="get" scoped="" ref="0x74ee50f8"/>
        <function-ref name="set" scoped="" ref="0x74ee5370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x74ee65d8" loc="46:/home/pi/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DemoAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x74ee65d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x74ee67b0"/>
        <function-ref name="stop" scoped="" ref="0x74ee6890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x75c60788" loc="45:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationTimerP.nc">
      <component-ref qname="DisseminationTimerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TrickleTimer" scoped="" ref="0x75c60788"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x75c60960"/>
        <function-ref name="incrementCounter" scoped="" ref="0x75c60a40"/>
        <function-ref name="reset" scoped="" ref="0x75c60b20"/>
        <function-ref name="start" scoped="" ref="0x75c60c00"/>
        <function-ref name="stop" scoped="" ref="0x75c60ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x75c5ae28" loc="55:/home/pi/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TrickleTimer" scoped="" ref="0x75c5ae28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x75c06050"/>
        <function-ref name="incrementCounter" scoped="" ref="0x75c06130"/>
        <function-ref name="reset" scoped="" ref="0x75c06210"/>
        <function-ref name="start" scoped="" ref="0x75c062f0"/>
        <function-ref name="stop" scoped="" ref="0x75c063d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pending" ref="0x74ecf2e8" loc="62:/home/pi/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pending" scoped="" ref="0x74ecf2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x74ecf4c0"/>
        <function-ref name="clear" scoped="" ref="0x74ecf5a0"/>
        <function-ref name="toggle" scoped="" ref="0x74ecf680"/>
        <function-ref name="get" scoped="" ref="0x74ecf760"/>
        <function-ref name="assign" scoped="" ref="0x74ecf840"/>
        <function-ref name="setAll" scoped="" ref="0x74ecf920"/>
        <function-ref name="set" scoped="" ref="0x74ecfa00"/>
        <function-ref name="size" scoped="" ref="0x74ecfae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Changed" ref="0x74ecfc40" loc="63:/home/pi/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Changed" scoped="" ref="0x74ecfc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x74ecfe18"/>
        <function-ref name="clear" scoped="" ref="0x74ecfef8"/>
        <function-ref name="toggle" scoped="" ref="0x74ece010"/>
        <function-ref name="get" scoped="" ref="0x74ece0f0"/>
        <function-ref name="assign" scoped="" ref="0x74ece1d0"/>
        <function-ref name="setAll" scoped="" ref="0x74ece2b0"/>
        <function-ref name="set" scoped="" ref="0x74ece390"/>
        <function-ref name="size" scoped="" ref="0x74ece470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x74ece5b0" loc="64:/home/pi/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x74ece5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x74ece788"/>
        <function-ref name="rand32" scoped="" ref="0x74ece868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x74ed3980" loc="58:/home/pi/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TrickleTimer" scoped="" ref="0x74ed3980"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x74ed3b68"/>
        <function-ref name="incrementCounter" scoped="" ref="0x74ed3c48"/>
        <function-ref name="reset" scoped="" ref="0x74ed3d28"/>
        <function-ref name="start" scoped="" ref="0x74ed3e08"/>
        <function-ref name="stop" scoped="" ref="0x74ed3ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x74ed35d0" loc="57:/home/pi/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x74ed35d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x74ed37a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="timerTask" ref="0x74ecd5f0" loc="154:/home/pi/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="timerTask" scoped="" ref="0x74ecd5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x74ecd7c8"/>
        <function-ref name="runTask" scoped="" ref="0x74ecd8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x74ece9a8" loc="65:/home/pi/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x74ece9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x74eceb80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x74ecec60"/>
        <function-ref name="led1On" scoped="" ref="0x74eced40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x74ecee20"/>
        <function-ref name="led2Toggle" scoped="" ref="0x74ecef00"/>
        <function-ref name="get" scoped="" ref="0x74ecd010"/>
        <function-ref name="led1Off" scoped="" ref="0x74ecd0f0"/>
        <function-ref name="led0On" scoped="" ref="0x74ecd470"/>
        <function-ref name="set" scoped="" ref="0x74ecd2b0"/>
        <function-ref name="led2On" scoped="" ref="0x74ecd1d0"/>
        <function-ref name="led2Off" scoped="" ref="0x74ecd390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x74ed2100" loc="61:/home/pi/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x74ed2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x74ed1be0"/>
        <function-ref name="fired" scoped="" ref="0x74ed2e80"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x74ed15a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x74ed1348"/>
        <function-ref name="getdt" scoped="" ref="0x74ecf0b8"/>
        <function-ref name="gett0" scoped="" ref="0x74ed1e38"/>
        <function-ref name="isRunning" scoped="" ref="0x74ed10f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x74ed2728"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x74ed18c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x74ed29a8"/>
        <function-ref name="stop" scoped="" ref="0x74ed2c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x74ecb010" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x74ecb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x74ecab00"/>
        <function-ref name="fired" scoped="" ref="0x74ecbd90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x74eca4c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x74eca268"/>
        <function-ref name="getdt" scoped="" ref="0x74ec8010"/>
        <function-ref name="gett0" scoped="" ref="0x74ecad58"/>
        <function-ref name="isRunning" scoped="" ref="0x74eca010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x74ecb638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x74eca7e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x74ecb8b8"/>
        <function-ref name="stop" scoped="" ref="0x74ecbb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x74ec8d00" loc="46:../../../tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x74ec8d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x74ec8ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x74ec7060" loc="47:../../../tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BitVector" scoped="" ref="0x74ec7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x74ec7238"/>
        <function-ref name="clear" scoped="" ref="0x74ec7318"/>
        <function-ref name="toggle" scoped="" ref="0x74ec73f8"/>
        <function-ref name="get" scoped="" ref="0x74ec74d8"/>
        <function-ref name="assign" scoped="" ref="0x74ec75b8"/>
        <function-ref name="setAll" scoped="" ref="0x74ec7698"/>
        <function-ref name="set" scoped="" ref="0x74ec7778"/>
        <function-ref name="size" scoped="" ref="0x74ec7858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x74ec64c0" loc="46:../../../tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x74ec64c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x74ec6698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x74ec67f8" loc="47:../../../tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BitVector" scoped="" ref="0x74ec67f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x74ec69d0"/>
        <function-ref name="clear" scoped="" ref="0x74ec6ab0"/>
        <function-ref name="toggle" scoped="" ref="0x74ec6b90"/>
        <function-ref name="get" scoped="" ref="0x74ec6c70"/>
        <function-ref name="assign" scoped="" ref="0x74ec6d50"/>
        <function-ref name="setAll" scoped="" ref="0x74ec6e30"/>
        <function-ref name="set" scoped="" ref="0x74ec6f10"/>
        <function-ref name="size" scoped="" ref="0x74ec5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x75bfb800" loc="59:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x75bfb800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x75bfb9d8"/>
        <function-ref name="setRoot" scoped="" ref="0x75bfbab8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x75bfbb98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x75bff108" loc="54:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionPacket" scoped="" ref="0x75bff108"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x75bff2e0"/>
        <function-ref name="setOrigin" scoped="" ref="0x75bff3c0"/>
        <function-ref name="setType" scoped="" ref="0x75bff4a0"/>
        <function-ref name="getOrigin" scoped="" ref="0x75bff580"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x75bff660"/>
        <function-ref name="getType" scoped="" ref="0x75bff740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x75be6178" loc="65:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionDebug" scoped="" ref="0x75be6178"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x75be6350"/>
        <function-ref name="logEventMsg" scoped="" ref="0x75be6430"/>
        <function-ref name="logEventSimple" scoped="" ref="0x75be6510"/>
        <function-ref name="logEventRoute" scoped="" ref="0x75be65f0"/>
        <function-ref name="logEventDbg" scoped="" ref="0x75be66d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x75bfa5d8" loc="51:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Intercept" scoped="" ref="0x75bfa5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x768fd2a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x75bfa7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x75bfa930" loc="53:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x75bfa930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75bfab08"/>
        <function-ref name="payloadLength" scoped="" ref="0x75bfabe8"/>
        <function-ref name="getPayload" scoped="" ref="0x75bfacc8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75bfada8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75bfae88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x75c009c8" loc="50:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x75c009c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x768fd2a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75c00ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x75c018f8" loc="48:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x75c018f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75c01ad0"/>
        <function-ref name="getPayload" scoped="" ref="0x75c01bb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75c01c90"/>
        <function-ref name="cancel" scoped="" ref="0x75c01d70"/>
        <function-ref name="sendDone" scoped="" ref="0x75c01e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x75bfe678" loc="57:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpInfo" scoped="" ref="0x75bfe678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x75bfe850"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x75bfe930"/>
        <function-ref name="numNeighbors" scoped="" ref="0x75bfea10"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x75bfeaf0"/>
        <function-ref name="getEtx" scoped="" ref="0x75bfebd0"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x75bfecb0"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x75bfed90"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x75bfee70"/>
        <function-ref name="getParent" scoped="" ref="0x75bfb010"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x75bfb0f0"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x75bfb1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x75c00318" loc="49:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x75c00318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x768fd2a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75c004f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x75bfb398" loc="58:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpCongestion" scoped="" ref="0x75bfb398"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x75bfb570"/>
        <function-ref name="setClientCongested" scoped="" ref="0x75bfb650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnicastNameFreeRouting" ref="0x75bec2a0" loc="60:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x75bec2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x75bec478"/>
        <function-ref name="routeFound" scoped="" ref="0x75bec558"/>
        <function-ref name="nextHop" scoped="" ref="0x75bec638"/>
        <function-ref name="noRoute" scoped="" ref="0x75bec718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x75bf1618" loc="55:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpPacket" scoped="" ref="0x75bf1618"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x75bf17f0"/>
        <function-ref name="option" scoped="" ref="0x75bf18d0"/>
        <function-ref name="setEtx" scoped="" ref="0x75bf19b0"/>
        <function-ref name="setOrigin" scoped="" ref="0x75bf1a90"/>
        <function-ref name="clearOption" scoped="" ref="0x75bf1b70"/>
        <function-ref name="getEtx" scoped="" ref="0x75bf1c50"/>
        <function-ref name="getOrigin" scoped="" ref="0x75bf1d30"/>
        <function-ref name="setType" scoped="" ref="0x75bf1e10"/>
        <function-ref name="setOption" scoped="" ref="0x75bf1ef0"/>
        <function-ref name="matchPacket" scoped="" ref="0x75bfe010"/>
        <function-ref name="getThl" scoped="" ref="0x75bfe0f0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x75bfe1d0"/>
        <function-ref name="matchInstance" scoped="" ref="0x75bfe2b0"/>
        <function-ref name="getType" scoped="" ref="0x75bfe410"/>
        <function-ref name="setThl" scoped="" ref="0x75bfe4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x75c011c8" loc="47:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x75c011c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x75c013a0"/>
        <function-ref name="stop" scoped="" ref="0x75c01480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x75beb490" loc="64:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionId" scoped="" ref="0x75beb490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x75beb6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x75be0e20" loc="92:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x75be0e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x75bdf010"/>
        <function-ref name="setRoot" scoped="" ref="0x75bdf0f0"/>
        <function-ref name="unsetRoot" scoped="" ref="0x75bdf1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x75be38d0" loc="86:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionPacket" scoped="" ref="0x75be38d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x75be3aa8"/>
        <function-ref name="setOrigin" scoped="" ref="0x75be3b88"/>
        <function-ref name="setType" scoped="" ref="0x75be3c68"/>
        <function-ref name="getOrigin" scoped="" ref="0x75be3d48"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x75be3e28"/>
        <function-ref name="getType" scoped="" ref="0x75be3f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x75bdadf8" loc="90:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkEstimator" scoped="" ref="0x75bdadf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="getLinkQuality" scoped="" ref="0x75be07f0"/>
        <function-ref name="txAck" scoped="" ref="0x75be00f0"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x75be01d0"/>
        <function-ref name="txNoAck" scoped="" ref="0x75be02b0"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x75be0390"/>
        <function-ref name="evicted" scoped="" ref="0x75be0470"/>
        <function-ref name="clearDLQ" scoped="" ref="0x75be0550"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x75be0630"/>
        <function-ref name="getForwardQuality" scoped="" ref="0x75be0710"/>
        <function-ref name="getReverseQuality" scoped="" ref="0x75be0010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x75bd81e8" loc="98:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionDebug" scoped="" ref="0x75bd81e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x75bd83c0"/>
        <function-ref name="logEventMsg" scoped="" ref="0x75bd84a0"/>
        <function-ref name="logEventSimple" scoped="" ref="0x75bd8580"/>
        <function-ref name="logEventRoute" scoped="" ref="0x75bd8660"/>
        <function-ref name="logEventDbg" scoped="" ref="0x75bd8740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x75be4d68" loc="83:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Intercept" scoped="" ref="0x75be4d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x768fd2a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x75be3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x75be3190" loc="85:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x75be3190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75be3368"/>
        <function-ref name="payloadLength" scoped="" ref="0x75be3448"/>
        <function-ref name="getPayload" scoped="" ref="0x75be3528"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75be3608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75be36e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x75be46c0" loc="82:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x75be46c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x768fd2a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75be4898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x75be55a8" loc="80:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x75be55a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75be5780"/>
        <function-ref name="getPayload" scoped="" ref="0x75be5860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75be5940"/>
        <function-ref name="cancel" scoped="" ref="0x75be5a20"/>
        <function-ref name="sendDone" scoped="" ref="0x75be5b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x75be1198" loc="89:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpInfo" scoped="" ref="0x75be1198"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x75be1370"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x75be1450"/>
        <function-ref name="numNeighbors" scoped="" ref="0x75be1530"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x75be1610"/>
        <function-ref name="getEtx" scoped="" ref="0x75be16f0"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x75be17d0"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x75be18b0"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x75be1990"/>
        <function-ref name="getParent" scoped="" ref="0x75be1a70"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x75be1b50"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x75be1c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x75be4010" loc="81:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x75be4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x768fd2a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75be41e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x75be09b8" loc="91:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpCongestion" scoped="" ref="0x75be09b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x75be0b90"/>
        <function-ref name="setClientCongested" scoped="" ref="0x75be0c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnicastNameFreeRouting" ref="0x75bdf3f0" loc="93:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x75bdf3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x75bdf648"/>
        <function-ref name="routeFound" scoped="" ref="0x75bdf728"/>
        <function-ref name="nextHop" scoped="" ref="0x75bdf808"/>
        <function-ref name="noRoute" scoped="" ref="0x75bdf8e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x75be20c0" loc="87:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpPacket" scoped="" ref="0x75be20c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x75be2298"/>
        <function-ref name="option" scoped="" ref="0x75be2378"/>
        <function-ref name="setEtx" scoped="" ref="0x75be2458"/>
        <function-ref name="setOrigin" scoped="" ref="0x75be2538"/>
        <function-ref name="clearOption" scoped="" ref="0x75be2618"/>
        <function-ref name="getEtx" scoped="" ref="0x75be26f8"/>
        <function-ref name="getOrigin" scoped="" ref="0x75be27d8"/>
        <function-ref name="setType" scoped="" ref="0x75be28b8"/>
        <function-ref name="setOption" scoped="" ref="0x75be2998"/>
        <function-ref name="matchPacket" scoped="" ref="0x75be2a78"/>
        <function-ref name="getThl" scoped="" ref="0x75be2b58"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x75be2c38"/>
        <function-ref name="matchInstance" scoped="" ref="0x75be2d18"/>
        <function-ref name="getType" scoped="" ref="0x75be2e78"/>
        <function-ref name="setThl" scoped="" ref="0x75be1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x75be6e38" loc="79:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x75be6e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x75be5050"/>
        <function-ref name="stop" scoped="" ref="0x75be5130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x75bdfdf0" loc="97:/home/pi/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionId" scoped="" ref="0x75bdfdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x75bd8010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x75b08b10" loc="142:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x75b08b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75b08ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x75b07d68" loc="145:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x75b07d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x75b06010"/>
        <function-ref name="setRoot" scoped="" ref="0x75b060f0"/>
        <function-ref name="unsetRoot" scoped="" ref="0x75b061d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x75b16d18" loc="126:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x75b16d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75b16ef0"/>
        <function-ref name="getPayload" scoped="" ref="0x75b14010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75b140f0"/>
        <function-ref name="cancel" scoped="" ref="0x75b141d0"/>
        <function-ref name="sendDone" scoped="" ref="0x75b142b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x75b04408" loc="156:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionDebug" scoped="" ref="0x75b04408"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x75b045e0"/>
        <function-ref name="logEventMsg" scoped="" ref="0x75b046c0"/>
        <function-ref name="logEventSimple" scoped="" ref="0x75b047a0"/>
        <function-ref name="logEventRoute" scoped="" ref="0x75b04880"/>
        <function-ref name="logEventDbg" scoped="" ref="0x75b04960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x75b17150" loc="116:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionPacket" scoped="" ref="0x75b17150"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x75b17328"/>
        <function-ref name="setOrigin" scoped="" ref="0x75b17408"/>
        <function-ref name="setType" scoped="" ref="0x75b174e8"/>
        <function-ref name="getOrigin" scoped="" ref="0x75b175c8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x75b176a8"/>
        <function-ref name="getType" scoped="" ref="0x75b17788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x75b12bc8" loc="129:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkEstimator" scoped="" ref="0x75b12bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="getReverseQuality" scoped="" ref="0x75b11630"/>
        <function-ref name="txAck" scoped="" ref="0x75b12e80"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x75b11010"/>
        <function-ref name="txNoAck" scoped="" ref="0x75b110f0"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x75b111d0"/>
        <function-ref name="evicted" scoped="" ref="0x75b112b0"/>
        <function-ref name="clearDLQ" scoped="" ref="0x75b11390"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x75b11470"/>
        <function-ref name="getForwardQuality" scoped="" ref="0x75b11550"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x75b12da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SentCache" ref="0x75b0ad98" loc="140:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SentCache" scoped="" ref="0x75b0ad98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
              <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x75b083e0"/>
        <function-ref name="flush" scoped="" ref="0x75b088e0"/>
        <function-ref name="lookup" scoped="" ref="0x75b08660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x75b186d0" loc="114:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Intercept" scoped="" ref="0x75b186d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x768fd2a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x75b188b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x75b189f8" loc="115:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x75b189f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75b18bd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x75b18cb0"/>
        <function-ref name="getPayload" scoped="" ref="0x75b18d90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75b18e70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75b17010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x75b18310" loc="113:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x75b18310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x768fd2a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75b184f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x75b04010" loc="149:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x75b04010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x75b041e8"/>
        <function-ref name="rand32" scoped="" ref="0x75b042c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x75b197d8" loc="111:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x75b197d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75b199c0"/>
        <function-ref name="getPayload" scoped="" ref="0x75b19aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75b19b80"/>
        <function-ref name="cancel" scoped="" ref="0x75b19c60"/>
        <function-ref name="sendDone" scoped="" ref="0x75b19d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RetxmitTimer" ref="0x75b14978" loc="128:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RetxmitTimer" scoped="" ref="0x75b14978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75b12508"/>
        <function-ref name="fired" scoped="" ref="0x75b137a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75b13ea8"/>
        <function-ref name="isOneShot" scoped="" ref="0x75b13c50"/>
        <function-ref name="getdt" scoped="" ref="0x75b129b8"/>
        <function-ref name="gett0" scoped="" ref="0x75b12760"/>
        <function-ref name="isRunning" scoped="" ref="0x75b139f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75b13048"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75b121e8"/>
        <function-ref name="startOneShot" scoped="" ref="0x75b132c8"/>
        <function-ref name="stop" scoped="" ref="0x75b13548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x75b04ac0" loc="162:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x75b04ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x75b04c98"/>
        <function-ref name="stopDone" scoped="" ref="0x75b04d78"/>
        <function-ref name="start" scoped="" ref="0x75b04e58"/>
        <function-ref name="stop" scoped="" ref="0x75b02010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x75b02190" loc="234:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendTask" scoped="" ref="0x75b02190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75b02368"/>
        <function-ref name="runTask" scoped="" ref="0x75b02448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x75b104c8" loc="137:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendQueue" scoped="" ref="0x75b104c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x75bd02f8"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x75bd05a8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x75b0e4c0"/>
        <function-ref name="enqueue" scoped="" ref="0x75b0ebb0"/>
        <function-ref name="element" scoped="" ref="0x75b0ef08"/>
        <function-ref name="full" scoped="" ref="0x75b10d48"/>
        <function-ref name="maxSize" scoped="" ref="0x75b0e268"/>
        <function-ref name="dequeue" scoped="" ref="0x75b0e838"/>
        <function-ref name="empty" scoped="" ref="0x75b10af0"/>
        <function-ref name="size" scoped="" ref="0x75b0e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpInfo" ref="0x75b07190" loc="144:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpInfo" scoped="" ref="0x75b07190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x75b07368"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x75b07448"/>
        <function-ref name="numNeighbors" scoped="" ref="0x75b07528"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x75b07608"/>
        <function-ref name="getEtx" scoped="" ref="0x75b076e8"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x75b077c8"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x75b078a8"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x75b07988"/>
        <function-ref name="getParent" scoped="" ref="0x75b07a68"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x75b07b48"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x75b07c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x75b11d48" loc="131:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x75b11d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75b11f20"/>
        <function-ref name="payloadLength" scoped="" ref="0x75b10018"/>
        <function-ref name="getPayload" scoped="" ref="0x75b100f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75b101d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75b102b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75b19030" loc="109:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75b19030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75b19208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x75b19f18" loc="112:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x75b19f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x768fd2a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75b18118"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x75b168d0" loc="118:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpCongestion" scoped="" ref="0x75b168d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x75b16aa8"/>
        <function-ref name="setClientCongested" scoped="" ref="0x75b16b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnicastNameFreeRouting" ref="0x75b11770" loc="130:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x75b11770"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x75b11948"/>
        <function-ref name="routeFound" scoped="" ref="0x75b11a28"/>
        <function-ref name="nextHop" scoped="" ref="0x75b11b08"/>
        <function-ref name="noRoute" scoped="" ref="0x75b11be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x75b053f0" loc="148:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x75b053f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x75b055c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x75b056a8"/>
        <function-ref name="led1On" scoped="" ref="0x75b05788"/>
        <function-ref name="led1Toggle" scoped="" ref="0x75b05868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x75b05948"/>
        <function-ref name="get" scoped="" ref="0x75b05a28"/>
        <function-ref name="led1Off" scoped="" ref="0x75b05b08"/>
        <function-ref name="led2On" scoped="" ref="0x75b05e88"/>
        <function-ref name="set" scoped="" ref="0x75b05cc8"/>
        <function-ref name="led2Off" scoped="" ref="0x75b05be8"/>
        <function-ref name="led0On" scoped="" ref="0x75b05da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x75b143f0" loc="127:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x75b143f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x75b145c8"/>
        <function-ref name="noAck" scoped="" ref="0x75b146a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x75b14788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x75b178c8" loc="117:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpPacket" scoped="" ref="0x75b178c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x75b17aa0"/>
        <function-ref name="option" scoped="" ref="0x75b17b80"/>
        <function-ref name="setEtx" scoped="" ref="0x75b17c60"/>
        <function-ref name="setOrigin" scoped="" ref="0x75b17d40"/>
        <function-ref name="clearOption" scoped="" ref="0x75b17e20"/>
        <function-ref name="getEtx" scoped="" ref="0x75b17f00"/>
        <function-ref name="getOrigin" scoped="" ref="0x75b16010"/>
        <function-ref name="setType" scoped="" ref="0x75b160f0"/>
        <function-ref name="setOption" scoped="" ref="0x75b161d0"/>
        <function-ref name="matchPacket" scoped="" ref="0x75b162b0"/>
        <function-ref name="getThl" scoped="" ref="0x75b16390"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x75b16470"/>
        <function-ref name="matchInstance" scoped="" ref="0x75b16550"/>
        <function-ref name="getType" scoped="" ref="0x75b166b0"/>
        <function-ref name="setThl" scoped="" ref="0x75b16790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QEntryPool" ref="0x75b0d328" loc="138:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="QEntryPool" scoped="" ref="0x75b0d328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x75bd02f8"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x75bd05a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75b0b400"/>
        <function-ref name="maxSize" scoped="" ref="0x75b0de00"/>
        <function-ref name="empty" scoped="" ref="0x75b0d950"/>
        <function-ref name="put" scoped="" ref="0x75b0b068"/>
        <function-ref name="size" scoped="" ref="0x75b0dba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x75b067d0" loc="147:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x75b067d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x75b069a8"/>
        <function-ref name="source" scoped="" ref="0x75b06a88"/>
        <function-ref name="address" scoped="" ref="0x75b06b68"/>
        <function-ref name="destination" scoped="" ref="0x75b06c48"/>
        <function-ref name="setSource" scoped="" ref="0x75b06d28"/>
        <function-ref name="setDestination" scoped="" ref="0x75b06e08"/>
        <function-ref name="type" scoped="" ref="0x75b06ee8"/>
        <function-ref name="setType" scoped="" ref="0x75b05010"/>
        <function-ref name="isForMe" scoped="" ref="0x75b050f0"/>
        <function-ref name="setGroup" scoped="" ref="0x75b051d0"/>
        <function-ref name="localGroup" scoped="" ref="0x75b052b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x75b19348" loc="110:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x75b19348"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x75b19520"/>
        <function-ref name="stop" scoped="" ref="0x75b19600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x75b08e48" loc="143:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSnoop" scoped="" ref="0x75b08e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75b07050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MessagePool" ref="0x75b0b840" loc="139:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MessagePool" scoped="" ref="0x75b0b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
            <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75b0a938"/>
        <function-ref name="maxSize" scoped="" ref="0x75b0a348"/>
        <function-ref name="empty" scoped="" ref="0x75b0be68"/>
        <function-ref name="put" scoped="" ref="0x75b0a5a0"/>
        <function-ref name="size" scoped="" ref="0x75b0a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x75b063a8" loc="146:/home/pi/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionId" scoped="" ref="0x75b063a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x75b06690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x75afd950" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="CtpP.MessagePoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x75afd950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
            <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75afcab0"/>
        <function-ref name="maxSize" scoped="" ref="0x75afc4c0"/>
        <function-ref name="empty" scoped="" ref="0x75afc010"/>
        <function-ref name="put" scoped="" ref="0x75afc718"/>
        <function-ref name="size" scoped="" ref="0x75afc268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x74e1ea00" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x74e1ea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
            <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x74e1dae8"/>
        <function-ref name="maxSize" scoped="" ref="0x74e1d4f8"/>
        <function-ref name="empty" scoped="" ref="0x74e1d048"/>
        <function-ref name="put" scoped="" ref="0x74e1d750"/>
        <function-ref name="size" scoped="" ref="0x74e1d2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x74e1e658" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x74e1e658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x74e1e830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x75ae6e40" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="CtpP.QEntryPoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x75ae6e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x75bd02f8"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x75bd05a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x75ae4010"/>
        <function-ref name="maxSize" scoped="" ref="0x75ae5968"/>
        <function-ref name="empty" scoped="" ref="0x75ae54b8"/>
        <function-ref name="put" scoped="" ref="0x75ae5bc0"/>
        <function-ref name="size" scoped="" ref="0x75ae5710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x74e131e0" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x74e131e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x75bd02f8"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x75bd05a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x74e122c0"/>
        <function-ref name="maxSize" scoped="" ref="0x74e13cb8"/>
        <function-ref name="empty" scoped="" ref="0x74e13808"/>
        <function-ref name="put" scoped="" ref="0x74e13f10"/>
        <function-ref name="size" scoped="" ref="0x74e13a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x74e15e00" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x74e15e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x74e13010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x75ae1158" loc="43:../../../tos/system/QueueC.nc">
      <component-ref qname="CtpP.SendQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x75ae1158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x75bd02f8"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x75bd05a8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x75ae00f0"/>
        <function-ref name="enqueue" scoped="" ref="0x75ae07e0"/>
        <function-ref name="element" scoped="" ref="0x75ae0b38"/>
        <function-ref name="full" scoped="" ref="0x75ae19d8"/>
        <function-ref name="maxSize" scoped="" ref="0x75ae1e88"/>
        <function-ref name="dequeue" scoped="" ref="0x75ae0468"/>
        <function-ref name="empty" scoped="" ref="0x75ae1780"/>
        <function-ref name="size" scoped="" ref="0x75ae1c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x75ace0c0" loc="39:/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <component-ref qname="CtpP.SentCacheP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Cache" scoped="" ref="0x75ace0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
              <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x75ace6e8"/>
        <function-ref name="flush" scoped="" ref="0x75acebe8"/>
        <function-ref name="lookup" scoped="" ref="0x75ace968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x74e03468" loc="46:/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Cache" scoped="" ref="0x74e03468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
              <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x74e03a90"/>
        <function-ref name="flush" scoped="" ref="0x74e02010"/>
        <function-ref name="lookup" scoped="" ref="0x74e03d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x74e030a0" loc="45:/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x74e030a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x74e03278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpPacket" ref="0x74e02250" loc="49:/home/pi/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpPacket" scoped="" ref="0x74e02250"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x74e02428"/>
        <function-ref name="option" scoped="" ref="0x74e02508"/>
        <function-ref name="setEtx" scoped="" ref="0x74e025e8"/>
        <function-ref name="setOrigin" scoped="" ref="0x74e026c8"/>
        <function-ref name="clearOption" scoped="" ref="0x74e027a8"/>
        <function-ref name="getEtx" scoped="" ref="0x74e02888"/>
        <function-ref name="getOrigin" scoped="" ref="0x74e02968"/>
        <function-ref name="setType" scoped="" ref="0x74e02a48"/>
        <function-ref name="setOption" scoped="" ref="0x74e02b28"/>
        <function-ref name="matchPacket" scoped="" ref="0x74e02c08"/>
        <function-ref name="getThl" scoped="" ref="0x74e02ce8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x74e02dc8"/>
        <function-ref name="matchInstance" scoped="" ref="0x74e02ea8"/>
        <function-ref name="getType" scoped="" ref="0x74e01090"/>
        <function-ref name="setThl" scoped="" ref="0x74e01170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x75ab2b98" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RoutingBeaconTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x75ab2b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75ab06a8"/>
        <function-ref name="fired" scoped="" ref="0x75ab1938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75ab0068"/>
        <function-ref name="isOneShot" scoped="" ref="0x75ab1de8"/>
        <function-ref name="getdt" scoped="" ref="0x75ab0b58"/>
        <function-ref name="gett0" scoped="" ref="0x75ab0900"/>
        <function-ref name="isRunning" scoped="" ref="0x75ab1b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75ab11e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75ab0388"/>
        <function-ref name="startOneShot" scoped="" ref="0x75ab1460"/>
        <function-ref name="stop" scoped="" ref="0x75ab16e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x75aae9a0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RouteUpdateTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x75aae9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75aac4c8"/>
        <function-ref name="fired" scoped="" ref="0x75aad768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75aade70"/>
        <function-ref name="isOneShot" scoped="" ref="0x75aadc18"/>
        <function-ref name="getdt" scoped="" ref="0x75aac978"/>
        <function-ref name="gett0" scoped="" ref="0x75aac720"/>
        <function-ref name="isRunning" scoped="" ref="0x75aad9c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75aad010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75aac1a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x75aad290"/>
        <function-ref name="stop" scoped="" ref="0x75aad510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x75aa0dd8" loc="57:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x75aa0dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75a9d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x75aa3538" loc="47:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkEstimator" scoped="" ref="0x75aa3538"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="getLinkQuality" scoped="" ref="0x75aa3ef0"/>
        <function-ref name="txAck" scoped="" ref="0x75aa37f0"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x75aa38d0"/>
        <function-ref name="txNoAck" scoped="" ref="0x75aa39b0"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x75aa3a90"/>
        <function-ref name="evicted" scoped="" ref="0x75aa3b70"/>
        <function-ref name="clearDLQ" scoped="" ref="0x75aa3c50"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x75aa3d30"/>
        <function-ref name="getForwardQuality" scoped="" ref="0x75aa3e10"/>
        <function-ref name="getReverseQuality" scoped="" ref="0x75aa3710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x75aa23e8" loc="49:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x75aa23e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75aa25c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x75aa26a0"/>
        <function-ref name="getPayload" scoped="" ref="0x75aa2780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75aa2860"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75aa2940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x75aa1210" loc="54:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x75aa1210"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75aa13e8"/>
        <function-ref name="getPayload" scoped="" ref="0x75aa14c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75aa15a8"/>
        <function-ref name="cancel" scoped="" ref="0x75aa1688"/>
        <function-ref name="sendDone" scoped="" ref="0x75aa1768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x75aa4a00" loc="45:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x75aa4a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75aa4bd8"/>
        <function-ref name="getPayload" scoped="" ref="0x75aa4cb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75aa4d98"/>
        <function-ref name="cancel" scoped="" ref="0x75aa4e78"/>
        <function-ref name="sendDone" scoped="" ref="0x75aa3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x75a9d560" loc="59:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x75a9d560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x75a9d7b8"/>
        <function-ref name="rand32" scoped="" ref="0x75a9d898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x75aa0670" loc="56:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x75aa0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75aa0848"/>
        <function-ref name="payloadLength" scoped="" ref="0x75aa0928"/>
        <function-ref name="getPayload" scoped="" ref="0x75aa0a08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75aa0ae8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75aa0bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75aa2090" loc="48:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75aa2090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75aa2268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x75aa1990" loc="55:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubAMPacket" scoped="" ref="0x75aa1990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x75aa1b68"/>
        <function-ref name="source" scoped="" ref="0x75aa1c48"/>
        <function-ref name="address" scoped="" ref="0x75aa1d28"/>
        <function-ref name="destination" scoped="" ref="0x75aa1e08"/>
        <function-ref name="setSource" scoped="" ref="0x75aa1ee8"/>
        <function-ref name="setDestination" scoped="" ref="0x75aa0010"/>
        <function-ref name="type" scoped="" ref="0x75aa00f0"/>
        <function-ref name="setType" scoped="" ref="0x75aa01d0"/>
        <function-ref name="isForMe" scoped="" ref="0x75aa02b0"/>
        <function-ref name="setGroup" scoped="" ref="0x75aa0390"/>
        <function-ref name="localGroup" scoped="" ref="0x75aa0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x75aa3198" loc="46:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x75aa3198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75aa3370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareBit" ref="0x75a9fe68" loc="50:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareBit" scoped="" ref="0x75a9fe68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x75aa1050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x75aa4578" loc="44:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x75aa4578"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x75aa4750"/>
        <function-ref name="stop" scoped="" ref="0x75aa4830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkPacketMetadata" ref="0x75a9d208" loc="58:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x75a9d208"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x75a9d3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x75aa9e18" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x75aa9e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75a24010"/>
        <function-ref name="getPayload" scoped="" ref="0x75a240f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75a241d0"/>
        <function-ref name="cancel" scoped="" ref="0x75a242b0"/>
        <function-ref name="sendDone" scoped="" ref="0x75a24390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x75a244d0" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x75a244d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75a246a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x75a24788"/>
        <function-ref name="getPayload" scoped="" ref="0x75a24868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75a24948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75a24a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x75a24b68" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x75a24b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x75a24d40"/>
        <function-ref name="source" scoped="" ref="0x75a24e20"/>
        <function-ref name="address" scoped="" ref="0x75a24f00"/>
        <function-ref name="destination" scoped="" ref="0x75a23010"/>
        <function-ref name="setSource" scoped="" ref="0x75a230f0"/>
        <function-ref name="setDestination" scoped="" ref="0x75a231d0"/>
        <function-ref name="type" scoped="" ref="0x75a232b0"/>
        <function-ref name="setType" scoped="" ref="0x75a23390"/>
        <function-ref name="isForMe" scoped="" ref="0x75a23470"/>
        <function-ref name="setGroup" scoped="" ref="0x75a23550"/>
        <function-ref name="localGroup" scoped="" ref="0x75a23630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x75a23790" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x75a23790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x75a23968"/>
        <function-ref name="noAck" scoped="" ref="0x75a23a48"/>
        <function-ref name="wasAcked" scoped="" ref="0x75a23b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x74dea3b8" loc="6:../../../tos/system/LplAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x74dea3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x74dea590"/>
        <function-ref name="getPayload" scoped="" ref="0x74dea670"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x74dea750"/>
        <function-ref name="cancel" scoped="" ref="0x74dea830"/>
        <function-ref name="sendDone" scoped="" ref="0x74dea910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x74deaa50" loc="7:../../../tos/system/LplAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x74deaa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x74deac28"/>
        <function-ref name="payloadLength" scoped="" ref="0x74dead08"/>
        <function-ref name="getPayload" scoped="" ref="0x74deade8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x74deaec8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x74de9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x74de9150" loc="8:../../../tos/system/LplAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x74de9150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x74de9328"/>
        <function-ref name="source" scoped="" ref="0x74de9408"/>
        <function-ref name="address" scoped="" ref="0x74de94e8"/>
        <function-ref name="destination" scoped="" ref="0x74de95c8"/>
        <function-ref name="setSource" scoped="" ref="0x74de96a8"/>
        <function-ref name="setDestination" scoped="" ref="0x74de9788"/>
        <function-ref name="type" scoped="" ref="0x74de9868"/>
        <function-ref name="setType" scoped="" ref="0x74de9948"/>
        <function-ref name="isForMe" scoped="" ref="0x74de9a28"/>
        <function-ref name="setGroup" scoped="" ref="0x74de9b08"/>
        <function-ref name="localGroup" scoped="" ref="0x74de9be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x74de9d48" loc="9:../../../tos/system/LplAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x74de9d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x74de9f20"/>
        <function-ref name="noAck" scoped="" ref="0x74de8018"/>
        <function-ref name="wasAcked" scoped="" ref="0x74de80f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x74de69a0" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x74de69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x74de6b78"/>
        <function-ref name="getPayload" scoped="" ref="0x74de6c58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x74de6d38"/>
        <function-ref name="cancel" scoped="" ref="0x74de6e18"/>
        <function-ref name="sendDone" scoped="" ref="0x74de6ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x74de3070" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x74de3070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x74de3248"/>
        <function-ref name="payloadLength" scoped="" ref="0x74de3328"/>
        <function-ref name="getPayload" scoped="" ref="0x74de3408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x74de34e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x74de35c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x74de3708" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x74de3708"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x74de38e0"/>
        <function-ref name="source" scoped="" ref="0x74de39c0"/>
        <function-ref name="address" scoped="" ref="0x74de3aa0"/>
        <function-ref name="destination" scoped="" ref="0x74de3b80"/>
        <function-ref name="setSource" scoped="" ref="0x74de3c60"/>
        <function-ref name="setDestination" scoped="" ref="0x74de3d40"/>
        <function-ref name="type" scoped="" ref="0x74de3e20"/>
        <function-ref name="setType" scoped="" ref="0x74de3f00"/>
        <function-ref name="isForMe" scoped="" ref="0x74de1010"/>
        <function-ref name="setGroup" scoped="" ref="0x74de10f0"/>
        <function-ref name="localGroup" scoped="" ref="0x74de11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x74de1330" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x74de1330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x74de1508"/>
        <function-ref name="noAck" scoped="" ref="0x74de15e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x74de16c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x74ddb9d8" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x74ddb9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x74ddbbb0"/>
        <function-ref name="getPayload" scoped="" ref="0x74ddbc90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x74ddbd70"/>
        <function-ref name="cancel" scoped="" ref="0x74ddbe50"/>
        <function-ref name="sendDone" scoped="" ref="0x74dd8010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x74dd8180" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x74dd8180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x74dd8358"/>
        <function-ref name="getPayload" scoped="" ref="0x74dd8438"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x74dd8518"/>
        <function-ref name="cancel" scoped="" ref="0x74dd85f8"/>
        <function-ref name="sendDone" scoped="" ref="0x74dd86d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x74dd8818" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x74dd8818"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x74dd89f0"/>
        <function-ref name="source" scoped="" ref="0x74dd8ad0"/>
        <function-ref name="address" scoped="" ref="0x74dd8bb0"/>
        <function-ref name="destination" scoped="" ref="0x74dd8c90"/>
        <function-ref name="setSource" scoped="" ref="0x74dd8d70"/>
        <function-ref name="setDestination" scoped="" ref="0x74dd8e50"/>
        <function-ref name="type" scoped="" ref="0x74dd6010"/>
        <function-ref name="setType" scoped="" ref="0x74dd60f0"/>
        <function-ref name="isForMe" scoped="" ref="0x74dd61d0"/>
        <function-ref name="setGroup" scoped="" ref="0x74dd62b0"/>
        <function-ref name="localGroup" scoped="" ref="0x74dd6390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x74de0c38" loc="5:../../../tos/system/LplAMSenderP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubAMSend" scoped="" ref="0x74de0c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x74de0e10"/>
        <function-ref name="getPayload" scoped="" ref="0x74de0ef0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x74ddf010"/>
        <function-ref name="cancel" scoped="" ref="0x74ddf0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x74ddf1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x74ddf8e8" loc="7:../../../tos/system/LplAMSenderP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x74ddf8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x74ddfac0"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x74ddfba0"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x74ddfc80"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x74ddfd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x74de0550" loc="3:../../../tos/system/LplAMSenderP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x74de0550"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x74de0728"/>
        <function-ref name="getPayload" scoped="" ref="0x74de0808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x74de08e8"/>
        <function-ref name="cancel" scoped="" ref="0x74de09c8"/>
        <function-ref name="sendDone" scoped="" ref="0x74de0aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lpl" ref="0x74ddf330" loc="6:../../../tos/system/LplAMSenderP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Lpl" scoped="" ref="0x74ddf330"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x74ddf508"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x74ddf5e8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x74ddf6c8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x74ddf7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x75a21030" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x75a21030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75a21208"/>
        <function-ref name="payloadLength" scoped="" ref="0x75a212e8"/>
        <function-ref name="getPayload" scoped="" ref="0x75a213c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75a214a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75a21588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x75a22ce8" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x75a22ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75a22ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x75a216c8" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x75a216c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x75a218a0"/>
        <function-ref name="source" scoped="" ref="0x75a21980"/>
        <function-ref name="address" scoped="" ref="0x75a21a60"/>
        <function-ref name="destination" scoped="" ref="0x75a21b40"/>
        <function-ref name="setSource" scoped="" ref="0x75a21c20"/>
        <function-ref name="setDestination" scoped="" ref="0x75a21d00"/>
        <function-ref name="type" scoped="" ref="0x75a21de0"/>
        <function-ref name="setType" scoped="" ref="0x75a21ec0"/>
        <function-ref name="isForMe" scoped="" ref="0x75a20010"/>
        <function-ref name="setGroup" scoped="" ref="0x75a200f0"/>
        <function-ref name="localGroup" scoped="" ref="0x75a201d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x75a1fa70" loc="47:../../../tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x75a1fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75a1fc48"/>
        <function-ref name="payloadLength" scoped="" ref="0x75a1fd28"/>
        <function-ref name="getPayload" scoped="" ref="0x75a1fe08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75a1fee8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75a1e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x75a1f758" loc="46:../../../tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x75a1f758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75a1f930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x75a1e150" loc="48:../../../tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x75a1e150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x75a1e328"/>
        <function-ref name="source" scoped="" ref="0x75a1e408"/>
        <function-ref name="address" scoped="" ref="0x75a1e4e8"/>
        <function-ref name="destination" scoped="" ref="0x75a1e5c8"/>
        <function-ref name="setSource" scoped="" ref="0x75a1e6a8"/>
        <function-ref name="setDestination" scoped="" ref="0x75a1e788"/>
        <function-ref name="type" scoped="" ref="0x75a1e868"/>
        <function-ref name="setType" scoped="" ref="0x75a1e948"/>
        <function-ref name="isForMe" scoped="" ref="0x75a1ea28"/>
        <function-ref name="setGroup" scoped="" ref="0x75a1eb08"/>
        <function-ref name="localGroup" scoped="" ref="0x75a1ebe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x75985070" loc="110:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x75985070"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x75985248"/>
        <function-ref name="setRoot" scoped="" ref="0x75985328"/>
        <function-ref name="unsetRoot" scoped="" ref="0x75985408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateRouteTask" ref="0x75979678" loc="269:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateRouteTask" scoped="" ref="0x75979678"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75979850"/>
        <function-ref name="runTask" scoped="" ref="0x75979930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x7597a408" loc="125:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionDebug" scoped="" ref="0x7597a408"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7597a5e0"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7597a6c0"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7597a7a0"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7597a880"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7597a960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x75982bd0" loc="119:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkEstimator" scoped="" ref="0x75982bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="getReverseQuality" scoped="" ref="0x75981630"/>
        <function-ref name="txAck" scoped="" ref="0x75982e88"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x75981010"/>
        <function-ref name="txNoAck" scoped="" ref="0x759810f0"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x759811d0"/>
        <function-ref name="evicted" scoped="" ref="0x759812b0"/>
        <function-ref name="clearDLQ" scoped="" ref="0x75981390"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x75981470"/>
        <function-ref name="getForwardQuality" scoped="" ref="0x75981550"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x75982da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpRoutingPacket" ref="0x75984548" loc="113:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpRoutingPacket" scoped="" ref="0x75984548"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpRoutingPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clearOptions" scoped="" ref="0x75984720"/>
        <function-ref name="setEtx" scoped="" ref="0x75984800"/>
        <function-ref name="clearOption" scoped="" ref="0x759848e0"/>
        <function-ref name="getEtx" scoped="" ref="0x759849c0"/>
        <function-ref name="setOption" scoped="" ref="0x75984aa0"/>
        <function-ref name="setParent" scoped="" ref="0x75984b80"/>
        <function-ref name="getParent" scoped="" ref="0x75984c60"/>
        <function-ref name="getOption" scoped="" ref="0x75984d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x75980410" loc="121:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x75980410"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x759805e8"/>
        <function-ref name="stopDone" scoped="" ref="0x759806c8"/>
        <function-ref name="start" scoped="" ref="0x759807a8"/>
        <function-ref name="stop" scoped="" ref="0x75980888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7597a010" loc="124:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7597a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7597a1e8"/>
        <function-ref name="rand32" scoped="" ref="0x7597a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x75985548" loc="111:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpInfo" scoped="" ref="0x75985548"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x75985720"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x75985800"/>
        <function-ref name="numNeighbors" scoped="" ref="0x759858e0"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x759859c0"/>
        <function-ref name="getEtx" scoped="" ref="0x75985aa0"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x75985b80"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x75985c60"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x75985d40"/>
        <function-ref name="getParent" scoped="" ref="0x75985e20"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x75985f00"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x75984010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBeaconTask" ref="0x75979240" loc="388:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendBeaconTask" scoped="" ref="0x75979240"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75979418"/>
        <function-ref name="runTask" scoped="" ref="0x759794f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75984e80" loc="114:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75984e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75982070"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSend" ref="0x75982200" loc="117:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BeaconSend" scoped="" ref="0x75982200"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x759823d8"/>
        <function-ref name="getPayload" scoped="" ref="0x759824b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75982598"/>
        <function-ref name="cancel" scoped="" ref="0x75982678"/>
        <function-ref name="sendDone" scoped="" ref="0x75982758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconTimer" ref="0x75980a78" loc="122:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BeaconTimer" scoped="" ref="0x75980a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7597e570"/>
        <function-ref name="fired" scoped="" ref="0x7597f810"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7597ff18"/>
        <function-ref name="isOneShot" scoped="" ref="0x7597fcc0"/>
        <function-ref name="getdt" scoped="" ref="0x7597ea20"/>
        <function-ref name="gett0" scoped="" ref="0x7597e7c8"/>
        <function-ref name="isRunning" scoped="" ref="0x7597fa68"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7597f0b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7597e250"/>
        <function-ref name="startOneShot" scoped="" ref="0x7597f338"/>
        <function-ref name="stop" scoped="" ref="0x7597f5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteTimer" ref="0x7597ece0" loc="123:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RouteTimer" scoped="" ref="0x7597ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7597b8a8"/>
        <function-ref name="fired" scoped="" ref="0x7597cb18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7597b268"/>
        <function-ref name="isOneShot" scoped="" ref="0x7597b010"/>
        <function-ref name="getdt" scoped="" ref="0x7597bd58"/>
        <function-ref name="gett0" scoped="" ref="0x7597bb00"/>
        <function-ref name="isRunning" scoped="" ref="0x7597cd70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7597c3c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7597b588"/>
        <function-ref name="startOneShot" scoped="" ref="0x7597c640"/>
        <function-ref name="stop" scoped="" ref="0x7597c8c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpCongestion" ref="0x7597aaa0" loc="126:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CtpCongestion" scoped="" ref="0x7597aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7597ac78"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7597ad58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareBit" ref="0x7597ae98" loc="128:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareBit" scoped="" ref="0x7597ae98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x759790c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconReceive" ref="0x759828b8" loc="118:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BeaconReceive" scoped="" ref="0x759828b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75982a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x75981770" loc="120:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x75981770"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x75981948"/>
        <function-ref name="source" scoped="" ref="0x75981a28"/>
        <function-ref name="address" scoped="" ref="0x75981b08"/>
        <function-ref name="destination" scoped="" ref="0x75981be8"/>
        <function-ref name="setSource" scoped="" ref="0x75981cc8"/>
        <function-ref name="setDestination" scoped="" ref="0x75981da8"/>
        <function-ref name="type" scoped="" ref="0x75981e88"/>
        <function-ref name="setType" scoped="" ref="0x75980010"/>
        <function-ref name="isForMe" scoped="" ref="0x759800f0"/>
        <function-ref name="setGroup" scoped="" ref="0x759801d0"/>
        <function-ref name="localGroup" scoped="" ref="0x759802b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x75984150" loc="112:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x75984150"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x75984328"/>
        <function-ref name="stop" scoped="" ref="0x75984408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Routing" ref="0x75986a88" loc="109:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Routing" scoped="" ref="0x75986a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x75986c60"/>
        <function-ref name="routeFound" scoped="" ref="0x75986d40"/>
        <function-ref name="nextHop" scoped="" ref="0x75986e20"/>
        <function-ref name="noRoute" scoped="" ref="0x75986f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x75973a70" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RetxmitTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x75973a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75971570"/>
        <function-ref name="fired" scoped="" ref="0x75972810"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75972f18"/>
        <function-ref name="isOneShot" scoped="" ref="0x75972cc0"/>
        <function-ref name="getdt" scoped="" ref="0x75971a20"/>
        <function-ref name="gett0" scoped="" ref="0x759717c8"/>
        <function-ref name="isRunning" scoped="" ref="0x75972a68"/>
        <function-ref name="startPeriodic" scoped="" ref="0x759720b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75971250"/>
        <function-ref name="startOneShot" scoped="" ref="0x75972338"/>
        <function-ref name="stop" scoped="" ref="0x759725b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7596ed70" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7596ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7596d010"/>
        <function-ref name="getPayload" scoped="" ref="0x7596d0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7596d1d0"/>
        <function-ref name="cancel" scoped="" ref="0x7596d2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7596d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7596d4d0" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7596d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7596d6a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7596d788"/>
        <function-ref name="getPayload" scoped="" ref="0x7596d868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7596d948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7596da28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7596db68" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7596db68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7596dd40"/>
        <function-ref name="source" scoped="" ref="0x7596de20"/>
        <function-ref name="address" scoped="" ref="0x7596df00"/>
        <function-ref name="destination" scoped="" ref="0x7596b010"/>
        <function-ref name="setSource" scoped="" ref="0x7596b0f0"/>
        <function-ref name="setDestination" scoped="" ref="0x7596b1d0"/>
        <function-ref name="type" scoped="" ref="0x7596b2b0"/>
        <function-ref name="setType" scoped="" ref="0x7596b390"/>
        <function-ref name="isForMe" scoped="" ref="0x7596b470"/>
        <function-ref name="setGroup" scoped="" ref="0x7596b550"/>
        <function-ref name="localGroup" scoped="" ref="0x7596b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7596b790" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7596b790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7596b968"/>
        <function-ref name="noAck" scoped="" ref="0x7596ba48"/>
        <function-ref name="wasAcked" scoped="" ref="0x7596bb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x74d7e780" loc="6:../../../tos/system/LplAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x74d7e780"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x74d7e958"/>
        <function-ref name="getPayload" scoped="" ref="0x74d7ea38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x74d7eb18"/>
        <function-ref name="cancel" scoped="" ref="0x74d7ebf8"/>
        <function-ref name="sendDone" scoped="" ref="0x74d7ecd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x74d7ee18" loc="7:../../../tos/system/LplAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x74d7ee18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x74d7d010"/>
        <function-ref name="payloadLength" scoped="" ref="0x74d7d0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x74d7d1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x74d7d2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x74d7d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x74d7d4d0" loc="8:../../../tos/system/LplAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x74d7d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x74d7d6a8"/>
        <function-ref name="source" scoped="" ref="0x74d7d788"/>
        <function-ref name="address" scoped="" ref="0x74d7d868"/>
        <function-ref name="destination" scoped="" ref="0x74d7d948"/>
        <function-ref name="setSource" scoped="" ref="0x74d7da28"/>
        <function-ref name="setDestination" scoped="" ref="0x74d7db08"/>
        <function-ref name="type" scoped="" ref="0x74d7dbe8"/>
        <function-ref name="setType" scoped="" ref="0x74d7dcc8"/>
        <function-ref name="isForMe" scoped="" ref="0x74d7dda8"/>
        <function-ref name="setGroup" scoped="" ref="0x74d7de88"/>
        <function-ref name="localGroup" scoped="" ref="0x74d7c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x74d7c170" loc="9:../../../tos/system/LplAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x74d7c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x74d7c348"/>
        <function-ref name="noAck" scoped="" ref="0x74d7c428"/>
        <function-ref name="wasAcked" scoped="" ref="0x74d7c508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x74d7aeb0" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x74d7aeb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x74d760c0"/>
        <function-ref name="getPayload" scoped="" ref="0x74d761a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x74d76280"/>
        <function-ref name="cancel" scoped="" ref="0x74d76360"/>
        <function-ref name="sendDone" scoped="" ref="0x74d76440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x74d76580" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x74d76580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x74d76758"/>
        <function-ref name="payloadLength" scoped="" ref="0x74d76838"/>
        <function-ref name="getPayload" scoped="" ref="0x74d76918"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x74d769f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x74d76ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x74d76c18" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x74d76c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x74d76df0"/>
        <function-ref name="source" scoped="" ref="0x74d76ed0"/>
        <function-ref name="address" scoped="" ref="0x74d75010"/>
        <function-ref name="destination" scoped="" ref="0x74d750f0"/>
        <function-ref name="setSource" scoped="" ref="0x74d751d0"/>
        <function-ref name="setDestination" scoped="" ref="0x74d752b0"/>
        <function-ref name="type" scoped="" ref="0x74d75390"/>
        <function-ref name="setType" scoped="" ref="0x74d75470"/>
        <function-ref name="isForMe" scoped="" ref="0x74d75550"/>
        <function-ref name="setGroup" scoped="" ref="0x74d75630"/>
        <function-ref name="localGroup" scoped="" ref="0x74d75710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x74d75870" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x74d75870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x74d75a48"/>
        <function-ref name="noAck" scoped="" ref="0x74d75b28"/>
        <function-ref name="wasAcked" scoped="" ref="0x74d75c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x74d6fee8" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x74d6fee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x74d6b0e0"/>
        <function-ref name="getPayload" scoped="" ref="0x74d6b1c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x74d6b2a0"/>
        <function-ref name="cancel" scoped="" ref="0x74d6b380"/>
        <function-ref name="sendDone" scoped="" ref="0x74d6b460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x74d6b5d0" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x74d6b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x74d6b7a8"/>
        <function-ref name="getPayload" scoped="" ref="0x74d6b888"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x74d6b968"/>
        <function-ref name="cancel" scoped="" ref="0x74d6ba48"/>
        <function-ref name="sendDone" scoped="" ref="0x74d6bb28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x74d6bc68" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x74d6bc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x74d6be40"/>
        <function-ref name="source" scoped="" ref="0x74d6bf20"/>
        <function-ref name="address" scoped="" ref="0x74d6a018"/>
        <function-ref name="destination" scoped="" ref="0x74d6a0f8"/>
        <function-ref name="setSource" scoped="" ref="0x74d6a1d8"/>
        <function-ref name="setDestination" scoped="" ref="0x74d6a2b8"/>
        <function-ref name="type" scoped="" ref="0x74d6a398"/>
        <function-ref name="setType" scoped="" ref="0x74d6a478"/>
        <function-ref name="isForMe" scoped="" ref="0x74d6a558"/>
        <function-ref name="setGroup" scoped="" ref="0x74d6a638"/>
        <function-ref name="localGroup" scoped="" ref="0x74d6a718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x74d731a0" loc="5:../../../tos/system/LplAMSenderP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubAMSend" scoped="" ref="0x74d731a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x74d73378"/>
        <function-ref name="getPayload" scoped="" ref="0x74d73458"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x74d73538"/>
        <function-ref name="cancel" scoped="" ref="0x74d73618"/>
        <function-ref name="sendDone" scoped="" ref="0x74d736f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x74d73e10" loc="7:../../../tos/system/LplAMSenderP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x74d73e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x74d72010"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x74d720f0"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x74d721d0"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x74d722b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x74d74a90" loc="3:../../../tos/system/LplAMSenderP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x74d74a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x74d74c68"/>
        <function-ref name="getPayload" scoped="" ref="0x74d74d48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x74d74e28"/>
        <function-ref name="cancel" scoped="" ref="0x74d74f08"/>
        <function-ref name="sendDone" scoped="" ref="0x74d73010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lpl" ref="0x74d73858" loc="6:../../../tos/system/LplAMSenderP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Lpl" scoped="" ref="0x74d73858"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x74d73a30"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x74d73b10"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x74d73bf0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x74d73cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x75969150" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x75969150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75969328"/>
        <function-ref name="payloadLength" scoped="" ref="0x75969408"/>
        <function-ref name="getPayload" scoped="" ref="0x759694e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x759695c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x759696a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7596adc8" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7596adc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75969010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x759697e8" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x759697e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x759699c0"/>
        <function-ref name="source" scoped="" ref="0x75969aa0"/>
        <function-ref name="address" scoped="" ref="0x75969b80"/>
        <function-ref name="destination" scoped="" ref="0x75969c60"/>
        <function-ref name="setSource" scoped="" ref="0x75969d40"/>
        <function-ref name="setDestination" scoped="" ref="0x75969e20"/>
        <function-ref name="type" scoped="" ref="0x75969f00"/>
        <function-ref name="setType" scoped="" ref="0x75968010"/>
        <function-ref name="isForMe" scoped="" ref="0x759680f0"/>
        <function-ref name="setGroup" scoped="" ref="0x759681d0"/>
        <function-ref name="localGroup" scoped="" ref="0x759682b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x759528f0" loc="46:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="DemoAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x759528f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75952ac8"/>
        <function-ref name="payloadLength" scoped="" ref="0x75952ba8"/>
        <function-ref name="getPayload" scoped="" ref="0x75952c88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75952d68"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75952e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x75952258" loc="45:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="DemoAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x75952258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75952430"/>
        <function-ref name="getPayload" scoped="" ref="0x75952510"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x759525f0"/>
        <function-ref name="cancel" scoped="" ref="0x759526d0"/>
        <function-ref name="sendDone" scoped="" ref="0x759527b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x74d574d0" loc="38:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="DemoAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x74d574d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x74d576a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x74d57788"/>
        <function-ref name="getPayload" scoped="" ref="0x74d57868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x74d57948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x74d57a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x74d59d58" loc="37:/home/pi/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="DemoAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x74d59d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x74d57010"/>
        <function-ref name="getPayload" scoped="" ref="0x74d570f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x74d571d0"/>
        <function-ref name="cancel" scoped="" ref="0x74d572b0"/>
        <function-ref name="sendDone" scoped="" ref="0x74d57390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionId" ref="0x74d535b8" loc="46:/home/pi/tinyos-main/tos/lib/net/CollectionIdP.nc">
      <component-ref qname="DemoAppC.CollectionSenderC.CollectionSenderP.CollectionIdP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CollectionId" scoped="" ref="0x74d535b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x74d53790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x75946ca8" loc="45:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
      <component-ref qname="DemoAppC.InternalTempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x75946ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x759452e8"/>
        <function-ref name="readDone" scoped="" ref="0x75945540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x759458c8" loc="46:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
      <component-ref qname="DemoAppC.InternalTempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x759458c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x756fc678"/>
        <function-ref name="postBuffer" scoped="" ref="0x75945ef0"/>
        <function-ref name="read" scoped="" ref="0x756fc3f8"/>
        <function-ref name="readDone" scoped="" ref="0x756fcbf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x74d51618" loc="48:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x74d51618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x74d51c40"/>
        <function-ref name="readDone" scoped="" ref="0x74d51e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x74d50290" loc="49:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x74d50290"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x75939408"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7593aec8"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x74d508d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResourceReadNow" ref="0x759209c8" loc="46:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubResourceReadNow" scoped="" ref="0x759209c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x75920ba0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x75920c80"/>
        <function-ref name="request" scoped="" ref="0x75920d60"/>
        <function-ref name="granted" scoped="" ref="0x75920e40"/>
        <function-ref name="isOwner" scoped="" ref="0x75920f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x75929e90" loc="38:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x75929e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x759254d8"/>
        <function-ref name="readDone" scoped="" ref="0x75925730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x75924380" loc="39:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x75924380"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x759249c8"/>
        <function-ref name="readDone" scoped="" ref="0x75924c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceReadNow" ref="0x759213d0" loc="40:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceReadNow" scoped="" ref="0x759213d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x759215a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x75921688"/>
        <function-ref name="request" scoped="" ref="0x75921768"/>
        <function-ref name="granted" scoped="" ref="0x75921848"/>
        <function-ref name="isOwner" scoped="" ref="0x75921928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7591f660" loc="48:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7591f660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x75939408"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7593aec8"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7591fca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7591c010" loc="49:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7591c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7591c1e8"/>
        <function-ref name="configureSingle" scoped="" ref="0x7591c2c8"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7591c3a8"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7591c488"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7591c568"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7591c648"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7591c728"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceRead" ref="0x75921eb8" loc="44:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRead" scoped="" ref="0x75921eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x759200c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x759201a0"/>
        <function-ref name="request" scoped="" ref="0x75920280"/>
        <function-ref name="granted" scoped="" ref="0x75920360"/>
        <function-ref name="isOwner" scoped="" ref="0x75920440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDone" ref="0x75903a68" loc="136:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readDone" scoped="" ref="0x75903a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75903c40"/>
        <function-ref name="runTask" scoped="" ref="0x75903d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x74d49b68" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x74d49b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x74d49d40"/>
        <function-ref name="configure" scoped="" ref="0x74d49e20"/>
        <function-ref name="dataReady" scoped="" ref="0x74d49f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x74d49310" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x74d49310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x74d494e8"/>
        <function-ref name="configureSingle" scoped="" ref="0x74d495c8"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x74d496a8"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x74d49788"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x74d49868"/>
        <function-ref name="configureMultiple" scoped="" ref="0x74d49948"/>
        <function-ref name="singleDataReady" scoped="" ref="0x74d49a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x74d48070" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x74d48070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x74d48248"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x74d48328"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x74d48558" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x74d48558"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x75939408"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7593aec8"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x74d48ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x74d4bbe8" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x74d4bbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x74d4bdc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x74d4bea0"/>
        <function-ref name="request" scoped="" ref="0x74d49010"/>
        <function-ref name="granted" scoped="" ref="0x74d490f0"/>
        <function-ref name="isOwner" scoped="" ref="0x74d491d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x758dd010" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x758dd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x758dd1e8"/>
        <function-ref name="configure" scoped="" ref="0x758dd2c8"/>
        <function-ref name="dataReady" scoped="" ref="0x758dd3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x758dc120" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x758dc120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x758dc2f8"/>
        <function-ref name="stop" scoped="" ref="0x758dc3d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x758dd900" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x758dd900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x758ddad8"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x758ddbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x758df2a8" loc="41:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x758df2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x758df480"/>
        <function-ref name="configureSingle" scoped="" ref="0x758df560"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x758df640"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x758df720"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x758df800"/>
        <function-ref name="configureMultiple" scoped="" ref="0x758df8e0"/>
        <function-ref name="singleDataReady" scoped="" ref="0x758df9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x758e2740" loc="40:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x758e2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x758e2918"/>
        <function-ref name="immediateRequest" scoped="" ref="0x758e29f8"/>
        <function-ref name="request" scoped="" ref="0x758e2ad8"/>
        <function-ref name="granted" scoped="" ref="0x758e2bb8"/>
        <function-ref name="isOwner" scoped="" ref="0x758e2c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x758d71f8" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x758d71f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x758d73d0"/>
        <function-ref name="configure" scoped="" ref="0x758d74b0"/>
        <function-ref name="dataReady" scoped="" ref="0x758d7590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x758cc538" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x758cc538"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x758cc710"/>
        <function-ref name="getMCtl" scoped="" ref="0x758cc7f0"/>
        <function-ref name="resetIFGs" scoped="" ref="0x758cc8d0"/>
        <function-ref name="isBusy" scoped="" ref="0x758cc9b0"/>
        <function-ref name="conversionDone" scoped="" ref="0x758cca90"/>
        <function-ref name="getCtl1" scoped="" ref="0x758ccb70"/>
        <function-ref name="setMCtl" scoped="" ref="0x758ccc50"/>
        <function-ref name="startConversion" scoped="" ref="0x758ccd30"/>
        <function-ref name="setCtl0" scoped="" ref="0x758cce10"/>
        <function-ref name="getMem" scoped="" ref="0x758ccef0"/>
        <function-ref name="setIEFlags" scoped="" ref="0x758d4010"/>
        <function-ref name="getIEFlags" scoped="" ref="0x758d40f0"/>
        <function-ref name="stopConversion" scoped="" ref="0x758d41d0"/>
        <function-ref name="enableConversion" scoped="" ref="0x758d4330"/>
        <function-ref name="setCtl1" scoped="" ref="0x758d4410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port64" ref="0x758c5070" loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x758c5070"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x758c5248"/>
        <function-ref name="isInput" scoped="" ref="0x758c5328"/>
        <function-ref name="setResistor" scoped="" ref="0x758c5408"/>
        <function-ref name="toggle" scoped="" ref="0x758c54e8"/>
        <function-ref name="isOutput" scoped="" ref="0x758c55c8"/>
        <function-ref name="getResistor" scoped="" ref="0x758c56a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x758c5788"/>
        <function-ref name="get" scoped="" ref="0x758c5868"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x758c5948"/>
        <function-ref name="getRaw" scoped="" ref="0x758c5a28"/>
        <function-ref name="set" scoped="" ref="0x758c5b08"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x758c5be8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x758c5cc8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x758c5e28"/>
        <function-ref name="clr" scoped="" ref="0x758c5f08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA1" ref="0x758ca258" loc="53:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x758ca258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x758ca430"/>
        <function-ref name="setEvent" scoped="" ref="0x758ca510"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x758ca5f0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x758ca6d0"/>
        <function-ref name="fired" scoped="" ref="0x758ca7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA0" ref="0x758d3368" loc="50:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x758d3368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x758d3540"/>
        <function-ref name="getControl" scoped="" ref="0x758d3620"/>
        <function-ref name="enableEvents" scoped="" ref="0x758d3700"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x758d37e0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x758d38c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x758d39a0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x758d3a80"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x758d3b60"/>
        <function-ref name="setControl" scoped="" ref="0x758d3c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x758d5310" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x758d5310"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x758d54e8"/>
        <function-ref name="stop" scoped="" ref="0x758d55c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port62" ref="0x758c8d68" loc="56:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x758c8d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x758c7010"/>
        <function-ref name="isInput" scoped="" ref="0x758c70f0"/>
        <function-ref name="setResistor" scoped="" ref="0x758c71d0"/>
        <function-ref name="toggle" scoped="" ref="0x758c72b0"/>
        <function-ref name="isOutput" scoped="" ref="0x758c7390"/>
        <function-ref name="getResistor" scoped="" ref="0x758c7470"/>
        <function-ref name="makeOutput" scoped="" ref="0x758c7550"/>
        <function-ref name="get" scoped="" ref="0x758c7630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x758c7710"/>
        <function-ref name="getRaw" scoped="" ref="0x758c77f0"/>
        <function-ref name="set" scoped="" ref="0x758c78d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x758c79b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x758c7a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x758c7bf0"/>
        <function-ref name="clr" scoped="" ref="0x758c7cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x758d7ae8" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x758d7ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x758d7cc0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x758d7da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port67" ref="0x758c14a8" loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x758c14a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x758c1680"/>
        <function-ref name="isInput" scoped="" ref="0x758c1760"/>
        <function-ref name="setResistor" scoped="" ref="0x758c1840"/>
        <function-ref name="toggle" scoped="" ref="0x758c1920"/>
        <function-ref name="isOutput" scoped="" ref="0x758c1a00"/>
        <function-ref name="getResistor" scoped="" ref="0x758c1ae0"/>
        <function-ref name="makeOutput" scoped="" ref="0x758c1bc0"/>
        <function-ref name="get" scoped="" ref="0x758c1ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x758c1d80"/>
        <function-ref name="getRaw" scoped="" ref="0x758c1e60"/>
        <function-ref name="set" scoped="" ref="0x758c0010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x758c00f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x758c01d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x758c0330"/>
        <function-ref name="clr" scoped="" ref="0x758c0410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port60" ref="0x758caa08" loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x758caa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x758cac60"/>
        <function-ref name="isInput" scoped="" ref="0x758cad40"/>
        <function-ref name="setResistor" scoped="" ref="0x758cae20"/>
        <function-ref name="toggle" scoped="" ref="0x758caf00"/>
        <function-ref name="isOutput" scoped="" ref="0x758c9010"/>
        <function-ref name="getResistor" scoped="" ref="0x758c90f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x758c91d0"/>
        <function-ref name="get" scoped="" ref="0x758c92b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x758c9390"/>
        <function-ref name="getRaw" scoped="" ref="0x758c9470"/>
        <function-ref name="set" scoped="" ref="0x758c9550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x758c9630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x758c9710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x758c9870"/>
        <function-ref name="clr" scoped="" ref="0x758c9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x758dcc88" loc="40:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x758dcc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x758dce60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port65" ref="0x758c4178" loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x758c4178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x758c4350"/>
        <function-ref name="isInput" scoped="" ref="0x758c4430"/>
        <function-ref name="setResistor" scoped="" ref="0x758c4510"/>
        <function-ref name="toggle" scoped="" ref="0x758c45f0"/>
        <function-ref name="isOutput" scoped="" ref="0x758c46d0"/>
        <function-ref name="getResistor" scoped="" ref="0x758c47b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x758c4890"/>
        <function-ref name="get" scoped="" ref="0x758c4970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x758c4a50"/>
        <function-ref name="getRaw" scoped="" ref="0x758c4b30"/>
        <function-ref name="set" scoped="" ref="0x758c4c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x758c4cf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x758c4dd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x758c3010"/>
        <function-ref name="clr" scoped="" ref="0x758c30f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerA" ref="0x758d4620" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x758d4620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x758d47f8"/>
        <function-ref name="setClockSource" scoped="" ref="0x758d48d8"/>
        <function-ref name="enableEvents" scoped="" ref="0x758d49b8"/>
        <function-ref name="get" scoped="" ref="0x758d4a98"/>
        <function-ref name="disableEvents" scoped="" ref="0x758d4b78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x758d4c58"/>
        <function-ref name="getMode" scoped="" ref="0x758d4d38"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x758d4e18"/>
        <function-ref name="overflow" scoped="" ref="0x758d4ef8"/>
        <function-ref name="setMode" scoped="" ref="0x758d3010"/>
        <function-ref name="setInputDivider" scoped="" ref="0x758d30f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADCArbiterInfo" ref="0x758d5868" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCArbiterInfo" scoped="" ref="0x758d5868"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x758d5a40"/>
        <function-ref name="userId" scoped="" ref="0x758d5b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA1" ref="0x758d3eb8" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x758d3eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x758cb0c0"/>
        <function-ref name="getControl" scoped="" ref="0x758cb1a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x758cb280"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x758cb360"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x758cb440"/>
        <function-ref name="disableEvents" scoped="" ref="0x758cb520"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x758cb600"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x758cb6e0"/>
        <function-ref name="setControl" scoped="" ref="0x758cb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x758d84e0" loc="41:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x758d84e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x758d86b8"/>
        <function-ref name="configureSingle" scoped="" ref="0x758d8798"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x758d8878"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x758d8958"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x758d8a38"/>
        <function-ref name="configureMultiple" scoped="" ref="0x758d8b18"/>
        <function-ref name="singleDataReady" scoped="" ref="0x758d8bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port63" ref="0x758c7f28" loc="57:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x758c7f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x758c6110"/>
        <function-ref name="isInput" scoped="" ref="0x758c61f0"/>
        <function-ref name="setResistor" scoped="" ref="0x758c62d0"/>
        <function-ref name="toggle" scoped="" ref="0x758c63b0"/>
        <function-ref name="isOutput" scoped="" ref="0x758c6490"/>
        <function-ref name="getResistor" scoped="" ref="0x758c6570"/>
        <function-ref name="makeOutput" scoped="" ref="0x758c6650"/>
        <function-ref name="get" scoped="" ref="0x758c6730"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x758c6810"/>
        <function-ref name="getRaw" scoped="" ref="0x758c68f0"/>
        <function-ref name="set" scoped="" ref="0x758c69d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x758c6ab0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x758c6b90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x758c6cf0"/>
        <function-ref name="clr" scoped="" ref="0x758c6dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA0" ref="0x758cba08" loc="52:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x758cba08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x758cbbe0"/>
        <function-ref name="setEvent" scoped="" ref="0x758cbcc0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x758cbda0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x758cbe80"/>
        <function-ref name="fired" scoped="" ref="0x758ca010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port61" ref="0x758c9ba8" loc="55:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x758c9ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x758c9d80"/>
        <function-ref name="isInput" scoped="" ref="0x758c9e60"/>
        <function-ref name="setResistor" scoped="" ref="0x758c8010"/>
        <function-ref name="toggle" scoped="" ref="0x758c80f0"/>
        <function-ref name="isOutput" scoped="" ref="0x758c81d0"/>
        <function-ref name="getResistor" scoped="" ref="0x758c82b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x758c8390"/>
        <function-ref name="get" scoped="" ref="0x758c8470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x758c8550"/>
        <function-ref name="getRaw" scoped="" ref="0x758c8630"/>
        <function-ref name="set" scoped="" ref="0x758c8710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x758c87f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x758c88d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x758c8a30"/>
        <function-ref name="clr" scoped="" ref="0x758c8b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port66" ref="0x758c3348" loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x758c3348"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x758c3520"/>
        <function-ref name="isInput" scoped="" ref="0x758c3600"/>
        <function-ref name="setResistor" scoped="" ref="0x758c36e0"/>
        <function-ref name="toggle" scoped="" ref="0x758c37c0"/>
        <function-ref name="isOutput" scoped="" ref="0x758c38a0"/>
        <function-ref name="getResistor" scoped="" ref="0x758c3980"/>
        <function-ref name="makeOutput" scoped="" ref="0x758c3a60"/>
        <function-ref name="get" scoped="" ref="0x758c3b40"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x758c3c20"/>
        <function-ref name="getRaw" scoped="" ref="0x758c3d00"/>
        <function-ref name="set" scoped="" ref="0x758c3de0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x758c3ec0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x758c1010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x758c1170"/>
        <function-ref name="clr" scoped="" ref="0x758c1250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAdc12" ref="0x758549f0" loc="46:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <component-ref qname="HplAdc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x758549f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x75854bc8"/>
        <function-ref name="getMCtl" scoped="" ref="0x75854ca8"/>
        <function-ref name="resetIFGs" scoped="" ref="0x75854d88"/>
        <function-ref name="isBusy" scoped="" ref="0x75854e68"/>
        <function-ref name="conversionDone" scoped="" ref="0x75851010"/>
        <function-ref name="getCtl1" scoped="" ref="0x758510f0"/>
        <function-ref name="setMCtl" scoped="" ref="0x758511d0"/>
        <function-ref name="startConversion" scoped="" ref="0x758512b0"/>
        <function-ref name="setCtl0" scoped="" ref="0x75851390"/>
        <function-ref name="getMem" scoped="" ref="0x75851470"/>
        <function-ref name="setIEFlags" scoped="" ref="0x75851550"/>
        <function-ref name="getIEFlags" scoped="" ref="0x75851630"/>
        <function-ref name="stopConversion" scoped="" ref="0x75851710"/>
        <function-ref name="enableConversion" scoped="" ref="0x75851870"/>
        <function-ref name="setCtl1" scoped="" ref="0x75851950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x757ff1e8" loc="86:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x757ff1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x757ff3d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x757ff4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x757ffaa0" loc="89:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x757ffaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x757ffc88"/>
        <function-ref name="configure" scoped="" ref="0x757ffd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x758529f8" loc="85:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x758529f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x75852be0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x75852cc0"/>
        <function-ref name="request" scoped="" ref="0x75852da0"/>
        <function-ref name="granted" scoped="" ref="0x75852e80"/>
        <function-ref name="isOwner" scoped="" ref="0x757ff010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x757ff5f0" loc="87:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x757ff5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x757ff7c8"/>
        <function-ref name="userId" scoped="" ref="0x757ff8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x74d35070" loc="44:../../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x74d35070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x74d35248"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x74d353a8" loc="45:../../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoundRobinQueue" scoped="" ref="0x74d353a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x74d35580"/>
        <function-ref name="isEmpty" scoped="" ref="0x74d35660"/>
        <function-ref name="isEnqueued" scoped="" ref="0x74d35740"/>
        <function-ref name="dequeue" scoped="" ref="0x74d35820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x74d34b18" loc="52:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x74d34b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x74d34d00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x74d34de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x74d333f8" loc="56:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x74d333f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x74d335e0"/>
        <function-ref name="configure" scoped="" ref="0x74d336c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x74d33820" loc="57:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x74d33820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x74d339f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x74d33ad8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x74d33bb8"/>
        <function-ref name="dequeue" scoped="" ref="0x74d33c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x74d343d8" loc="51:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x74d343d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x74d345c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x74d346a0"/>
        <function-ref name="request" scoped="" ref="0x74d34780"/>
        <function-ref name="granted" scoped="" ref="0x74d34860"/>
        <function-ref name="isOwner" scoped="" ref="0x74d34940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x74d34f20" loc="53:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x74d34f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x74d33110"/>
        <function-ref name="userId" scoped="" ref="0x74d331f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x74d33e18" loc="68:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x74d33e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x74d31010"/>
        <function-ref name="runTask" scoped="" ref="0x74d310f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x757ee638" loc="55:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x757ee638"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x75939408"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7593aec8"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x757eec80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x757f09a0" loc="54:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x757f09a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x757f0b78"/>
        <function-ref name="immediateRequest" scoped="" ref="0x757f0c58"/>
        <function-ref name="request" scoped="" ref="0x757f0d38"/>
        <function-ref name="granted" scoped="" ref="0x757f0e18"/>
        <function-ref name="isOwner" scoped="" ref="0x757f0ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x757f3ea0" loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x757f3ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x757f00c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x757f01a0"/>
        <function-ref name="request" scoped="" ref="0x757f0280"/>
        <function-ref name="granted" scoped="" ref="0x757f0360"/>
        <function-ref name="isOwner" scoped="" ref="0x757f0440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x757e92d0" loc="43:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x757e92d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x757e94a8"/>
        <function-ref name="getMCtl" scoped="" ref="0x757e9588"/>
        <function-ref name="resetIFGs" scoped="" ref="0x757e9668"/>
        <function-ref name="isBusy" scoped="" ref="0x757e9748"/>
        <function-ref name="conversionDone" scoped="" ref="0x757e9828"/>
        <function-ref name="getCtl1" scoped="" ref="0x757e9908"/>
        <function-ref name="setMCtl" scoped="" ref="0x757e99e8"/>
        <function-ref name="startConversion" scoped="" ref="0x757e9ac8"/>
        <function-ref name="setCtl0" scoped="" ref="0x757e9ba8"/>
        <function-ref name="getMem" scoped="" ref="0x757e9c88"/>
        <function-ref name="setIEFlags" scoped="" ref="0x757e9d68"/>
        <function-ref name="getIEFlags" scoped="" ref="0x757e9e48"/>
        <function-ref name="stopConversion" scoped="" ref="0x757e9f28"/>
        <function-ref name="enableConversion" scoped="" ref="0x757e8098"/>
        <function-ref name="setCtl1" scoped="" ref="0x757e8178"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffTimer" ref="0x757e6888" loc="45:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffTimer" scoped="" ref="0x757e6888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x757e3388"/>
        <function-ref name="fired" scoped="" ref="0x757e4628"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x757e4d30"/>
        <function-ref name="isOneShot" scoped="" ref="0x757e4ad8"/>
        <function-ref name="getdt" scoped="" ref="0x757e3838"/>
        <function-ref name="gett0" scoped="" ref="0x757e35e0"/>
        <function-ref name="isRunning" scoped="" ref="0x757e4880"/>
        <function-ref name="startPeriodic" scoped="" ref="0x757e6eb0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x757e3068"/>
        <function-ref name="startOneShot" scoped="" ref="0x757e4150"/>
        <function-ref name="stop" scoped="" ref="0x757e43d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_2_5V" ref="0x757edc70" loc="39:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x757edc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x757ede48"/>
        <function-ref name="stopDone" scoped="" ref="0x757edf28"/>
        <function-ref name="start" scoped="" ref="0x757e9018"/>
        <function-ref name="stop" scoped="" ref="0x757e90f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffSettleTimer" ref="0x757e3c40" loc="46:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x757e3c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x757e0730"/>
        <function-ref name="fired" scoped="" ref="0x757e29d0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x757e00f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x757e2e80"/>
        <function-ref name="getdt" scoped="" ref="0x757e0be0"/>
        <function-ref name="gett0" scoped="" ref="0x757e0988"/>
        <function-ref name="isRunning" scoped="" ref="0x757e2c28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x757e2278"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x757e0410"/>
        <function-ref name="startOneShot" scoped="" ref="0x757e24f8"/>
        <function-ref name="stop" scoped="" ref="0x757e2778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_1_5V" ref="0x757ed598" loc="38:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x757ed598"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x757ed770"/>
        <function-ref name="stopDone" scoped="" ref="0x757ed850"/>
        <function-ref name="start" scoped="" ref="0x757ed930"/>
        <function-ref name="stop" scoped="" ref="0x757eda10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOnTimer" ref="0x757e8468" loc="44:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOnTimer" scoped="" ref="0x757e8468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x757e6010"/>
        <function-ref name="fired" scoped="" ref="0x757e7268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x757e7970"/>
        <function-ref name="isOneShot" scoped="" ref="0x757e7718"/>
        <function-ref name="getdt" scoped="" ref="0x757e64c0"/>
        <function-ref name="gett0" scoped="" ref="0x757e6268"/>
        <function-ref name="isRunning" scoped="" ref="0x757e74c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x757e8a90"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x757e7c90"/>
        <function-ref name="startOneShot" scoped="" ref="0x757e8d10"/>
        <function-ref name="stop" scoped="" ref="0x757e7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x757af378" loc="43:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x757af378"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x75939408"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7593aec8"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x757af9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_2_5V" ref="0x757b07b8" loc="42:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x757b07b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x757b0990"/>
        <function-ref name="stopDone" scoped="" ref="0x757b0a70"/>
        <function-ref name="start" scoped="" ref="0x757b0b50"/>
        <function-ref name="stop" scoped="" ref="0x757b0c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x757b18f0" loc="40:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x757b18f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x757b1ac8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x757b1ba8"/>
        <function-ref name="request" scoped="" ref="0x757b1c88"/>
        <function-ref name="granted" scoped="" ref="0x757b1d68"/>
        <function-ref name="isOwner" scoped="" ref="0x757b1e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x757ecdf8" loc="38:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x757ecdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x757b1010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x757b10f0"/>
        <function-ref name="request" scoped="" ref="0x757b11d0"/>
        <function-ref name="granted" scoped="" ref="0x757b12b0"/>
        <function-ref name="isOwner" scoped="" ref="0x757b1390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="switchOff" ref="0x757ae940" loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="switchOff" scoped="" ref="0x757ae940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x757aeb18"/>
        <function-ref name="runTask" scoped="" ref="0x757aebf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_1_5V" ref="0x757b00e0" loc="41:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x757b00e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x757b02b8"/>
        <function-ref name="stopDone" scoped="" ref="0x757b0398"/>
        <function-ref name="start" scoped="" ref="0x757b0478"/>
        <function-ref name="stop" scoped="" ref="0x757b0558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x757921c8" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x757921c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75791d58"/>
        <function-ref name="fired" scoped="" ref="0x75791010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75791718"/>
        <function-ref name="isOneShot" scoped="" ref="0x757914c0"/>
        <function-ref name="getdt" scoped="" ref="0x75790268"/>
        <function-ref name="gett0" scoped="" ref="0x75790010"/>
        <function-ref name="isRunning" scoped="" ref="0x75791268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x757927f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75791a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x75792a70"/>
        <function-ref name="stop" scoped="" ref="0x75792cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7578f0c0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7578f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7578dba8"/>
        <function-ref name="fired" scoped="" ref="0x7578fe40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7578d568"/>
        <function-ref name="isOneShot" scoped="" ref="0x7578d310"/>
        <function-ref name="getdt" scoped="" ref="0x7578c068"/>
        <function-ref name="gett0" scoped="" ref="0x7578de00"/>
        <function-ref name="isRunning" scoped="" ref="0x7578d0b8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7578f6e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7578d888"/>
        <function-ref name="startOneShot" scoped="" ref="0x7578f968"/>
        <function-ref name="stop" scoped="" ref="0x7578fbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7578ceb0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7578ceb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7578a9a8"/>
        <function-ref name="fired" scoped="" ref="0x7578bc40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7578a368"/>
        <function-ref name="isOneShot" scoped="" ref="0x7578a110"/>
        <function-ref name="getdt" scoped="" ref="0x7578ae58"/>
        <function-ref name="gett0" scoped="" ref="0x7578ac00"/>
        <function-ref name="isRunning" scoped="" ref="0x7578be98"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7578b4e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7578a688"/>
        <function-ref name="startOneShot" scoped="" ref="0x7578b768"/>
        <function-ref name="stop" scoped="" ref="0x7578b9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x74d418d8" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x74d418d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x75939408"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7593aec8"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x74d41f20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x74d40258" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x74d40258"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x75939408"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7593aec8"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x74d408a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x74d4dbd8" loc="49:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x74d4dbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x75939408"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7593aec8"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x74d4c238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x74d4e460" loc="48:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x74d4e460"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x74d4d290"/>
        <function-ref name="postBuffer" scoped="" ref="0x74d4ea88"/>
        <function-ref name="read" scoped="" ref="0x74d4d010"/>
        <function-ref name="readDone" scoped="" ref="0x74d4d810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Adc12SingleChannel" ref="0x7576b260" loc="23:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7576b260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7576b438"/>
        <function-ref name="configureSingle" scoped="" ref="0x7576b518"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7576b5f8"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7576b6d8"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7576b7b8"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7576b898"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7576b978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7576c5d8" loc="22:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7576c5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x75939408"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7593aec8"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7576cc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x75771970" loc="20:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x75771970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7576e770"/>
        <function-ref name="postBuffer" scoped="" ref="0x7576e010"/>
        <function-ref name="read" scoped="" ref="0x7576e4f0"/>
        <function-ref name="readDone" scoped="" ref="0x7576ecf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7576be18" loc="24:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7576be18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7576a010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7576a0f0"/>
        <function-ref name="request" scoped="" ref="0x7576a1d0"/>
        <function-ref name="granted" scoped="" ref="0x7576a2b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7576a390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="bufferDone" ref="0x7574a4d0" loc="156:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="bufferDone" scoped="" ref="0x7574a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7574a6a8"/>
        <function-ref name="runTask" scoped="" ref="0x7574a788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamDone" ref="0x75752448" loc="119:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamDone" scoped="" ref="0x75752448"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75752620"/>
        <function-ref name="runTask" scoped="" ref="0x75752700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamFail" ref="0x7574fc88" loc="135:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamFail" scoped="" ref="0x7574fc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7574fe60"/>
        <function-ref name="runTask" scoped="" ref="0x7574e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x75762b48" loc="54:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x75762b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75760068"/>
        <function-ref name="fired" scoped="" ref="0x75761820"/>
        <function-ref name="startAt" scoped="" ref="0x75761d10"/>
        <function-ref name="isRunning" scoped="" ref="0x75761a98"/>
        <function-ref name="getAlarm" scoped="" ref="0x757602e0"/>
        <function-ref name="start" scoped="" ref="0x75761308"/>
        <function-ref name="stop" scoped="" ref="0x757615a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75766010" loc="48:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75766010"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x76ba3160"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x76ba3160"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x757661e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x75762100" loc="53:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x75762100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x75939408"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7593aec8"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x75762748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x75764280" loc="52:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x75764280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x75764458"/>
        <function-ref name="configureSingle" scoped="" ref="0x75764538"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x75764618"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x757646f8"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x757647d8"/>
        <function-ref name="configureMultiple" scoped="" ref="0x757648b8"/>
        <function-ref name="singleDataReady" scoped="" ref="0x75764998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x75766780" loc="49:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x75766780"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x75765518"/>
        <function-ref name="postBuffer" scoped="" ref="0x75766da8"/>
        <function-ref name="read" scoped="" ref="0x75765298"/>
        <function-ref name="readDone" scoped="" ref="0x75765a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x75727690" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x75727690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75726b50"/>
        <function-ref name="fired" scoped="" ref="0x75726320"/>
        <function-ref name="startAt" scoped="" ref="0x75726810"/>
        <function-ref name="isRunning" scoped="" ref="0x75726598"/>
        <function-ref name="getAlarm" scoped="" ref="0x75726dc8"/>
        <function-ref name="start" scoped="" ref="0x75727de0"/>
        <function-ref name="stop" scoped="" ref="0x757260a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x75727238" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x75727238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x75727410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x74d0cc68" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x74d0cc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x74d09150"/>
        <function-ref name="fired" scoped="" ref="0x74d0b908"/>
        <function-ref name="startAt" scoped="" ref="0x74d0bdf8"/>
        <function-ref name="isRunning" scoped="" ref="0x74d0bb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x74d093c8"/>
        <function-ref name="start" scoped="" ref="0x74d0b3f0"/>
        <function-ref name="stop" scoped="" ref="0x74d0b690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x74d0c810" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x74d0c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x74d0c9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x74cfeba8" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x74cfeba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x74cfed80"/>
        <function-ref name="setEvent" scoped="" ref="0x74cfee60"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x74cfd010"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x74cfd0f0"/>
        <function-ref name="fired" scoped="" ref="0x74cfd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x74d004f8" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x74d004f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x74d006d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x74d007b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x74d00890"/>
        <function-ref name="get" scoped="" ref="0x74d00970"/>
        <function-ref name="disableEvents" scoped="" ref="0x74d00a50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x74d00b30"/>
        <function-ref name="getMode" scoped="" ref="0x74d00c10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x74d00cf0"/>
        <function-ref name="overflow" scoped="" ref="0x74d00dd0"/>
        <function-ref name="setMode" scoped="" ref="0x74d00eb0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x74cfe010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x74cfe170" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x74cfe170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x74cfe348"/>
        <function-ref name="getControl" scoped="" ref="0x74cfe428"/>
        <function-ref name="enableEvents" scoped="" ref="0x74cfe508"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x74cfe5e8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x74cfe6c8"/>
        <function-ref name="disableEvents" scoped="" ref="0x74cfe7a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x74cfe888"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x74cfe968"/>
        <function-ref name="setControl" scoped="" ref="0x74cfea48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x74cf96b0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x74cf96b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x74cf9888"/>
        <function-ref name="setEvent" scoped="" ref="0x74cf9968"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x74cf9a48"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x74cf9b28"/>
        <function-ref name="fired" scoped="" ref="0x74cf9c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x74cfa010" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x74cfa010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x74cfa1e8"/>
        <function-ref name="setClockSource" scoped="" ref="0x74cfa2c8"/>
        <function-ref name="enableEvents" scoped="" ref="0x74cfa3a8"/>
        <function-ref name="get" scoped="" ref="0x74cfa488"/>
        <function-ref name="disableEvents" scoped="" ref="0x74cfa568"/>
        <function-ref name="clearOverflow" scoped="" ref="0x74cfa648"/>
        <function-ref name="getMode" scoped="" ref="0x74cfa728"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x74cfa808"/>
        <function-ref name="overflow" scoped="" ref="0x74cfa8e8"/>
        <function-ref name="setMode" scoped="" ref="0x74cfa9c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x74cfaaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x74cfc640" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x74cfc640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x74cfbaf0"/>
        <function-ref name="fired" scoped="" ref="0x74cfb2c0"/>
        <function-ref name="startAt" scoped="" ref="0x74cfb7b0"/>
        <function-ref name="isRunning" scoped="" ref="0x74cfb538"/>
        <function-ref name="getAlarm" scoped="" ref="0x74cfbd68"/>
        <function-ref name="start" scoped="" ref="0x74cfcd90"/>
        <function-ref name="stop" scoped="" ref="0x74cfb048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x74cfc1c8" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x74cfc1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x74cfc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x74cfac08" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x74cfac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x74cfade0"/>
        <function-ref name="getControl" scoped="" ref="0x74cfaec0"/>
        <function-ref name="enableEvents" scoped="" ref="0x74cf9010"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x74cf90f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x74cf91d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x74cf92b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x74cf9390"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x74cf9470"/>
        <function-ref name="setControl" scoped="" ref="0x74cf9550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x74d086b8" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x74d086b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x74d07b80"/>
        <function-ref name="fired" scoped="" ref="0x74d07350"/>
        <function-ref name="startAt" scoped="" ref="0x74d07840"/>
        <function-ref name="isRunning" scoped="" ref="0x74d075c8"/>
        <function-ref name="getAlarm" scoped="" ref="0x74d07df8"/>
        <function-ref name="start" scoped="" ref="0x74d08e08"/>
        <function-ref name="stop" scoped="" ref="0x74d070d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x74d043b8" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x74d043b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x74d03878"/>
        <function-ref name="fired" scoped="" ref="0x74d03048"/>
        <function-ref name="startAt" scoped="" ref="0x74d03538"/>
        <function-ref name="isRunning" scoped="" ref="0x74d032c0"/>
        <function-ref name="getAlarm" scoped="" ref="0x74d03af0"/>
        <function-ref name="start" scoped="" ref="0x74d04b08"/>
        <function-ref name="stop" scoped="" ref="0x74d04da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x74d06180" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x74d06180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x74d068d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x74d06dc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x74d06b48"/>
        <function-ref name="overflow" scoped="" ref="0x74d04048"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x757237d8" loc="26:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Service" scoped="" ref="0x757237d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x757085b0"/>
        <function-ref name="postBuffer" scoped="" ref="0x75723e10"/>
        <function-ref name="read" scoped="" ref="0x75708320"/>
        <function-ref name="readDone" scoped="" ref="0x75708b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x75724010" loc="24:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x75724010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x75724dc8"/>
        <function-ref name="postBuffer" scoped="" ref="0x75724648"/>
        <function-ref name="read" scoped="" ref="0x75724b38"/>
        <function-ref name="readDone" scoped="" ref="0x75723378"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x75708ec0" loc="27:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x75708ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x757070c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x757071a0"/>
        <function-ref name="request" scoped="" ref="0x75707280"/>
        <function-ref name="granted" scoped="" ref="0x75707360"/>
        <function-ref name="isOwner" scoped="" ref="0x75707440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x74d13690" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x74d13690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x74d13868"/>
        <function-ref name="configure" scoped="" ref="0x74d13948"/>
        <function-ref name="dataReady" scoped="" ref="0x74d13a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x74d15dd0" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x74d15dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x74d13010"/>
        <function-ref name="configureSingle" scoped="" ref="0x74d130f0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x74d131d0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x74d132b0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x74d13390"/>
        <function-ref name="configureMultiple" scoped="" ref="0x74d13470"/>
        <function-ref name="singleDataReady" scoped="" ref="0x74d13550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x74d13b68" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x74d13b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x74d13d40"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x74d13e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x74d12070" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x74d12070"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x75939408"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7593aec8"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x74d126b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x74d15738" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x74d15738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x74d15910"/>
        <function-ref name="immediateRequest" scoped="" ref="0x74d159f0"/>
        <function-ref name="request" scoped="" ref="0x74d15ad0"/>
        <function-ref name="granted" scoped="" ref="0x74d15bb0"/>
        <function-ref name="isOwner" scoped="" ref="0x74d15c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x74cd4010" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x74cd4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x75939408"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7593aec8"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x74cd4658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x74cd4978" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x74cd4978"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x75939408"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7593aec8"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x74cd3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0x756fd888" loc="35:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureP.nc">
      <component-ref qname="Msp430InternalTemperatureP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x756fd888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x75939408"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7593aec8"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x756fded0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x75627ba8" loc="49:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="DemoAppC.TempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0x75627ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x75627d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x75627010" loc="48:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="DemoAppC.TempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x75627010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x75627638"/>
        <function-ref name="readDone" scoped="" ref="0x75627890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x75628c10" loc="47:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="DemoAppC.TempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0x75628c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x75628de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x75628078" loc="46:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="DemoAppC.TempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x75628078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x756286a0"/>
        <function-ref name="readDone" scoped="" ref="0x756288f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0x74cca278" loc="54:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Hum" scoped="" ref="0x74cca278"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x74cca450"/>
        <function-ref name="readStatusReg" scoped="" ref="0x74cca530"/>
        <function-ref name="measureHumidity" scoped="" ref="0x74cca610"/>
        <function-ref name="measureTemperature" scoped="" ref="0x74cca6f0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x74cca7d0"/>
        <function-ref name="reset" scoped="" ref="0x74cca8b0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x74cca990"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x74ccaa70"/>
        <function-ref name="resetDone" scoped="" ref="0x74ccab50"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x74ccac30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x74cce9b8" loc="48:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0x74cce9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x74cceb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x74cceda0" loc="49:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x74cceda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x74ccd3e0"/>
        <function-ref name="readDone" scoped="" ref="0x74ccd638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x74ccfa08" loc="46:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0x74ccfa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x74ccfbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x74ccd950" loc="51:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TempResource" scoped="" ref="0x74ccd950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x74ccdb28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x74ccdc08"/>
        <function-ref name="request" scoped="" ref="0x74ccdce8"/>
        <function-ref name="granted" scoped="" ref="0x74ccddc8"/>
        <function-ref name="isOwner" scoped="" ref="0x74ccdea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0x74ccb728" loc="53:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Temp" scoped="" ref="0x74ccb728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x74ccb900"/>
        <function-ref name="readStatusReg" scoped="" ref="0x74ccb9e0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x74ccbac0"/>
        <function-ref name="measureTemperature" scoped="" ref="0x74ccbba0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x74ccbc80"/>
        <function-ref name="reset" scoped="" ref="0x74ccbd60"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x74ccbe40"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x74ccbf20"/>
        <function-ref name="resetDone" scoped="" ref="0x74cca018"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x74cca0f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x74ccb050" loc="52:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumResource" scoped="" ref="0x74ccb050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x74ccb228"/>
        <function-ref name="immediateRequest" scoped="" ref="0x74ccb308"/>
        <function-ref name="request" scoped="" ref="0x74ccb3e8"/>
        <function-ref name="granted" scoped="" ref="0x74ccb4c8"/>
        <function-ref name="isOwner" scoped="" ref="0x74ccb5a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x74ccfdf0" loc="47:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x74ccfdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x74cce448"/>
        <function-ref name="readDone" scoped="" ref="0x74cce6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x756c56c8" loc="45:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0x756c56c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x756c58a0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x756c5980"/>
        <function-ref name="measureHumidity" scoped="" ref="0x756c5a60"/>
        <function-ref name="measureTemperature" scoped="" ref="0x756c5b40"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x756c5c20"/>
        <function-ref name="reset" scoped="" ref="0x756c5d00"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x756c5de0"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x756c5ec0"/>
        <function-ref name="resetDone" scoped="" ref="0x756c4010"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x756c40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x756c8bf0" loc="44:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x756c8bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x756c8dc8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x756c8ea8"/>
        <function-ref name="request" scoped="" ref="0x756c5010"/>
        <function-ref name="granted" scoped="" ref="0x756c50f0"/>
        <function-ref name="isOwner" scoped="" ref="0x756c51d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0x7567c358" loc="58:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0x7567c358"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7567c530"/>
        <function-ref name="disable" scoped="" ref="0x7567c610"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7567c6f0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7567c7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0x75678cc8" loc="102:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readSensor" scoped="" ref="0x75678cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75678ea0"/>
        <function-ref name="runTask" scoped="" ref="0x75677010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalStatusDone" ref="0x75678890" loc="103:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalStatusDone" scoped="" ref="0x75678890"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75678a68"/>
        <function-ref name="runTask" scoped="" ref="0x75678b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0x7567d9c8" loc="57:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CLOCK" scoped="" ref="0x7567d9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7567dba0"/>
        <function-ref name="isInput" scoped="" ref="0x7567dc80"/>
        <function-ref name="toggle" scoped="" ref="0x7567dd60"/>
        <function-ref name="isOutput" scoped="" ref="0x7567de40"/>
        <function-ref name="get" scoped="" ref="0x7567df20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7567c018"/>
        <function-ref name="set" scoped="" ref="0x7567c0f8"/>
        <function-ref name="clr" scoped="" ref="0x7567c1d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7567e4d8" loc="54:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0x7567e4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7567e6c0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7567e7a0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7567e880"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7567e960"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7567ea40"/>
        <function-ref name="reset" scoped="" ref="0x7567eb20"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7567ec00"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7567ece0"/>
        <function-ref name="resetDone" scoped="" ref="0x7567edc0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7567eea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7567d050" loc="56:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7567d050"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7567d228"/>
        <function-ref name="isInput" scoped="" ref="0x7567d308"/>
        <function-ref name="toggle" scoped="" ref="0x7567d3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7567d4c8"/>
        <function-ref name="get" scoped="" ref="0x7567d5a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7567d688"/>
        <function-ref name="set" scoped="" ref="0x7567d768"/>
        <function-ref name="clr" scoped="" ref="0x7567d848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x75679ba8" loc="62:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x75679ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x75679d80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x75679e60"/>
        <function-ref name="led1On" scoped="" ref="0x75678010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x756780f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x756781d0"/>
        <function-ref name="get" scoped="" ref="0x756782b0"/>
        <function-ref name="led1Off" scoped="" ref="0x75678390"/>
        <function-ref name="led2On" scoped="" ref="0x75678710"/>
        <function-ref name="set" scoped="" ref="0x75678550"/>
        <function-ref name="led2Off" scoped="" ref="0x75678470"/>
        <function-ref name="led0On" scoped="" ref="0x75678630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7567c9c0" loc="60:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7567c9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x756794c8"/>
        <function-ref name="fired" scoped="" ref="0x7567b768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7567be70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7567bc18"/>
        <function-ref name="getdt" scoped="" ref="0x75679978"/>
        <function-ref name="gett0" scoped="" ref="0x75679720"/>
        <function-ref name="isRunning" scoped="" ref="0x7567b9c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7567b010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x756791a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7567b290"/>
        <function-ref name="stop" scoped="" ref="0x7567b510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0x75672c98" loc="47:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0x75672c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x75672e70"/>
        <function-ref name="disable" scoped="" ref="0x75671010"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x756710f0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x756711d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x75672210" loc="46:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0x75672210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x756723e8"/>
        <function-ref name="isInput" scoped="" ref="0x756724c8"/>
        <function-ref name="toggle" scoped="" ref="0x756725a8"/>
        <function-ref name="isOutput" scoped="" ref="0x75672688"/>
        <function-ref name="get" scoped="" ref="0x75672768"/>
        <function-ref name="makeOutput" scoped="" ref="0x75672848"/>
        <function-ref name="set" scoped="" ref="0x75672928"/>
        <function-ref name="clr" scoped="" ref="0x75672a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0x75673778" loc="45:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x75673778"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x75673950"/>
        <function-ref name="isInput" scoped="" ref="0x75673a30"/>
        <function-ref name="toggle" scoped="" ref="0x75673b10"/>
        <function-ref name="isOutput" scoped="" ref="0x75673bf0"/>
        <function-ref name="get" scoped="" ref="0x75673cd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x75673db0"/>
        <function-ref name="set" scoped="" ref="0x75673e90"/>
        <function-ref name="clr" scoped="" ref="0x75672010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x75673010" loc="44:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x75673010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x756731e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x756732c8"/>
        <function-ref name="request" scoped="" ref="0x756733a8"/>
        <function-ref name="granted" scoped="" ref="0x75673488"/>
        <function-ref name="isOwner" scoped="" ref="0x75673568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x756705f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x756705f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x756707c8"/>
        <function-ref name="isInput" scoped="" ref="0x756708a8"/>
        <function-ref name="setResistor" scoped="" ref="0x75670988"/>
        <function-ref name="toggle" scoped="" ref="0x75670a68"/>
        <function-ref name="isOutput" scoped="" ref="0x75670b48"/>
        <function-ref name="getResistor" scoped="" ref="0x75670c28"/>
        <function-ref name="makeOutput" scoped="" ref="0x75670d08"/>
        <function-ref name="get" scoped="" ref="0x75670de8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x75670ec8"/>
        <function-ref name="getRaw" scoped="" ref="0x7566f010"/>
        <function-ref name="set" scoped="" ref="0x7566f0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7566f1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7566f2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7566f410"/>
        <function-ref name="clr" scoped="" ref="0x7566f4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x75671c50" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x75671c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x75671e28"/>
        <function-ref name="isInput" scoped="" ref="0x75671f08"/>
        <function-ref name="toggle" scoped="" ref="0x75670010"/>
        <function-ref name="isOutput" scoped="" ref="0x756700f0"/>
        <function-ref name="get" scoped="" ref="0x756701d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x756702b0"/>
        <function-ref name="set" scoped="" ref="0x75670390"/>
        <function-ref name="clr" scoped="" ref="0x75670470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7566edb0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7566edb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7566c010"/>
        <function-ref name="isInput" scoped="" ref="0x7566c0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7566c1d0"/>
        <function-ref name="toggle" scoped="" ref="0x7566c2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7566c390"/>
        <function-ref name="getResistor" scoped="" ref="0x7566c470"/>
        <function-ref name="makeOutput" scoped="" ref="0x7566c550"/>
        <function-ref name="get" scoped="" ref="0x7566c630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7566c710"/>
        <function-ref name="getRaw" scoped="" ref="0x7566c7f0"/>
        <function-ref name="set" scoped="" ref="0x7566c8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7566c9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7566ca90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7566cbf0"/>
        <function-ref name="clr" scoped="" ref="0x7566ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7566e438" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7566e438"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7566e610"/>
        <function-ref name="isInput" scoped="" ref="0x7566e6f0"/>
        <function-ref name="toggle" scoped="" ref="0x7566e7d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7566e8b0"/>
        <function-ref name="get" scoped="" ref="0x7566e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7566ea70"/>
        <function-ref name="set" scoped="" ref="0x7566eb50"/>
        <function-ref name="clr" scoped="" ref="0x7566ec30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7566a6d0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7566a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7566a8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7566a988"/>
        <function-ref name="setResistor" scoped="" ref="0x7566aa68"/>
        <function-ref name="toggle" scoped="" ref="0x7566ab48"/>
        <function-ref name="isOutput" scoped="" ref="0x7566ac28"/>
        <function-ref name="getResistor" scoped="" ref="0x7566ad08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7566ade8"/>
        <function-ref name="get" scoped="" ref="0x7566aec8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x75669010"/>
        <function-ref name="getRaw" scoped="" ref="0x756690f0"/>
        <function-ref name="set" scoped="" ref="0x756691d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x756692b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x75669390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x756694f0"/>
        <function-ref name="clr" scoped="" ref="0x756695d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7566bcc0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7566bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7566be98"/>
        <function-ref name="isInput" scoped="" ref="0x7566a010"/>
        <function-ref name="toggle" scoped="" ref="0x7566a0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7566a1d0"/>
        <function-ref name="get" scoped="" ref="0x7566a2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7566a390"/>
        <function-ref name="set" scoped="" ref="0x7566a470"/>
        <function-ref name="clr" scoped="" ref="0x7566a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x75665010" loc="43:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x75665010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x756651e8"/>
        <function-ref name="stopDone" scoped="" ref="0x756652c8"/>
        <function-ref name="start" scoped="" ref="0x756653a8"/>
        <function-ref name="stop" scoped="" ref="0x75665488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x75661c50" loc="50:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0x75661c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75661e28"/>
        <function-ref name="runTask" scoped="" ref="0x75661f08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x75662de0" loc="47:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0x75662de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x75661010"/>
        <function-ref name="isInput" scoped="" ref="0x756610f0"/>
        <function-ref name="toggle" scoped="" ref="0x756611d0"/>
        <function-ref name="isOutput" scoped="" ref="0x756612b0"/>
        <function-ref name="get" scoped="" ref="0x75661390"/>
        <function-ref name="makeOutput" scoped="" ref="0x75661470"/>
        <function-ref name="set" scoped="" ref="0x75661550"/>
        <function-ref name="clr" scoped="" ref="0x75661630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PWR" ref="0x756639c8" loc="45:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PWR" scoped="" ref="0x756639c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x75663ba0"/>
        <function-ref name="isInput" scoped="" ref="0x75663c80"/>
        <function-ref name="toggle" scoped="" ref="0x75663d60"/>
        <function-ref name="isOutput" scoped="" ref="0x75663e40"/>
        <function-ref name="get" scoped="" ref="0x75663f20"/>
        <function-ref name="makeOutput" scoped="" ref="0x75662018"/>
        <function-ref name="set" scoped="" ref="0x756620f8"/>
        <function-ref name="clr" scoped="" ref="0x756621d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x756623e8" loc="46:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x756623e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x756625c0"/>
        <function-ref name="isInput" scoped="" ref="0x756626a0"/>
        <function-ref name="toggle" scoped="" ref="0x75662780"/>
        <function-ref name="isOutput" scoped="" ref="0x75662860"/>
        <function-ref name="get" scoped="" ref="0x75662940"/>
        <function-ref name="makeOutput" scoped="" ref="0x75662a20"/>
        <function-ref name="set" scoped="" ref="0x75662b00"/>
        <function-ref name="clr" scoped="" ref="0x75662be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x756656f0" loc="44:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x756656f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75663248"/>
        <function-ref name="fired" scoped="" ref="0x756644e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75664bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x75664998"/>
        <function-ref name="getdt" scoped="" ref="0x756636f8"/>
        <function-ref name="gett0" scoped="" ref="0x756634a0"/>
        <function-ref name="isRunning" scoped="" ref="0x75664740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x75665d18"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75664f10"/>
        <function-ref name="startOneShot" scoped="" ref="0x75664010"/>
        <function-ref name="stop" scoped="" ref="0x75664290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x75666c70" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x75666c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75659790"/>
        <function-ref name="fired" scoped="" ref="0x7565aa20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75659150"/>
        <function-ref name="isOneShot" scoped="" ref="0x7565aed0"/>
        <function-ref name="getdt" scoped="" ref="0x75659c40"/>
        <function-ref name="gett0" scoped="" ref="0x756599e8"/>
        <function-ref name="isRunning" scoped="" ref="0x7565ac78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7565a2c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75659470"/>
        <function-ref name="startOneShot" scoped="" ref="0x7565a548"/>
        <function-ref name="stop" scoped="" ref="0x7565a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x75657530" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x75657530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x75657708"/>
        <function-ref name="fired" scoped="" ref="0x756577e8"/>
        <function-ref name="disable" scoped="" ref="0x756578c8"/>
        <function-ref name="edge" scoped="" ref="0x756579a8"/>
        <function-ref name="enable" scoped="" ref="0x75657a88"/>
        <function-ref name="getValue" scoped="" ref="0x75657b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x75658f28" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x75658f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x75657110"/>
        <function-ref name="disable" scoped="" ref="0x756571f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x756572d0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x756573b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x75654a28" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x75654a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x75654c10"/>
        <function-ref name="immediateRequested" scoped="" ref="0x75654cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x756539c0" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x756539c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x75653ba8"/>
        <function-ref name="configure" scoped="" ref="0x75653c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x75654e30" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x75654e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x75653050"/>
        <function-ref name="requested" scoped="" ref="0x75653130"/>
        <function-ref name="granted" scoped="" ref="0x75653210"/>
        <function-ref name="isOwner" scoped="" ref="0x756532f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x756533d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x756542e8" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x756542e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x756544d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x756545b0"/>
        <function-ref name="request" scoped="" ref="0x75654690"/>
        <function-ref name="granted" scoped="" ref="0x75654770"/>
        <function-ref name="isOwner" scoped="" ref="0x75654850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x75653510" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x75653510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x756536e8"/>
        <function-ref name="userId" scoped="" ref="0x756537c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x74c7e2c8" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x74c7e2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x74c7e4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x74c7e600" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x74c7e600"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x74c7e7d8"/>
        <function-ref name="isEmpty" scoped="" ref="0x74c7e8b8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x74c7e998"/>
        <function-ref name="dequeue" scoped="" ref="0x74c7ea78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x74c7dee0" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x74c7dee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x74c7c0e0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x74c7c1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x74c7ce58" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x74c7ce58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x74c7b050"/>
        <function-ref name="configure" scoped="" ref="0x74c7b130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x74c7b290" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x74c7b290"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x74c7b468"/>
        <function-ref name="isEmpty" scoped="" ref="0x74c7b548"/>
        <function-ref name="isEnqueued" scoped="" ref="0x74c7b628"/>
        <function-ref name="dequeue" scoped="" ref="0x74c7b708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x74c7c300" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x74c7c300"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x74c7c4d8"/>
        <function-ref name="requested" scoped="" ref="0x74c7c5b8"/>
        <function-ref name="granted" scoped="" ref="0x74c7c698"/>
        <function-ref name="isOwner" scoped="" ref="0x74c7c778"/>
        <function-ref name="immediateRequested" scoped="" ref="0x74c7c858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x74c7b848" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x74c7b848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x74c7ba20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x74c7bb00"/>
        <function-ref name="led1On" scoped="" ref="0x74c7bbe0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x74c7bcc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x74c7bda0"/>
        <function-ref name="get" scoped="" ref="0x74c7be80"/>
        <function-ref name="led1Off" scoped="" ref="0x74c7a010"/>
        <function-ref name="led0On" scoped="" ref="0x74c7a390"/>
        <function-ref name="set" scoped="" ref="0x74c7a1d0"/>
        <function-ref name="led2On" scoped="" ref="0x74c7a0f0"/>
        <function-ref name="led2Off" scoped="" ref="0x74c7a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x74c7d7a0" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x74c7d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x74c7d988"/>
        <function-ref name="immediateRequest" scoped="" ref="0x74c7da68"/>
        <function-ref name="request" scoped="" ref="0x74c7db48"/>
        <function-ref name="granted" scoped="" ref="0x74c7dc28"/>
        <function-ref name="isOwner" scoped="" ref="0x74c7dd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x74c7c998" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x74c7c998"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x74c7cb70"/>
        <function-ref name="userId" scoped="" ref="0x74c7cc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x74c7a510" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x74c7a510"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x74c7a6e8"/>
        <function-ref name="runTask" scoped="" ref="0x74c7a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x75651ca0" loc="69:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x75651ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x75651e78"/>
        <function-ref name="stopDone" scoped="" ref="0x75650010"/>
        <function-ref name="start" scoped="" ref="0x756500f0"/>
        <function-ref name="stop" scoped="" ref="0x756501d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x75650310" loc="71:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x75650310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x756504e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x75650628" loc="72:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x75650628"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x75650800"/>
        <function-ref name="requested" scoped="" ref="0x756508e0"/>
        <function-ref name="granted" scoped="" ref="0x756509c0"/>
        <function-ref name="isOwner" scoped="" ref="0x75650aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x75650b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x75650cc0" loc="73:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x75650cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x75650e98"/>
        <function-ref name="userId" scoped="" ref="0x75636010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x74c5f230" loc="61:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x74c5f230"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x74c5f408"/>
        <function-ref name="stopDone" scoped="" ref="0x74c5f4e8"/>
        <function-ref name="start" scoped="" ref="0x74c5f5c8"/>
        <function-ref name="stop" scoped="" ref="0x74c5f6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x74c5f7e8" loc="63:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x74c5f7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x74c5f9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x74c5e668" loc="78:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0x74c5e668"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x74c5e840"/>
        <function-ref name="runTask" scoped="" ref="0x74c5e920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x74c5fb00" loc="64:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x74c5fb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x74c5fcd8"/>
        <function-ref name="requested" scoped="" ref="0x74c5fdb8"/>
        <function-ref name="granted" scoped="" ref="0x74c5fe98"/>
        <function-ref name="isOwner" scoped="" ref="0x74c5e010"/>
        <function-ref name="immediateRequested" scoped="" ref="0x74c5e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x74c5eaa0" loc="73:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startTask" scoped="" ref="0x74c5eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x74c5ec78"/>
        <function-ref name="runTask" scoped="" ref="0x74c5ed58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x74c61dc8" loc="60:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x74c61dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x74c5f010"/>
        <function-ref name="stop" scoped="" ref="0x74c5f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x74c5e230" loc="65:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x74c5e230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x74c5e408"/>
        <function-ref name="userId" scoped="" ref="0x74c5e4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x75630dc0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x75630dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7562e8e0"/>
        <function-ref name="fired" scoped="" ref="0x7562fb60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7562e2a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7562e048"/>
        <function-ref name="getdt" scoped="" ref="0x7562ed90"/>
        <function-ref name="gett0" scoped="" ref="0x7562eb38"/>
        <function-ref name="isRunning" scoped="" ref="0x7562fdb8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7562f408"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7562e5c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7562f688"/>
        <function-ref name="stop" scoped="" ref="0x7562f908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x75626b20" loc="46:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x75626b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x75626cf8"/>
        <function-ref name="stopDone" scoped="" ref="0x75626dd8"/>
        <function-ref name="start" scoped="" ref="0x75626eb8"/>
        <function-ref name="stop" scoped="" ref="0x75623010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x75623470" loc="47:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x75623470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75623648"/>
        <function-ref name="getPayload" scoped="" ref="0x75623728"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75623808"/>
        <function-ref name="cancel" scoped="" ref="0x756238e8"/>
        <function-ref name="sendDone" scoped="" ref="0x756239c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x756221d0" loc="49:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x756221d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x756223a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x75622488"/>
        <function-ref name="getPayload" scoped="" ref="0x75622568"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75622648"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x75622728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x75623e30" loc="48:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x75623e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x75622050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x75621ae8" loc="53:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x75621ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x75621cc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x75621da0"/>
        <function-ref name="led1On" scoped="" ref="0x75621e80"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7561f010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7561f0f0"/>
        <function-ref name="get" scoped="" ref="0x7561f1d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7561f2b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7561f630"/>
        <function-ref name="set" scoped="" ref="0x7561f390"/>
        <function-ref name="led0On" scoped="" ref="0x7561f470"/>
        <function-ref name="led2On" scoped="" ref="0x7561f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x756215b0" loc="51:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x756215b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x75621788"/>
        <function-ref name="noAck" scoped="" ref="0x75621868"/>
        <function-ref name="wasAcked" scoped="" ref="0x75621948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x756228c0" loc="50:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x756228c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x75622a98"/>
        <function-ref name="source" scoped="" ref="0x75622b78"/>
        <function-ref name="address" scoped="" ref="0x75622c58"/>
        <function-ref name="destination" scoped="" ref="0x75622d38"/>
        <function-ref name="setSource" scoped="" ref="0x75622e18"/>
        <function-ref name="setDestination" scoped="" ref="0x75622ef8"/>
        <function-ref name="type" scoped="" ref="0x75621010"/>
        <function-ref name="setType" scoped="" ref="0x756210f0"/>
        <function-ref name="isForMe" scoped="" ref="0x756211d0"/>
        <function-ref name="setGroup" scoped="" ref="0x756212b0"/>
        <function-ref name="localGroup" scoped="" ref="0x75621390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x755eb430" loc="54:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x755eb430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x755eb608"/>
        <function-ref name="getPayload" scoped="" ref="0x755eb6e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x755eb7c8"/>
        <function-ref name="cancel" scoped="" ref="0x755eb8a8"/>
        <function-ref name="sendDone" scoped="" ref="0x755eb988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x755ebae8" loc="55:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x755ebae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x755ebcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7561e1e8" loc="47:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7561e1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7561e3d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7561e4b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7561e590"/>
        <function-ref name="cancel" scoped="" ref="0x7561e670"/>
        <function-ref name="sendDone" scoped="" ref="0x7561e750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7561d850" loc="50:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7561d850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7561da28"/>
        <function-ref name="payloadLength" scoped="" ref="0x7561db08"/>
        <function-ref name="getPayload" scoped="" ref="0x7561dbe8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7561dcc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7561dda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7561e928" loc="48:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7561e928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7561eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7561dee8" loc="51:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7561dee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x755eb0e0"/>
        <function-ref name="noAck" scoped="" ref="0x755eb1c0"/>
        <function-ref name="wasAcked" scoped="" ref="0x755eb2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7561ec50" loc="49:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7561ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7561ee28"/>
        <function-ref name="source" scoped="" ref="0x7561ef08"/>
        <function-ref name="address" scoped="" ref="0x7561d010"/>
        <function-ref name="destination" scoped="" ref="0x7561d0f0"/>
        <function-ref name="setSource" scoped="" ref="0x7561d1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7561d2b0"/>
        <function-ref name="type" scoped="" ref="0x7561d390"/>
        <function-ref name="setType" scoped="" ref="0x7561d470"/>
        <function-ref name="isForMe" scoped="" ref="0x7561d550"/>
        <function-ref name="setGroup" scoped="" ref="0x7561d630"/>
        <function-ref name="localGroup" scoped="" ref="0x7561d710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x755e73a8" loc="50:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x755e73a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x755e7580"/>
        <function-ref name="stopDone" scoped="" ref="0x755e7660"/>
        <function-ref name="start" scoped="" ref="0x755e7740"/>
        <function-ref name="stop" scoped="" ref="0x755e7820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x755e6288" loc="52:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x755e6288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x768be1c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x755e6460"/>
        <function-ref name="getPayload" scoped="" ref="0x755e6540"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x755e6620"/>
        <function-ref name="cancel" scoped="" ref="0x755e6700"/>
        <function-ref name="sendDone" scoped="" ref="0x755e67e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x755e7010" loc="49:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x755e7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x755e71e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x755e7c68" loc="51:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x755e7c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x768be1c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x755e7e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x755e1e80" loc="56:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x755e1e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x755e4070"/>
        <function-ref name="led0Toggle" scoped="" ref="0x755e4150"/>
        <function-ref name="led1On" scoped="" ref="0x755e4230"/>
        <function-ref name="led1Toggle" scoped="" ref="0x755e4310"/>
        <function-ref name="led2Toggle" scoped="" ref="0x755e43f0"/>
        <function-ref name="get" scoped="" ref="0x755e44d0"/>
        <function-ref name="led1Off" scoped="" ref="0x755e45b0"/>
        <function-ref name="led2Off" scoped="" ref="0x755e4930"/>
        <function-ref name="set" scoped="" ref="0x755e4690"/>
        <function-ref name="led0On" scoped="" ref="0x755e4770"/>
        <function-ref name="led2On" scoped="" ref="0x755e4850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x755e1978" loc="55:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x755e1978"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x768be1c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x755e1b50"/>
        <function-ref name="offset" scoped="" ref="0x755e1c30"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x755e1d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x755de2c8" loc="66:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x755de2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x755de4a0"/>
        <function-ref name="stopDone" scoped="" ref="0x755de580"/>
        <function-ref name="start" scoped="" ref="0x755de660"/>
        <function-ref name="stop" scoped="" ref="0x755de740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x755a2be8" loc="332:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x755a2be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x755a2dc0"/>
        <function-ref name="runTask" scoped="" ref="0x755a2ea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x755d6500" loc="74:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x755d6500"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x755d66d8"/>
        <function-ref name="stop" scoped="" ref="0x755d67b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x755c3b28" loc="191:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x755c3b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x755c3d00"/>
        <function-ref name="runTask" scoped="" ref="0x755c3de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x755e4f10" loc="65:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x755e4f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x755de108"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x755d0560" loc="75:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x755d0560"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x755d0738"/>
        <function-ref name="flush" scoped="" ref="0x755d0818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x755a3400" loc="322:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x755a3400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x755a35d8"/>
        <function-ref name="runTask" scoped="" ref="0x755a36b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x755d4f10" loc="72:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x755d4f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x755d8108"/>
        <function-ref name="resetSend" scoped="" ref="0x755d81e8"/>
        <function-ref name="dataReceived" scoped="" ref="0x755d82c8"/>
        <function-ref name="resetReceive" scoped="" ref="0x755d83a8"/>
        <function-ref name="putData" scoped="" ref="0x755d8488"/>
        <function-ref name="putDone" scoped="" ref="0x755d8568"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x755d8648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x755d87b8" loc="73:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x755d87b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x755d8990"/>
        <function-ref name="led0Toggle" scoped="" ref="0x755d8a70"/>
        <function-ref name="led1On" scoped="" ref="0x755d8b50"/>
        <function-ref name="led1Toggle" scoped="" ref="0x755d8c30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x755d8d10"/>
        <function-ref name="get" scoped="" ref="0x755d8df0"/>
        <function-ref name="led1Off" scoped="" ref="0x755d8ed0"/>
        <function-ref name="led2Off" scoped="" ref="0x755d62b0"/>
        <function-ref name="set" scoped="" ref="0x755d6010"/>
        <function-ref name="led0On" scoped="" ref="0x755d60f0"/>
        <function-ref name="led2On" scoped="" ref="0x755d61d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x755a0880" loc="341:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x755a0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x755a0a58"/>
        <function-ref name="runTask" scoped="" ref="0x755a0b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x755d9a80" loc="67:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x755d9a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x755d9c58"/>
        <function-ref name="nextByte" scoped="" ref="0x755d9d38"/>
        <function-ref name="startSend" scoped="" ref="0x755d9e18"/>
        <function-ref name="sendCompleted" scoped="" ref="0x755d9ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x755d7bd8" loc="68:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x755d7bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x755d7db0"/>
        <function-ref name="byteReceived" scoped="" ref="0x755d7e90"/>
        <function-ref name="endPacket" scoped="" ref="0x755dc010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7552ad68" loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7552ad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75529010"/>
        <function-ref name="runTask" scoped="" ref="0x755290f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x75566988" loc="51:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x75566988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x768be1c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75566b70"/>
        <function-ref name="getPayload" scoped="" ref="0x75566c50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x75566d30"/>
        <function-ref name="cancel" scoped="" ref="0x75566e10"/>
        <function-ref name="sendDone" scoped="" ref="0x75566ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x75529270" loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x75529270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x75529448"/>
        <function-ref name="runTask" scoped="" ref="0x75529528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x755665c8" loc="50:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x755665c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x768be1c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x755667b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7552b138" loc="54:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7552b138"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x768be1c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7552b320"/>
        <function-ref name="offset" scoped="" ref="0x7552b400"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7552b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7552a150" loc="57:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7552a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7552a328"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7552a408"/>
        <function-ref name="led1On" scoped="" ref="0x7552a4e8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7552a5c8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7552a6a8"/>
        <function-ref name="get" scoped="" ref="0x7552a788"/>
        <function-ref name="led1Off" scoped="" ref="0x7552a868"/>
        <function-ref name="led2On" scoped="" ref="0x7552abe8"/>
        <function-ref name="set" scoped="" ref="0x7552aa28"/>
        <function-ref name="led2Off" scoped="" ref="0x7552a948"/>
        <function-ref name="led0On" scoped="" ref="0x7552ab08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7552baf8" loc="56:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7552baf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7552bcd0"/>
        <function-ref name="nextByte" scoped="" ref="0x7552bdb0"/>
        <function-ref name="startSend" scoped="" ref="0x7552be90"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7552a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7552b620" loc="55:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7552b620"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7552b7f8"/>
        <function-ref name="byteReceived" scoped="" ref="0x7552b8d8"/>
        <function-ref name="endPacket" scoped="" ref="0x7552b9b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7551e9a0" loc="50:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7551e9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7551eb78"/>
        <function-ref name="receivedByte" scoped="" ref="0x7551ec58"/>
        <function-ref name="receive" scoped="" ref="0x7551ed38"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7551ee18"/>
        <function-ref name="receiveDone" scoped="" ref="0x7551eef8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x75524010"/>
        <function-ref name="sendDone" scoped="" ref="0x755240f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x75528668" loc="48:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x75528668"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x75528840"/>
        <function-ref name="resetSend" scoped="" ref="0x75528920"/>
        <function-ref name="dataReceived" scoped="" ref="0x75528a00"/>
        <function-ref name="resetReceive" scoped="" ref="0x75528ae0"/>
        <function-ref name="putData" scoped="" ref="0x75528bc0"/>
        <function-ref name="putDone" scoped="" ref="0x75528ca0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x75528d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x75524260" loc="51:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x75524260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x75524438"/>
        <function-ref name="led0Toggle" scoped="" ref="0x75524518"/>
        <function-ref name="led1On" scoped="" ref="0x755245f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x755246d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x755247b8"/>
        <function-ref name="get" scoped="" ref="0x75524898"/>
        <function-ref name="led1Off" scoped="" ref="0x75524978"/>
        <function-ref name="led2Off" scoped="" ref="0x75524cf8"/>
        <function-ref name="set" scoped="" ref="0x75524a58"/>
        <function-ref name="led0On" scoped="" ref="0x75524b38"/>
        <function-ref name="led2On" scoped="" ref="0x75524c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x75509098" loc="6:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x75509098"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75509270"/>
        <function-ref name="sendAvail" scoped="" ref="0x75509350"/>
        <function-ref name="receive" scoped="" ref="0x75509430"/>
        <function-ref name="receiveAvail" scoped="" ref="0x75509510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x755277b0" loc="5:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x755277b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75527988"/>
        <function-ref name="receivedByte" scoped="" ref="0x75527a68"/>
        <function-ref name="receive" scoped="" ref="0x75527b48"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x75527c28"/>
        <function-ref name="receiveDone" scoped="" ref="0x75527d08"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x75527de8"/>
        <function-ref name="sendDone" scoped="" ref="0x75527ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x75527330" loc="4:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x75527330"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x75527508"/>
        <function-ref name="stop" scoped="" ref="0x755275e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x75430a50" loc="45:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x75430a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x75430c28"/>
        <function-ref name="immediateRequested" scoped="" ref="0x75430d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7542f6f0" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7542f6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7542f8c8"/>
        <function-ref name="sendAvail" scoped="" ref="0x7542f9a8"/>
        <function-ref name="receive" scoped="" ref="0x7542fa88"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7542fb68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7542fcc8" loc="49:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7542fcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7542fea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x75430e68" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x75430e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7542f050"/>
        <function-ref name="receivedByte" scoped="" ref="0x7542f130"/>
        <function-ref name="receive" scoped="" ref="0x7542f210"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7542f2f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7542f3d0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7542f4b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7542f590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x75430398" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x75430398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x75430570"/>
        <function-ref name="immediateRequest" scoped="" ref="0x75430650"/>
        <function-ref name="request" scoped="" ref="0x75430730"/>
        <function-ref name="granted" scoped="" ref="0x75430810"/>
        <function-ref name="isOwner" scoped="" ref="0x754308f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x75503eb8" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x75503eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x755020c0"/>
        <function-ref name="configure" scoped="" ref="0x755021a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x75500238" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x75500238"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75500410"/>
        <function-ref name="sendAvail" scoped="" ref="0x755004f0"/>
        <function-ref name="receive" scoped="" ref="0x755005d0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x755006b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x754ff6d0" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x754ff6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x754ff8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x75502648" loc="43:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x75502648"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x75502820"/>
        <function-ref name="receivedByte" scoped="" ref="0x75502900"/>
        <function-ref name="receive" scoped="" ref="0x755029e0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x75502ac0"/>
        <function-ref name="receiveDone" scoped="" ref="0x75502ba0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x75502c80"/>
        <function-ref name="sendDone" scoped="" ref="0x75502d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x75500bf0" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x75500bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x75500dc8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x75500ea8"/>
        <function-ref name="request" scoped="" ref="0x754ff010"/>
        <function-ref name="granted" scoped="" ref="0x754ff0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x754ff1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x75503470" loc="41:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x75503470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x75503648"/>
        <function-ref name="immediateRequest" scoped="" ref="0x75503728"/>
        <function-ref name="request" scoped="" ref="0x75503808"/>
        <function-ref name="granted" scoped="" ref="0x755038e8"/>
        <function-ref name="isOwner" scoped="" ref="0x755039c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x754ffe98" loc="48:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x754ffe98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x754fe0c0"/>
        <function-ref name="txDone" scoped="" ref="0x754fe1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x754fcb20" loc="44:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x754fcb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x754fcd08"/>
        <function-ref name="configure" scoped="" ref="0x754fcde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x754bf930" loc="46:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x754bf930"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x754bfb18"/>
        <function-ref name="sendAvail" scoped="" ref="0x754bfbf8"/>
        <function-ref name="receive" scoped="" ref="0x754bfcd8"/>
        <function-ref name="receiveAvail" scoped="" ref="0x754bfdb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x754be770" loc="49:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x754be770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x754be958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x754bead8" loc="50:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x754bead8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x754becb0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x754bed90"/>
        <function-ref name="setUctl" scoped="" ref="0x754bee70"/>
        <function-ref name="enableUart" scoped="" ref="0x754bd010"/>
        <function-ref name="setUrctl" scoped="" ref="0x754bd0f0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x754bd1d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x754bd2b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x754bd390"/>
        <function-ref name="getUrctl" scoped="" ref="0x754bd470"/>
        <function-ref name="resetUsart" scoped="" ref="0x754bd550"/>
        <function-ref name="getUmctl" scoped="" ref="0x754bd630"/>
        <function-ref name="disableIntr" scoped="" ref="0x754bd710"/>
        <function-ref name="setUtctl" scoped="" ref="0x754bd7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x754bd950"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x754bda30"/>
        <function-ref name="setUmctl" scoped="" ref="0x754bdb10"/>
        <function-ref name="isUartRx" scoped="" ref="0x754bdbf0"/>
        <function-ref name="isUart" scoped="" ref="0x754bdcd0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x754bddb0"/>
        <function-ref name="isSpi" scoped="" ref="0x754bde90"/>
        <function-ref name="enableUartTx" scoped="" ref="0x754bc010"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x754bc0f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x754bc1d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x754bc2b0"/>
        <function-ref name="getMode" scoped="" ref="0x754bc390"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x754bc570"/>
        <function-ref name="clrIntr" scoped="" ref="0x754bc650"/>
        <function-ref name="setUbr" scoped="" ref="0x754bc730"/>
        <function-ref name="tx" scoped="" ref="0x754bc810"/>
        <function-ref name="getUctl" scoped="" ref="0x754bc8f0"/>
        <function-ref name="disableUart" scoped="" ref="0x754bc9d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x754bcab0"/>
        <function-ref name="setModeUart" scoped="" ref="0x754bcb90"/>
        <function-ref name="setModeSpi" scoped="" ref="0x754bcc70"/>
        <function-ref name="rx" scoped="" ref="0x754bcd50"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x754bce30"/>
        <function-ref name="isUartTx" scoped="" ref="0x754bcf10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x754bb010"/>
        <function-ref name="disableSpi" scoped="" ref="0x754bb0f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x754bb1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x754bf010" loc="45:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x754bf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x754bf1f8"/>
        <function-ref name="receivedByte" scoped="" ref="0x754bf2d8"/>
        <function-ref name="receive" scoped="" ref="0x754bf3b8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x754bf498"/>
        <function-ref name="receiveDone" scoped="" ref="0x754bf578"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x754bf658"/>
        <function-ref name="sendDone" scoped="" ref="0x754bf738"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x754bb930" loc="52:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x754bb930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x754ba0a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x754ba598"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x754ba320"/>
        <function-ref name="overflow" scoped="" ref="0x754ba810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x754be010" loc="48:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x754be010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x754be1f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x754be2d8"/>
        <function-ref name="request" scoped="" ref="0x754be3b8"/>
        <function-ref name="granted" scoped="" ref="0x754be498"/>
        <function-ref name="isOwner" scoped="" ref="0x754be578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x754fc3c0" loc="43:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x754fc3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x754fc5a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x754fc688"/>
        <function-ref name="request" scoped="" ref="0x754fc768"/>
        <function-ref name="granted" scoped="" ref="0x754fc848"/>
        <function-ref name="isOwner" scoped="" ref="0x754fc928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x754bb3e8" loc="51:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x754bb3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x754bb5d0"/>
        <function-ref name="txDone" scoped="" ref="0x754bb6b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x754baa40" loc="53:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x754baa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x754bac18"/>
        <function-ref name="led0Toggle" scoped="" ref="0x754bacf8"/>
        <function-ref name="led1On" scoped="" ref="0x754badd8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x754baeb8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x754b9010"/>
        <function-ref name="get" scoped="" ref="0x754b90f0"/>
        <function-ref name="led1Off" scoped="" ref="0x754b91d0"/>
        <function-ref name="led2On" scoped="" ref="0x754b9550"/>
        <function-ref name="set" scoped="" ref="0x754b9390"/>
        <function-ref name="led2Off" scoped="" ref="0x754b92b0"/>
        <function-ref name="led0On" scoped="" ref="0x754b9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x754b1348" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x754b1348"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x754b1520"/>
        <function-ref name="txDone" scoped="" ref="0x754b1600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x754b65e0" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x754b65e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x754b67b8"/>
        <function-ref name="stop" scoped="" ref="0x754b6898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x754b6a88" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x754b6a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x754b6c60"/>
        <function-ref name="enableUartRx" scoped="" ref="0x754b6d40"/>
        <function-ref name="setUctl" scoped="" ref="0x754b6e20"/>
        <function-ref name="enableUart" scoped="" ref="0x754b6f00"/>
        <function-ref name="setUrctl" scoped="" ref="0x754b3010"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x754b30f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x754b31d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x754b32b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x754b3390"/>
        <function-ref name="resetUsart" scoped="" ref="0x754b3470"/>
        <function-ref name="getUmctl" scoped="" ref="0x754b3550"/>
        <function-ref name="disableIntr" scoped="" ref="0x754b3630"/>
        <function-ref name="setUtctl" scoped="" ref="0x754b3710"/>
        <function-ref name="getUbr" scoped="" ref="0x754b3870"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x754b3950"/>
        <function-ref name="setUmctl" scoped="" ref="0x754b3a30"/>
        <function-ref name="isUartRx" scoped="" ref="0x754b3b10"/>
        <function-ref name="isUart" scoped="" ref="0x754b3bf0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x754b3cd0"/>
        <function-ref name="isSpi" scoped="" ref="0x754b3db0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x754b3e90"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x754b2010"/>
        <function-ref name="disableUartRx" scoped="" ref="0x754b20f0"/>
        <function-ref name="enableIntr" scoped="" ref="0x754b21d0"/>
        <function-ref name="getMode" scoped="" ref="0x754b22b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x754b2490"/>
        <function-ref name="clrIntr" scoped="" ref="0x754b2570"/>
        <function-ref name="setUbr" scoped="" ref="0x754b2650"/>
        <function-ref name="tx" scoped="" ref="0x754b2730"/>
        <function-ref name="getUctl" scoped="" ref="0x754b2810"/>
        <function-ref name="disableUart" scoped="" ref="0x754b28f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x754b29d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x754b2ab0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x754b2b90"/>
        <function-ref name="rx" scoped="" ref="0x754b2c70"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x754b2d50"/>
        <function-ref name="isUartTx" scoped="" ref="0x754b2e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x754b2f10"/>
        <function-ref name="disableSpi" scoped="" ref="0x754b1010"/>
        <function-ref name="disableUartTx" scoped="" ref="0x754b10f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x754a8678" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x754a8678"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x754a8850"/>
        <function-ref name="isInput" scoped="" ref="0x754a8930"/>
        <function-ref name="setResistor" scoped="" ref="0x754a8a10"/>
        <function-ref name="toggle" scoped="" ref="0x754a8af0"/>
        <function-ref name="isOutput" scoped="" ref="0x754a8bd0"/>
        <function-ref name="getResistor" scoped="" ref="0x754a8cb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x754a8d90"/>
        <function-ref name="get" scoped="" ref="0x754a8e70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x754a7010"/>
        <function-ref name="getRaw" scoped="" ref="0x754a70f0"/>
        <function-ref name="set" scoped="" ref="0x754a71d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x754a72b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x754a7390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x754a74f0"/>
        <function-ref name="clr" scoped="" ref="0x754a75d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x754abd70" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x754abd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x754aa010"/>
        <function-ref name="txDone" scoped="" ref="0x754aa0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x754a7838" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x754a7838"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x754a7a10"/>
        <function-ref name="isInput" scoped="" ref="0x754a7af0"/>
        <function-ref name="setResistor" scoped="" ref="0x754a7bd0"/>
        <function-ref name="toggle" scoped="" ref="0x754a7cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x754a7d90"/>
        <function-ref name="getResistor" scoped="" ref="0x754a7e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x754a6010"/>
        <function-ref name="get" scoped="" ref="0x754a60f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x754a61d0"/>
        <function-ref name="getRaw" scoped="" ref="0x754a62b0"/>
        <function-ref name="set" scoped="" ref="0x754a6390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x754a6470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x754a6550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x754a66b0"/>
        <function-ref name="clr" scoped="" ref="0x754a6790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x754a69f8" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x754a69f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x754a6bd0"/>
        <function-ref name="isInput" scoped="" ref="0x754a6cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x754a6d90"/>
        <function-ref name="toggle" scoped="" ref="0x754a6e70"/>
        <function-ref name="isOutput" scoped="" ref="0x754a5010"/>
        <function-ref name="getResistor" scoped="" ref="0x754a50f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x754a51d0"/>
        <function-ref name="get" scoped="" ref="0x754a52b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x754a5390"/>
        <function-ref name="getRaw" scoped="" ref="0x754a5470"/>
        <function-ref name="set" scoped="" ref="0x754a5550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x754a5630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x754a5710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x754a5870"/>
        <function-ref name="clr" scoped="" ref="0x754a5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x754ae438" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x754ae438"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x754ae610"/>
        <function-ref name="enableUartRx" scoped="" ref="0x754ae6f0"/>
        <function-ref name="setUctl" scoped="" ref="0x754ae7d0"/>
        <function-ref name="enableUart" scoped="" ref="0x754ae8b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x754ae990"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x754aea70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x754aeb50"/>
        <function-ref name="getUtctl" scoped="" ref="0x754aec30"/>
        <function-ref name="getUrctl" scoped="" ref="0x754aed10"/>
        <function-ref name="resetUsart" scoped="" ref="0x754aedf0"/>
        <function-ref name="getUmctl" scoped="" ref="0x754aeed0"/>
        <function-ref name="disableIntr" scoped="" ref="0x754ac010"/>
        <function-ref name="setUtctl" scoped="" ref="0x754ac0f0"/>
        <function-ref name="getUbr" scoped="" ref="0x754ac250"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x754ac330"/>
        <function-ref name="setUmctl" scoped="" ref="0x754ac410"/>
        <function-ref name="isUartRx" scoped="" ref="0x754ac4f0"/>
        <function-ref name="isUart" scoped="" ref="0x754ac5d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x754ac6b0"/>
        <function-ref name="isSpi" scoped="" ref="0x754ac790"/>
        <function-ref name="enableUartTx" scoped="" ref="0x754ac870"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x754ac950"/>
        <function-ref name="disableUartRx" scoped="" ref="0x754aca30"/>
        <function-ref name="enableIntr" scoped="" ref="0x754acb10"/>
        <function-ref name="getMode" scoped="" ref="0x754acbf0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x754acdd0"/>
        <function-ref name="clrIntr" scoped="" ref="0x754aceb0"/>
        <function-ref name="setUbr" scoped="" ref="0x754ab010"/>
        <function-ref name="tx" scoped="" ref="0x754ab0f0"/>
        <function-ref name="getUctl" scoped="" ref="0x754ab1d0"/>
        <function-ref name="disableUart" scoped="" ref="0x754ab2b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x754ab390"/>
        <function-ref name="setModeUart" scoped="" ref="0x754ab470"/>
        <function-ref name="setModeSpi" scoped="" ref="0x754ab550"/>
        <function-ref name="rx" scoped="" ref="0x754ab630"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x754ab710"/>
        <function-ref name="isUartTx" scoped="" ref="0x754ab7f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x754ab8d0"/>
        <function-ref name="disableSpi" scoped="" ref="0x754ab9b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x754aba90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x754b1f28" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x754b1f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x754ae110"/>
        <function-ref name="stop" scoped="" ref="0x754ae1f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x754a94b8" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x754a94b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x754a9690"/>
        <function-ref name="isInput" scoped="" ref="0x754a9770"/>
        <function-ref name="setResistor" scoped="" ref="0x754a9850"/>
        <function-ref name="toggle" scoped="" ref="0x754a9930"/>
        <function-ref name="isOutput" scoped="" ref="0x754a9a10"/>
        <function-ref name="getResistor" scoped="" ref="0x754a9af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x754a9bd0"/>
        <function-ref name="get" scoped="" ref="0x754a9cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x754a9d90"/>
        <function-ref name="getRaw" scoped="" ref="0x754a9e70"/>
        <function-ref name="set" scoped="" ref="0x754a8010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x754a80f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x754a81d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x754a8330"/>
        <function-ref name="clr" scoped="" ref="0x754a8410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x754aa358" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x754aa358"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x754aa530"/>
        <function-ref name="isInput" scoped="" ref="0x754aa610"/>
        <function-ref name="setResistor" scoped="" ref="0x754aa6f0"/>
        <function-ref name="toggle" scoped="" ref="0x754aa7d0"/>
        <function-ref name="isOutput" scoped="" ref="0x754aa8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x754aa990"/>
        <function-ref name="makeOutput" scoped="" ref="0x754aaa70"/>
        <function-ref name="get" scoped="" ref="0x754aab50"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x754aac30"/>
        <function-ref name="getRaw" scoped="" ref="0x754aad10"/>
        <function-ref name="set" scoped="" ref="0x754aadf0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x754aaed0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x754a9010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x754a9170"/>
        <function-ref name="clr" scoped="" ref="0x754a9250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7545e010" loc="43:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7545e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7688b2e8"/>
            <typename><typedef-ref name="T32khz" ref="0x7688b4c8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7545e760"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7545ec50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7545e9d8"/>
        <function-ref name="overflow" scoped="" ref="0x7545eec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x74c11030" loc="43:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x74c11030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x74c11208"/>
        <function-ref name="immediateRequested" scoped="" ref="0x74c112e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x74c0e4a8" loc="48:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x74c0e4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x74c0e680"/>
        <function-ref name="configure" scoped="" ref="0x74c0e760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x74c0e090" loc="46:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x74c0e090"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x74c0e268"/>
        <function-ref name="txDone" scoped="" ref="0x74c0e348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x74c12950" loc="42:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x74c12950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x74c12b28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x74c12c08"/>
        <function-ref name="request" scoped="" ref="0x74c12ce8"/>
        <function-ref name="granted" scoped="" ref="0x74c12dc8"/>
        <function-ref name="isOwner" scoped="" ref="0x74c12ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x74c11860" loc="45:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x74c11860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x74c11a38"/>
        <function-ref name="enableUartRx" scoped="" ref="0x74c11b18"/>
        <function-ref name="setUctl" scoped="" ref="0x74c11bf8"/>
        <function-ref name="enableUart" scoped="" ref="0x74c11cd8"/>
        <function-ref name="setUrctl" scoped="" ref="0x74c11db8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x74c11e98"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x74c10010"/>
        <function-ref name="getUtctl" scoped="" ref="0x74c100f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x74c101d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x74c102b0"/>
        <function-ref name="getUmctl" scoped="" ref="0x74c10390"/>
        <function-ref name="disableIntr" scoped="" ref="0x74c10470"/>
        <function-ref name="setUtctl" scoped="" ref="0x74c10550"/>
        <function-ref name="getUbr" scoped="" ref="0x74c106b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x74c10790"/>
        <function-ref name="setUmctl" scoped="" ref="0x74c10870"/>
        <function-ref name="isUartRx" scoped="" ref="0x74c10950"/>
        <function-ref name="isUart" scoped="" ref="0x74c10a30"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x74c10b10"/>
        <function-ref name="isSpi" scoped="" ref="0x74c10bf0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x74c10cd0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x74c10db0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x74c10e90"/>
        <function-ref name="enableIntr" scoped="" ref="0x74c0f010"/>
        <function-ref name="getMode" scoped="" ref="0x74c0f0f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x74c0f2d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x74c0f3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x74c0f490"/>
        <function-ref name="tx" scoped="" ref="0x74c0f570"/>
        <function-ref name="getUctl" scoped="" ref="0x74c0f650"/>
        <function-ref name="disableUart" scoped="" ref="0x74c0f730"/>
        <function-ref name="enableSpi" scoped="" ref="0x74c0f810"/>
        <function-ref name="setModeUart" scoped="" ref="0x74c0f8f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x74c0f9d0"/>
        <function-ref name="rx" scoped="" ref="0x74c0fab0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x74c0fb90"/>
        <function-ref name="isUartTx" scoped="" ref="0x74c0fc70"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x74c0fd50"/>
        <function-ref name="disableSpi" scoped="" ref="0x74c0fe30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x74c0ff10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x74c11448" loc="44:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x74c11448"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x74c11620"/>
        <function-ref name="userId" scoped="" ref="0x74c11700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x754505e0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x754505e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x754507b8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x75450898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7544f238" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7544f238"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7544f410"/>
        <function-ref name="configure" scoped="" ref="0x7544f4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x754513a8" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x754513a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x75451580"/>
        <function-ref name="txDone" scoped="" ref="0x75451660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x75451af8" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x75451af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x75451cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x75451db0"/>
        <function-ref name="request" scoped="" ref="0x75451e90"/>
        <function-ref name="granted" scoped="" ref="0x75450010"/>
        <function-ref name="isOwner" scoped="" ref="0x754500f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x75450a68" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x75450a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x75450c40"/>
        <function-ref name="userId" scoped="" ref="0x75450d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7544de90" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7544de90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7544c080"/>
        <function-ref name="userId" scoped="" ref="0x7544c160"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7544fea8" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7544fea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7544d0c0"/>
        <function-ref name="txDone" scoped="" ref="0x7544d1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7544db58" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7544db58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7544dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7544d3b8" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7544d3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7544d5a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7544d720" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7544d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7544d8f8"/>
        <function-ref name="txDone" scoped="" ref="0x7544d9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7544be98" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7544be98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7544a0c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7544a1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7544ae28" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7544ae28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x75449050"/>
        <function-ref name="configure" scoped="" ref="0x75449130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7544a2e0" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7544a2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7544a4b8"/>
        <function-ref name="requested" scoped="" ref="0x7544a598"/>
        <function-ref name="granted" scoped="" ref="0x7544a678"/>
        <function-ref name="isOwner" scoped="" ref="0x7544a758"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7544a838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7544b758" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7544b758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7544b940"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7544ba20"/>
        <function-ref name="request" scoped="" ref="0x7544bb00"/>
        <function-ref name="granted" scoped="" ref="0x7544bbe0"/>
        <function-ref name="isOwner" scoped="" ref="0x7544bcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7544a978" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7544a978"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7544ab50"/>
        <function-ref name="userId" scoped="" ref="0x7544ac30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x74bd7770" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x74bd7770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x74bd7948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x74bd7aa8" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x74bd7aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x74bd7c80"/>
        <function-ref name="isEmpty" scoped="" ref="0x74bd7d60"/>
        <function-ref name="isEnqueued" scoped="" ref="0x74bd7e40"/>
        <function-ref name="dequeue" scoped="" ref="0x74bd7f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x74bd53a8" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x74bd53a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x74bd5590"/>
        <function-ref name="immediateRequested" scoped="" ref="0x74bd5670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x74bd3338" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x74bd3338"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x74bd3520"/>
        <function-ref name="configure" scoped="" ref="0x74bd3600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x74bd3760" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x74bd3760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x74bd3938"/>
        <function-ref name="isEmpty" scoped="" ref="0x74bd3a18"/>
        <function-ref name="isEnqueued" scoped="" ref="0x74bd3af8"/>
        <function-ref name="dequeue" scoped="" ref="0x74bd3bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x74bd57b0" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x74bd57b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x74bd5988"/>
        <function-ref name="requested" scoped="" ref="0x74bd5a68"/>
        <function-ref name="granted" scoped="" ref="0x74bd5b48"/>
        <function-ref name="isOwner" scoped="" ref="0x74bd5c28"/>
        <function-ref name="immediateRequested" scoped="" ref="0x74bd5d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x74bd3d18" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x74bd3d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x74bd3ef0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x74bd2010"/>
        <function-ref name="led1On" scoped="" ref="0x74bd20f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x74bd21d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x74bd22b0"/>
        <function-ref name="get" scoped="" ref="0x74bd2390"/>
        <function-ref name="led1Off" scoped="" ref="0x74bd2470"/>
        <function-ref name="led0On" scoped="" ref="0x74bd27f0"/>
        <function-ref name="set" scoped="" ref="0x74bd2630"/>
        <function-ref name="led2On" scoped="" ref="0x74bd2550"/>
        <function-ref name="led2Off" scoped="" ref="0x74bd2710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x74bd6c10" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x74bd6c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x74bd6df8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x74bd6ed8"/>
        <function-ref name="request" scoped="" ref="0x74bd5010"/>
        <function-ref name="granted" scoped="" ref="0x74bd50f0"/>
        <function-ref name="isOwner" scoped="" ref="0x74bd51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x74bd5e48" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x74bd5e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x74bd3050"/>
        <function-ref name="userId" scoped="" ref="0x74bd3130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x74bd2970" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x74bd2970"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x74bd2b48"/>
        <function-ref name="runTask" scoped="" ref="0x74bd2c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x75447948" loc="72:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x75447948"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x75447b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x75447c60" loc="73:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x75447c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x75447e38"/>
        <function-ref name="requested" scoped="" ref="0x75447f18"/>
        <function-ref name="granted" scoped="" ref="0x75446010"/>
        <function-ref name="isOwner" scoped="" ref="0x754460f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x754461d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x75447550" loc="70:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x75447550"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x75447728"/>
        <function-ref name="stop" scoped="" ref="0x75447808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x75446310" loc="74:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x75446310"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x754464e8"/>
        <function-ref name="userId" scoped="" ref="0x754465c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x74bb8640" loc="62:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x74bb8640"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x74bb8818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x74bb8958" loc="63:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x74bb8958"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x74bb8b30"/>
        <function-ref name="requested" scoped="" ref="0x74bb8c10"/>
        <function-ref name="granted" scoped="" ref="0x74bb8cf0"/>
        <function-ref name="isOwner" scoped="" ref="0x74bb8dd0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x74bb8eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x74bb8248" loc="60:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x74bb8248"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x74bb8420"/>
        <function-ref name="stop" scoped="" ref="0x74bb8500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x74bb7010" loc="64:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x74bb7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x74bb71e8"/>
        <function-ref name="userId" scoped="" ref="0x74bb72c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7542b3c0" loc="3:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7542b3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7542b598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7542b750" loc="4:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7542b750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7542b928"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7542ba08"/>
        <function-ref name="request" scoped="" ref="0x7542bae8"/>
        <function-ref name="granted" scoped="" ref="0x7542bbc8"/>
        <function-ref name="isOwner" scoped="" ref="0x7542bca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7542ee98" loc="2:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7542ee98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7542b0c0"/>
        <function-ref name="stop" scoped="" ref="0x7542b1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x75423810" loc="47:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x75423810"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x754239e8"/>
        <function-ref name="offset" scoped="" ref="0x75423ac8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x75423ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7541a238" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="DemoAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7541a238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76899e78"/>
            <typename><typedef-ref name="TMilli" ref="0x7688b070"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x75419d58"/>
        <function-ref name="fired" scoped="" ref="0x75419010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x75419718"/>
        <function-ref name="isOneShot" scoped="" ref="0x754194c0"/>
        <function-ref name="getdt" scoped="" ref="0x75417268"/>
        <function-ref name="gett0" scoped="" ref="0x75417010"/>
        <function-ref name="isRunning" scoped="" ref="0x75419268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7541a860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x75419a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x7541aae0"/>
        <function-ref name="stop" scoped="" ref="0x7541ad60"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="RootControl" loc="40:/home/pi/tinyos-main/tos/lib/net/RootControl.nc">
      <documentation loc="35:/home/pi/tinyos-main/tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x768e8568" loc="43:/home/pi/tinyos-main/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x768edd78" loc="41:/home/pi/tinyos-main/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x768e81a8" loc="42:/home/pi/tinyos-main/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionPacket" loc="42:/home/pi/tinyos-main/tos/lib/net/CollectionPacket.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x768a2010" loc="50:/home/pi/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x768a3c60" loc="50:/home/pi/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x768a3e58" loc="50:/home/pi/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x768a54b0" loc="44:/home/pi/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x768a5148" loc="44:/home/pi/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x768a5350" loc="44:/home/pi/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x768a3220" loc="47:/home/pi/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x768fd2a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x768a5e70" loc="47:/home/pi/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x768a30c0" loc="47:/home/pi/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x768fd2a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x768afd28" loc="43:/home/pi/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x768afbd0" loc="43:/home/pi/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x768a3810" loc="49:/home/pi/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x768a36b8" loc="49:/home/pi/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x768a5a88" loc="46:/home/pi/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x768fd2a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x768a5930" loc="46:/home/pi/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x768f87b8" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationUpdate" loc="48:/home/pi/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
      <documentation loc="33:/home/pi/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
        <short>&#10; Update a network shared (disseminated) value.</short>
        <long>&#10; Update a network shared (disseminated) value. Updates are assured&#10; to be eventually consistent across a connected network. If multiple&#10; nodes update a value simultaneously, then nodes within the network&#10; will see a series of one or more updates, the last update will&#10; be the same for all nodes. Components that need to use the&#10; variable should use the DisseminationValue interface.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10; @date   January 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x768f2400" loc="48:/home/pi/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
          <interfacedef-ref qname="DisseminationUpdate"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x768f2400"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="change" ref="0x768f2bb0" loc="60:/home/pi/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
        <documentation loc="49:/home/pi/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
          <short>&#10; Update the variable to a new value.</short>
          <long>&#10; Update the variable to a new value. This changes the local copy&#10; and begins to disseminate the new value throughout the network.&#10; As other nodes may have also changed the variable, it is possible&#10; that an update may not 'stick,' but will instead be overwritten by&#10; a separate update.&#10;&#10; @param newVal A pointer to the new value. The memory pointed to&#10; by newVal is copied out, so newVal can be reclaimed when&#10; &#60;tt>change&#60;/tt> returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x768f2400"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x768f2a58" loc="60:/home/pi/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x768f2400"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x768e49a0" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x768e4848" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x768ab398" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x768ab240" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x768a9370" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x768a9010" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x768a91f0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x768aa9b8" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x768aa018" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x768abcc0" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x768abea0" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x768e7d58" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x768e7c00" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x768e5ae0" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x768e5988" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x768e7518" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x768e52a8" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x768f35c0" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x768f3a88" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <function command="" provided="0" name="send" ref="0x768b47e8" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x768b44a8" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x768b4688" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x768b0370" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x768b0010" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x768b01f0" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x768b2a98" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x768b3460" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x768b3308" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x768b2170" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x768b3da8" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x768b2010" loc="100:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpInfo" loc="44:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
      <function command="" provided="0" name="getNeighborLinkQuality" ref="0x7689d168" loc="96:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7689d010" loc="96:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="recomputeRoutes" ref="0x768a0838" loc="83:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="80:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short> &#10; Tell the routing engine it might want to recompute its routes.</short>
          <long> &#10; Tell the routing engine it might want to recompute its routes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="numNeighbors" ref="0x7689eb08" loc="95:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerRouteUpdate" ref="0x768a1da8" loc="71:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="66:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.</short>
          <long>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x768a17f0" loc="64:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="55:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the ETX for the current path to the root through the current&#10; parent.</short>
          <long>&#10; Get the ETX for the current path to the root through the current&#10; parent. Sets etx argument to ETX*10.  The pointer is allocated by&#10; the caller.  If the parent is invalid, return FAIL (no info).&#10; The caller MUST NOT use the value in parent if the return is not&#10; SUCCESS. Calling getEtx at the root will set the etx argument to&#10; 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="etx" ref="0x768a1698" loc="64:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerImmediateRouteUpdate" ref="0x768a0320" loc="78:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="73:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.</short>
          <long>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNeighborCongested" ref="0x7689e098" loc="88:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="85:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Informs the routing engine that a neighbor is congested&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x768a0d18" loc="88:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </variable>
          <variable name="congested" ref="0x768a0f20" loc="88:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborAddr" ref="0x7689dd00" loc="98:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7689dba8" loc="98:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x768a1168" loc="53:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="46:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the parent of the node in the tree.</short>
          <long>&#10; Get the parent of the node in the tree.  The pointer is allocated&#10; by the caller.  If the parent is invalid, return FAIL.  The&#10; caller MUST NOT use the value in parent if the return is not&#10; SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent" ref="0x768a1010" loc="53:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborRouteQuality" ref="0x7689d758" loc="97:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7689d600" loc="97:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isNeighborCongested" ref="0x7689e6a0" loc="93:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="90:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10;  Returns the currently known state about a neighbor's congestion state&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7689e548" loc="93:/home/pi/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationValue" loc="44:/home/pi/tinyos-main/tos/lib/net/DisseminationValue.nc">
      <documentation loc="33:/home/pi/tinyos-main/tos/lib/net/DisseminationValue.nc">
        <short>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.</short>
        <long>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10;&#10; @date   Jan 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x768f5ca8" loc="44:/home/pi/tinyos-main/tos/lib/net/DisseminationValue.nc">
          <interfacedef-ref qname="DisseminationValue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x768f5ca8"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="changed" ref="0x768f1c78" loc="69:/home/pi/tinyos-main/tos/lib/net/DisseminationValue.nc">
        <documentation loc="66:/home/pi/tinyos-main/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Signalled whenever variable may have changed.</short>
          <long>&#10; Signalled whenever variable may have changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x768f1178" loc="55:/home/pi/tinyos-main/tos/lib/net/DisseminationValue.nc">
        <documentation loc="46:/home/pi/tinyos-main/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Obtain a pointer to the variable.</short>
          <long>&#10; Obtain a pointer to the variable. The provider of this&#10; interface only will change the memory the pointer references&#10; in tasks. Therefore the memory region does not change during&#10; the execution of any other task. A user of this interface&#10; must not in any circumstance write to this memory location.&#10;&#10; @return A const pointer to the variable.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x768f5ca8"/></type-var>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x768f17b8" loc="64:/home/pi/tinyos-main/tos/lib/net/DisseminationValue.nc">
        <documentation loc="57:/home/pi/tinyos-main/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Set the variable to a new value.</short>
          <long>&#10; Set the variable to a new value. The provider of this interface&#10; will copy the value from the pointer. NOTE: This command does&#10; not cause the new value to begin disseminating. It is intended to&#10; be used for setting default values.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x768f5ca8"/></type-var>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x768f1660" loc="64:/home/pi/tinyos-main/tos/lib/net/DisseminationValue.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x768f5ca8"/></type-var>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x768ae010" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
              <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x768e9a60" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x768e9c40" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x768e9e20" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpCongestion" loc="1:/home/pi/tinyos-main/tos/lib/net/ctp/CtpCongestion.nc">
      <function command="" provided="0" name="isCongested" ref="0x7689b038" loc="7:/home/pi/tinyos-main/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClientCongested" ref="0x7689b5e8" loc="14:/home/pi/tinyos-main/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="congested" ref="0x7689b490" loc="14:/home/pi/tinyos-main/tos/lib/net/ctp/CtpCongestion.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x768efeb8" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x768efeb8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x768ec398" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x768ecb48" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x768efeb8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x768ec818" loc="63:../../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x768ec9e8" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x768efeb8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x76891ae8" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x76890010" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x76890490" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x76890d00" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7688fa18" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7688fec0" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x768908b8" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7688d640" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7688d4e8" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x768916c0" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7688f1a8" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7688f5d0" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x76b9a988" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x76b9aea0" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x76898638" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x768980d8" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x768982f0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x768984d0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x76894208" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x76896e80" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x76894088" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x76896920" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x76897300" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x768971a8" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x76896010" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x76897ca0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x76897e98" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7688bdc8" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7688bdc8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x76886550" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x768883d8" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x76887530" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x768871e8" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x768873d0" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x76888d28" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x76886ec8" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x76886998" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x76888868" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7688a430" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7688a2d8" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x76887f18" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x76887bd0" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x76887db8" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7688aac8" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7688a970" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x76888010" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x768698e0" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7684a138" loc="48:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7684b0c8" loc="43:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7684bd10" loc="47:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7684fcd8" loc="42:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7684b510" loc="45:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7684f568" loc="40:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7684f920" loc="41:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7684b910" loc="46:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x76910548" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x76b34de0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7681be98" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7681bd40" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x768235b0" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x76846ac8"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x768450d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7681a430" loc="57:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7681ac70" loc="59:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7681b8f0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7681a828" loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x76823a08" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x76823e50" loc="44:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7681b4c0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x76846ac8"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x768450d0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7681b368" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x76846ac8"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x768450d0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x76816b40" loc="44:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7680f2e0" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7680f188" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7680fa30" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7680f8d8" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x76811ca0" loc="73:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x76811738" loc="68:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x76811168" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x76811010" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x768186f0" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x76818c48" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x76818af0" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x76815218" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x768150c0" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x768157b8" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x76815660" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x76815b60" loc="45:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x76820b80" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7681e9d8" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7681e880" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7681e010" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x76821308" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7681e408" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x76821b50" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x768207d8" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x76821758" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x76821f18" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x76820420" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x768202c8" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7681d010" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7681ee68" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x767fb768" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x769235a8" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x769239a0" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x76923138" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x76911538" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x76ba3f10" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x76ba1838" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x76ba1370" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrickleTimer" loc="57:/home/pi/tinyos-main/tos/lib/net/TrickleTimer.nc">
      <function event="" provided="0" name="fired" ref="0x76752ef0" loc="90:/home/pi/tinyos-main/tos/lib/net/TrickleTimer.nc">
        <documentation loc="87:/home/pi/tinyos-main/tos/lib/net/TrickleTimer.nc">
          <short>&#10; The trickle timer has fired.</short>
          <long>&#10; The trickle timer has fired. Signaled if C &#38;gt; K.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="incrementCounter" ref="0x76752af0" loc="85:/home/pi/tinyos-main/tos/lib/net/TrickleTimer.nc">
        <documentation loc="82:/home/pi/tinyos-main/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Increment the counter C.</short>
          <long>&#10; Increment the counter C. When an interval ends, C is set to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x76752648" loc="80:/home/pi/tinyos-main/tos/lib/net/TrickleTimer.nc">
        <documentation loc="76:/home/pi/tinyos-main/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Reset the timer period to L.</short>
          <long>&#10; Reset the timer period to L. If called while the timer is running,&#10; then a new interval (of length L) begins immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x76758d28" loc="68:/home/pi/tinyos-main/tos/lib/net/TrickleTimer.nc">
        <documentation loc="59:/home/pi/tinyos-main/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Start the trickle timer.</short>
          <long>&#10; Start the trickle timer. At boot, the timer period is its maximum&#10; value (H). If a protocol requires starting at the minimum value&#10; (e.g., fast start), then it should call &#60;tt>reset&#60;/tt> before&#10; &#60;tt>start&#60;/tt>.&#10;&#10; @return error_t SUCCESS if the timer was started, EBUSY if it is already&#10; running, and FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x76752240" loc="74:/home/pi/tinyos-main/tos/lib/net/TrickleTimer.nc">
        <documentation loc="70:/home/pi/tinyos-main/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Stop the trickle timer.</short>
          <long>&#10; Stop the trickle timer. This call sets the timer period to H and&#10; C to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationCache" loc="44:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
      <documentation loc="34:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <short>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.</short>
        <long>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-04 04:31:08 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestData" ref="0x76756728" loc="47:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x767565b0" loc="47:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="storeData" ref="0x76755380" loc="48:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x76756d78" loc="48:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x76755010" loc="48:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
          <variable name="seqno" ref="0x76755218" loc="48:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="newData" ref="0x76755b40" loc="50:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="start" ref="0x76759db0" loc="45:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestSeqno" ref="0x767557a8" loc="49:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="stop" ref="0x767561a8" loc="46:/home/pi/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x76716310" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x76b0e9d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x767161b8" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7671cbc8" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7671ca70" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7671faf0" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7671c1c0" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7671c068" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7671a500" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7671a198" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7671a3a0" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x767197d0" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x76719468" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x76719670" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x76718ca8" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x76718b50" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x76715810" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x767154e0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x767156b0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x76b0e778"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x76718168" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x76718010" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x76713010" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x76b0e9d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x76716c38" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x76716e38" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x76b0e9d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x76713890" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x76b0e9d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x76711018" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7671eea8" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x76711b18" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x767119c0" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7670f600" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7670f4a8" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x766c3a88" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x766c3a88"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x766c3bf0" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x766c3bf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x766c0df8" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x766c3bf0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x766c0ca0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x766bf9c8" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x766bf870" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x766c02a0" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x766c0148" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x766be4b8" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x766c3bf0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x766be148" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x766be358" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x766c3bf0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x766b64e0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x766b6148" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x766b6380" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x766b4010" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x766b6e50" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x766b7c30" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x766b75b0" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x766b7458" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7669d840" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7669d6e8" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7669f6d0" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7669f578" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x766a1848" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x766a16f0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x766a1168" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x766a1010" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x766a1e40" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x766a1ce8" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7669d010" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7669fe30" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x76696228" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x766a2e98" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x766960c8" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x766a6438" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x766a60e0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x766a62d8" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x766a3408" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x766a3088" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x766a32a8" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x766a6ac0" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x76edc800"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x766a6968" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x766a5a68" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x766a5910" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x766a9be0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x766a9a88" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x766a51c0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x766a5068" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x76698188" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x76698030" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7669b590" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7669b1f8" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7669b430" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7669a808" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7669a6b0" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7669a190" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7669bdd8" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7669a030" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x76698ab0" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x76698958" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x766a8be0" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x766a8a88" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x76690a18" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x766900f8" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x76693ad8" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x766905a8" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7668f138" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7667c4c8" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7667c180" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7667c368" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7667b010" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7667a730" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7667bf10" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7667a3e8" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7667a5c8" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7667ba20" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7667b6c8" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7667b8c0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7667cb18" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7667c9c0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x766774e0" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x76677038" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x76674300" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x76674188" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x76678c90" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x768e3ab0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x768e2af0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x76678af8" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x76674dd8" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x768e1268"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x768df208"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x76674c40" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x766804e8" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7667e7f0" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7667e388" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x76683628" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x76680010" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x76680a00" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x76680ec0" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x76683b30" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
          <long>&#10; Signals that the voltage regulator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x766705d0" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x76671768" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x76670168" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x76670010" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x76671b80" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x76676c68" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x76676b10" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x766712e0" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x76671188" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7663a170" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7663bd28" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7663a010" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7663b390" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7663dd90" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7663d9a0" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7663dc30" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7663f168" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7663f010" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7663b8a8" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7663ea78" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7663e920" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7663fb00" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7663f9a8" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7663ac58" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7663d490" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7663d338" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7663a790" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7663e010" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x766b3400"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x766b38a8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7663e4a0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x76642ac8" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7663f578" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7663eeb8" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
          <long>&#10; Change the PAN address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x76625d18" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x768ea790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x76625bc0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7661b3d8" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x768ea790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7661b280" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x766327b8" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x766b3400"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x766b38a8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7662e3b8" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7662e3b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7662e520" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7662e520"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7662c810" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7662e520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7662d4d0" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7662c1c8" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7662e520"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7662e520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7662de48" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7662e520"/></type-var>
          </variable>
          <variable name="dt" ref="0x7662c068" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7662e520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7662d940" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7662cca0" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7662e520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7662eb50" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7662e520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7662e9f8" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7662e520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7662d070" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x76626010" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x766263f8" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x766287d0" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x76626bc8" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x76628b90" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x766267d0" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x76628090" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x76628420" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x766218e0" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7661f168" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x76621d50" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x76b0e9d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x766213f0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x76b0e9d0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x76621088" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x76b0e9d0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x76621290" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x766195d8" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x768ea790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7661e880" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x768ea790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7661e030" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7661e518" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7661e718" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7661d698" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x768ea790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7661ee28" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7661d330" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7661d530" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x76622138" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x76623cb8" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x766238a8" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x76623340" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x76584cf0" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x76584cf0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x76584e58" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x76584e58"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x76581360" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x76584e58"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x76581d88" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x76581888" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x765801c8" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7652e958" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
          <long>&#10; Set pin direction to input.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7652ed80" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7652cd30" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7652cbd8" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7652fc10" loc="58:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7652d5e0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7652a2e8" loc="117:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7652d1a8" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
          <long>&#10; Set pin direction to output.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7652e518" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7652c2b0" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7652e070" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7652f450" loc="48:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7652da08" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7652c6f8" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7652de88" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7652f820" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x763ecb98" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x763e95b0" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x763e9168" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x763e9010" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x763ec690" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x763d5a90" loc="52:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x763d4a18" loc="72:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x763d5658" loc="47:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x763d4550" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x763d43f8" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x763d5210" loc="42:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x763d5f28" loc="59:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7633dac8" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7633a010" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7633a4f0" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x76324e90" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x76324b30" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x76324d30" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x76320608" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x763200a8" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x763202a8" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x763204a0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x76321858" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x768ea790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x763214f8" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x763216f8" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x76324290" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x768ea790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x76327f10" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x76324130" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x76323c90" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x76323730" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x76323930" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x76323b28" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7630f198" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x76312c10" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x76312e28" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7630f030" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7630e808" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7630e088" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7630e2a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7630e490" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7630e698" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x76313c90" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x76313b38" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7628f6f0" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7628fcc8" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7628d918" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x762ac1c0"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x762ac408"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7628b1e0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7628b088" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7628bdc8" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7628bc70" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7628b6f0" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7628a430" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7628a2d8" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x762831c8" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x76286cf0" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x76282ad0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x76282978" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x762824f0" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x76268458" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7626f210" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x762775d8" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x762bc178"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x762bc630"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x76277480" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x762bc178"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x762bc630"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x76270070" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Enables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x76275ad8" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x762ba538"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x762ba9f0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x76275980" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x762ba538"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x762ba9f0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7626b290" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7626a770" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x762754f0" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x762bb2f0"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x762bb740"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x76274010" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x762ba538"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x762ba9f0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x762739d8" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x76273880" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x76273460" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7626ce18" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x76275058" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x762bb2f0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x762bb740"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x76277ed8" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x762bb2f0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x762bb740"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x762749d0" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7626b680" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x76273010" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x76274e18" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x762717f8" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x76271c20" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7626c640" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7626e340" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x76270928" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7626ca38" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7626f698" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
          <long>&#10; Disables the Uart RX module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7626ba58" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x76273e58" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x762c14b8"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x762be318"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7626bea0" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x76268010" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x76274580" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x76274428" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x762689c0" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x76268868" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x76277a50" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x762bc178"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x762bc630"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x762704c0" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7626fab8" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
          <long>&#10; Enables the USART when in Spi mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7626c188" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x762a1530"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x762a1778"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7626c030" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x762a1530"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x762a1778"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7626e9c0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
          <long>&#10; Switches USART to Spi mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x762ac1c0"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x762ac408"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7626e868" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x762ac1c0"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x762ac408"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x76268f18" loc="231:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7626a348" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x76271338" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7626ab78" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7626fef0" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
          <long>&#10; Disables the USART when in Spi mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x76270db0" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
          <long>&#10; Disables the Uart TX module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7622d268" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x762162c0" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x762202b0" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7621a438" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7621a2e0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x76226838" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x76219958" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7621c010" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x76222a70" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x76220aa8" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x76222168" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x76222010" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x762231a8" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7621fa90" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7621ac90" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x76217e38" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7621be68" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x762132e0" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x762111a8" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x76224010" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7621f680" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7621e4a8" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x76222668" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x76229dd8" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7621b9f8" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7621b8a0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x762299e8" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x76219518" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x762166d8" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x76212070" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x76212d98" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x762171c8" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x76216ac8" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7621a870" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x76215958" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x762243e8" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7621ca20" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x76215310" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x76217a18" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7621eb70" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7621ea18" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x762124d0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7621b470" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x76219d88" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x76226430" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x76296908"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x76296b50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x762262d8" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x76296908"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x76296b50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7621f2a0" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x76224d50" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x76224bf8" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7621e010" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7621fe70" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x76215dd8" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x76223b50" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x76224808" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7621b010" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7621ce58" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x76226c28" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x76216ea8" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x762175f0" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x762190f8" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7621c5c0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7621c468" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x76220e80" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x76222e70" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x76212900" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x76223708" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x762235b0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x76213760" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x762206a0" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x76213bd8" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x76199a88" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x76196010" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x76176568" loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x76175010" loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x76176038" loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x76176a78" loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x761755e8" loc="81:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7616eca8" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x761745d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7616eb50" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x761745d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x761718b0" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7616e010" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x761745d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x76171e18" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x761745d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7616e5c0" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x761745d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x76056c50" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x76056af8" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x76046770" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x76046228" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x76046428" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x76046608" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x76046ed8" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x76046b98" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x76046d78" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x760399e8" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x760399e8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x76039b50" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x76039b50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x76036188" loc="66:../../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x76039b50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x76036030" loc="66:../../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x76039b50"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x76005648" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x75fe6758" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x75fe61d0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x75fe65f8" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x75fe9cf0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x75fe9870" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x75fe9718" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x75ff3920" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75ff37c8" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x75ff3010" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75ff6e78" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x75ff2b10" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75ff29b8" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x75ff2220" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75ff20c8" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x75f18758" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x75f18758"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x75f18c38" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x75e377a0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x75e377a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x75e37df0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x75e377a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x75e37c98" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x75e377a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SystemLowPowerListening" loc="1:../../../tos/interfaces/SystemLowPowerListening.nc">
      <function command="" provided="0" name="setDefaultRemoteWakeupInterval" ref="0x75d9e390" loc="3:../../../tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x75d9e238" loc="3:../../../tos/interfaces/SystemLowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultRemoteWakeupInterval" ref="0x75d9ee50" loc="6:../../../tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDelayAfterReceive" ref="0x75d9d2e0" loc="7:../../../tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDelayAfterReceive" ref="0x75d9e978" loc="4:../../../tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x75d9e820" loc="4:../../../tos/interfaces/SystemLowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerCycle" loc="37:../../../tos/chips/cc2420/interfaces/PowerCycle.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/PowerCycle.nc">
        <short>&#10; Manage the CC2420's duty cycle and power management&#10; </short>
        <long>&#10; Manage the CC2420's duty cycle and power management&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSleepInterval" ref="0x75da9158" loc="48:../../../tos/chips/cc2420/interfaces/PowerCycle.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PowerCycle.nc">
          <short>&#10; </short>
          <long>&#10; @return the sleep interval in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerCycle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="detected" ref="0x75da9540" loc="55:../../../tos/chips/cc2420/interfaces/PowerCycle.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/PowerCycle.nc">
          <short>&#10; </short>
          <long>&#10; @deprecated Should be removed in the future when the PowerCycle&#10;     component does packet-level detects and is in full control of radio&#10;     power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerCycle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSleepInterval" ref="0x75db1c38" loc="43:../../../tos/chips/cc2420/interfaces/PowerCycle.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/PowerCycle.nc">
          <short>&#10; Set the sleep interval, in binary milliseconds&#10; </short>
          <long>&#10; Set the sleep interval, in binary milliseconds&#10; @param sleepIntervalMs the sleep interval in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerCycle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepIntervalMs" ref="0x75db1ae0" loc="43:../../../tos/chips/cc2420/interfaces/PowerCycle.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVector" loc="40:../../../tos/interfaces/BitVector.nc">
      <documentation loc="34:../../../tos/interfaces/BitVector.nc">
        <short>&#10; Interface to a bit vector.</short>
        <long>&#10; Interface to a bit vector.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearAll" ref="0x75c51628" loc="45:../../../tos/interfaces/BitVector.nc">
        <documentation loc="42:../../../tos/interfaces/BitVector.nc">
          <short>&#10; Clear all bits in the vector.</short>
          <long>&#10; Clear all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x75c4eb70" loc="69:../../../tos/interfaces/BitVector.nc">
        <documentation loc="65:../../../tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to clear.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x75c4ea18" loc="69:../../../tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x75c4d168" loc="75:../../../tos/interfaces/BitVector.nc">
        <documentation loc="71:../../../tos/interfaces/BitVector.nc">
          <short>&#10; Toggle a bit in the vector.</short>
          <long>&#10; Toggle a bit in the vector.&#10; @param bitnum Bit to toggle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x75c4d010" loc="75:../../../tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x75c4e010" loc="57:../../../tos/interfaces/BitVector.nc">
        <documentation loc="52:../../../tos/interfaces/BitVector.nc">
          <short>&#10; Read a bit from the vector.</short>
          <long>&#10; Read a bit from the vector.&#10; @param bitnum Bit to read.&#10; @return Bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x75c51e88" loc="57:../../../tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="assign" ref="0x75c4d910" loc="82:../../../tos/interfaces/BitVector.nc">
        <documentation loc="77:../../../tos/interfaces/BitVector.nc">
          <short>&#10; Write a bit in the vector.</short>
          <long>&#10; Write a bit in the vector.&#10; @param bitnum Bit to clear.&#10; @param value New bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x75c4d5d0" loc="82:../../../tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x75c4d7b0" loc="82:../../../tos/interfaces/BitVector.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x75c51a30" loc="50:../../../tos/interfaces/BitVector.nc">
        <documentation loc="47:../../../tos/interfaces/BitVector.nc">
          <short>&#10; Set all bits in the vector.</short>
          <long>&#10; Set all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x75c4e5c0" loc="63:../../../tos/interfaces/BitVector.nc">
        <documentation loc="59:../../../tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to set.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x75c4e468" loc="63:../../../tos/interfaces/BitVector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x75c4dd90" loc="88:../../../tos/interfaces/BitVector.nc">
        <documentation loc="84:../../../tos/interfaces/BitVector.nc">
          <short>&#10; Return bit vector length.</short>
          <long>&#10; Return bit vector length.&#10; @return Bit vector length.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionDebug" loc="59:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
      <documentation loc="35:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <short> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure.</short>
        <long> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure. An implementer can choose to send the event&#10;  information to different destinations. Primary examples can include:&#10;  &#60;ul>&#10;    &#60;li> logging to the UART, in case of a testbed of network-connected&#10;         nodes;&#10;    &#60;li> logging to flash, if the logs are to be retrieved later&#10;    &#60;li> logging to the standard output, in the case of TOSSIM.&#10;  &#60;/ul>&#10;  &#10;  The interface does not specify in what format the log is to be produced,&#10;  or if other information, like timestamps, should be added, and this is&#10;  up to the implementer.&#10; &#10;  Some commands are generic, like Event, EventSimple, and EventDbg, while others&#10;  are for more specific events related to collection, like EventRoute and EventMsg.&#10;&#10; @author Rodrigo Fonseca&#10; @author Kyle Jamieson&#10; @date   $Date: 2010-06-29 22:07:47 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="logEvent" ref="0x75bea390" loc="61:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x75bea238" loc="61:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventMsg" ref="0x75be8388" loc="73:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x75be9bc0" loc="73:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x75be9db0" loc="73:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
          <variable name="origin" ref="0x75be8010" loc="73:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </variable>
          <variable name="node" ref="0x75be8218" loc="73:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventSimple" ref="0x75beab40" loc="64:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x75bea7f0" loc="64:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
          <variable name="arg" ref="0x75bea9e0" loc="64:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventRoute" ref="0x75be6010" loc="79:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x75be87e0" loc="79:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
          <variable name="parent" ref="0x75be89f8" loc="79:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </variable>
          <variable name="hopcount" ref="0x75be8c10" loc="79:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
          <variable name="metric" ref="0x75be8e20" loc="79:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventDbg" ref="0x75be9780" loc="67:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x75be9010" loc="67:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
          <variable name="arg1" ref="0x75be9210" loc="67:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
          <variable name="arg2" ref="0x75be9410" loc="67:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
          <variable name="arg3" ref="0x75be9610" loc="67:/home/pi/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:../../../tos/interfaces/Intercept.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x75bfd850" loc="31:../../../tos/interfaces/Intercept.nc">
        <documentation loc="16:../../../tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75bfd328" loc="31:../../../tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x75bfd508" loc="31:../../../tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x75bfd6e8" loc="31:../../../tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UnicastNameFreeRouting" loc="41:/home/pi/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
      <documentation loc="35:/home/pi/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <short>&#10;  Provides a single next hop on a name-free protocol.</short>
        <long>&#10;  Provides a single next hop on a name-free protocol.&#10;&#10;  @author Philip Levis&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="hasRoute" ref="0x75bee9b0" loc="49:/home/pi/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="routeFound" ref="0x75beed68" loc="51:/home/pi/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="nextHop" ref="0x75bee4c8" loc="48:/home/pi/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <documentation loc="43:/home/pi/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
          <short>&#10; Get the address of the best next hop set to the destination.</short>
          <long>&#10; Get the address of the best next hop set to the destination.&#10; If there is not best next hop, the address is the local address.&#10; @return : The next best hop, or the local address if there is no route.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="noRoute" ref="0x75bec138" loc="52:/home/pi/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpPacket" loc="44:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
      <documentation loc="33:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <short>&#10;  ADT for CTP data frames.</short>
        <long>&#10;  ADT for CTP data frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007-11-28 04:42:52 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSequenceNumber" ref="0x75bf47b8" loc="64:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75bf4460" loc="64:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x75bf4658" loc="64:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="option" ref="0x75bf82b0" loc="52:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x768fc960"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75bf9eb0" loc="52:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x75bf8150" loc="52:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x768fc960"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x75bf6cd0" loc="58:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75bf6980" loc="58:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x75bf6b70" loc="58:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x75bf5a08" loc="61:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75bf56a0" loc="61:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x75bf58a8" loc="61:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x75bf9a90" loc="49:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x768fc960"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75bf96f0" loc="49:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x75bf9930" loc="49:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x768fc960"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x75bf65a0" loc="57:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75bf6448" loc="57:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x75bf52a0" loc="60:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75bf5148" loc="60:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x75bf2480" loc="67:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75bf2148" loc="67:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x75bf2320" loc="67:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x75bf92d0" loc="46:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x768fc960"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75bffed8" loc="46:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x75bf9170" loc="46:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x768fc960"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchPacket" ref="0x75bf14b0" loc="70:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x75bf1140" loc="70:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x75bf1350" loc="70:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getThl" ref="0x75bf8830" loc="54:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75bf86d8" loc="54:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x75bf4010" loc="63:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75bf5ea0" loc="63:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchInstance" ref="0x75bf2cc0" loc="69:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x75bf2950" loc="69:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x75bf2b60" loc="69:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x75bf4d40" loc="66:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75bf4be8" loc="66:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setThl" ref="0x75bf6010" loc="55:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75bf8c10" loc="55:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="thl" ref="0x75bf8df0" loc="55:/home/pi/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionId" loc="45:/home/pi/tinyos-main/tos/lib/net/CollectionId.nc">
      <documentation loc="35:/home/pi/tinyos-main/tos/lib/net/CollectionId.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="fetch" ref="0x75beb010" loc="46:/home/pi/tinyos-main/tos/lib/net/CollectionId.nc">
        <interfacedef-ref qname="CollectionId"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x768fd2a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkEstimator" loc="46:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
      <documentation loc="35:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <short> Provides an additive quality measure for a neighbor.</short>
        <long> Provides an additive quality measure for a neighbor. The&#10; provided quality increases when the true link quality increases.&#10;  @author Rodrigo Fonseca&#10;  @author Omprakash Gnawali&#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getReverseQuality" ref="0x75bdecf0" loc="52:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x75bdeb98" loc="52:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txAck" ref="0x75bdbba0" loc="68:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x75bdba48" loc="68:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pinNeighbor" ref="0x75bdb010" loc="61:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x75bdcdd8" loc="61:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txNoAck" ref="0x75bda168" loc="72:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x75bda010" loc="72:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNeighbor" ref="0x75bdc958" loc="58:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x75bdc800" loc="58:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x75bdac90" loc="78:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x75bdab38" loc="78:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearDLQ" ref="0x75bda728" loc="75:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x75bda5d0" loc="75:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="unpinNeighbor" ref="0x75bdb600" loc="64:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x75bdb4a8" loc="64:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getForwardQuality" ref="0x75bdc360" loc="55:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x75bdc208" loc="55:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLinkQuality" ref="0x75bde6d0" loc="49:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x75bde578" loc="49:/home/pi/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Cache" loc="44:../../../tos/interfaces/Cache.nc">
      <documentation loc="34:../../../tos/interfaces/Cache.nc">
        <short>&#10; A data item cache.</short>
        <long>&#10; A data item cache. The cache does not own the items it caches:&#10; there is no allocation/deallocation policy, or notification of&#10; eviction. Correspondingly, using references (pointers) as data&#10; items can be difficult.&#10; &#10; @author Rodrigo Fonseca&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x75baed38" loc="44:../../../tos/interfaces/Cache.nc">
          <interfacedef-ref qname="Cache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75baed38"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="insert" ref="0x75baa310" loc="51:../../../tos/interfaces/Cache.nc">
        <documentation loc="45:../../../tos/interfaces/Cache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary.</short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.&#10; An atomic lookup after insert should return true.&#10;&#10; @param item - the data item to insert.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75baed38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x75baa1b8" loc="51:../../../tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75baed38"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x75baad48" loc="65:../../../tos/interfaces/Cache.nc">
        <documentation loc="61:../../../tos/interfaces/Cache.nc">
          <short>&#10; Flush the cache of all entries.</short>
          <long>&#10; Flush the cache of all entries.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="lookup" ref="0x75baa8f8" loc="59:../../../tos/interfaces/Cache.nc">
        <documentation loc="53:../../../tos/interfaces/Cache.nc">
          <short>&#10; Return whether the data item is in the cache.</short>
          <long>&#10; Return whether the data item is in the cache.&#10;&#10; @param item - the data item to query&#10; @return Whether the item is in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75baed38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x75baa7a0" loc="59:../../../tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75baed38"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:../../../tos/interfaces/Queue.nc">
      <documentation loc="33:../../../tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x75bbb220" loc="43:../../../tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75bbb220"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x75bb88f8" loc="80:../../../tos/interfaces/Queue.nc">
        <documentation loc="74:../../../tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75bbb220"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x75bb6828" loc="97:../../../tos/interfaces/Queue.nc">
        <documentation loc="90:../../../tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75bbb220"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x75bb66d0" loc="97:../../../tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75bbb220"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x76ede9e0"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x76ede9e0"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x75bb5168" loc="108:../../../tos/interfaces/Queue.nc">
        <documentation loc="99:../../../tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75bbb220"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x75bb5010" loc="108:../../../tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x75bbbaf0" loc="57:../../../tos/interfaces/Queue.nc">
        <documentation loc="52:../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x75bb84c8" loc="72:../../../tos/interfaces/Queue.nc">
        <documentation loc="67:../../../tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x75bb6010" loc="88:../../../tos/interfaces/Queue.nc">
        <documentation loc="82:../../../tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75bbb220"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x75bbb6c0" loc="50:../../../tos/interfaces/Queue.nc">
        <documentation loc="45:../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x75bb8010" loc="65:../../../tos/interfaces/Queue.nc">
        <documentation loc="59:../../../tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:../../../tos/interfaces/Pool.nc">
      <documentation loc="33:../../../tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x75bb4b78" loc="50:../../../tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75bb4b78"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x75bb08d0" loc="97:../../../tos/interfaces/Pool.nc">
        <documentation loc="91:../../../tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75bb4b78"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x75bb1a80" loc="80:../../../tos/interfaces/Pool.nc">
        <documentation loc="74:../../../tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x75bb1038" loc="61:../../../tos/interfaces/Pool.nc">
        <documentation loc="52:../../../tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x75bb0168" loc="89:../../../tos/interfaces/Pool.nc">
        <documentation loc="82:../../../tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75bb4b78"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x75bb0010" loc="89:../../../tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x75bb4b78"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x75bb1548" loc="72:../../../tos/interfaces/Pool.nc">
        <documentation loc="63:../../../tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CompareBit" loc="47:/home/pi/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
      <documentation loc="35:/home/pi/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
        <short> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table.</short>
        <long> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table. The return value is the &#34;pin bit&#34; - if true&#10; insert into the neighbor table. In the reference implementation&#10; the router will return true if the path through the source&#10; will be better than a path through at least one current neighbor.&#10;@ author Omprakash Gnawali&#10;@ Created: September 16, 2006&#10;@date   $Date: 2010-06-29 22:07:49 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="shouldInsert" ref="0x75a9fd00" loc="51:/home/pi/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
        <interfacedef-ref qname="CompareBit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75a9f520" loc="51:/home/pi/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x75a9f9b8" loc="51:/home/pi/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x75a9fb98" loc="51:/home/pi/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpRoutingPacket" loc="43:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
      <documentation loc="33:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <short>&#10;  ADT for CTP routing frames.</short>
        <long>&#10;  ADT for CTP routing frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2009-09-21 02:19:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearOptions" ref="0x75a0bbf8" loc="51:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75a0baa0" loc="51:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x75a08d50" loc="57:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75a08a00" loc="57:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x75a08bf0" loc="57:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x75a0b4b0" loc="48:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x768fc960"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75a0b130" loc="48:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x75a0b350" loc="48:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x768fc960"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x75a08460" loc="56:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75a08308" loc="56:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x75a0db48" loc="47:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x768fc960"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75a0d7c8" loc="47:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x75a0d9e8" loc="47:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x768fc960"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setParent" ref="0x75a0acc8" loc="54:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75a0a960" loc="54:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x75a0ab68" loc="54:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x75a0a3a0" loc="53:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x76b0ec30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75a0a248" loc="53:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOption" ref="0x75a0d208" loc="46:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x768fc960"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x75a10e60" loc="46:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x75a0d0a8" loc="46:/home/pi/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x768fc960"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadStream" loc="57:../../../tos/interfaces/ReadStream.nc">
      <documentation loc="33:../../../tos/interfaces/ReadStream.nc">
        <short>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices.</short>
        <long>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices. The type of the values being&#10; read is given as a template argument. &#10;&#10; &#60;p> To use this interface, allocate one or more buffers in your own&#10; space. Then, call postBuffer to pass these buffers into the&#10; device. Call read() to begin the sampling process. The buffers will&#10; be filled in the order originally posted, and a bufferDone() event&#10; will be signaled once each buffer has been filled with data. At any&#10; time while the read() is running, you may post new buffers to be&#10; filled. If the lower layer finishes signaling readDone() and then&#10; finds that no more buffers have been posted, it will consider the&#10; read to be finished, and signal readDone(). &#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x75941458" loc="57:../../../tos/interfaces/ReadStream.nc">
          <interfacedef-ref qname="ReadStream"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x75941458"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="bufferDone" ref="0x759402a0" loc="89:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="80:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a previously posted buffer has been filled by the&#10; device.</short>
          <long>&#10; Signalled when a previously posted buffer has been filled by the&#10; device. In the event of a read error, result will not equal&#10; SUCCESS, and the buffer will be filled with zeroes.&#10;&#10; @param result SUCCESS if the buffer was filled without errors&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer that has been filled&#10; @param count the number of values actually read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x75941458"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7593fd08" loc="89:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7593ff08" loc="90:../../../tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x75941458"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x75940138" loc="90:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="postBuffer" ref="0x75941cd0" loc="68:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="58:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer.</short>
          <long>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer. Make sure your count doesn't&#10; overrun the buffer.&#10;&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer&#10; @param count the number of values the buffer should hold&#10;&#10; @return SUCCESS if the post was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x75941458"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x75941968" loc="68:../../../tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x75941458"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x75941b70" loc="68:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7593f7e8" loc="78:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="70:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period.</short>
          <long>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period. &#10; &#10; @param usPeriod the between-sample period in microseconds&#10; &#10; @return SUCCESS if the reading process began&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="usPeriod" ref="0x7593f690" loc="78:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7593d010" loc="102:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="92:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted.</short>
          <long>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted. In the event of a read error, all previously posted&#10; buffers will have their bufferDone() event signalled, and then&#10; this event will be signalled with a non-SUCCESS argument.&#10;&#10; @param result SUCCESS if all buffers were filled without errors&#10; @param usActualPeriod Actual sampling period used - may be different&#10;   from period requested at read time. Undefined if result != SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x75940c20" loc="102:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </variable>
          <variable name="usActualPeriod" ref="0x75940e80" loc="102:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76edb550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AdcConfigure" loc="45:../../../tos/interfaces/AdcConfigure.nc">
      <documentation loc="36:../../../tos/interfaces/AdcConfigure.nc">
        <short> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration.</short>
        <long> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration. &#10; &#10; @author Jan Hauer &#10; @see  Please refer to TEP 101 for more information about this interface and&#10; its intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="adc_config_t" ref="0x759270b8" loc="45:../../../tos/interfaces/AdcConfigure.nc">
          <interfacedef-ref qname="AdcConfigure"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x759270b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getConfiguration" ref="0x75927648" loc="58:../../../tos/interfaces/AdcConfigure.nc">
        <documentation loc="48:../../../tos/interfaces/AdcConfigure.nc">
          <short> &#10; Returns the configuration of an ADC client.</short>
          <long> &#10; Returns the configuration of an ADC client.  &#60;code>adc_config_t&#60;/code> is&#10; a hardware specific data type that contains all information necessary to&#10; configure the respective ADC hardware for the client. A client MUST always&#10; return the same configuration and, if configuration data is passed as a&#10; pointer, the ADC subsystem (HIL component) MUST NOT reference it after the&#10; return of this command.&#10;  &#10; @return chip specific configuration.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AdcConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x759270b8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:../../../tos/interfaces/ReadNow.nc">
      <documentation loc="33:../../../tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x75922010" loc="52:../../../tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x75922010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x759224e0" loc="58:../../../tos/interfaces/ReadNow.nc">
        <documentation loc="53:../../../tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x75922cb0" loc="66:../../../tos/interfaces/ReadNow.nc">
        <documentation loc="60:../../../tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x75922010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x75922980" loc="66:../../../tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x75922b50" loc="66:../../../tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x75922010"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12SingleChannel" loc="69:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <short> &#10; &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample a single adc channel once or repeatedly (one event is&#10; signalled per conversion result) or perform multiple conversions for a&#10; single channel once or repeatedly (one event is signalled per multiple&#10; conversion results). It cannot be used to sample different adc channels with&#10; a single command (use the Msp430Adc12MultiChannel interface instead).&#10; Sampling a channel requires calling a sequence of two commands, configureX()&#10; and getData(), where X is either 'Single', 'SingleRepeat', 'Multiple' or&#10; 'MultipleRepeat'. Conversion results will be signalled by the&#10; dataReadySingle() or dataReadyMultiple() event, depending on the previous&#10; configuration, i.e. there are four possible sequences:&#10; &#10; &#60;p> configureSingle()          -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureSingleRepeat()    -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureMultiple()        -> ( getData() -> multipleDataReady() )*&#10; &#60;p> configureMultipleRepeat()  -> getData() -> multipleDataReady()&#10;&#10; &#60;p> where configureX() and getData() are commands called by the client and&#10; singleDataReady() and multipleDataReady() are events signalled back to the&#10; client by the adc subsystem. Note that a configuration is valid until the&#10; client reconfigures or releases the ADC (using the Resource interface),&#10; except for configureMultipleRepeat(), which is only valid for a single call&#10; to getData(). This means that after a successful configuration with, for&#10; example, configureSingle() the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface).&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x75915c58" loc="189:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="180:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.</short>
          <long> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event singleDataReady() or multipleDataReady() will be signalled&#10; (depending on the previous configuration). Otherwise no such event will be&#10; signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingle" ref="0x7591a188" loc="84:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="72:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC to perform a single conversion.</short>
          <long> &#10; Configures the ADC to perform a single conversion. Any previous&#10; configuration will be overwritten.  If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>singleDataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config ADC12 configuration data.  &#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x75939408"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7593aec8"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7591a030" loc="84:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x75939408"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7593aec8"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingleRepeat" ref="0x7591aee0" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for repeated single channel conversion mode.</short>
          <long> &#10; Configures the ADC for repeated single channel conversion mode. Any&#10; previous configuration will be overwritten. If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start sampling the adc channel periodically&#10; (the first conversion is started immediately).  The sampling period is&#10; specified by the &#60;code>jiffies&#60;/code> parameter, which defines the time&#10; between successive conversions in terms of clock ticks of clock source&#10; &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34; as specified in the&#10; &#60;code>config&#60;/code> parameter. If jiffies is zero successive conversions&#10; are performed as quickly as possible.  Conversion result are signalled&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>singleDataReady()&#60;/code> event handler.&#10; &#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34; and&#10; input divider &#34;sampcon_id&#34;.&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x75939408"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7593aec8"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7591ab68" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x75939408"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7593aec8"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="jiffies" ref="0x7591ad80" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultipleRepeat" ref="0x75915010" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="140:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.</short>
          <long> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.  Any&#10; previous configuration will be overwritten. In contrast to the&#10; &#60;code>configureSingleRepeat()&#60;/code> command this configuration means that&#10; an event with &#60;code>numSamples&#60;/code> conversion results will be&#10; signalled, where 0 &#60; &#60;code>numSamples&#60;/code> &#60;= 16. In contrast to the&#10; &#60;code>configureMultiple()&#60;/code> command, this configuration means that&#10; &#60;code>numSamples&#60;/code> conversion results will be signalled repeatedly&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler. &#10;&#10; If &#60;code>configureMultipleRepeat()&#60;/code> returns SUCCESS calling&#10; &#60;code>getData()&#60;/code> will start the the first conversion immediately.&#10; The sampling period is specified by the &#60;code>jiffies&#60;/code> parameter,&#10; which defines the time between successive conversions in terms of clock&#10; ticks of clock source &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34;&#10; as specified in the &#60;code>config&#60;/code> parameter. If jiffies is zero&#10; successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with &#60;code>numSamples&#60;/code>&#10; conversion results. If the client returns &#60;code>SUCCESS&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler, &#60;code>numSamples&#60;/code>&#10; new conversions will be performed, otherwise not.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples to take, 0 &#60;&#10; &#60;code>numSamples&#60;/code> &#60;= 16&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x75939408"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7593aec8"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x75917500" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x75939408"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7593aec8"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x75917a08" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x75917c30" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x75917e48" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="multipleDataReady" ref="0x759136a0" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="208:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Multiple ADC conversion results are ready.</short>
          <long> &#10; Multiple ADC conversion results are ready.  If the ADC was configured&#10; with the &#60;code>configureMultiple()&#60;/code> command, then the return value&#10; is ignored. If the ADC was configured with the&#10; &#60;code>configureMultipleRepeat()&#60;/code> command then the returned pointer&#10; defines where to store the next &#60;code>numSamples&#60;/code>&#10; conversion results (the client must make sure that the buffer is big&#10; enough!).  Returning a null pointer means that the repeated conversion&#10; mode will be stopped.&#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of samples stored in &#60;code>buffer&#60;/code> &#10;&#10; @return&#10; A null pointer stops a repeated conversion mode. Any non-zero value is&#10; interpreted as the next buffer, which must have at least&#10; &#60;code>numSamples&#60;/code> entries. The return value is ignored if the ADC&#10; was configured with &#60;code>configureMultiple()&#60;/code>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x759132c8" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x75913500" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultiple" ref="0x75918628" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="109:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period.</short>
          <long> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period. Any previous configuration will be&#10; overwritten.  In contrast to the &#60;code>configureSingleRepeat()&#60;/code>&#10; command, this configuration means that only one event will be signalled&#10; after all samples have been taken (which is useful for high-frequency&#10; sampling). If SUCCESS is returned calling &#60;code>getData()&#60;/code> will&#10; start sampling the adc channel &#60;code>numSamples&#60;/code> times and the first&#10; conversion is started immediately. Conversion results are stored in a&#10; buffer allocated by the client (the &#60;code>buffer&#60;/code>&#10; parameter). The sampling period is specified by the &#60;code>jiffies&#60;/code>&#10; parameter, which defines the time between successive conversions in terms&#10; of clock ticks of clock source &#34;sampcon_ssel&#34; and clock input divider&#10; &#34;sampcon_id&#34; as specified in the &#60;code>config&#60;/code> parameter. If jiffies&#10; is zero successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with the conversion results.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x75939408"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7593aec8"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x75919b20" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x75939408"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7593aec8"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x75918068" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x759182a0" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x759184b8" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="singleDataReady" ref="0x759144a0" loc="206:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="191:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; A single ADC conversion result is ready.</short>
          <long> &#10; A single ADC conversion result is ready. If the ADC was configured with&#10; the &#60;code>configureSingle()&#60;/code> command, then the return value is&#10; ignored. If the ADC was configured with the&#10; &#60;code>configureSingleRepeat()&#60;/code> command then the return value tells&#10; whether another conversion should be performed (&#60;code>SUCCESS()&#60;/code>) or&#10; not (&#60;code>FAIL&#60;/code>).&#10; &#10; @param data Conversion result (lower 12 bit).  &#10;&#10; @return If this event is signalled as response to a call to&#10; &#60;code>configureSingleRepeat()&#60;/code> then &#60;code>SUCCESS&#60;/code> results in&#10; another sampling and &#60;code>FAIL&#60;/code> stops the repeated sampling.&#10; Otherwise the return value is ignored.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x75914348" loc="206:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12MultiChannel" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <short> &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample up to 16 (different) ADC channels. It separates between&#10; configuration and data collection: every time a client has been granted&#10; access to the ADC subsystem (via the Resource interface), it first has to&#10; configure the ADC.  Afterwards the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface), i.e.&#60;p>&#10; &#10;    configure() -> ( getData() -> dataReady() )*&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x758e4010" loc="97:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="90:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.</short>
          <long> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event dataReady() will be signalled. Otherwise no event will be signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x758e55f0" loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Configures the ADC to perform conversion(s) on multiple channels.</short>
          <long> &#10; Configures the ADC to perform conversion(s) on multiple channels.  Any&#10; previous configuration will be overwritten.  If SUCCESS is returned&#10; calling &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>dataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config Main ADC12 configuration and configuration of the first&#10; channel &#10;&#10; @param memctl List of additional channels and respective reference&#10; voltages&#10;&#10; @param numMemctl Number of entries in the list&#10; &#10; @param buffer Buffer to store the conversion results, it must have&#10; numSamples entries. Results will be stored in the order the channels where&#10; specified.&#10;&#10; @param numSamples Total number of samples. Note: numSamples %&#10; (numMemctl+1) must be zero. For example, to sample every channel twice use&#10; numSamples = (numMemctl+1) * 2&#10;&#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;. Samples are taken equally-spaced in&#10; time iterating round-robin over the channels (different channels are  &#10; not sampled simultaneously but one after another).&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x75939408"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7593aec8"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x75939ba8"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x75939e58"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x758e8918" loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x75939408"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7593aec8"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="memctl" ref="0x758e8b88" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x75939ba8"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x75939e58"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="numMemctl" ref="0x758e8da8" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
          <variable name="buffer" ref="0x758e5010" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x758e5258" loc="88:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x758e5470" loc="88:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x758e4980" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="99:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Conversion results are ready.</short>
          <long> &#10; Conversion results are ready. Results are stored in the buffer in the&#10; order the channels where specified in the &#60;code>configure()&#60;/code>&#10; command, i.e. every (numMemctl+1)-th entry maps to the same channel. &#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of results stored in &#60;code>buffer&#60;/code> &#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x758e45e8" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x758e4820" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12Overflow" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <short> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.</short>
        <long> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function event="" provided="0" name="memOverflow" ref="0x758e7938" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; An ADC12MEMx overflow condition has occured.</short>
          <long> &#10; An ADC12MEMx overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionTimeOverflow" ref="0x758e7e00" loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; A conversion time overflow condition has occured.</short>
          <long> &#10; A conversion time overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x758da5a8" loc="95:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x758daa90" loc="105:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAdc12" loc="45:../../../tos/chips/msp430/adc12/HplAdc12.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCtl0" ref="0x758d10c8" loc="63:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="59:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Returns the ADC12 control register ADC12CTL0.&#10; @return ADC12CTL0&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7592d348"/>
            <typename><typedef-ref name="adc12ctl0_t" ref="0x7592d930"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMCtl" ref="0x758d0470" loc="82:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="77:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @return memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x75939ba8"/>
            <typename><typedef-ref name="adc12memctl_t" ref="0x75939e58"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x758d0318" loc="82:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetIFGs" ref="0x758cfad8" loc="106:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="103:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.</short>
          <long> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBusy" ref="0x758cd5d8" loc="118:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="114:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 BUSY flag.</short>
          <long> &#10; Returns the ADC12 BUSY flag.&#10; @return ADC12BUSY &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionDone" ref="0x758cd168" loc="112:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="108:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Signals a conversion result.</short>
          <long> &#10; Signals a conversion result. &#10; @param iv ADC12 interrupt vector value 0x6, 0x8, ... , 0x24&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iv" ref="0x758cd010" loc="112:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtl1" ref="0x758d1580" loc="68:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="65:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> Returns the ADC12 control register ADC12CTL1.</short>
          <long> Returns the ADC12 control register ADC12CTL1. &#10;  @return ADC12CTL1&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7592c688"/>
            <typename><typedef-ref name="adc12ctl1_t" ref="0x7592cba0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMCtl" ref="0x758d1da0" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="70:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @param memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x75939ba8"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x75939e58"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x758d19d8" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
          <variable name="memControl" ref="0x758d1c40" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x75939ba8"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x75939e58"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x758cdf08" loc="128:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="125:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Starts a conversion.</short>
          <long>&#10; Starts a conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl0" ref="0x758d2598" loc="51:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="47:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL0.&#10; @param control0 ADC12CTL0 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7592d348"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7592d930"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control0" ref="0x758d2440" loc="51:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7592d348"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7592d930"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMem" ref="0x758d0af8" loc="89:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="84:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory register ADC12MEMx.</short>
          <long> &#10; Returns the ADC12 conversion memory register ADC12MEMx.&#10; @param idx The register index (the 'x' in ADC12MEMx) [0..15] &#10; @return ADC12MEMx &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x758d09a0" loc="89:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIEFlags" ref="0x758cf168" loc="95:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="91:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Sets the ADC12 interrupt enable register, ADC12IE.&#10; @param mask Bitmask (0 means interrupt disabled, 1 menas interrupt enabled) &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x758cf010" loc="95:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIEFlags" ref="0x758cf668" loc="101:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="97:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Returns the ADC12 interrupt enable register, ADC12IE.&#10; @return ADC12IE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0x758cda40" loc="123:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="120:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Stops a conversion.</short>
          <long>&#10; Stops a conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableConversion" ref="0x758cc370" loc="133:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="130:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Enables conversion (sets the ENC bit).</short>
          <long>&#10; Enables conversion (sets the ENC bit).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl1" ref="0x758d2bc0" loc="57:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="53:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL1.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL1. &#10; @param control1 ADC12CTL1 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7592c688"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7592cba0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control1" ref="0x758d2a68" loc="57:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7592c688"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7592cba0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DeviceMetadata" loc="40:../../../tos/interfaces/DeviceMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/DeviceMetadata.nc">
        <short>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID.</short>
        <long>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID. See TEP109 and TEP114 for details.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSignificantBits" ref="0x756f0010" loc="41:../../../tos/interfaces/DeviceMetadata.nc">
        <interfacedef-ref qname="DeviceMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht11" loc="40:../../../tos/chips/sht11/SensirionSht11.nc">
      <documentation loc="32:../../../tos/chips/sht11/SensirionSht11.nc">
        <short>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0x756e43d8" loc="84:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="78:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a humidity measurement.</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x756e4088" loc="84:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x756e4278" loc="84:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readStatusReg" ref="0x756e48d0" loc="92:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="86:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Reads the current contents of the SHT11 status and control&#10; register.</short>
          <long>&#10; Reads the current contents of the SHT11 status and control&#10; register. See the datasheet for interpretation of this register.&#10;&#10; @return SUCCESS if the read will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0x756e5b88" loc="76:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="71:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a humidity measurement.</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0x756e6d50" loc="61:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="56:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a temperature measurement.</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeStatusReg" ref="0x756e37d0" loc="109:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="102:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Writes a new value to the SHT11 status and control register.</short>
          <long>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10; @param val the new value to be written&#10;&#10; @return SUCCESS if the write will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x756e3678" loc="109:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x756e62b0" loc="47:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="42:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Resets the sensor.</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="writeStatusRegDone" ref="0x756e3e58" loc="116:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="111:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals the completion of the status register write.</short>
          <long>&#10; Signals the completion of the status register write.&#10;&#10; @param result SUCCESS if the write was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x756e3d00" loc="116:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readStatusRegDone" ref="0x756e3170" loc="100:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="94:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the value of the status register.</short>
          <long>&#10; Presents the value of the status register.&#10;&#10; @param result SUCCESS if the read succeeded&#10; @param val the value of the register&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x756e4e10" loc="100:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x756e3010" loc="100:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0x756e6860" loc="54:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="49:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals that the sensor has been reset.</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x756e6708" loc="54:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0x756e5678" loc="69:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="63:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a temperature measurement.</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x756e5328" loc="69:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x756e5518" loc="69:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7564c5b8" loc="62:../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x755e13a0" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x755e1010" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x755e1240" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x755e20c8" loc="15:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x755e2998" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x755e2620" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x768b61f0"/>
                <typename><typedef-ref name="message_t" ref="0x768b4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x755e2838" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x755d0368" loc="54:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
          <long> &#10; Split phase event to indicate that the serial hardware is now idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x755d6ec8" loc="49:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x755dc9a8" loc="56:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x755d5698" loc="72:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x755d4790" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x755d4638" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x755d5bc0" loc="79:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x755d5168" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x755d5010" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x755d4c98" loc="100:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
          <long>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x755d4138" loc="85:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x755db970" loc="71:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x755d9010" loc="81:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x755db360" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x755db208" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x755d9748" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x755d95f0" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x755dd8c8" loc="62:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x755d7168" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x755d7010" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x755d7800" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x755d76a8" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x75525898" loc="48:../../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x75525548" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x75525738" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x75521c60" loc="79:../../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x75521b08" loc="79:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7551f480" loc="90:../../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7551f130" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7551f320" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x755210c8" loc="65:../../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7551e370" loc="99:../../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7551fdb8" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7551e010" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7551e208" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x75521650" loc="72:../../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x75522730" loc="57:../../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x755221e0" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x755223d0" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76edb310"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x755225c8" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:../../../tos/interfaces/UartByte.nc">
      <documentation loc="36:../../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7550e790" loc="50:../../../tos/interfaces/UartByte.nc">
        <documentation loc="43:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7550e638" loc="50:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7550ec78" loc="59:../../../tos/interfaces/UartByte.nc">
        <documentation loc="52:../../../tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7550b578" loc="69:../../../tos/interfaces/UartByte.nc">
        <documentation loc="61:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b9c448"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7550b210" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7550b418" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76edb0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7550bdd0" loc="79:../../../tos/interfaces/UartByte.nc">
        <documentation loc="71:../../../tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76ba4388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x75504070" loc="39:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x762a1530"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x762a1778"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
